{"version":3,"sources":["redux/reducers/Common.js","@jumbo/constants/ActionTypes.js","redux/reducers/Auth.js","redux/reducers/index.js","redux/store/index.js","theme/GlobalCss.js","@jumbo/constants/ThemeOptions.js","theme/defaultTheme.js","@jumbo/components/contextProvider/AppContextProvider/defaultContext.js","@jumbo/components/contextProvider/AppContextProvider/AppContext.js","i18n/entries/en_EN.js","i18n/entries/tr_TR.js","i18n/entries/nl_NL.js","i18n/index.js","i18n/entries/de_DE.js","redux/actions/Common.js","redux/actions/Auth.js","services/auth/index.js","services/auth/Basic/index.js","@coremat/CmtLayouts/LayoutContext.js","@coremat/CmtLayouts/Vertical/LayoutContextProvider/index.js","@coremat/CmtLayouts/Vertical/MainContainer.style.js","@coremat/CmtLayouts/Vertical/MainContainer.js","@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext.js","@coremat/CmtHelpers/JssHelper.js","@coremat/CmtLayouts/SidebarThemeContext/sidebarThemeColors.js","@coremat/CmtLayouts/SidebarThemeContext/index.js","@coremat/CmtLayouts/Vertical/index.js","@coremat/CmtLayouts/Vertical/Header.js","@coremat/CmtLayouts/Vertical/SidebarToggleHandler.js","@coremat/CmtImage/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/data.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/LanguageItem.js","@coremat/CmtCard/index.js","@coremat/CmtTypography/CmtTitle/index.js","@coremat/CmtTypography/CmtSubTitle/index.js","@coremat/CmtTypography/CmtContentHead/index.js","@coremat/CmtDropdownMenu/index.js","@coremat/CmtCard/CmtCardHeader.style.js","@coremat/CmtCard/CmtCardHeader.js","@coremat/CmtList/ListFooter.js","@coremat/CmtList/ListView.js","@coremat/CmtList/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/index.js","@coremat/CmtCard/CmtCardContent.js","@coremat/CmtGridView/GridView.js","@coremat/CmtGridView/GridFooter.js","@coremat/CmtGridView/index.js","@coremat/CmtAvatar/index.style.js","@coremat/CmtAvatar/index.js","@jumbo/components/AppLayout/partials/Header/AppsMenu.js","@coremat/CmtMediaObject/index.style.js","@coremat/CmtMediaObject/index.js","@jumbo/utils/dateHelper.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/NotificationItem.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/index.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/MessageItem.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/index.js","@jumbo/components/AppLayout/partials/Logo.js","@coremat/CmtSearch/index.style.js","@coremat/CmtSearch/index.js","@jumbo/components/AppLayout/partials/SearchPopover.js","@jumbo/components/AppLayout/partials/Header/index.js","@coremat/CmtLayouts/Vertical/Sidebar.style.js","@coremat/CmtDrawer/index.js","@coremat/CmtLayouts/Vertical/Sidebar.js","@jumbo/components/AppLayout/partials/SidebarHeader.js","@coremat/CmtNavigation/Vertical/NavMenuItem.js","@coremat/CmtNavigation/Vertical/NavCollapse.js","@coremat/CmtNavigation/Vertical/NavSection.js","@coremat/CmtNavigation/Vertical/index.js","@jumbo/utils/IntlMessages.js","@jumbo/components/AppLayout/partials/menus.js","@jumbo/components/AppLayout/partials/SideBar/index.js","@coremat/CmtLayouts/Vertical/Content.js","@jumbo/components/PageComponents/PageLoader.js","@jumbo/components/ContentLoader/index.js","@coremat/CmtLayouts/Vertical/Footer.js","@jumbo/components/AppLayout/partials/FooterLogo.js","@jumbo/components/AppLayout/partials/Footer.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalDefault/index.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalMinimal/index.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/Alerts.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/ActionBarDrawer.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/index.js","@coremat/CmtLayouts/Horizontal/LayoutContextProvider/index.js","@coremat/CmtLayouts/Horizontal/MainContainer.style.js","@coremat/CmtLayouts/Horizontal/MainContainer.js","@coremat/CmtLayouts/Horizontal/index.js","@coremat/CmtLayouts/Horizontal/Header/HeaderNav.js","@coremat/CmtLayouts/Horizontal/Header/HeaderTop.js","@coremat/CmtLayouts/Horizontal/Header/HeaderMain.js","@jumbo/components/AppLayout/partials/Header/HeaderLogin/index.js","@coremat/CmtLayouts/Horizontal/SidebarToggleHandler.js","@jumbo/components/AppLayout/partials/UserDropDown.js","@jumbo/components/AppLayout/partials/GlobalSearchForm.js","@jumbo/components/AppLayout/partials/Header/HeaderTop/index.js","@coremat/CmtLayouts/Horizontal/Header/index.js","@coremat/CmtLayouts/Horizontal/Sidebar.js","@coremat/CmtLayouts/Horizontal/Content.js","@coremat/CmtLayouts/Horizontal/Footer.js","@coremat/CmtNavigation/Horizontal/NavMenuItem.js","@coremat/CmtNavigation/Horizontal/NavCollapse.style.js","@coremat/CmtNavigation/Horizontal/NavCollapse.js","@coremat/CmtNavigation/Horizontal/NavMega.style.js","@coremat/CmtNavigation/Horizontal/NavMega.js","@coremat/CmtNavigation/Horizontal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDefault/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/MainHeader.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderTopMenus.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.js","@jumbo/components/AppLayout/index.js","@jumbo/components/AppWrapper/index.js","theme/themeColors.js","api/api.js","@jumbo/components/contextProvider/AppContextProvider/index.js","@jumbo/components/GridContainer/index.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@coremat/CmtCard/CmtCardFooter.js","@coremat/CmtAdvCard/index.style.js","@coremat/CmtAdvCard/index.js","@coremat/CmtAdvCard/CmtAdvCardContent.style.js","@coremat/CmtAdvCard/CmtAdvCardContent.js","@jumbo/components/Common/CryptoCard/CryptoCard.style.js","@jumbo/components/Common/DownloadApps/index.js","@jumbo/components/Common/CryptoCard/index.js","@jumbo/components/Common/CurrenyCalculator/index.js","@jumbo/components/Common/CodeViewerCard/MarkdownElement.js","@jumbo/components/Common/CodeViewerCard/HighlightedCode.js","@jumbo/utils/prism.js","@coremat/CmtCard/CmtCardActions.js","@jumbo/components/Common/CodeViewerCard/index.js","@jumbo/components/Common/StatisticsCard/index.js","routes/Pages/Dashboard/MissedCalls/MissedCallGraph.js","routes/Pages/Dashboard/MissedCalls/index.js","routes/Pages/Dashboard/InboundRules/InboundStyle.js","routes/Pages/Dashboard/InboundRules/InboundGraph.js","routes/Pages/Dashboard/InboundRules/index.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChart.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChartItem.js","routes/Pages/Dashboard/HeaderChartComponent/index.js","routes/Pages/Dashboard/OutboundCall/OutboundGraph.js","routes/Pages/Dashboard/OutboundCall/index.js","@jumbo/components/Common/CounterCard/index.js","routes/Pages/Dashboard/Extensions/index.js","routes/Pages/Dashboard/TrunksUp/index.js","routes/Pages/Dashboard/ActiveCallCount/index.js","services/auth/logout/index.js","routes/Pages/Dashboard/Tops/DashboardTop5AnsweredCalls.js","routes/Pages/Dashboard/Tops/DashboardTop5Inbound.js","routes/Pages/Dashboard/Tops/DashboardTop5Outbound.js","routes/Pages/Dashboard/Tops/DashboardTop5TalkTime.js","routes/Pages/Dashboard/Tops/index.js","routes/Pages/Dashboard/index.js","routes/Pages/404/index.js","@jumbo/components/Common/authComponents/AuthWrapper.js","@jumbo/components/Common/authComponents/SignIn.js","@jumbo/constants/AppConstants.js","routes/Auth/Login.js","@jumbo/utils/DataGridLocales.js","routes/Pages/AgentStatus/Table/index.js","routes/Pages/AgentStatus/index.js","@jumbo/components/Common/authComponents/SignUp.js","routes/Auth/Register.js","routes/Pages/CallListeningReport/Filter/DateFilter/index.js","routes/Pages/CallListeningReport/Filter/Filters/index.js","routes/Pages/CallListeningReport/Filter/index.js","routes/Pages/CallListeningReport/SendAudioRecords/index.js","@jumbo/utils/AudioWaveForm.js","routes/Pages/CallListeningReport/Table/index.js","routes/Pages/CallListeningReport/index.js","routes/Pages/CallManagement/Filter/DateFilter/index.js","routes/Pages/CallManagement/Filter/Filters/index.js","routes/Pages/CallManagement/Filter/index.js","routes/Pages/CallManagement/CallDetails/index.js","routes/Pages/CallManagement/CallSurvey/SurveyQuestions.js","routes/Pages/CallManagement/CallSurvey/index.js","routes/Pages/CallManagement/Table/Tag.js","routes/Pages/CallManagement/Table/Score.js","routes/Pages/CallManagement/Table/SurveyScore.js","routes/Pages/CallManagement/Table/index.js","routes/Pages/CallManagement/index.js","routes/Pages/DroppedCall/Filter/DateFilter/index.js","routes/Pages/DroppedCall/Filter/index.js","routes/Pages/DroppedCall/Table/index.js","routes/Pages/DroppedCall/index.js","routes/Pages/DIDReport/Filter/DateFilter/index.js","routes/Pages/DIDReport/Filter/index.js","routes/Pages/DIDReport/Modals/TotalCallModal.js","routes/Pages/DIDReport/Modals/AnsweredCallModal.js","routes/Pages/DIDReport/Modals/NonAnsweredCallModal.js","routes/Pages/DIDReport/Table/index.js","routes/Pages/DIDReport/index.js","@jumbo/components/Common/authComponents/ForgotPassword.js","routes/Auth/ForgotPassword.js","routes/Private/PrivateRouteLogin.js","routes/Private/NotPrivateRoute.js","routes/Pages/ServiceLevel/Filter/DateFilter/index.js","routes/Pages/ServiceLevel/Filter/index.js","routes/Pages/ServiceLevel/Table/index.js","routes/Pages/ServiceLevel/index.js","routes/Pages/AbandonedQueues/Filter/DateFilter/index.js","routes/Pages/AbandonedQueues/Filter/index.js","routes/Pages/AbandonedQueues/Table/index.js","routes/Pages/AbandonedQueues/index.js","routes/Pages/RepetetiveCalls/Filter/DateFilter/index.js","routes/Pages/RepetetiveCalls/Filter/index.js","routes/Pages/RepetetiveCalls/AllCalls/index.js","routes/Pages/RepetetiveCalls/Model/index.js","routes/Pages/RepetetiveCalls/AnsweredCalls/index.js","routes/Pages/RepetetiveCalls/index.js","routes/Pages/WallBoard/QueueList/index.js","routes/Pages/WallBoard/AgentConnection/index.js","routes/Pages/WallBoard/AgentStatus/AgentStatus.js","routes/Pages/WallBoard/CallDetail/index.js","routes/Pages/WallBoard/AgentDetail/index.js","routes/Pages/WallBoard/index.js","routes/Pages/DailyLog/Filter/index.js","routes/Pages/DailyLog/Table/index.js","routes/Pages/DailyLog/Chart/index.js","routes/Pages/DailyLog/index.js","routes/Pages/DailyAcc/Filter/index.js","routes/Pages/DailyAcc/Chart/index.js","routes/Pages/DailyAcc/index.js","routes/Pages/CallComparison/Table/index.js","routes/Pages/CallComparison/Graph/index.js","routes/Pages/CallComparison/Filter/index.js","routes/Pages/CallComparison/index.js","routes/Pages/MonthlyLog/Filter/index.js","routes/Pages/MonthlyLog/Graph/graph.js","routes/Pages/MonthlyLog/Graph/index.js","routes/Pages/MonthlyLog/Table/index.js","routes/Pages/MonthlyLog/index.js","routes/Pages/AgentSessionReport/Filter/DateFilter/index.js","routes/Pages/AgentSessionReport/Filter/index.js","routes/Pages/AgentSessionReport/Table/index.js","routes/Pages/AgentSessionReport/Model/index.js","routes/Pages/AgentSessionReport/index.js","routes/Pages/IYS/Filter/index.js","routes/Pages/IYS/Table/index.js","routes/Pages/IYS/index.js","routes/Pages/MicrosoftTeams/Users/index.js","routes/Pages/MonthlyDetails/Filter/index.js","routes/Pages/MonthlyDetails/Table/index.js","routes/Pages/MonthlyDetails/Detail/index.js","routes/Pages/MonthlyDetails/index.js","routes/Pages/QueueAnswerReport/Filter/DateFilter/index.js","routes/Pages/QueueAnswerReport/Filter/index.js","routes/Pages/QueueAnswerReport/Table/index.js","routes/Pages/QueueAnswerReport/index.js","routes/Pages/AbondenedCalls/Filter/DateFilter/index.js","routes/Pages/AbondenedCalls/Filter/index.js","routes/Pages/AbondenedCalls/Table/index.js","routes/Pages/AbondenedCalls/index.js","routes/Pages/CallTerminationReport/Filter/DateFilter/index.js","routes/Pages/CallTerminationReport/Filter/Filters/index.js","routes/Pages/CallTerminationReport/Filter/index.js","routes/Pages/CallTerminationReport/Table/index.js","routes/Pages/CallTerminationReport/index.js","routes/Pages/AgentCdrReport/Filter/index.js","routes/Pages/AgentCdrReport/Table/index.js","routes/Pages/AgentCdrReport/index.js","routes/Pages/DailySummaryReport/Filter/DateFilter/index.js","routes/Pages/DailySummaryReport/Filter/index.js","routes/Pages/DailySummaryReport/Modals/TotalCallModal.js","routes/Pages/DailySummaryReport/Modals/AnsweredCallModal.js","routes/Pages/DailySummaryReport/Modals/AbondenedCallModal.js","routes/Pages/DailySummaryReport/Modals/TransferCallModal.js","routes/Pages/DailySummaryReport/Modals/OutOfTimeModal.js","routes/Pages/DailySummaryReport/Modals/RonaCallModla.js","routes/Pages/DailySummaryReport/Modals/OutCallModal.js","routes/Pages/DailySummaryReport/Table/index.js","routes/Pages/DailySummaryReport/index.js","routes/Pages/InternalsSummaryReport/Filter/DateFilter/index.js","routes/Pages/InternalsSummaryReport/Filter/index.js","routes/Pages/InternalsSummaryReport/Table/index.js","routes/Pages/InternalsSummaryReport/index.js","routes/Pages/CallLog/Filter/DateFilter/index.js","routes/Pages/CallLog/Filter/Filters/index.js","routes/Pages/CallLog/Filter/index.js","routes/Pages/CallLog/CallDetails/index.js","routes/Pages/CallLog/Table/index.js","routes/Pages/CallLog/index.js","routes/Pages/QualityReport/Filter/DateFilter/index.js","routes/Pages/QualityReport/Filter/index.js","routes/Pages/QualityReport/Table/index.js","routes/Pages/QualityReport/index.js","routes/Pages/CallTransferReport/Filter/DateFilter/index.js","routes/Pages/CallTransferReport/Filter/index.js","routes/Pages/CallTransferReport/Table/index.js","routes/Pages/CallTransferReport/index.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakNameModal.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakTimeModal.js","routes/Pages/EditBreaks/index.js","routes/Pages/UserSettings/UserDepartmans/UserDepartmans.js","routes/Pages/UserSettings/UserTable/AddUserModal.js","routes/Pages/UserSettings/UserTable/UpdateUserModal.js","routes/Pages/UserSettings/UserTable/UserTable.js","routes/Pages/UserSettings/UserSettings.js","routes/Pages/DepartmansSettingns/TagTable/AddTagModal.js","routes/Pages/DepartmansSettingns/TagTable/UpdateTagModal.js","routes/Pages/DepartmansSettingns/TagTable/TagTable.js","routes/Pages/DepartmansSettingns/DepartmentQueues/DepartmentQueues.js","routes/Pages/DepartmansSettingns/DeportmentTable/AddDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/UpdateDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/DepartmantTable.js","routes/Pages/DepartmansSettingns/DepartmansSettigns.js","routes/Pages/Account/index.js","routes/index.js","App.js","serviceWorker.js","index.js","assets/Chrome_Logo.svg","assets/Firefox_Logo.svg"],"names":["INIT_STATE","initialURL","error","message","loading","state","action","type","payload","authUser","loadUser","send_forget_password_email","history","combineReducers","router","connectRouter","common","Common","auth","Auth","createBrowserHistory","routeMiddleware","routerMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","store","createStore","reducers","thunk","HEADER_TYPE","SIDEBAR_TYPE","THEME_TYPES","LAYOUT_TYPES","breakpoints","createBreakpoints","values","xs","sm","md","lg","xl","theme","spacing","direction","palette","black","white","dark","primary","indigo","secondary","pink","sidebar","bgColor","textColor","textDarkColor","textActiveColor","navHoverBgColor","navActiveBgColor","borderColor","horizontalNav","navigationColor","navigationActiveColor","menuHoverBgColor","menuActiveBgColor","background","paper","default","text","disabled","hint","btn","hover","lightBtn","main","popupColor","status","danger","typography","fontFamily","fontWeightExtraLight","fontWeightLight","fontWeightRegular","fontWeightBold","fontWeightExtraBold","overrides","MuiTypography","h1","fontSize","fontWeight","up","h2","h3","h4","h5","h6","letterSpacing","subtitle1","subtitle2","body1","body2","MuiButton","root","MuiToggleButton","borderRadius","MuiCardLg","MuiCard","boxShadow","MuiTab","textColorPrimary","color","MuiPopover","backgroundColor","MuiDialog","defaultLng","localStorage","getItem","navigator","language","languageId","locale","name","icon","getLang","layout","layoutType","themeType","drawerBreakPoint","headerType","sidebarType","isSidebarFixed","sidebarWidth","showFooter","AppContext","React","createContext","defaultContext","setLocale","enLang","messages","enMessages","saLang","saMessages","nlLang","nlMessages","AppLocale","en","tr","trLang","de","deMessages","nl","paddingClasses","marginClasses","count","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","marginRight","marginTop","marginBottom","globalStyles","makeStyles","boxSizing","margin","padding","a","textDecoration","pointerEvents","cursor","down","img","maxWidth","minHeight","overflowX","width","overflowY","border","whiteSpace","flex","display","flexDirection","alignItems","outline","transition","zIndex","flexWrap","darken","alpha","backgroundImage","fetchSuccess","dispatch","fetchError","setAuthUser","user","updateLoadUser","setForgetPassMailSent","AuhMethods","basic","onLogin","email","password","setTimeout","onLogout","removeItem","getAuthUser","loaded","JSON","parse","onForgotPassword","getSocialMediaIcons","Fragment","LayoutContext","LAYOUT_STYLES","SIDEBAR_TYPES","HEADER_TYPES","sidebarFixed","headerFixed","LayoutContextProvider","props","location","useLocation","useState","layoutStyle","setLayoutStyle","setSidebarType","isSidebarOpen","setSidebarOpen","setHeaderType","showHeader","setShowHeader","setShowFooter","setSidebarWidth","setSidebarFixed","miniSidebarWidth","setMiniSidebarWidth","actionSidebarWidth","setActionSidebarWidth","useEffect","params","URLSearchParams","search","get","layoutContextValue","useMemo","showTourOpt","document","body","classList","remove","add","Provider","value","children","useStyles","appRoot","height","position","top","right","left","bottom","borderTopLeftRadius","appMain","appInnerRoot","appMainContainer","overflow","MainContainer","header","footer","className","rest","useContext","footerType","useTheme","isDrawer","useMediaQuery","headerClasses","setHeaderClasses","footerClasses","setFooterClasses","sidebarClasses","setSidebarClasses","classes","newClasses","push","clsx","Box","cloneElement","SidebarThemeContext","getBackgroundStyle","gradientDirection","backgroundRepeat","backgroundPosition","backgroundSize","Array","isArray","length","toString","split","join","getOverLayStyle","overlay","colors","opacity","getSeparatorStyle","separator","topBorder","borderWidth","borderStyle","borderTop","borderBottom","hexToRgba","input","replace","test","Error","first","second","last","toUpperCase","parseInt","isUrlInChildren","parent","url","i","link","includes","themeSidebarColor","light","darkThemeSetting","SidebarThemeProvider","activeTheme","setActiveTheme","sidebarContextValue","backgroundStyle","overlayStyle","sidebarTheme","setSidebarTheme","CmtVerticalLayout","layoutOptions","prototype","PropTypes","object","defaultProps","appHeader","CmtHeader","AppBar","SidebarToggleHandler","restProps","IconButton","onClick","CmtImage","alt","altValue","languageData","flags","LanguageItem","src","ml","cardOverlay","CmtCard","cardProps","backgroundStyles","overlayStyles","headerRef","useRef","childrenWithProps","Children","map","child","isValidElement","render","ref","Card","onMouseEnter","current","onHeaderMouseEntered","onMouseLeave","onHeaderMouseLeft","style","CmtTitle","content","titleProps","Typography","variant","component","CmtSubTitle","subTitleProps","gutterBottom","headRoot","avatar","headerContent","CmtContentHead","title","subTitle","titleStyle","subTitleStyle","memo","CmtDropdownMenu","TriggerComponent","items","onItemClick","anchorEl","setAnchorEl","menuItems","setMenuItems","open","Boolean","closeMenu","event","stopPropagation","currentTarget","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","item","index","MenuItem","key","selectedIndex","updatedItem","hasChange","newMenuItems","handleMenuItemClick","label","headerRoot","separatorStyles","headerAlignCenter","contentWidth","justifyContent","animationTimingFunction","transform","actionMenu","minWidth","actionMenuDefault","actionMenuAbsolute","textAlign","actionMenuHover","showActionMenu","animationName","animationDuration","hideActionMenu","showActionDefaultMenu","hideActionDefaultMenu","contentRef","createRef","ActionsMenu","actions","actionHandler","size","CmtCardHeader","forwardRef","actionMenuClassName","actionHandleIcon","actionsPos","actionsShowOnHover","alignCenter","showActions","setActionsVisibility","setContentWidth","contentHeadProps","showHideActionClass","headerRootClasses","menuRootClasses","menuRootActionsClasses","useImperativeHandle","clientWidth","listFooterRoot","listFooterLoaderRoot","ListFooter","footerText","CircularProgress","bool","string","ListView","renderRow","onEndReached","data","ListFooterComponent","ListEmptyComponent","useBottomScrollListener","getEmptyContainer","getFooterContainer","CmtList","footerProps","cardRoot","perfectScrollbarLanguage","menuItemRoot","popoverRoot","LanguageSwitcher","handleClose","id","undefined","switchLanguage","window","setItem","data-tut","Popover","CmtCardContent","CardContent","gridContainer","columnRow","itemPadding","columnCount","flexGrow","displayColumn","flexBasis","GridView","column","responsive","setDisplayColumn","getColumnCount","withWidth","footerWrapper","GridFooter","CmtGridView","getContrastText","amber","brown","red","green","blue","yellow","grey","orange","deepOrange","purple","customSize","small","medium","large","colorOptions","CmtAvatar","phCharLength","colorClass","Math","floor","random","sizeClass","classNames","placeHolderChar","substr","Avatar","iconRoot","applications","path","AppsMenu","useHistory","onClosePopOver","onClickApp","Tooltip","py","mt","appItem","mediaObject","mediaImageTop","alignSelf","mediaImageCenter","mediaImageBottom","rootAvatar","mediaBody","mediaHeader","mediaHeaderContent","mediaActions","mediaFooter","CmtMediaObject","avatarPos","avatarProps","onBodyClick","actionsComponent","contentProps","footerComponent","footerComponentProps","mr","clone","oneOfType","element","oneOf","func","getTotalSec","talkTime","hours","slice","minutes","seconds","getNewDate","date_","date","Date","year","getFullYear","month","getMonth","dt","getDate","getDateElements","dateSections","moment","format","day","time","datePart","trim","dateString","feedItemRoot","fade","titleRoot","icons","POSTING","SHARED_POST","INVITATION","BIRTHDAY","NotificationItem","profile_pic","metaData","post","getPostContent","owner","getSharedContent","group","getInvitationContent","getBirthdayContent","getTitle","counterRoot","warning","scrollbarRoot","headerNotifications","HeaderNotifications","counter","setCounter","pr","active","Badge","badgeContent","badge","p","subTitleRoot","textOverflow","MessageItem","HeaderMessages","Logo","Hidden","xsDown","to","smUp","menuButton","shape","align","searchIcon","inputRoot","inputInput","transitions","create","searchIconBox","CmtSearch","placeholder","iconPosition","onlyIcon","containerStyle","inputStyle","iconStyle","inputBaseStyle","inputBaseClasses","InputBase","inputProps","SearchPopover","iconClassName","popoverClassName","searchRoot","langRoot","borderLeft","iconBtn","Header","Toolbar","edge","aria-label","smDown","mdUp","appSidebar","appSidebarContent","actionSidebarWrapper","overlayRoot","drawerContainer","drawerContent","CmtDrawer","Drawer","CmtSidebarContent","CmtDrawerContent","CmtSidebar","actionBar","matches","hasDrawer","userInfo","userTitle","userSubTitle","SidebarHeader","useDispatch","handlePopoverClose","container","Paper","elevation","MenuList","navMenuItem","navMenuLink","borderTopRightRadius","borderBottomRightRadius","navText","NavMenuItem","List","navCollapseBtn","navCollapse","navCollapseBtnInner","navArrow","navCollapseItem","visibility","NavCollapse","isExpandable","setOpen","pathname","renderIcon","useCallback","MenuCollapse","ListItem","button","MenuItemChildren","Collapse","in","timeout","disablePadding","navHeader","textTransform","navSection","NavSection","sideNavMenu","CmtVertical","injectIntl","withRef","sidebarNavs","IntlMessages","Dashboard","Phone","ArrowForward","Assignment","Receipt","process","horizontalDefaultNavs","minimalHorizontalMenus","perfectScrollbarSidebar","SideBar","appMainContent","CmtContent","bgcolor","circularProgressRoot","PageLoader","SlideTransition","Slide","ContentLoader","useSelector","Snackbar","TransitionComponent","Alert","severity","appFooter","appFooterWrapper","CmtFooter","FooterLogo","logoUrl","btnRoot","Footer","showFooterOpt","VerticalDefault","VerticalMinimal","borderBottomLeftRadius","Alerts","iconMapping","success","minimalNoHeader","MinimalNoHeader","lgUp","actionSidebar","borderRight","divider","contentArea","ActionBarDrawer","activeOption","onIconClick","onDrawerClose","anchor","actionsList","initSidebarWidth","isDrawerOpen","setDrawerStatus","setActiveOption","option","sidebarHeader","ModernSideBar","mdDown","CmtHorizontalLayout","headerNav","CmtHeaderNav","headerTop","CmtHeaderTop","headerMain","CmtHeaderMain","loginSection","HeaderLogin","Button","Divider","orientation","isOpen","profileRoot","UserDropDown","inputGroup","inputGroupAppend","GlobalSearchForm","showCategories","setShowCategories","onHideCategories","inputText","endIcon","HeaderTop","appMainContentWrapper","handleClick","from","subCollapse","removeHistoryListening","listen","disableGutters","navMega","navMegaBtn","navMegaBtnInner","navMegaColumnsWrapper","navMegaColumn","navMegaColumnInner","navMegaColumnLabel","RenderIcon","NavMegaColumn","navMegaColumnItems","NavMega","totalItems","MenuItemColumns","horizontalNavMenu","CmtHorizontal","HorizontalDefault","appHeaderDark","borderLeftColor","HeaderMain","HorizontalDark","MainHeader","HorizontalMinimal","HeaderTopMenus","HorizontalTopMenu","AppLayout","showLayoutLoader","setLayoutLoader","jss","plugins","jssPreset","rtl","AppWrapper","muiTheme","createTheme","ThemeProvider","utils","MomentUtils","StylesProvider","CssBaseline","semiDarkTheme","darkTheme","lightTheme","appsettings","validationUrl","appUrl","port","appPort","addZero","val","getOffset","axios","timeOffset","getInboundCalls","param","query","token","getDidData","getDidDataCount","getDidNumbers","getMonthlyDetails","getMonthlyTotal","getAgentList","getMissedCalls","getOutboundCalls","getQueue","getRepetetiveAll","limit","allCallOffset","queue","didNumber","paramStart","paramFinish","getRepetetiveAllCount","getRepetetiveCallerDetails","callerNumber","getMontlyLog","paramMonth","paramBack","getCallComparison","paramDate","getCallComparisonDaily","getDailyLog","getDailyLogTable","getRepetetiveAnswered","answeredCallsOffset","getRepetetiveAnsweredCount","getAbondenedCalls","agent","startDate","endDate","getAbondenedCallDetails","from_userpart","getAbandonedQueueCalls","getServiceLevel","getDropCall","offset","getDropCallSummary","getDropCallCount","sendMail","emailAddress","directory","dirs","mailSubject","mailBody","tempPath","tempAttch","attachment","toMail","subjact","getRecordingBytes","dir","filename","encodeURIComponent","fetch","getPath","getQueueList","getAgentConnection","getAgentStatus","pass","getAgentNumber","getAgentDigitCount","getQueueNumber","getDailyCallDetails","mydate","getBreakTime","getBreakName","digits","min","max","setBreakName","breakName","breakId","setBreakTime","breakTime","breakNumber","getAgentDetails","agentNum","getAgentSession","agNum","qNum","getAgentSessionClicked","getInternalBreakTime","getAgentNumberV16","CryptoJS","AES","encrypt","response","getIYSReport","startdate","enddate","getTeamsUsers","getCsOnlineVoiceRoutingPolicy","getCsTenantDialplan","getCsTeamsCallingPolicy","changeCsTeamsCallingPolicy","changeCsVoiceRoutingPolicy","changeCsTenantDiaplan","getUserDetailsByUserId","getQueueAnswerReport","queueNum","order","getQueueAnswerReportCount","getQueueAnswerReportSummary","getQueueAnswerReportSummaryTotal","getDailySummary","startTime","endTime","getDailySummaryTotal","getInternalsSummary","getInternalsSummaryLongestCalled","getInternalsSummaryLongestCaller","getInternalsSummaryLongestCalledAmount","getInternalsSummaryLongestCallerAmount","getAgentTotalCall","cte","getWallBoardVoiceMail","getWallBoardLongTime","getVersion","getWallBoardWaitingTime","getCallLog","getCallLogTotal","getCallLogTotalSummary","getCallLogCount","getDashboardTops","getCallDetail","callid","getDidReportTotalCall","didNo","getDidReportAnsweredCall","getDidReportNonAnsweredCall","getDailySummaryModalTotalCall","getDailySummaryModalAnsweredCall","getDailySummaryModalOutOfTime","getDailySummaryModalAbondenedCall","getDailySummaryModalTransferCall","getDailySummaryModalRonaCall","getCallTransferReport","selectedStartTime","selectedEndTime","getDailySummaryModalOutCall","getUsers","addUser","userName","updateUser","getDepartmants","addDepartmant","updateDepartmant","getQueues","getDepOwnedQueues","depId","addDepOwnedQueues","queueId","deleteDepOwnedQueues","deleteDepOwnedAllQueues","deleteUserAllDepsWithDepId","deleteDepWithDepId","getSupervisors","getUserOwndedDeps","userId","addUserOwndedDeps","deleteUserOwndedDeps","deleteUserOwndedDepsByUserId","deleteUserByUserId","getAgentsRecordListenAuth","setAgentsRecordListenAuthByAgentId","agentId","changeAgentStatus","agentDn","getTagsByCallId","callId","getTagtextByCallId","TagByID","tag","headers","getCallScoresByCallId","getSurveyScoresByCallId","ScoreByID","rating","SubmitSurveyByID","score","answersStr","getTagTypes","addTagTypes","depName","tagMessage","setTagTypes","deleteTag","getQualityReport","changeSessionStatus","stringify","qstatus","getBreakNums","getDailyActiveCalls","getTerminatedCallsByAgent","start_time","end_time","callTerminator","getTerminatedCallsByAgentCount","initialThemeValue","otherThemes","AppContextProvider","setTheme","setThemeType","setLayout","cardRadius","setCardRadius","setDirection","showTourGuide","setTourGuideStatus","recordLoading","setRecordLoading","contextValue","prevState","setAttribute","then","resp","dn","company","charAt","newTitle","GridContainer","Grid","pageHeaderRoot","PageHeader","heading","breadcrumbComponent","mb","textSm","linkBlock","PageBreadcrumbs","Breadcrumbs","isActive","pxToRem","contentSidebar","flexShrink","pageFull","PageContainer","breadcrumbs","mountOnEnter","unmountOnExit","footerRoot","CmtCardFooter","advCardRoot","deepPurple","CmtAdvCard","advCardContent","gridOrder1","gridOrder2","CmtAdvCardContent","extraContent","columnSizes","reverseDir","alignCenterClass","blockClasses","blockFirst","blockSecond","extraContentRender","cardHeaderRoot","CryptoCard","amount","progress","headerSubTitle","textPrimary","mbSpace","wordBreak","WebkitOverflowScrolling","lineHeight","WebkitFontSmoothing","fill","borderCollapse","borderSpacing","fontWeightMedium","font","verticalAlign","maxHeight","flip","MarkdownElement","renderedMarkdown","other","more","dangerouslySetInnerHTML","__html","code","renderedCode","prismLanguage","prism","languages","tsx","jsx","diff","deleted","highlight","card","cardContent","cardContentInner","actionButtons","collapseStyle","cardHeader","cardBody","chartTitle","chartSubTitle","tooltip","MissedCallGraph","labelStyle","x1","y1","x2","y2","stopColor","stopOpacity","dataKey","strokeWidth","stackId","stroke","fillOpacity","MissedCall","handleChange","getDay","setParam","start","calculateYearOfTheDay","aria-controls","aria-haspopup","aria-expanded","Dehaze","MenuListProps","DateRange","total","InboundGraph","InboundRules","HeaderChart","canvas","ctx","getContext","_stroke","countInbound","countOutbound","countMissed","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","inbound","outbound","missed","labels","datasets","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","options","legend","scales","yAxes","ticks","beginAtZero","HeaderChartItem","searchAction","searchActionBar","cardContentRoot","badgeRoot","optionList","SiteTraffic","list","PhoneForwarded","OutboundGraph","OutboundCall","containerRoot","containerRootCenter","contentRoot","contentRootCenter","CounterCard","number","numberProps","labelProps","counterProps","end","useEasing","TasksCounterCard","extensions","setExtensions","api","activeExtension","totalExtension","GroupOutlined","String","Trunks","paramtotal","paramTrunksUp","totalTrunks","setTotalTrunks","trunksUp","setTrunksUp","ActiveCallCount","setactiveCount","Logout","DashboardTop5AnsweredCalls","convertTimeToApiString","timeString","setDate","toLocaleDateString","setStartTime","setEndTime","setData","selectedTime","setSelectedTime","selectTimeString","display_name","LinearProgress","ButtonGroup","DashboardTop5Inbound","DashboardTop5Outbound","DashboardTop5TalkTime","totalseconds","sum","checkDots","QueryBuilder","DashboardTops","orderLg1","SamplePage","totalInbound","totalOutbound","totalMissed","inboundcalls","setInbound","outboundcalls","setOutbound","missedcalls","setMissedCalls","convertToLocalTime","catch","inboundObject","outboundObject","missedObject","times","d","some","fetchData","array","arr","sort","b","MissedCalls","Extensions","HeaderChartComponent","errorNumber","textShadow","Error404","authWrap","authCard","AuthWrapper","authThumb","authContent","textFieldRoot","formcontrolLabelRoot","SignIn","method","wrapperVariant","loginState","setLoginState","myDate","onSubmit","tomorrow","getTime","NotificationManager","addNotification","setVersion","browser","regexp","userAgent","chrome","version","e","preventDefault","TextField","fullWidth","onChange","target","defaultValue","underline","href","protocol","hostname","GoogleChrome","sx","Firefox","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Login","localeText","toolbarExport","toolbarExportPrint","toolbarExportCSV","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnMenuFilter","columnMenuHideColumn","columnMenuShowColumns","noRowsLabel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","AgentTable","rows","setReloadValues","setValue","setAgentId","curentLanguage","useIntl","field","headerName","renderCell","Switch","checked","res","handleChangeStatus","handleChangeRecordAuth","CloudDownload","columns","pageSize","rowsPerPageOptions","componentsProps","pagination","labelRowsPerPage","AgentList","setResponse","reloadValues","responseStatus","result","recordAuths","j","agentNumber","agent_num","recordAuth","record_listen","dataValue","num","displayname","agentName","agentState","textCapital","textAcc","alrTextRoot","SignUp","setName","setEmail","setPassword","onRegister","Register","CallLogDateFilter","setStartTimeApi","setEndTimeApi","dateFilterOpen","setDateFilterOpen","timeFilterValue","setTimeFilterValue","setHours","setStartDate","setEndDate","dateFormat","setMonth","setFullYear","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","labelId","LocalizationProvider","dateAdapter","AdapterDateFns","enLocale","nlLocale","trLocale","deLocale","DatePicker","newValue","renderInput","inputVariant","maxDate","minDate","CallLogtherFilters","setDirectionApi","setSourceFilterText","setDestinationFilterText","setQueueDn","setAnswerStatus","que","setQueues","queues","filtersOpen","setFiltersOpen","directionSelect","setDirectionSelect","sourceFilterSelect","setSourceFilterSelect","sourceFilterTextValue","setSourceFilterTextValue","targetFilterSelect","setTargetFilterSelect","targetFilterTextValue","setTargetFilterTextValue","stateSelect","setStateSelect","advancedFilter","setAdvancedFilter","queueSelect","setQueueSelect","helperText","multiple","renderValue","Checkbox","indexOf","CallListeningFilter","setCount","startTimeApi","endTimeApi","directionApi","directionSql","setDirectionSql","sourceFilterText","sourceFilterNumber","setSourceNumber","destinationFilterNumber","setDestinationFilterNumber","destinationFilterText","setDidNumber","queueDn","sourceDnMin","setSourceDnMin","sourceDnMax","setSourceDnMax","destinationDnMin","setDestinationDnMin","destinationDnMax","setDestinationDnMax","sourceDnLike","setSourceDnLike","destinationDnLike","setDestinationDnLike","answerStatus","answerStatusSql","setAnswerStatusSql","stringCount","startsWith","setLoading","SendAudioRecords","my","records","required","LoadingButton","err","loadingPosition","AudioWaveForm","buffer","waveformRef","wavesurfer","playing","setPlay","volume","setVolume","duration","setDuration","currentTime","setCurrentTime","waveColor","progressColor","cursorColor","barWidth","barRadius","barHeight","barGap","WaveSurfer","loadBlob","Blob","wav","WaveFile","Uint8Array","fromIMAADPCM","newBuf","toBuffer","on","formatDuration","round","getDuration","getCurrentTime","isPlaying","destroy","minute","secondLeft","TinyText","styled","Stack","playPause","htmlColor","Slider","newVolume","step","CallListeningTable","setLimit","setOffset","page","setPage","listenedRecords","setListenedRecords","setPath","record","setRecord","openAudioModal","setOpenAudioModal","getCorrectFilesHour","copyarr","hour","hourIndex","lastIndexOf","newtime","splice","row","arrayBuffer","prev","PlayArrow","blob","createElement","URL","createObjectURL","download","click","GetApp","AccessTime","find","q","Check","PhoneDisabled","tabledata","recording_url","srcDid","src_did","caller","src_display_name","src_dn","called","dst_display_name","dst_dn","salable","statusofcall","mode","allDirs","setAllDirs","mailMenu","setMailMenu","Modal","lighten","getHoverBackgroundColor","disableSelectionOnClick","getRowClassName","rowHeight","hideFooter","checkboxSelection","onSelectionModelChange","ids","selectedIDs","Set","selectedRecords","reduce","filtered","has","TablePagination","backIconButtonProps","nextIconButtonProps","rowsPerPage","backIconButtonText","onPageChange","newPage","onRowsPerPageChange","CallListeningReport","setScore","setTagFilter","setTagsList","tagsList","scoreSelect","setScoreSelect","tagSelect","setTagSelect","tagmassage","CallManagementFilter","CallManagementCallDetail","tags","setTags","setRating","tagtext","Chip","questions","question","point","CallSurvey","startSurvey","setStartSurvey","survey","setSurvey","btnLoading","setBtnLoading","questionsArray","answer","questionsObjFormik","supervisorId","initialValues","answers","Object","v","replaceAll","handleSubmit","flexItem","RadioGroup","FormControlLabel","control","Radio","Tag","call_id","tagValue","setTagValue","Score","callScore","setCallScore","GetScoreName","SurveyScore","surveyScore","setSurveyScore","CallManagementTable","scoreFilter","tagFilter","rightMenu","setRightMenu","callIdEye","setCallIdEye","byteLength","tableData","setTableData","allRequests","forEach","Promise","resolve","reject","all","isTaggable","nonTaggableCallTypes","callType","CallManagement","DropCallLogDateFilter","Filter","setResponseSummary","formatDate","getHours","getMinutes","dateDifference","today","setParams","queueList","q_num","DataTable","datalist","responseSummary","time_start","time_end","ringing_time","ring_time","handleDowlandButtonClick","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","to_char","DroppedCall","DidReportDateFilter","setSelectedStartTime","setSelectedEndTime","bullet","pos","didNumbers","setDidNumbers","FormControl","InputLabel","Select","did","conditiondata","TotalCallModal","handleTotalCallClose","datas","answer_time","talk_time","lang","AnsweredCallModal","handleAnsweredCallClose","NonAnsweredCallModal","handleOutCallClose","startEndDate","table","total_did_number","total_did","did_not_answered","did_answered","answered","hourToSecond","secondToTime","currentLanguage","dataGridRows","did_number","act","handleTotalCallClick","handleNonAnsweredCallClick","handleAnsweredCallClick","PhoneInTalk","totalCallStyle","totalCallModalOpen","setTotalCallOpen","setDidNo","didno","answeredCallModalOpen","setAnsweredCallOpen","nonAnsweredCallModalOpen","setNonAnsweredCallOpen","handleNonAnsweredCallClose","DIDReport","queryCount","alertRoot","ForgotPassword","timeOutStopper","clearTimeout","Link","ForgotPasswordPage","PrivateRouteLogin","Component","NotPrivateRoute","exptime","now","ServiceLevelDateFilter","yesterday","queuelist","setQueueList","setQueue","handleChangeQueue","queueCheck","cnt","level","createData","ring","parseFloat","toFixed","percent","csvData","ServiceLevel","AbondenedQueuesDateFilter","setResponseCount","responseCount","waiting","AbandonedQueues","RepadativeCallsDateFilter","setallcalls","answeredLimit","setAnsweredCalls","setResponseCaller","setAllCallCount","setAnsweredCallCount","didList","setDidList","AllCalls","allcalls","setCallerNumber","allCallCount","exportAllOpen","setExpotAllOpen","role","tabIndex","Model","responseCaller","AnsweredCalls","answeredcalls","setAnsweredLimit","answeredCallCount","RepetetiveCalls","setAllCallOffset","setAnsweredCallOffset","pageAnswered","setPageAnswered","answeredCalls","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","QueueList","setQueueAmaunt","setQueueAmauntFunction","queAmaunt","waitingNumber","queueListTimeout","waitingTime","substring","queuName","queueNumber","AgentConnection","setCallAmaunt","setAgentAmaunt","setAgentNum","setAgentName","setValuesFunction","agentConnectionTimeout","callAmaunt","connectionNumber","setAgentNumFunction","connectionTime","AgentStatus","setBreakeAgentAmount","setLoginAgentAmount","agentStatusTimeout","breakeAgenAmaunt","loginAgentAmaunt","states","onClickUptateValuesFunction","statustime","CallDetail","queueAmaunt","agentAmaunt","breakeAgentAmaunt","dateFilter","setDateFilter","setCallType","intervalId","setInterval","clearInterval","convertTime","convertReadableTime","agent_to_agent_totaltime","inbound_totaltime","outbound_totaltime","queue_totaltime","totaltime","total_call","inbound_calls","outbound_calls","agent_to_agent_calls","queue_calls","answered_inbound_calls","getAverageTime","average","temptime","totalSec","AgentDetail","totalcall","answered_call","inbound_call_to_agent","outbound_call_to_agent","inboundtotaltime","outboundtotaltime","inboundaverage","outboundaverage","agentDetail","setAgentDetail","voiceMail","setVoiceMail","longTime","setLongTime","setWaitingTime","longestCalleds","setLongestCalleds","longestCallers","setLongestCallers","longestCalledAmount","setLongestAmount","longestCallerAmount","setLongestCallerAmount","Tabs","Tab","a11yProps","TabPanel","en_cok_aranan_numara","en_cok_arayan_numara","en_uzun_aranan_süre","en_uzun_aranan_numara","en_uzun_arayan_numara","hidden","WallBoard","callDetailVisible","setCallDetailVisible","setResponseTable","responseTable","totalCall","hour_log","totalMin","Chart","maximum","o","useScreenshot","quality","takeScreenShot","image","extension","createFileName","domain","angle","strokeDasharray","itemStyle","DailyLog","CustomTooltip","timezone","acc","allowDecimals","dot","DailyAcc","day_log","unit","totalTime","averageTime","timeToSecond","scope","Graph","setGraphData","setResponseDaily","showTime","select","setSelect","choice","tempResponse","respdata","DayLog","Count","TotalHour","TotalMinutes","TotalSeconds","Hour","Act","labelArray","reverse","daylog","totalDataArray","totalMins","totalSeconds","filter","el","CallComparison","responseDaily","graphData","selectedMonth","setSelectedMonth","setSum","months","selectboxdata","resultArray","tempArray","date_trunc","customTooltip","ApplicationsGraph","pieData","toplam","nameKey","cx","cy","isAnimationActive","outerRadius","entry","aylar","formatDateExcel","toInteger","MonthlyLog","AgentSessionReportDateFilter","setAgentSession","qnum","setQnum","setAgent","setClickedResponse","clickedAgent","responseBreak","setResponseBreak","break","agentSelect","setAgentSelect","breakSelect","setBreakSelect","handleChangeQueueSelect","handleChangeAgentSelect","handleBreakChange","agentSession","setClickedAgent","z","ag_num","state_time","escapetime","last_state_date","lastlogout","lastlogin","clickedResponse","keys","logout","m8072","m8073","m8074","m8075","m8076","m8077","m8078","m8079","AgentCDR","DateTimePicker","ampm","disableFuture","CardActions","getSeconds","issuetime","IYS","Users","users","setUsers","selecetedUser","setSelectedUser","onlineVoiceRoutingPolicy","tenantDialPlan","teamsCallingPolicy","userPrincibleName","selectedUserDetails","setSelectedUserDetails","voiceRoutingPolicys","setVoiceRoutingPolicys","selectedvoiceRoutingPolicy","setSelectedvoiceRoutingPolicy","tenantDiaplans","setTenantDiaplan","selectedTenantDiaplans","setSelectedTenantDiaplans","teamsCallingPolicys","setTeamsCallingPolicy","selectedTeamsCallingPolicy","setSelectedTeamsCallingPolicy","res2","res3","handleChangeUserEmail","callingPolicy","AccordionActions","policyName","voiceRoutingPolicy","tenantDiaplan","teanantDiaPlan","setTotalAgent","setTotalDid","selectedDate","views","setSelectedDate","setCsvData","returnedTime","param1","param2","Param1Array","Param2Array","calculateAverage","timeArray","averageSecond","totaloutbound","totalinbound","answeredinb","durationcalls","durationinbound","durationoutbound","averageTotal","averageInbound","averageOutbound","averageinbound","averageoutbound","inds","Detail","totalAgent","totalDid","calldid","agentcall","MonthlyDetails","responseTotal","queryTotal","lastDay","resps","QueueAnswerReportDateFilter","setSummary","setSummaryTotal","setQueueNum","setSrc","setOrder","summed","setRowsPerPage","summaryTotal","dataUnit","dst_start_time","waiting_time","talking","QueueAnswerReport","summary","waiting_act","count1","AbondenedCallsDateFilter","setColor","agents","setAgents","detail","setDetail","call","calls","detailPromises","userpart","from_displayname","details","timeofevent","Row","hasDetail","colSpan","deta","ins","dst_end_time","calltime","AbondenedCalls","CallTerminationReportDateFilter","CallTerminationReportFilters","setCallTerminator","sourceSelect","setSourceSelect","CallTerminationReportFilter","setTotalCount","CallTerminationReportTable","totalCount","CallTerminationReport","AgentCdrRportFilter","AgentCdrReportTable","AgentCdrReport","DailySummaryDateFilter","DailySummaryReportFilter","setDataTotal","AbondenedCallModal","handleAbondenedCallClose","TransferCallModal","handleTransferCallClose","transferer","trasfered","OutOfTimeModal","handleOutOfTimeClose","RonaCallModla","handleRonaCallClose","OutCallModal","DailySummaryReportTable","dataTotal","datetime","inboundtime","waitingtime","averageconnection","abondened","transfer","long_time","zdisi","average_abondened_waiting","rona","outbound_time","average_outbound_time","inboundTime","longestTime","outOfTime","averageAbondenedWaiting","outboundTotalTime","outboundAverageTime","totalCallDate","setTotalCallDate","answeredCallDate","setAnsweredCallDate","abondenedCallModalOpen","setAbondenedCallOpen","abondenedCallDate","setAbondenedCallDate","handleAbondenedCallClick","transferCallModalOpen","setTransferCallOpen","transferCallDate","setTransferCallDate","handleTransferCallClick","outOfTimeModalOpen","setOutOfTimeModalOpen","outOfTimeDate","setOutOfTimeDate","handleOutOfTimeClick","ronaCallModalOpen","setRonaCallOpen","ronaCallDate","setRonaCallDate","handleRonaCallClick","outCallModalOpen","setOutCallOpen","outCallDate","setOutCallDate","handleOutCallClick","DailySumaryReport","InternalSummaryDateFilter","InternalsSummaryReportFilter","seletAgent","setSelectAgent","total_inbound","total_outbound","marginBlock","InternalsSummaryReportTable","selectedAgent","setSelectedAgent","modalOpen","setModalOpen","handleOpenModal","handleCloseModal","longestBreakTime","setLongestBreakTime","answered_inbound","unanswered_inbound","answered_outbound","unanswered_outbound","hide","ArrowBack","components","GridToolbarFilterButton","InternalsSummaryReport","durationSelect","setDurationSelect","durationMin","durationMax","durationMinMax","setDurationMinMax","handleDurationChange","InputProps","endAdornment","InputAdornment","CallLogFilter","setTotalData","setResponseTotalSummary","durationSql","setDurationSql","totalString","stringTotalSummary","CallLogCallDetail","detailContainerStyle","setTotalTime","ms","totalRingTime","setTotalRingTime","totalTalkTime","setTotalTalkTime","tempRingTime","tempTalkTime","callers","calleds","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","px","CallLogTable","totalData","responseTotalSummary","coalesce","Clear","not_answered","transfered","totalduration","averageduration","CallLog","QualityReportDateFilter","QualityFilters","setFiltered","agentNo","setAgentNo","ani","toLowerCase","timeofinsertion","MenuProps","selected","gap","QualityTable","nonRepeatingArr","copyArr","temp","voters","averageScores","setAverageScores","totalScoreByAgent","totalVotesByAgent","totalVote","averageScore","setVoters","float","QualityReport","CallTransferReportDateFilter","setTotal","totalring","totalTalk","convertSec","str","sec","CallTransferReport","BreaksChangeBreakNameModal","selectedBreakName","handleBreakNameModalClose","newName","setNewName","rep","BreaksChangeBreakTimeModal","logouttype","period","handleBreakTimeModalClose","newTime","setNewTime","EditBreaks","breaks","setBreaks","breakNameModalopen","setBreakNameModalOpen","selectedBreakId","setSelectedBreakId","setSelectedBreakName","handleClickName","breakTimeModalopen","setBreakTimeModalOpen","selectedLogoutType","setSelectedLogoutType","selectedBreakTime","setSelectedBreakTime","handleClickTime","logoutType","mola","molaAdı","iddn","UserDepartmans","deps","setDeps","userOwnedDeps","setUserOwnedDeps","selectedUserId","setSelectedUserId","tempArr","resArr","department_id","dep","handleCheckboxClick","AddUserModal","addHandleClose","setUserName","showPassword","setShowPassword","userType","setUserType","m","htmlFor","OutlinedInput","VisibilityOff","UpdateUserModal","updateHandleClose","selectedUser","UserTable","addModal","setAddModal","updateModal","setUpdateModal","handleClickEdit","username","res1","UserSettings","AddTagModal","setReloadTags","departments","setDepartments","setDepId","setDepName","tagName","setTagName","departmentName","UpdateTagModal","selectedTag","department","tagtypes_id","TagTable","reloadTags","setSelectedTag","DepartmentQueues","depOwnedQueues","setDepOwnedQueues","selectedDepId","setSelectedDepId","queue_id","AddDepartmanModal","UpdateDepartmanModal","selectedDep","DepartmantTable","setSelectedDep","DepartmansSettigns","Account","setCompany","setUser","flexbox","newNotifications","currentNotifications","delayedNotifications","Routes","CallListening","DidReport","App","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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AI,aADpB,IACmC,kBAACk6B,GAAA,EAAD,CAAerhC,MAAO,CAAE/N,WAAY,WAGzE,kBAAC,KAAD,CAAYoU,KAAMk2C,EAAS5sD,KAAK,QAC9B,kBAAC,KAAD,CACEqT,MAC4B,UAA1B29B,EAAejxC,OACX,eAC0B,UAA1BixC,EAAejxC,OACf,sBAC0B,UAA1BixC,EAAejxC,OACf,eAC0B,UAA1BixC,EAAejxC,OACf,gBACA,GAENsI,MAAM,OAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,aAC0B,UAA1BixC,EAAejxC,OACf,iBAC0B,UAA1BixC,EAAejxC,OACf,aAC0B,UAA1BixC,EAAejxC,OACf,cACA,GAENsI,MAAM,iBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,gBAC0B,UAA1BixC,EAAejxC,OACf,eAC0B,UAA1BixC,EAAejxC,OACf,kBAC0B,UAA1BixC,EAAejxC,OACf,gBACA,GAENsI,MAAM,kBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,mBAC0B,UAA1BixC,EAAejxC,OACf,mBAC0B,UAA1BixC,EAAejxC,OACf,sBAC0B,UAA1BixC,EAAejxC,OACf,wBACA,GAENsI,MAAM,qBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,qBAC0B,UAA1BixC,EAAejxC,OACf,sBAC0B,UAA1BixC,EAAejxC,OACf,wBAC0B,UAA1BixC,EAAejxC,OACf,0BACA,GAENsI,MAAM,uBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,iBAC0B,UAA1BixC,EAAejxC,OACf,eAC0B,UAA1BixC,EAAejxC,OACf,kBAC0B,UAA1BixC,EAAejxC,OACf,mBACA,GAENsI,MAAM,mBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,oBAC0B,UAA1BixC,EAAejxC,OACf,mBAC0B,UAA1BixC,EAAejxC,OACf,0BAC0B,UAA1BixC,EAAejxC,OACf,wBACA,GAENsI,MAAM,sBAER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Ck6B,GAAA,EAAD,CAAerhC,MAAO,CAAE/N,WAAY,WAGzE,kBAAC,KAAD,CAAYoU,KAAMA,EAAM1W,KAAK,QAC3B,kBAAC,KAAD,CACEqT,MAC4B,UAA1B29B,EAAejxC,OACX,OAC0B,UAA1BixC,EAAejxC,OACf,QAC0B,UAA1BixC,EAAejxC,QAEW,UAA1BixC,EAAejxC,OADf,QAGA,GAENsI,MAAM,SAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,OAC0B,UAA1BixC,EAAejxC,OACf,OAC0B,UAA1BixC,EAAejxC,OACf,MAC0B,UAA1BixC,EAAejxC,OACf,SACA,GAENsI,MAAM,SAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,SAC0B,UAA1BixC,EAAejxC,OACf,SAC0B,UAA1BixC,EAAejxC,OACf,SAC0B,UAA1BixC,EAAejxC,OACf,YACA,GAENsI,MAAM,qBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,SAC0B,UAA1BixC,EAAejxC,OACf,SAC0B,UAA1BixC,EAAejxC,OACf,UAC0B,UAA1BixC,EAAejxC,OACf,SACA,GAENsI,MAAM,qBAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,YAC0B,UAA1BixC,EAAejxC,OACf,SAC0B,UAA1BixC,EAAejxC,OACf,WAC0B,UAA1BixC,EAAejxC,OACf,UACA,GAENsI,MAAM,cAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,WAC0B,UAA1BixC,EAAejxC,OACf,UAC0B,UAA1BixC,EAAejxC,OACf,WAC0B,UAA1BixC,EAAejxC,OACf,QACA,GAENsI,MAAM,aAER,kBAAC,KAAD,CACEgL,MAC4B,UAA1B29B,EAAejxC,OACX,QAC0B,UAA1BixC,EAAejxC,OACf,QAC0B,UAA1BixC,EAAejxC,OACf,QAC0B,UAA1BixC,EAAejxC,OACf,aACA,GAENsI,MAAM,iBAQpB,kBAACmc,GAAA,EAAD,KACE,kBAAC,KAAD,CACEnU,MAAO,CAAE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","file":"static/js/main.6e6e9298.chunk.js","sourcesContent":["import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  initialURL: '/',\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return { ...state, error: '', message: '', loading: true };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return { ...state, error: '', loading: false, message: action.payload };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return { ...state, loading: false, message: '', error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SHOW_MESSAGE = 'show_message';\r\nexport const HIDE_MESSAGE = 'hide_message';\r\nexport const FETCH_START = 'fetch_start';\r\nexport const FETCH_SUCCESS = 'fetch_success';\r\nexport const FETCH_ERROR = 'fetch_error';\r\n\r\nexport const UPDATE_AUTH_USER = 'update_auth_user';\r\nexport const UPDATE_LOAD_USER = 'update_load_user';\r\nexport const SEND_FORGET_PASSWORD_EMAIL = 'send_forget_password_email';\r\nexport const SIGNIN_GOOGLE_USER_SUCCESS = 'signin_google_user_success';\r\nexport const SIGNIN_FACEBOOK_USER_SUCCESS = 'signin_facebook_user_success';\r\nexport const SIGNIN_TWITTER_USER_SUCCESS = 'signin_twitter_user_success';\r\nexport const SIGNIN_GITHUB_USER_SUCCESS = 'signin_github_user_SUCCESS';\r\nexport const SIGNIN_USER_SUCCESS = 'signin_user_success';\r\nexport const SIGNOUT_USER_SUCCESS = 'signout_user_success';\r\n\r\nexport const SET_DASHBOARD_DATA = 'set_dashboard_data';\r\n\r\nexport const SET_TASK_CURRENT_USER = 'set_task_current_user';\r\nexport const SET_TASKS_DATA = 'set_tasks_data';\r\nexport const SET_TASK_LIST_DATA = 'set_task_list_data';\r\nexport const ADD_TASK = 'add_task';\r\nexport const DELETE_TASK = 'delete_task';\r\nexport const UPDATE_TASK = 'update_task';\r\nexport const SET_FILTER_DATA = 'set_filter_data';\r\nexport const ADD_TASK_LIST = 'add_task_list';\r\nexport const UPDATE_TASK_LIST = 'update_task_list';\r\nexport const DELETE_TASK_LIST = 'delete_task_list';\r\nexport const SET_TASK_DETAIL = 'set_task_detail';\r\nexport const SEND_MESSAGE = 'send_message';\r\nexport const TOGGLE_SIDEBAR_COLLAPSED = 'toggle_sidebar_collapsed';\r\nexport const GET_TASKS_COUNTS = 'get_tasks_counts';\r\n\r\nexport const GET_LABELS_LIST = 'get_labels_list';\r\nexport const GET_CONNECTIONS_LIST = 'get_connections_list';\r\nexport const GET_MAILS_LIST = 'get_mails_list';\r\nexport const UPDATE_MAIL_FOLDER = 'update_mail_folder';\r\nexport const UPDATE_MAIL_LABEL = 'upade_mail_label';\r\nexport const UPDATE_FAVORITE_STATUS = 'update_favorite_status';\r\nexport const UPDATE_READ_STATUS = 'update_read_status';\r\nexport const UPDATE_IMPORTANT_STATUS = 'update_important_status';\r\nexport const COMPOSE_MAIL = 'compose_mail';\r\nexport const SET_FILTER_TYPE = 'set_filter_type';\r\nexport const GET_SELECTED_MAIL = 'GET_SELECTED_MAIL';\r\nexport const UPDATE_SELECTED_MAIL = 'update_selected_mail';\r\nexport const NULLIFY_SELECTED_MAIL = 'nullify_selected_mail';\r\nexport const REPLY_TO_MAIL = 'reply_to_mail';\r\nexport const GET_MAIL_COUNTS = 'get_mail_count';\r\nexport const ADD_LABEL = 'add_label';\r\nexport const ADD_CONNECTION = 'add_connection';\r\nexport const REMOVE_CONNECTION = 'remove_connection';\r\n\r\nexport const SET_CHAT_USERS = 'set_chat_users';\r\nexport const SET_CONTACT_USERS = 'set_contact_users';\r\nexport const SET_CURRENT_USER = 'set_current_user';\r\nexport const SET_CONVERSATION_DATA = 'set_conversation_data';\r\nexport const SEND_NEW_CHAT_MESSAGE = 'send_new_chat_message';\r\nexport const SEND_NEW_MEDIA_MESSAGE = 'send_new_media_message';\r\n\r\nexport const GET_CONTACTS_LIST = 'get_contacts_list';\r\nexport const SET_CURRENT_CONTACT = 'set_current_contact';\r\nexport const CREATE_CONTACT = 'create_contact';\r\nexport const UPDATE_STARRED_STATUS = 'update_starred_status';\r\nexport const DELETE_CONTACT = 'delete_contact';\r\nexport const UPDATE_CONTACT_LABEL = 'update_contact_label';\r\nexport const UPDATE_CONTACT = 'update_contact';\r\nexport const GET_CONTACT_COUNTS = 'get_contact_counts';\r\nexport const UPDATE_LABEL_ITEM = 'update_label_item';\r\nexport const DELETE_LABEL_ITEM = 'delete_label_item';\r\n\r\nexport const GET_USER_DETAIL = 'get_user_detail';\r\nexport const GET_FEED_POSTS = 'get_feed_posts';\r\nexport const CREATE_POST = 'create_post';\r\nexport const UPDATE_POST = 'update_post';\r\n\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const DELETE_BULK_USERS = 'DELETE_BULK_USERS';\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  authUser: null,\r\n  loadUser: false,\r\n  send_forget_password_email: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loadUser: true,\r\n      };\r\n    }\r\n    case UPDATE_LOAD_USER: {\r\n      return {\r\n        ...state,\r\n        loadUser: action.payload,\r\n      };\r\n    }\r\n    case SEND_FORGET_PASSWORD_EMAIL: {\r\n      return {\r\n        ...state,\r\n        send_forget_password_email: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport Common from './Common';\r\nimport Auth from './Auth';\r\n\r\nexport default history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    common: Common,\r\n    auth: Auth,\r\n  });\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport reducers from '../reducers';\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const store = createStore(reducers(history), initialState, bindMiddleware([routeMiddleware, thunk]));\r\n  return store;\r\n}\r\nexport default configureStore;\r\nexport { history };\r\n","import { alpha, makeStyles, darken } from '@material-ui/core/styles';\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nlet paddingClasses = {};\r\nlet marginClasses = {};\r\nfor (let count = 1; count <= 8; count++) {\r\n  paddingClasses['.pt-' + count] = { paddingTop: count * 4 + 'px !important' };\r\n  paddingClasses['.pb-' + count] = { paddingBottom: count * 4 + 'px !important' };\r\n  paddingClasses['.pl-' + count] = { paddingLeft: count * 4 + 'px !important' };\r\n  paddingClasses['.pr-' + count] = { paddingRight: count * 4 + 'px !important' };\r\n  marginClasses[`.ml-${count}`] = { marginLeft: `${count * 4}px !important` };\r\n  marginClasses[`.mr-${count}`] = { marginRight: `${count * 4}px !important` };\r\n  marginClasses[`.mt-${count}`] = { marginTop: `${count * 4}px !important` };\r\n  marginClasses[`.mb-${count}`] = { marginBottom: `${count * 4}px !important` };\r\n}\r\n\r\nconst globalStyles = makeStyles(theme => ({\r\n  breakpoints,\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      '&:hover,&:focus': {\r\n        textDecoration: 'none',\r\n      },\r\n      '&.disable-link': {\r\n        pointerEvents: 'none',\r\n        cursor: 'default',\r\n        [theme.breakpoints.down('xs')]: {\r\n          pointerEvents: 'inherit',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n    },\r\n    '.pointer': {\r\n      cursor: 'pointer',\r\n    },\r\n    '.rounded': {\r\n      borderRadius: '50%',\r\n    },\r\n    '.Cmt-table-responsive': {\r\n      minHeight: '.01%',\r\n      overflowX: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n        marginBottom: 15,\r\n        overflowY: 'hidden',\r\n        border: `1px solid ${theme.palette.borderColor.main}`,\r\n        '& > table': {\r\n          marginBottom: 0,\r\n          '& > thead > tr > th': {\r\n            paddingTop: 8,\r\n          },\r\n          '& > thead > tr > th, > tbody > tr > th, > tfoot > tr > th, thead > tr > td, tbody > tr > td, tfoot > tr > td': {\r\n            whiteSpace: 'nowrap',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '.dropzone': {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(10, 5),\r\n      border: `2px dashed ${theme.palette.borderColor.main}`,\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default,\r\n      outline: 'none',\r\n      transition: 'border .24s ease-in-out',\r\n    },\r\n    '.swal2-shown .swal2-container': {\r\n      zIndex: 1104,\r\n    },\r\n    '.swal2-container .swal2-popup, .swal2-container .swal2-popup.swal2-toast': {\r\n      backgroundColor: theme.palette.popupColor.main,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-content, .swal2-container .swal2-title': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-footer a': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '.swal2-container .swal2-close:focus': {\r\n      outline: 'none',\r\n    },\r\n    '.rbc-calendar': {\r\n      flex: 1,\r\n      minHeight: 'calc(100vh - 200px)',\r\n      [theme.breakpoints.down('xs')]: {\r\n        minHeight: 400,\r\n      },\r\n      [theme.breakpoints.down(710)]: {\r\n        '& .rbc-toolbar': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexWrap: 'nowrap',\r\n          alignItems: 'flex-start',\r\n          '& .rbc-toolbar-label': {\r\n            margin: '8px 0',\r\n            padding: 0,\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down(500)]: {\r\n        '& .rbc-toolbar': {\r\n          fontSize: 12,\r\n          '& button': {\r\n            padding: '5px 10px',\r\n          },\r\n        },\r\n      },\r\n      '& .rbc-event': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        minHeight: 50,\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      '& .rbc-event.rbc-selected': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.3),\r\n      },\r\n      '& .rbc-slot-selection': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.7),\r\n      },\r\n      '& .rbc-toolbar button:active, & .rbc-toolbar button.rbc-active': {\r\n        color: theme.palette.common.white,\r\n        backgroundImage: 'none',\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button:active:hover, & .rbc-toolbar button.rbc-active:hover, & .rbc-toolbar button:active:focus, & .rbc-toolbar button.rbc-active:focus': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n      '& .rbc-toolbar button:focus, & .rbc-toolbar button:hover': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-month-row': {\r\n        minHeight: 100,\r\n      },\r\n      '& .rbc-off-range-bg': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      },\r\n    },\r\n    ...paddingClasses,\r\n    ...marginClasses,\r\n  },\r\n}));\r\n\r\nexport default globalStyles;\r\n","export const DRAWER_BREAK_POINT = {\r\n  SX: 'sx',\r\n  SM: 'sm',\r\n  MD: 'md',\r\n};\r\n\r\nexport const HEADER_TYPE = {\r\n  FIXED: 'fixed',\r\n  STATIC: 'static',\r\n};\r\n\r\nexport const SIDEBAR_TYPE = {\r\n  FULL: 'full',\r\n  MINI: 'mini',\r\n  DRAWER: 'drawer',\r\n};\r\nexport const Fonts = {\r\n  PRIMARY: 'Normal',\r\n};\r\n\r\nexport const THEME_TYPES = {\r\n  DARK: 'dark',\r\n  SEMI_DARK: 'semi-dark',\r\n  LIGHT: 'light',\r\n};\r\n\r\nexport const LAYOUT_STYLES = {\r\n  BOXED: 'boxed',\r\n  FULL_WIDTH: 'full-width',\r\n  FRAMED: 'framed',\r\n};\r\n\r\nexport const LAYOUT_TYPES = {\r\n  VERTICAL_DEFAULT: 'vertical-default',\r\n  VERTICAL_MINIMAL: 'vertical-minimal',\r\n  VERTICAL_MINIMAL_NO_HEADER: 'vertical-minimal-no-header',\r\n  VERTICAL_MODERN_SIDEBAR: 'vertical-modern-sidebar',\r\n  HORIZONTAL_DEFAULT: 'horizontal-default',\r\n  HORIZONTAL_DARK: 'horizontal-dark',\r\n  HORIZONTAL_MINIMAL: 'horizontal-minimal',\r\n  HORIZONTAL_TOP_MENU: 'horizontal-top-menu',\r\n};\r\n\r\nexport const SIDEBAR_WIDTH = {\r\n  SMALL: 280,\r\n  DEFAULT: 304,\r\n  WIDE: 330,\r\n};\r\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\nimport { Fonts } from '../@jumbo/constants/ThemeOptions';\r\nimport { indigo, pink } from '@material-ui/core/colors';\r\n\r\nconst breakpoints = createBreakpoints({\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920,\r\n  },\r\n});\r\n\r\nconst defaultTheme = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  spacing: 4,\r\n  direction: 'ltr',\r\n  palette: {\r\n    type: 'light',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n      dark: '#020202',\r\n    },\r\n    primary: indigo,\r\n    secondary: pink,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    btn: {\r\n      hover: 'rgba(0, 0, 0, 0.08)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n  typography: {\r\n    fontFamily: Fonts.PRIMARY,\r\n    fontWeightExtraLight: 200,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightBold: 'bold',\r\n    fontWeightExtraBold: 800,\r\n  },\r\n  overrides: {\r\n    MuiTypography: {\r\n      h1: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 22,\r\n        },\r\n      },\r\n      h2: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n      h3: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 18,\r\n        },\r\n      },\r\n      h4: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n      },\r\n      h5: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n      },\r\n      h6: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.5,\r\n      },\r\n      subtitle1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.15,\r\n      },\r\n      subtitle2: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.1,\r\n      },\r\n      body1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.5,\r\n      },\r\n      body2: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.25,\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1.25,\r\n        fontSize: 13,\r\n      },\r\n    },\r\n    MuiToggleButton: {\r\n      root: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiCardLg: {\r\n      root: {\r\n        borderRadius: 10,\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: 4,\r\n        boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n      },\r\n    },\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default defaultTheme;\r\n","import defaultTheme from '../../../../theme/defaultTheme';\r\nimport {\r\n  DRAWER_BREAK_POINT,\r\n  HEADER_TYPE,\r\n  LAYOUT_STYLES,\r\n  LAYOUT_TYPES,\r\n  SIDEBAR_TYPE,\r\n  SIDEBAR_WIDTH,\r\n  THEME_TYPES,\r\n} from '../../../constants/ThemeOptions';\r\nconst getLang = () => {\r\n  var defaultLanguage = localStorage.getItem(\"language\") || navigator.language;\r\n  switch (defaultLanguage) {\r\n    case 'tr-TR':\r\n    case 'tr':\r\n    case 'turkish':\r\n      return {\r\n        languageId: 'turkish',\r\n          locale: 'tr',\r\n          name: 'Türkçe',\r\n          icon: 'tr',\r\n      }\r\n      case 'en-US':\r\n      case 'en':\r\n      case 'en-GB':\r\n      case 'english':\r\n        return {\r\n          languageId: 'english',\r\n            locale: 'en',\r\n            name: 'English',\r\n            icon: 'en',\r\n        }\r\n        case 'de-DE':\r\n        case 'de':\r\n        case 'de-AT':\r\n        case 'de-CH':\r\n        case 'de-LI':\r\n        case 'deutsche':\r\n          return {\r\n            languageId: 'deutsche',\r\n              locale: 'de',\r\n              name: 'Deutsche',\r\n              icon: 'de',\r\n          }\r\n          case 'nl':\r\n          case 'dutch':\r\n            return {\r\n              languageId: 'dutch',\r\n                locale: 'nl',\r\n                name: 'Dutch',\r\n                icon: 'nl',\r\n            }\r\n            default:\r\n              return {\r\n                languageId: 'turkish',\r\n                  locale: 'tr',\r\n                  name: 'Turkish',\r\n                  icon: 'tr',\r\n              }\r\n  }\r\n}\r\nvar defaultLng = getLang();\r\nexport default {\r\n  theme: defaultTheme,\r\n  defaultLng,\r\n  layout: LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR,\r\n  layoutType: LAYOUT_STYLES.FULL_WIDTH,\r\n  themeType: THEME_TYPES.LIGHT,\r\n  drawerBreakPoint: DRAWER_BREAK_POINT.MD,\r\n  headerType: HEADER_TYPE.FIXED,\r\n  sidebarType: SIDEBAR_TYPE.FULL,\r\n  isSidebarFixed: true,\r\n  sidebarWidth: SIDEBAR_WIDTH.DEFAULT,\r\n  showFooter: false,\r\n};","import React from 'react';\r\nimport defaultContext from './defaultContext';\r\n\r\nconst AppContext = React.createContext({\r\n  locale: defaultContext.defaultLng,\r\n  setLocale: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import enMessages from '../locales/en_EN.json';\r\n\r\nconst enLang = {\r\n  messages: {\r\n    ...enMessages,\r\n  },\r\n  locale: 'en-EN',\r\n};\r\nexport default enLang;\r\n","import saMessages from '../locales/tr_TR.json';\r\n\r\nconst saLang = {\r\n  messages: {\r\n    ...saMessages,\r\n  },\r\n  locale: 'tr-TR',\r\n};\r\nexport default saLang;\r\n","import nlMessages from '../locales/nl_NL.json';\r\n\r\nconst nlLang = {\r\n  messages: {\r\n    ...nlMessages,\r\n  },\r\n  locale: 'nl-NL',\r\n};\r\nexport default nlLang;\r\n","import enLang from './entries/en_EN';\r\nimport trLang from './entries/tr_TR';\r\nimport nlLang from './entries/nl_NL';\r\nimport deLang from './entries/de_DE';\r\nconst AppLocale = {\r\n  en: enLang,\r\n  tr: trLang,\r\n  de: deLang,\r\n  nl: nlLang,\r\n};\r\n\r\nexport default AppLocale;","import deMessages from '../locales/de_DE.json';\r\n\r\nconst deLang = {\r\n  messages: {\r\n    ...deMessages,\r\n  },\r\n  locale: 'de-DE',\r\n};\r\nexport default deLang;\r\n","import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const fetchSuccess = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_SUCCESS,\r\n      payload: message || '',\r\n    });\r\n  };\r\n};\r\nexport const fetchError = error => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_ERROR,\r\n      payload: error,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStart = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_START,\r\n    });\r\n  };\r\n};\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const setAuthUser = user => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_AUTH_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLoadUser = loading => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_LOAD_USER,\r\n      payload: loading,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setForgetPassMailSent = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SEND_FORGET_PASSWORD_EMAIL,\r\n      payload: status,\r\n    });\r\n  };\r\n};\r\n","import BasicAuth from './Basic';\r\n\r\nexport const AuhMethods = {\r\n  basic: BasicAuth,\r\n};\r\n","import { fetchError, fetchStart, fetchSuccess } from '../../../redux/actions';\r\nimport { setAuthUser, setForgetPassMailSent, updateLoadUser } from '../../../redux/actions/Auth';\r\nimport React from 'react';\r\n\r\nexport const BasicAuth = {\r\n  onLogin: ({ email, password }) => {\r\n    return dispatch => {\r\n      try {\r\n        dispatch(fetchStart());\r\n\r\n        setTimeout(() => {\r\n          const user = { name: 'Admin', email: email, password: password };\r\n          dispatch(fetchSuccess());\r\n          dispatch(setAuthUser(user));\r\n        }, 300);\r\n      } catch (error) {\r\n        dispatch(fetchError(error.message));\r\n      }\r\n    };\r\n  },\r\n  onLogout: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      dispatch(fetchSuccess());\r\n      localStorage.removeItem('login');\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('username');\r\n      localStorage.removeItem('company');\r\n      localStorage.removeItem('digits');\r\n      localStorage.removeItem('exptime');\r\n      dispatch(setAuthUser(null));\r\n    };\r\n  },\r\n\r\n  getAuthUser: (loaded = false) => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n      dispatch(updateLoadUser(loaded));\r\n\r\n      setTimeout(() => {\r\n        dispatch(fetchSuccess());\r\n        dispatch(setAuthUser(JSON.parse(localStorage.getItem('user'))));\r\n      }, 300);\r\n    };\r\n  },\r\n\r\n  onForgotPassword: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(true));\r\n        dispatch(fetchSuccess());\r\n      }, 300);\r\n    };\r\n  },\r\n  getSocialMediaIcons: () => {\r\n    return <React.Fragment> </React.Fragment>;\r\n  },\r\n};\r\n\r\nexport default BasicAuth;\r\n","import React from 'react';\r\nconst LayoutContext = React.createContext();\r\nexport default LayoutContext;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const location = useLocation();\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false);\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  const [miniSidebarWidth, setMiniSidebarWidth] = useState(props.miniSidebarWidth ? props.miniSidebarWidth : 0);\r\n  const [actionSidebarWidth, setActionSidebarWidth] = useState(props.actionSidebarWidth ? props.actionSidebarWidth : 0);\r\n\r\n  useEffect(() => {\r\n    sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n    headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setLayoutStyle(params.get('layout-style'));\r\n    }\r\n  }, [location.search, props.headerType, props.isSidebarFixed]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      miniSidebarWidth,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n      setMiniSidebarWidth,\r\n      actionSidebarWidth,\r\n      setActionSidebarWidth,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      miniSidebarWidth,\r\n      actionSidebarWidth,\r\n      props.drawerBreakPoint,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.01s ease',\r\n    '&.Cmt-fixedHeaderLayout': {\r\n      '& $appMain': {\r\n        position: 'relative',\r\n        paddingTop: 72,\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingTop: '64px !important',\r\n        },\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: props.sidebarWidth,\r\n        zIndex: 9,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          left: 0,\r\n        },\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-fullFixedHeaderLayout': {\r\n      marginTop: 72,\r\n      height: 'calc(100vh - 72px)',\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: 64,\r\n        height: 'calc(100vh - 64px)',\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        width: '100%',\r\n      },\r\n    },\r\n    '&.Cmt-sidebar-fixed': {\r\n      '& .Cmt-sidebar': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 999,\r\n      },\r\n      '&.Cmt-drawer-sidebar': {\r\n        '& .Cmt-sidebar': {\r\n          position: 'relative',\r\n        },\r\n      },\r\n      '& .Cmt-actionSidebarWrapper': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 1103,\r\n        '& .Cmt-sidebar': {\r\n          position: 'static',\r\n        },\r\n      },\r\n    },\r\n    '& .Cmt-header .Cmt-toggle-menu': {\r\n      display: 'none',\r\n    },\r\n    '&.Cmt-miniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.miniSidebarWidth,\r\n        width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n        transition: 'all 0.01s ease',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.miniSidebarWidth + 20,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.miniSidebarWidth + 50,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-miniLayout': {\r\n      '& .Cmt-sidebar': {\r\n        width: props.miniSidebarWidth,\r\n      },\r\n    },\r\n    '&.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.sidebarWidth,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-drawerLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: 0,\r\n        width: '100%',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: 20,\r\n            width: 'calc(100% - 57px)',\r\n            right: 37,\r\n            top: 20,\r\n            borderTopLeftRadius: 12,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: 50,\r\n            width: 'calc(100% - 117px)',\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      '& .Cmt-header .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }),\r\n  appMain: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: `calc(100% - ${props.sidebarWidth}px)`,\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth,\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.miniSidebarWidth,\r\n    },\r\n    '.Cmt-drawerLayout &': {\r\n      width: '100%',\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-drawerLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: 0,\r\n    },\r\n    '.Cmt-fullMiniLayout &': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      width: `calc(100% - ${props.sidebarWidth + props.actionSidebarWidth}px)`,\r\n    },\r\n    '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth + props.actionSidebarWidth,\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      width: '100%',\r\n      '.Cmt-miniLayout &': {\r\n        width: '100%',\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: 0,\r\n      },\r\n      '.Cmt-drawerLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-fullMiniLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-modernLayout &': {\r\n        width: `100% !important`,\r\n      },\r\n      '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: '0 !important',\r\n      },\r\n    },\r\n  }),\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '.Cmt-sidebar-fixed &': {\r\n      flexDirection: 'column',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            position: 'sticky',\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout $appMain': {\r\n            paddingTop: 0,\r\n          },\r\n          '&.Cmt-miniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-drawerLayout.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, useContext, useEffect, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport useStyles from './MainContainer.style';\r\nimport { HEADER_TYPE } from '../../../@jumbo/constants/ThemeOptions';\r\n\r\nconst MainContainer = ({ header, sidebar, footer, children, className, ...rest }) => {\r\n  const {\r\n    headerType,\r\n    footerType,\r\n    sidebarType,\r\n    isSidebarOpen,\r\n    isSidebarFixed,\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  } = useContext(LayoutContext);\r\n\r\n  const theme = useTheme();\r\n  const isDrawer = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const [headerClasses, setHeaderClasses] = useState('');\r\n  const [footerClasses, setFooterClasses] = useState('');\r\n  const [sidebarClasses, setSidebarClasses] = useState('');\r\n\r\n  const classes = useStyles({\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!header) setHeaderClasses('');\r\n    else if (headerType === HEADER_TYPE.FIXED) setHeaderClasses('Cmt-fixedHeaderLayout');\r\n    else setHeaderClasses('');\r\n  }, [header, headerType]);\r\n\r\n  useEffect(() => {\r\n    if (!footer) setFooterClasses('');\r\n    else if (footerType === 'fixed') setFooterClasses('Cmt-FixedFooterLayout');\r\n    else setFooterClasses('');\r\n  }, [footer, footerType]);\r\n\r\n  useEffect(() => {\r\n    const newClasses = [];\r\n    if (!sidebar) newClasses.push('');\r\n    else if (sidebarType === 'drawer' || isDrawer) newClasses.push('Cmt-drawerLayout');\r\n    else if (sidebarType === 'mini') newClasses.push(isSidebarOpen ? 'Cmt-fullMiniLayout' : 'Cmt-miniLayout');\r\n\r\n    if (isSidebarFixed) newClasses.push('Cmt-sidebar-fixed');\r\n\r\n    setSidebarClasses(clsx(newClasses));\r\n  }, [sidebarType, isSidebarOpen, isDrawer, isSidebarFixed, sidebar]);\r\n\r\n  return (\r\n    <Box className={clsx(classes.appRoot, headerClasses, sidebarClasses, footerClasses, className)} {...rest}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {header && cloneElement(header, { type: headerType })}\r\n            {children}\r\n            {footer && cloneElement(footer, { type: footerType })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\nconst SidebarThemeContext = React.createContext();\r\n\r\nexport default SidebarThemeContext;\r\n","const pxToRem = (target, context = '10px') => {\r\n  return (target / context) * '1rem';\r\n};\r\n\r\nconst componentColors = [\r\n  'amber',\r\n  'brown',\r\n  'orange',\r\n  'purple',\r\n  'primary',\r\n  'red',\r\n  'green',\r\n  'blue',\r\n  'grey',\r\n  'yellow',\r\n  'secondary',\r\n];\r\n\r\nconst getBackgroundStyle = (backgroundColor, backgroundImage, gradientDirection) => {\r\n  if (backgroundImage)\r\n    return {\r\n      backgroundImage: `url(${backgroundImage})`,\r\n      backgroundRepeat: `no-repeat`,\r\n      backgroundPosition: `center center`,\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n  if (typeof backgroundColor === 'string' || (Array.isArray(backgroundColor) && backgroundColor.length === 1)) {\r\n    return { backgroundColor: backgroundColor.toString() };\r\n  }\r\n\r\n  if (Array.isArray(backgroundColor) && backgroundColor.length > 1) {\r\n    const [firstColor] = backgroundColor[0].split(' ');\r\n    return {\r\n      backgroundColor: firstColor,\r\n      backgroundImage: gradientDirection\r\n        ? `linear-gradient(${gradientDirection}, ${backgroundColor.join(', ')})`\r\n        : `linear-gradient(${backgroundColor.join(', ')})`,\r\n    };\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getOverLayStyle = overlay => {\r\n  if (overlay.colors) {\r\n    if (typeof overlay.colors === 'string' || (Array.isArray(overlay.colors) && overlay.colors.length === 1)) {\r\n      return {\r\n        backgroundColor: overlay.colors.toString(),\r\n        opacity: overlay.opacity,\r\n      };\r\n    } else if (Array.isArray(overlay.colors) && overlay.colors.length > 1) {\r\n      const [firstColor] = overlay.colors[0].split(' ');\r\n      return {\r\n        backgroundColor: firstColor,\r\n        backgroundImage: overlay.direction\r\n          ? `linear-gradient(${overlay.direction}, ${overlay.colors.join(', ')})`\r\n          : `linear-gradient(${overlay.colors.join(', ')})`,\r\n        opacity: overlay.opacity,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getSeparatorStyle = (separator, topBorder = false) => {\r\n  if (separator.color) {\r\n    const borderWidth = separator.borderWidth ? separator.borderWidth : 1;\r\n    const borderStyle = separator.borderStyle ? separator.borderStyle : 'solid';\r\n\r\n    if (topBorder) {\r\n      return {\r\n        borderTop: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n      };\r\n    }\r\n\r\n    return {\r\n      borderBottom: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst hexToRgba = input => {\r\n  input = input + '';\r\n  input = input.replace('#', '');\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error('input is not a valid hex color.');\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return parseInt(first, 16) + ', ' + parseInt(second, 16) + ', ' + parseInt(last, 16);\r\n};\r\n\r\nconst isUrlInChildren = (parent, url) => {\r\n  if (!parent.children) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < parent.children.length; i++) {\r\n    if (parent.children[i].children) {\r\n      if (isUrlInChildren(parent.children[i], url)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (parent.children[i].link === url || url.includes(parent.children[i].link)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { hexToRgba, pxToRem, componentColors, getBackgroundStyle, getOverLayStyle, getSeparatorStyle, isUrlInChildren };\r\n","export const sidebarLightTheme = {\r\n  bgColor: '#fff',\r\n  textColor: 'rgba(0, 0, 0, 0.6)',\r\n  textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n  textActiveColor: '#3f51b5',\r\n  navHoverBgColor: 'rgb(229, 229, 229)',\r\n  navActiveBgColor: 'rgb(239, 229, 253)',\r\n  borderColor: 'rgba(33, 33, 33, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarSemiDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nconst themeSidebarColor = {\r\n  light: sidebarLightTheme,\r\n  'semi-dark': sidebarSemiDarkTheme,\r\n  dark: sidebarDarkTheme,\r\n};\r\n\r\nexport default themeSidebarColor;\r\n","import React, { useState, useMemo, useEffect, useContext } from 'react';\r\n\r\nimport SidebarThemeContext from './SidebarThemeContext';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../../CmtHelpers/JssHelper';\r\nimport AppContext from '../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport themeSidebarColor from './sidebarThemeColors';\r\n\r\nconst darkThemeSetting = {\r\n  textColor: 'rgba(255, 255, 255, 0.7)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.3)',\r\n  navActiveBgColor: 'green',\r\n  borderColor: 'rgba(255, 255, 255, 0.2)',\r\n};\r\n\r\nconst SidebarThemeProvider = ({ children }) => {\r\n  const { themeType } = useContext(AppContext);\r\n  const [activeTheme, setActiveTheme] = useState({\r\n    ...themeSidebarColor[themeType],\r\n    backgroundColor: '',\r\n    backgroundImage: '',\r\n    gradientDirection: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activeTheme.backgroundImage) {\r\n      if (!activeTheme.backgroundColor) {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...darkThemeSetting,\r\n          backgroundColor: '#000',\r\n        });\r\n      }\r\n    } else {\r\n      if (activeTheme.backgroundColor === '#000') {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...themeSidebarColor[themeType],\r\n          backgroundColor: '',\r\n        });\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTheme.backgroundImage]);\r\n\r\n  useEffect(() => {\r\n    if (!activeTheme.backgroundColor && !activeTheme.backgroundImage) {\r\n      setActiveTheme({\r\n        ...themeSidebarColor[themeType],\r\n      });\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [themeType]);\r\n\r\n  const sidebarContextValue = useMemo(() => {\r\n    const backgroundStyle = getBackgroundStyle(\r\n      activeTheme.backgroundColor,\r\n      activeTheme.backgroundImage,\r\n      activeTheme.gradientDirection,\r\n    );\r\n    const overlayStyle = getOverLayStyle({\r\n      colors: activeTheme.backgroundColor,\r\n      opacity: 0.6,\r\n      direction: '180deg',\r\n    });\r\n\r\n    return {\r\n      sidebarTheme: activeTheme,\r\n      backgroundStyle: backgroundStyle,\r\n      overlayStyle: overlayStyle,\r\n      setSidebarTheme: setActiveTheme,\r\n    };\r\n  }, [activeTheme]);\r\n\r\n  return <SidebarThemeContext.Provider value={sidebarContextValue}>{children}</SidebarThemeContext.Provider>;\r\n};\r\n\r\nexport default SidebarThemeProvider;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtVerticalLayout = ({ layoutOptions, children, header, sidebar, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} sidebar={sidebar} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nCmtVerticalLayout.prototype = {\r\n  layoutOptions: PropTypes.object,\r\n};\r\n\r\nCmtVerticalLayout.defaultProps = {\r\n  layoutOptions: {},\r\n};\r\n\r\nexport default CmtVerticalLayout;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { className, children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={clsx(classes.appHeader, className, 'Cmt-header')}>\r\n      {children}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'LayoutHeader',\r\n};\r\nCmtHeader.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n  fullHeader: PropTypes.bool,\r\n};\r\n\r\nexport default CmtHeader;\r\n","import React, { useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst SidebarToggleHandler = ({ children, ...restProps }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" onClick={() => setSidebarOpen(!isSidebarOpen)} {...restProps}>\r\n      {children || <MenuIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\n\r\nconst CmtImage = ({ alt, ...restProps }) => {\r\n  const altValue = alt ? alt : '';\r\n  return <img alt={altValue} {...restProps} />;\r\n};\r\n\r\nexport default CmtImage;\r\n","export const languageData = [\r\n  {\r\n    languageId: 'turkish',\r\n    locale: 'tr',\r\n    name: 'Türkçe',\r\n    icon: 'tr',\r\n  },\r\n  {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'en',\r\n  },\r\n  {\r\n    languageId: 'dutch',\r\n    locale: 'nl',\r\n    name: 'Dutch',\r\n    icon: 'nl',\r\n  },\r\n  {\r\n    languageId: 'deutsche',\r\n    locale: 'de',\r\n    name: 'Deutsche',\r\n    icon: 'de',\r\n  },\r\n];\r\n\r\nexport const flags = {\r\n  tr: '/images/flag/icons8-tr.png',\r\n  en: '/images/flag/icons8-en.png',\r\n  nl: '/images/flag/icons8-nl.png',\r\n  de: '/images/flag/icons8-de.png',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '12px 24px',\r\n    '& .flag': {\r\n      fontSize: 30,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageItem = ({ language, onClick }) => {\r\n  const { locale, name } = language;\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.root, 'pointer')} onClick={() => onClick(language)}>\r\n      <CmtImage src={flags[locale]} />\r\n      <Box ml={3}>{name}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LanguageItem;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    height:'100%',\r\n    '& .Cmt-card-content': {\r\n      position: 'relative',\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtCard = ({ backgroundColor, backgroundImage, gradientDirection, overlay, className, children, ...cardProps }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={backgroundStyles}\r\n      {...cardProps}>\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtCard.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default CmtCard;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtTitle = ({ content, ...titleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...titleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'h2',\r\n  component: 'div',\r\n  className: null,\r\n};\r\n\r\nexport default CmtTitle;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtSubTitle = ({ content, ...subTitleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...subTitleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtSubTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtSubTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'subtitle1',\r\n  gutterBottom: true,\r\n};\r\n\r\nexport default CmtSubTitle;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headRoot: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 15,\r\n  },\r\n  headerContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction CmtContentHead({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  titleStyle,\r\n  subTitleStyle,\r\n  ...restProps\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.headRoot, 'Cmt-content-head')} {...restProps}>\r\n      {avatar && isValidElement(avatar) ? (\r\n        <div className={clsx(classes.avatar, 'Cmt-avatar')}>{avatar}</div>\r\n      ) : (\r\n        icon && <div className={clsx(classes.avatar, 'Cmt-avatar')}>{icon}</div>\r\n      )}\r\n      <div className={clsx(classes.headerContent, 'Cmt-header-content')}>\r\n        {title && <CmtTitle className={clsx(titleStyle, 'Cmt-title')} content={title} {...titleProps} />}\r\n\r\n        {subTitle && <CmtSubTitle className={clsx(subTitleStyle, 'Cmt-sub-title')} content={subTitle} {...subTitleProps} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCmtContentHead.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n  titleStyle: PropTypes.string,\r\n  subTitleStyle: PropTypes.string,\r\n};\r\n\r\nCmtContentHead.defaultProps = {\r\n  icon: null,\r\n  avatar: null,\r\n  title: null,\r\n  subTitle: null,\r\n  titleStyle: null,\r\n  subTitleStyle: null,\r\n  titleProps: { variant: 'h4', component: 'div' },\r\n  subTitleProps: { variant: 'subtitle2', component: 'p', gutterBottom: false },\r\n};\r\n\r\nexport default React.memo(CmtContentHead);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst CmtDropdownMenu = ({ TriggerComponent, items, onItemClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    setMenuItems(items);\r\n  }, [items]);\r\n\r\n  const openMenu = event => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (item, selectedIndex, event) => {\r\n    event.stopPropagation();\r\n    let updatedItem = { ...item };\r\n\r\n    if (item.onClick && typeof item.onClick === 'function') {\r\n      updatedItem = item.onClick(item);\r\n    } else if (onItemClick && typeof onItemClick === 'function') {\r\n      updatedItem = onItemClick(item);\r\n    }\r\n\r\n    if (updatedItem) {\r\n      let hasChange = false;\r\n      const newMenuItems = menuItems.map((item, index) => {\r\n        if (selectedIndex === index) {\r\n          hasChange = true;\r\n          item = updatedItem;\r\n        }\r\n        return item;\r\n      });\r\n\r\n      if (hasChange) setMenuItems(newMenuItems);\r\n    }\r\n\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pointer\">\r\n        <TriggerComponent.type {...TriggerComponent.props} onClick={openMenu} />\r\n      </div>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n        {menuItems.map((item, index) => {\r\n          return (\r\n            <MenuItem key={index} disabled={item.disabled} onClick={event => handleMenuItemClick({ ...item }, index, event)}>\r\n              {item.icon}\r\n              <div className=\"ml-2\">{item.label}</div>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCmtDropdownMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  TriggerComponent: PropTypes.element.isRequired,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nexport default CmtDropdownMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: 24,\r\n    '&.Cmt-separator': {\r\n      ...props.separatorStyles,\r\n      '& + .Cmt-card-content': {\r\n        paddingTop: 24,\r\n      },\r\n    },\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  }),\r\n  headerAlignCenter: props => ({\r\n    paddingLeft: props.contentWidth + 12,\r\n    '& .Cmt-content-head': {\r\n      justifyContent: 'center',\r\n      '& .Cmt-header-content': {\r\n        flex: '0 0 auto',\r\n      },\r\n    },\r\n  }),\r\n  titleStyle: {\r\n    position: 'relative',\r\n  },\r\n  subTitleStyle: {\r\n    marginBottom: 0,\r\n    marginTop: 4,\r\n    fontSize: 12,\r\n    color: theme.palette.text.disabled,\r\n    letterSpacing: 0.4,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  '@keyframes showHide': {\r\n    '0%': {\r\n      animationTimingFunction: 'ease-in',\r\n      opacity: 0,\r\n      transform: 'scale(0)',\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      transform: 'scale(1)',\r\n    },\r\n  },\r\n  actionMenu: {\r\n    '& button': {\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n    },\r\n  },\r\n  actionMenuDefault: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 10,\r\n    '& .Cmt-action-menu-hover': {\r\n      top: '50%',\r\n    },\r\n  },\r\n  actionMenuAbsolute: {\r\n    position: 'relative',\r\n    paddingTop: 40,\r\n    '& .Cmt-action-menu': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      textAlign: 'center',\r\n      transition: 'all 0.25s ease',\r\n    },\r\n  },\r\n  actionMenuHover: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    transition: 'all 0.25s ease',\r\n  },\r\n  showActionMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -20%)',\r\n  },\r\n  hideActionMenu: {\r\n    transform: 'translate(100% , -100%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n  showActionDefaultMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -50%)',\r\n  },\r\n  hideActionDefaultMenu: {\r\n    transform: 'translate(100% , -50%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useImperativeHandle, useState, useEffect } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nimport useStyles from './CmtCardHeader.style';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst ActionsMenu = ({ actions, actionHandler, icon }) => {\r\n  return (\r\n    <CmtDropdownMenu\r\n      TriggerComponent={<IconButton size=\"small\">{icon || <MoreVertIcon />}</IconButton>}\r\n      items={actions}\r\n      onItemClick={actionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nconst CmtCardHeader = React.forwardRef(function CmtCardHeader(props, ref) {\r\n  const {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n    actions,\r\n    actionMenuClassName,\r\n    actionHandleIcon,\r\n    actionHandler,\r\n    actionsPos,\r\n    actionsShowOnHover,\r\n    backgroundColor,\r\n    gradientDirection,\r\n    separator,\r\n    alignCenter,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [showActions, setActionsVisibility] = useState(false);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const contentHeadProps = {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n  };\r\n\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator);\r\n\r\n  const classes = useStyles({ separatorStyles, contentWidth });\r\n\r\n  let showHideActionClass = showActions ? classes.showActionMenu : classes.hideActionMenu;\r\n  if (actionsPos === 'default') {\r\n    showHideActionClass = showActions ? classes.showActionDefaultMenu : classes.hideActionDefaultMenu;\r\n  }\r\n\r\n  const headerRootClasses = alignCenter\r\n    ? clsx(className, classes.headerRoot, classes.headerAlignCenter, separator.color ? 'Cmt-separator' : '')\r\n    : clsx(className, classes.headerRoot, separator.color ? 'Cmt-separator' : '');\r\n\r\n  const menuRootClasses = actionsShowOnHover\r\n    ? clsx(classes.actionMenu, classes.actionMenuHover, 'Cmt-action-menu-hover', showHideActionClass, actionMenuClassName)\r\n    : clsx(classes.actionMenu, 'Cmt-action-menu', actionMenuClassName);\r\n\r\n  const menuRootActionsClasses = actionsShowOnHover\r\n    ? actionsPos === 'default'\r\n      ? classes.actionMenuDefault\r\n      : ''\r\n    : classes.actionMenuDefault;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onHeaderMouseEntered: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(true);\r\n    },\r\n    onHeaderMouseLeft: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(false);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setContentWidth(contentRef.current ? contentRef.current.clientWidth : 0);\r\n  }, [actionsPos, actionsShowOnHover]);\r\n\r\n  return (\r\n    <div className={clsx(headerRootClasses, 'Cmt-header-root')} style={backgroundStyles} {...rest}>\r\n      {(icon || avatar || title || subTitle) && (\r\n        <CmtContentHead titleStyle={classes.titleStyle} subTitleStyle={classes.subTitleStyle} {...contentHeadProps} />\r\n      )}\r\n\r\n      {(actions.length > 0 || children) && (\r\n        <div ref={contentRef} className={clsx(menuRootActionsClasses, 'Cmt-action-default-menu')}>\r\n          {children}\r\n          {actions.length > 0 && (\r\n            <div style={{ marginLeft: '8px' }} className={menuRootClasses}>\r\n              <ActionsMenu actions={actions} actionHandler={actionHandler} icon={actionHandleIcon} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nCmtCardHeader.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actions: PropTypes.array,\r\n  actionMenuClassName: PropTypes.string,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionsPos: PropTypes.oneOf(['default', 'top-corner']),\r\n  actionsShowOnHover: PropTypes.bool,\r\n  actionHandler: PropTypes.func,\r\n  alignCenter: PropTypes.bool,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtCardHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  actions: [],\r\n  actionsPos: 'default',\r\n  actionsShowOnHover: false,\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n  alignCenter: false,\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n  className: '',\r\n};\r\n\r\nexport default CmtCardHeader;\r\n","import React, { useContext } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CircularProgress, makeStyles } from '@material-ui/core';\r\nimport SidebarThemeContext from '../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  listFooterLoaderRoot: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: 'center',\r\n    padding: 8,\r\n    borderTop: props => `1px solid ${props.sidebarTheme.borderColor}`,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst ListFooter = ({ loading, footerText }) => {\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  return loading ? (\r\n    <div className={classes.listFooterLoaderRoot}>\r\n      <CircularProgress size={16} />\r\n      <span className=\"ml-2\">Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nListFooter.prototype = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n\r\nexport default ListFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  return null;\r\n};\r\n\r\nconst ListView = ({ renderRow, onEndReached, data, ListFooterComponent, ListEmptyComponent, ...rest }) => {\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <Box {...rest}>\r\n      {data.length > 0 ? data.map((item, index) => renderRow(item, index)) : getEmptyContainer(ListEmptyComponent)}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n\r\nListView.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\n\r\nListView.defaultProps = {\r\n  data: [],\r\n  onEndReached: () => {},\r\n};\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListFooter from './ListFooter';\r\nimport ListView from './ListView';\r\n\r\nconst CmtList = ({ footerProps, ...props }) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={footerProps && <ListFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CmtList;\r\n\r\nCmtList.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\nCmtList.defaultProps = {\r\n  data: [],\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { IconButton, Popover, useTheme } from '@material-ui/core';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport LanguageItem from './LanguageItem';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags, languageData } from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 14,\r\n      paddingBottom: 14,\r\n    },\r\n  },\r\n  perfectScrollbarLanguage: {\r\n    height: 324,\r\n  },\r\n  menuItemRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 205,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageSwitcher = () => {\r\n  const classes = useStyles();\r\n  const { locale, setLocale } = useContext(AppContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'language' : undefined;\r\n\r\n  const switchLanguage = item => {\r\n    window.localStorage.setItem('language', item.languageId);\r\n    setLocale(item);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem('language') !== null) {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === window.localStorage.getItem('language')) {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === 'english') {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    }\r\n  }, [setLocale]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton size=\"small\" onClick={handleClick} data-tut=\"reactour__localization\">\r\n        <CmtImage src={flags[locale.locale]} />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Language\"\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <PerfectScrollbar className={classes.perfectScrollbarLanguage}>\r\n            <CmtList\r\n              data={languageData}\r\n              renderRow={(item, index) => <LanguageItem key={index} language={item} onClick={switchLanguage} />}\r\n            />\r\n          </PerfectScrollbar>\r\n        </CmtCard>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React from 'react';\r\nimport { CardContent, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: () => ({\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardContent = ({ children, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardContent className={clsx(classes.root, 'Cmt-card-content', className)} {...rest}>\r\n      {children}\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default CmtCardContent;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, makeStyles, withWidth } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridContainer: {\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  columnRow: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: `-${props.itemPadding / 2}px`,\r\n  }),\r\n  columnCount: props => ({\r\n    flexGrow: 0,\r\n    maxWidth: `${100 / props.displayColumn}%`,\r\n    flexBasis: `${100 / props.displayColumn}%`,\r\n    padding: `${props.itemPadding / 2}px`,\r\n    boxSizing: 'border-box',\r\n  }),\r\n}));\r\n\r\nconst getColumnCount = (responsive, width, column) => {\r\n  if (responsive) {\r\n    if (width === 'xs') {\r\n      return responsive.xs || column;\r\n    } else if (width === 'sm') {\r\n      return responsive.sm || responsive.xs || column;\r\n    } else if (width === 'md') {\r\n      return responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'lg') {\r\n      return responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'xl') {\r\n      return responsive.xl || responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    }\r\n  } else {\r\n    return column;\r\n  }\r\n};\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) {\r\n    return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) {\r\n    return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GridView = ({\r\n  width,\r\n  column,\r\n  responsive,\r\n  itemPadding,\r\n  renderRow,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  ...rest\r\n}) => {\r\n  const [displayColumn, setDisplayColumn] = useState(column);\r\n  const classes = useStyles({ displayColumn, itemPadding });\r\n\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisplayColumn(getColumnCount(responsive, width, column));\r\n  }, [width, column, responsive]);\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <div className={classes.gridContainer}>\r\n      <Box className={clsx(classes.columnRow, 'Cmt-column-row')} {...rest}>\r\n        {data.length > 0\r\n          ? data.map((item, index) => (\r\n              <div key={index} className={clsx(classes.columnCount, 'Cmt-column-count')}>\r\n                {renderRow(item, index)}\r\n              </div>\r\n            ))\r\n          : null}\r\n      </Box>\r\n      {data.length === 0 ? getEmptyContainer(ListEmptyComponent) : null}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(GridView);\r\nGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  responsive: PropTypes.object,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\nGridView.defaultProps = {\r\n  data: [],\r\n  itemPadding: 0,\r\n  column: 3,\r\n};\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  footerWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '8px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GridFooter = ({ loading, footerText }) => {\r\n  const classes = useStyles();\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.footerWrapper}>\r\n        <CircularProgress size={16} />\r\n        <span className=\"ml-2\">Loading...</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n        <p>{footerText}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nGridFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nGridFooter.defaultProps = {\r\n  loading: false,\r\n  footerText: '',\r\n};\r\n\r\nexport default GridFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GridView from './GridView';\r\nimport GridFooter from './GridFooter';\r\n\r\nconst CmtGridView = ({ column, itemPadding, ListEmptyComponent, data, onEndReached, renderRow, footerProps, ...rest }) => {\r\n  return (\r\n    <GridView\r\n      {...{\r\n        column,\r\n        itemPadding,\r\n        ListEmptyComponent,\r\n        data,\r\n        onEndReached,\r\n        renderRow,\r\n      }}\r\n      {...rest}\r\n      ListFooterComponent={footerProps && <GridFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nCmtGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\n\r\nCmtGridView.defaultProps = {\r\n  itemPadding: 0,\r\n  column: 3,\r\n  data: [],\r\n};\r\n\r\nexport default CmtGridView;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { amber, blue, brown, deepOrange, green, grey, purple, red, yellow } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n  primary: {\r\n    color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  secondary: {\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  amber: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: amber[500],\r\n  },\r\n  brown: {\r\n    color: '#ffffff',\r\n    backgroundColor: brown[500],\r\n  },\r\n  red: {\r\n    color: '#ffffff',\r\n    backgroundColor: red[500],\r\n  },\r\n  green: {\r\n    color: '#ffffff',\r\n    backgroundColor: green[500],\r\n  },\r\n  blue: {\r\n    color: '#ffffff',\r\n    backgroundColor: blue[500],\r\n  },\r\n  yellow: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: yellow[500],\r\n  },\r\n  grey: {\r\n    color: '#ffffff',\r\n    backgroundColor: grey[400],\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n  },\r\n  customSize: props => ({\r\n    height: props.size,\r\n    width: props.size,\r\n  }),\r\n  small: {\r\n    height: 40,\r\n    width: 40,\r\n  },\r\n  medium: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n  large: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { componentColors } from '../CmtHelpers/JssHelper';\r\nimport useStyles from './index.style';\r\n\r\nconst colorOptions = [...componentColors, 'random'];\r\n\r\nconst getRandomColor = () => {\r\n  return colorOptions[Math.floor(Math.random() * 11)];\r\n};\r\n\r\nconst CmtAvatar = React.forwardRef(({ src, alt, className, color, size, phCharLength, children, ...rest }, ref) => {\r\n  const classes = useStyles({ size: typeof size === 'number' ? size : 0 });\r\n  const colorClass = color === 'random' ? classes[getRandomColor()] : classes[color];\r\n  const sizeClass = typeof size === 'number' ? classes.customSize : classes[size];\r\n\r\n  const classNames = clsx(classes.root, colorClass, 'Cmt-avatar-size', sizeClass, className && className);\r\n\r\n  const placeHolderChar = alt && phCharLength > 0 ? alt.substr(0, phCharLength).toUpperCase() : null;\r\n\r\n  return (\r\n    <Avatar ref={ref} className={classNames} src={src} alt={alt} {...rest}>\r\n      {!src && !children && alt ? placeHolderChar : children}\r\n    </Avatar>\r\n  );\r\n});\r\n\r\nCmtAvatar.propTypes = {\r\n  color: PropTypes.oneOf(colorOptions),\r\n  phCharLength: PropTypes.number,\r\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n};\r\n\r\nCmtAvatar.defaultProps = {\r\n  color: 'grey',\r\n  phCharLength: 1,\r\n  size: 'medium',\r\n};\r\n\r\nexport default CmtAvatar;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CmtGridView from '../../../../../@coremat/CmtGridView';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst applications = [\r\n  {\r\n    name: 'Email',\r\n    icon: <EmailIcon style={{ color: '#0795F4' }} />,\r\n    bgColor: '#CDEAFD',\r\n    path: '/apps/mail',\r\n  },\r\n  {\r\n    name: 'Task',\r\n    icon: <CheckCircleIcon style={{ color: '#FF8C00' }} />,\r\n    bgColor: '#FFE8CC',\r\n    path: '/apps/to-do',\r\n  },\r\n  {\r\n    name: 'Contacts',\r\n    icon: <ContactMailIcon style={{ color: '#8DCD03' }} />,\r\n    bgColor: '#E8F5CD',\r\n    path: '/apps/contact',\r\n  },\r\n  {\r\n    name: 'Chating',\r\n    icon: <ChatIcon style={{ color: '#6200EE' }} />,\r\n    bgColor: '#E0CCFC',\r\n    path: '/apps/chat',\r\n  },\r\n];\r\n\r\nconst appItem = (item, index, onClick) => {\r\n  return (\r\n    <Box\r\n      key={index}\r\n      py={2}\r\n      className=\"pointer\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      onClick={() => onClick(item.path)}>\r\n      <CmtAvatar style={{ backgroundColor: item.bgColor }} size={62}>\r\n        {item.icon}\r\n      </CmtAvatar>\r\n      <Box mt={5} fontSize={16} fontWeight=\"bold\" color=\"#666666\">\r\n        {item.name}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst AppsMenu = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const onClickApp = path => {\r\n    history.push(path);\r\n    onClosePopOver();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Applications\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <AppsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Applications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {applications.length > 0 ? (\r\n              <CmtGridView\r\n                itemPadding={24}\r\n                column={2}\r\n                data={applications}\r\n                renderRow={(item, index) => appItem(item, index, onClickApp)}\r\n              />\r\n            ) : (\r\n              <Typography variant=\"body2\">No applications found</Typography>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mediaObject: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n  },\r\n  mediaImageTop: {\r\n    alignSelf: 'flex-start',\r\n    marginTop: 12,\r\n  },\r\n  mediaImageCenter: {\r\n    alignSelf: 'center',\r\n  },\r\n  mediaImageBottom: {\r\n    marginBottom: 12,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rootAvatar: {\r\n    height: 60,\r\n    width: 60,\r\n  },\r\n  mediaBody: {\r\n    flex: '1 1 0%',\r\n  },\r\n  mediaHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  mediaHeaderContent: {\r\n    flex: 1,\r\n  },\r\n  mediaActions: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  mediaFooter: {\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../CmtTypography';\r\nimport useStyles from './index.style';\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst CmtMediaObject = ({\r\n  avatar,\r\n  avatarPos,\r\n  avatarProps,\r\n  onBodyClick,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  actionsComponent,\r\n  content,\r\n  contentProps,\r\n  footerComponent,\r\n  footerComponentProps,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.mediaObject, className, 'Cmt-media-object')} {...rest}>\r\n      {avatar && (\r\n        <div\r\n          className={clsx(\r\n            {\r\n              [classes.mediaImageTop]: avatarPos === 'top',\r\n              [classes.mediaImageCenter]: avatarPos === 'center',\r\n              [classes.mediaImageBottom]: avatarPos === 'bottom',\r\n            },\r\n            'Cmt-media-image',\r\n          )}>\r\n          <Box mr={3} clone>\r\n            {isValidElement(avatar) ? (\r\n              avatar\r\n            ) : (\r\n              <CmtAvatar className={clsx(classes.rootAvatar, 'Cmt-avatar')} src={avatar} {...avatarProps} />\r\n            )}\r\n          </Box>\r\n        </div>\r\n      )}\r\n      <div className={clsx(classes.mediaBody, 'Cmt-media-body')} onClick={onBodyClick}>\r\n        <div className={clsx(classes.mediaHeader, 'Cmt-media-header')}>\r\n          <div className={clsx(classes.mediaHeaderContent, 'Cmt-media-header-content')}>\r\n            {title && <CmtTitle content={title} {...titleProps} />}\r\n            {subTitle && <CmtSubTitle content={subTitle} {...subTitleProps} />}\r\n          </div>\r\n          {actionsComponent && (\r\n            <div className={clsx(classes.mediaActions, 'Cmt-media-actions', 'ml-3')}>{actionsComponent}</div>\r\n          )}\r\n        </div>\r\n        {content && (\r\n          <div className=\"mb-3\">\r\n            {typeof content === 'string' ? <Typography {...contentProps}>{content}</Typography> : content}\r\n          </div>\r\n        )}\r\n        {children}\r\n      </div>\r\n      {footerComponent && (\r\n        <Box ml={3} className={clsx(classes.mediaFooter, 'Cmt-media-footer')} {...footerComponentProps}>\r\n          {footerComponent}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtMediaObject.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarPos: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n  avatarProps: PropTypes.object,\r\n  onBodyClick: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actionsComponent: PropTypes.element,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  contentProps: PropTypes.object,\r\n  footerComponent: PropTypes.element,\r\n  footerComponentProps: PropTypes.object,\r\n  className: PropTypes.func,\r\n};\r\n\r\nCmtMediaObject.defaultProps = {\r\n  avatar: '',\r\n  avatarPos: 'top',\r\n  title: '',\r\n  titleProps: {\r\n    variant: 'h3',\r\n    component: 'div',\r\n  },\r\n  subTitle: '',\r\n  subTitleProps: {\r\n    component: 'span',\r\n  },\r\n  content: '',\r\n  contentProps: {\r\n    component: 'div',\r\n    variant: 'body2',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtMediaObject);\r\n","import moment from 'moment';\r\n\r\nexport const getTodayDate = (format = 'DD.MM.YYYY') => {\r\n  return moment().format(format);\r\n};\r\n\r\nexport const getYesterdayDate = () => {\r\n  return moment()\r\n    .subtract(1, 'day')\r\n    .format('DD.MM.YYYY');\r\n};\r\n\r\nexport const getTotalSec = talkTime => {\r\n  let hours = talkTime.slice(0, 2);\r\n  let minutes = talkTime.slice(4, 6);\r\n  let seconds = talkTime.slice(8, 10);\r\n  let totalSec = parseInt(seconds) + parseInt(minutes) * 60 + parseInt(hours) * 3600;\r\n  return totalSec;\r\n};\r\n\r\nexport const timeFromNow = date => {\r\n  const timestamp = moment(date).format('X');\r\n  const newDate = moment.unix(timestamp);\r\n  return moment(newDate).fromNow();\r\n};\r\n\r\nexport const isToday = date => {\r\n  return moment().isSame(date, 'day');\r\n};\r\n\r\nexport const getNewDate = date_ => {\r\n  var date = new Date(date_);\r\n  var year = date.getFullYear();\r\n  var month = date.getMonth() + 1;\r\n  var dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return dt + '-' + month + '-' + year;\r\n};\r\n\r\nexport const getDateElements = date => {\r\n  const dateString = moment(date).format('dddd, MMMM DD YYYY, hh:mm A');\r\n  const dateSections = dateString.split(',');\r\n  const day = dateSections[0];\r\n  const time = dateSections[2];\r\n  const datePart = dateSections[1].trim().split(' ');\r\n  return {\r\n    day,\r\n    time,\r\n    date: {\r\n      dateString: dateSections[1],\r\n      month: datePart[0],\r\n      date: datePart[1],\r\n      year: datePart[2],\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTime = date => {\r\n  const dateObj = moment(date, 'dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(dateObj).format('LT');\r\n};\r\n\r\nexport const isDatesSame = (dateA, dateB) => {\r\n  return moment(dateA).isSame(dateB, 'day');\r\n};\r\n\r\nexport const isDateAfter = date => {\r\n  const todayDate = getTodayDate('dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(todayDate).isAfter(date);\r\n};\r\n\r\nexport const getDateinDesiredFormat = (date, format) => {\r\n  return moment(date).format(format);\r\n};\r\n\r\nexport const makeJSDateObject = date => {\r\n  if (date) {\r\n    return new Date(date.getTime());\r\n  }\r\n  return date;\r\n};\r\n\r\nexport const getFormattedDate = (date, format = 'YYYY-MM-DD') => {\r\n  if (moment(date, 'YYYY-MM-DD').isValid()) {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nexport const isTomorrow = inputDateTime => {\r\n  const tomorrow = moment()\r\n    .add(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(tomorrow, 'day');\r\n};\r\n\r\nexport const isYesterday = inputDateTime => {\r\n  const yesterday = moment()\r\n    .subtract(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(yesterday, 'day');\r\n};\r\n\r\nexport const getCustomDateTime = (value = 0, unit = 'days', format = 'YYYY-MM-DD') => {\r\n  if (value === 0) {\r\n    return moment().format(format);\r\n  } else {\r\n    return moment()\r\n      .add(value, unit)\r\n      .format(format);\r\n  }\r\n};\r\n\r\nexport const getCustomDateObject = (value = 0, unit = 'days') => {\r\n  if (value === 0) {\r\n    return moment();\r\n  } else {\r\n    return moment().add(value, unit);\r\n  }\r\n};\r\n\r\nexport const getDateText = date => {\r\n  if (isToday(date)) {\r\n    return 'Today';\r\n  } else if (isYesterday(date)) {\r\n    return 'Yesterday';\r\n  } else if (isTomorrow(date)) {\r\n    return 'Tomorrow';\r\n  } else {\r\n    return date;\r\n  }\r\n};\r\n\r\nexport const getTimeDiffString = (date, format = 'DD MMM, YYYY', suffix = '') => {\r\n  const postDate = moment(date, 'ddd MMM DD YYYY kk:mm:ss Z');\r\n  const currentDate = moment();\r\n  const duration = moment.duration(currentDate.diff(postDate));\r\n  const minutes = duration.asMinutes() | 0;\r\n  const hours = duration.asHours() | 0;\r\n\r\n  switch (true) {\r\n    case minutes === 0:\r\n      return 'Just now';\r\n    case minutes < 60:\r\n      return `${minutes} min ${suffix}`;\r\n    case hours < 24:\r\n      return `${hours} hours ${suffix}`;\r\n    default:\r\n      return postDate.format(format);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { fade } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    marginBottom: 6,\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst icons = {\r\n  POSTING: <MessageIcon style={{ color: '#836AFF' }} />,\r\n  SHARED_POST: <ShareIcon style={{ color: '#0795F4' }} />,\r\n  INVITATION: <EmailIcon style={{ color: '#00C4B4' }} />,\r\n  BIRTHDAY: <CakeIcon style={{ color: '#EF933C' }} />,\r\n};\r\n\r\nconst getPostContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has recently posted an\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      {item.metaData.post.type}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getSharedContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has shared\r\n    </Box>\r\n    <Box component=\"span\" ml={1} color=\"primary.main\">\r\n      {`${item.metaData.post.owner.name}'s`}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      post.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getBirthdayContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has birthday today.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getInvitationContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.metaData.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has sent you a group invitation for\r\n    </Box>\r\n    <Box component=\"span\" color=\"blue\" ml={1}>\r\n      {item.metaData.group.name}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst NotificationItem = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const getTitle = (item, classes) => {\r\n    switch (item.type) {\r\n      case 'POSTING':\r\n        return getPostContent(item, classes);\r\n      case 'SHARED_POST':\r\n        return getSharedContent(item, classes);\r\n      case 'INVITATION':\r\n        return getInvitationContent(item, classes);\r\n      case 'BIRTHDAY':\r\n        return getBirthdayContent(item, classes);\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getSubTitle = () => (\r\n    <Box display=\"flex\" alignItems=\"center\" fontSize={12} color=\"text.disabled\">\r\n      <Box fontSize={16} clone>\r\n        {icons[item.type]}\r\n      </Box>\r\n      <Box ml={2}>{getDateElements(item.date).time}</Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={getTitle(item, classes)}\r\n        subTitle={getSubTitle()}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, makeStyles, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\n\r\nimport NotificationItem from './NotificationItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &.active': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst headerNotifications = [];\r\n\r\nconst HeaderNotifications = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCounter(0);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Box pr={2}>\r\n      <Tooltip title=\"Notifications\">\r\n        <IconButton\r\n          onClick={onOpenPopOver}\r\n          className={clsx(classes.iconRoot, 'Cmt-appIcon', {\r\n            active: counter > 0,\r\n          })}>\r\n          <Badge badgeContent={counter} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Notifications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {headerNotifications.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList\r\n                  data={headerNotifications}\r\n                  renderRow={(item, index) => <NotificationItem key={index} item={item} />}\r\n                />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No notifications found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderNotifications;\r\n","import React from 'react';\r\nimport { Box, fade } from '@material-ui/core';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-header-content': {\r\n      width: 'calc(100% - 75px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-actions': {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    fontSize: 14,\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer',\r\n  },\r\n  subTitleRoot: {\r\n    letterSpacing: 0.4,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst MessageItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={item.user.name}\r\n        titleProps={{ className: classes.titleRoot }}\r\n        subTitle={item.message}\r\n        subTitleProps={{ className: classes.subTitleRoot }}\r\n        actionsComponent={\r\n          <Box fontSize={12} color=\"text.disabled\">\r\n            {getDateElements(item.date).time}\r\n          </Box>\r\n        }>\r\n        <Box display=\"flex\" alignItems=\"center\" mt={2} fontSize={12} color=\"text.secondary\">\r\n          <Box display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <ReplyIcon />\r\n            </Box>\r\n            <Box ml={2}>Reply</Box>\r\n          </Box>\r\n          <Box ml={4} display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <CheckCircleOutlineIcon />\r\n            </Box>\r\n            <Box ml={2}>Read</Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtMediaObject>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport MessageItem from './MessageItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst messages = [];\r\nconst HeaderMessages = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Messages\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Messages\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {messages.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList data={messages} renderRow={(item, index) => <MessageItem key={index} item={item} />} />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No messages found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderMessages;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst Logo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n  const logoSymbolUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <Hidden xsDown>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoSymbolUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: props => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    marginLeft: props.align === 'right' ? 'auto' : 0,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }),\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&.right': {\r\n      left: 'auto',\r\n      right: 0,\r\n      '& + $inputRoot $inputInput': {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(2, 2, 2, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: 162,\r\n    height: 35,\r\n    borderRadius: 4,\r\n    boxSizing: 'border-box',\r\n    '&:focus': {\r\n      backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n      width: 235,\r\n    },\r\n  },\r\n  searchIconBox: {\r\n    position: 'relative',\r\n    '& $inputInput': {\r\n      width: 35,\r\n      borderRadius: 4,\r\n      paddingLeft: 27,\r\n      '&:focus': {\r\n        width: 150,\r\n        borderRadius: 4,\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 235,\r\n        },\r\n      },\r\n    },\r\n    '& $searchIcon': {\r\n      paddingLeft: 6,\r\n      paddingRight: 6,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useStyles from './index.style';\r\n\r\nconst CmtSearch = ({\r\n  border,\r\n  placeholder,\r\n  iconPosition,\r\n  align,\r\n  onlyIcon,\r\n  containerStyle,\r\n  inputStyle,\r\n  iconStyle,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ align });\r\n  const inputBaseStyle = {\r\n    border: border ? '1px solid' : '0 none',\r\n    ...inputStyle,\r\n  };\r\n  const inputBaseClasses = {\r\n    root: clsx(classes.inputRoot, 'CmtSearch-input-root'),\r\n    input: clsx(classes.inputInput, 'CmtSearch-input'),\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'CmtSearch-root', className)} style={containerStyle}>\r\n      <div className={clsx(classes.search, onlyIcon ? classes.searchIconBox : null)}>\r\n        <div\r\n          className={clsx(classes.searchIcon, 'CmtSearch-icon-wrapper', {\r\n            right: iconPosition === 'right',\r\n          })}\r\n          style={iconStyle}>\r\n          <SearchIcon style={iconStyle} />\r\n        </div>\r\n        <InputBase\r\n          placeholder={placeholder || 'Search…'}\r\n          style={inputBaseStyle}\r\n          classes={inputBaseClasses}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmtSearch;\r\n\r\nCmtSearch.prototype = {\r\n  border: PropTypes.bool,\r\n  iconPosition: PropTypes.string,\r\n  align: PropTypes.string,\r\n  onlyIcon: PropTypes.bool,\r\n  containerStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  iconStyle: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtSearch.defaultProps = {\r\n  border: true,\r\n  containerStyle: {},\r\n  inputStyle: {\r\n    backgroundColor: 'transparent',\r\n    borderColor: 'grey',\r\n    color: 'grey',\r\n    borderRadius: 4,\r\n  },\r\n  iconPosition: 'left',\r\n  onlyIcon: false,\r\n  align: 'left',\r\n  iconStyle: {\r\n    color: 'grey',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Popover } from '@material-ui/core';\r\nimport CmtSearch from '../../../../@coremat/CmtSearch';\r\n\r\nconst SearchPopover = ({ iconClassName, popoverClassName }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenSearchBar = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSearchBar = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={iconClassName} onClick={handleOpenSearchBar}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Popover\r\n        className={popoverClassName}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleCloseSearchBar}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtSearch />\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPopover;\r\n","import React from 'react';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Box, InputBase } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport LanguageSwitcher from '../LanguageSwitcher';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppsMenu from './AppsMenu';\r\nimport HeaderNotifications from './HeaderNotifications';\r\nimport HeaderMessages from './HeaderMessages';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Logo from '../Logo';\r\nimport SearchPopover from '../SearchPopover';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      minHeight: 72,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 30,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n      color: alpha(theme.palette.common.white, 0.7),\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.58),\r\n        color: alpha(theme.palette.common.white, 0.7),\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    borderLeft: `solid 1px ${alpha(theme.palette.common.dark, 0.15)}`,\r\n    minHeight: 72,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minHeight: 64,\r\n    },\r\n  },\r\n  iconBtn: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo ml={2} color=\"white\" />\r\n      <Box flex={1} />\r\n      <Hidden smDown>\r\n        <Box pr={3} className={classes.searchRoot}>\r\n          <InputBase placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n          <SearchIcon />\r\n        </Box>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <SearchPopover iconClassName={classes.iconBtn} />\r\n      </Hidden>\r\n      <AppsMenu />\r\n      <HeaderMessages />\r\n      <HeaderNotifications />\r\n      <Box className={classes.langRoot}>\r\n        <LanguageSwitcher />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    zIndex: 1103,\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '.Cmt-miniLayout &': {\r\n      width: props => props.miniSidebarWidth,\r\n      '&:hover': {\r\n        width: props => props.sidebarWidth,\r\n      },\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  actionSidebarWrapper: {\r\n    display: 'flex',\r\n    width: props => props.sidebarWidth + props.actionSidebarWidth,\r\n    transition: 'all 0.3s ease',\r\n\r\n    '& .actionSidebar': {\r\n      width: props => props.actionSidebarWidth,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Drawer, makeStyles } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  drawerContent: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtDrawer = ({ backgroundColor, backgroundImage, gradientDirection, children, overlay, ...rest }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer {...rest}>\r\n      <div className={clsx(classes.drawerContainer, 'Cmt-Drawer-container')} style={backgroundStyles}>\r\n        <div className={clsx(classes.drawerContent, 'Cmt-Drawer-content')}>{children}</div>\r\n        {overlay.colors && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyles} />}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nCmtDrawer.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtDrawer.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default React.memo(CmtDrawer);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport useStyles from './Sidebar.style';\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst CmtSidebarContent = ({ children, classes }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtDrawerContent = ({ children, classes }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n  return (\r\n    <CmtDrawer\r\n      variant=\"temporary\"\r\n      open={isSidebarOpen}\r\n      onClose={() => setSidebarOpen(false)}\r\n      classes={{\r\n        paper: 'Cmt-drawer-sidebar',\r\n      }}>\r\n      <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = ({ children, actionBar }) => {\r\n  const { drawerBreakPoint, sidebarWidth, miniSidebarWidth, actionSidebarWidth, sidebarType } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const hasDrawer = sidebarType === 'drawer' || matches;\r\n\r\n  const classes = useStyles({\r\n    sidebarWidth,\r\n    miniSidebarWidth,\r\n    actionSidebarWidth,\r\n    sidebarTheme,\r\n  });\r\n\r\n  if (hasDrawer) {\r\n    return (\r\n      <React.Fragment>\r\n        {actionBar}\r\n        <CmtDrawerContent classes={classes}>{children}</CmtDrawerContent>\r\n      </React.Fragment>\r\n    );\r\n  } else if (actionBar) {\r\n    return (\r\n      <div className={clsx(classes.actionSidebarWrapper, 'Cmt-actionSidebarWrapper')}>\r\n        {actionBar}\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useContext } from 'react';\r\nimport { MenuItem, MenuList, Paper, Popover, Typography } from '@material-ui/core';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarThemeContext from '../../../../@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '25px 24px 24px 24px',\r\n    borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n  },\r\n  userInfo: {\r\n    paddingTop: 56,\r\n    transition: 'all 0.1s ease',\r\n    height: 75,\r\n    opacity: 1,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      height: 0,\r\n      paddingTop: 0,\r\n      opacity: 0,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n  },\r\n  userTitle: {\r\n    color: props => props.sidebarTheme.textDarkColor,\r\n    marginBottom: 8,\r\n  },\r\n  userSubTitle: {\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst SidebarHeader = () => {\r\n  let history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n  const dispatch = useDispatch();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const onLogoutClick = () => {\r\n    handlePopoverClose();\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    history.push('/signin');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ paddingTop: '50px' }}>\r\n      <CmtAvatar src={'https://via.placeholder.com/150'} alt=\"User Avatar\" />\r\n      <div className={classes.userInfo} onClick={handlePopoverOpen}>\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-end',\r\n          }}>\r\n          <div className=\"mr-2\">\r\n            <Typography className={classes.userTitle} component=\"h3\" variant=\"h6\">\r\n              Robert Johnson\r\n            </Typography>\r\n            <Typography className={classes.userSubTitle}>robert.johnson@gmail.com</Typography>\r\n          </div>\r\n          <ArrowDropDownIcon />\r\n        </div>\r\n      </div>\r\n\r\n      {open && (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          container={anchorEl}\r\n          onClose={handlePopoverClose}\r\n          anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}>\r\n          <Paper elevation={8}>\r\n            <MenuList>\r\n              <MenuItem onClick={handlePopoverClose}>\r\n                <PersonIcon />\r\n                <div className=\"ml-2\">Profile</div>\r\n              </MenuItem>\r\n              <MenuItem onClick={onLogoutClick}>\r\n                <ExitToAppIcon />\r\n                <div className=\"ml-2\">Logout</div>\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Paper>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import React, { cloneElement, isValidElement, useContext } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuItem: {\r\n    padding: '0 16px 0 0',\r\n    position: 'relative',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: props => props.sidebarTheme.textColor,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: props => props.sidebarTheme.textActiveColor,\r\n      backgroundColor: props => props.sidebarTheme.navActiveBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-nav-text, & .Cmt-icon-root': {\r\n          color: props => props.sidebarTheme.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      justifyContent: 'center',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: '50%',\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link } = props;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" className={clsx(classes.navMenuItem, 'Cmt-nav-menu-item')}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {renderIcon()}\r\n        <span className={clsx(classes.navText, 'Cmt-nav-text')}>{name}</span>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import React, { cloneElement, isValidElement, useEffect, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { Collapse, List, ListItem } from '@material-ui/core';\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess';\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavSection from './NavSection';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '0 16px 0 0',\r\n    '& .MuiTouchRipple-root': {\r\n      display: 'none',\r\n    },\r\n    '&:hover, &:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n    '&.open': {\r\n      '& .Cmt-navCollapseBtn': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n      '& .Cmt-iconRoot': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    '& .Cmt-navHeader': {\r\n      paddingLeft: 36,\r\n    },\r\n  },\r\n\r\n  navCollapseBtnInner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-iconRoot': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      paddingRight: 13,\r\n      paddingLeft: 13,\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      paddingRight: 16,\r\n      paddingLeft: 32,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    whiteSpace: 'nowrap',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navArrow: {\r\n    position: 'absolute',\r\n    left: 8,\r\n    top: '50%',\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    fontSize: 16,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'relative',\r\n    '& .Cmt-icon-root': {\r\n      transition: 'all 0.3s ease',\r\n      transform: 'translateX(-100%)',\r\n      opacity: 0,\r\n      visibility: 'hidden',\r\n      marginRight: 0,\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      transition: 'all 0.35s ease',\r\n      marginLeft: -20,\r\n    },\r\n    '& .Cmt-nav-menu-link': {\r\n      padding: '9px 16px 9px 70px',\r\n      transition: 'all 0.3s ease',\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '&.active': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '.Cmt-miniLayout &': {\r\n        paddingRight: 13,\r\n        paddingLeft: 13,\r\n      },\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n        paddingRight: 16,\r\n        paddingLeft: 70,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const { name, icon, children = [] } = props;\r\n  const isExpandable = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const renderIcon = useCallback(() => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: classes.iconRoot,\r\n      });\r\n    }\r\n    return null;\r\n  }, [icon, classes]);\r\n\r\n  const MenuCollapse = (\r\n    <ListItem className={clsx(classes.navCollapseBtn, 'Cmt-navCollapseBtn')} button onClick={handleClick}>\r\n      <span className={classes.navCollapseBtnInner}>\r\n        {isExpandable && !open && <IconExpandMore className={classes.navArrow} />}\r\n        {isExpandable && open && <IconExpandLess className={classes.navArrow} />}\r\n        {renderIcon()}\r\n        <span className={classes.navText}>{name}</span>\r\n      </span>\r\n    </ListItem>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <Collapse className={classes.navCollapseItem} in={open} timeout=\"auto\">\r\n      <List component=\"div\" disablePadding>\r\n        {children.map((item, index) => {\r\n          switch (item.type) {\r\n            case 'section':\r\n              return <NavSection {...item} key={index} />;\r\n            case 'collapse':\r\n              return <NavCollapse {...item} key={index} />;\r\n            case 'item':\r\n              return <NavMenuItem {...item} key={index} />;\r\n            default:\r\n              return null;\r\n          }\r\n        })}\r\n      </List>\r\n    </Collapse>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={clsx(classes.navCollapse, `${open ? 'open' : ''}`)}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import React, { useContext } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navHeader: {\r\n    position: 'relative',\r\n    padding: '24px 16px 20px 16px',\r\n    textTransform: 'uppercase',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navSection: {\r\n    position: 'relative',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:not(:first-child) .Cmt-navHeader': {\r\n      borderTop: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n      marginTop: 10,\r\n    },\r\n    '&:not(:last-child)': {\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n        borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavSection = props => {\r\n  const { name, children = [] } = props;\r\n  const isExpandable = children && children.length > 0;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const MenuCollapse = (\r\n    <List component=\"div\" className={clsx(classes.navHeader, 'Cmt-navHeader')}>\r\n      {name}\r\n    </List>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          default:\r\n            return <NavMenuItem {...item} key={index} />;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={classes.navSection}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSection;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavSection from './NavSection';\r\nimport NavCollapse from './NavCollapse';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sideNavMenu: {\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst CmtVertical = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={classes.sideNavMenu}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtVertical;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Dashboard, Phone, ArrowForward, Assignment, Receipt } from '@material-ui/icons';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { Badge } from '@material-ui/core';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nexport const sidebarNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n      {\r\n        name: <IntlMessages id={'wallboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/wallboard',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: <IntlMessages id={'reports'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'reports.callcenter'} />,\r\n        type: 'collapse',\r\n        icon: <Phone />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'agent.status'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentstatus',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'main.reports'} />,\r\n        type: 'collapse',\r\n        icon: <Assignment />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'calllog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callLog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'calllistening'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calllistening',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'callmanagement'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callmanagement',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'calltransferreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltransferreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'internalssummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/internalssummary',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'did.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/didreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailysummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailysummaryreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'queue.answer.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/queueanswerreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abandoned.queues'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abandoned-queues',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'droppedcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/droppedcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abondenedcalls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abondenedcalls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'callterminationreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltermination',\r\n          },\r\n          // {\r\n          //   name: <IntlMessages id={'returneddropcall'} />,\r\n          //   type: 'item',\r\n          //   icon: <ArrowForward />,\r\n          //   link: '/reports/returned-dropcall',\r\n          // },\r\n          {\r\n            name: <IntlMessages id={'repetetive.calls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/repetetive-calls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'agent.session.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentcdr',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'service.level'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/servicelevel',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailylog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailyacc'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailyacc',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'call.comparison'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callcomparison',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthly.log'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthlydetails'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlyDetails',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'survey.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/quality-report',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'settings'} />,\r\n        type: 'collapse',\r\n        icon: <SettingsIcon />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'edit.breaks'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/editbreaks',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'usersettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/usersettings',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'departmentsettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/departmentsettings',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'IYS',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                <IntlMessages id={'Called.Numbers'} />\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/iys/called-number',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: `V${process.env.REACT_APP_VERSION}`,\r\n        type: 'section',\r\n      },\r\n      {\r\n        name: 'Teams',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                Microsoft Teams Users\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/teams/users',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const horizontalDefaultNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const minimalHorizontalMenus = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'pages.samplePage'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVertical from '../../../../../@coremat/CmtNavigation/Vertical';\r\nimport { sidebarNavs } from '../menus';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  perfectScrollbarSidebar: {\r\n    height: '100%',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &, .Cmt-Drawer-container &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      height: 'calc(100% - 72px)',\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      height: 'calc(100% - 91px)',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.perfectScrollbarSidebar}>\r\n      <CmtVertical menuItems={sidebarNavs} />\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '30px 15px',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appMainContent, 'Cmt-appMainContent')} bgcolor=\"background.main\">\r\n      {children}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999999,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst PageLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.circularProgressRoot}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { Slide, Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageLoader from '../PageComponents/PageLoader';\r\nimport { fetchError } from '../../../redux/actions';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst ContentLoader = () => {\r\n  const { error, loading, message } = useSelector(({ common }) => common);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(fetchError(''));\r\n    }, 3000);\r\n  }, [dispatch, error, message]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <PageLoader />}\r\n      {\r\n        <Snackbar\r\n          open={Boolean(error)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n      {\r\n        <Snackbar\r\n          open={Boolean(message)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentLoader;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 30px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function LayoutFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')}>\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\n\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst FooterLogo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo-white-symbol.png' : '/images/footer-logo.png';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <NavLink to=\"/\">\r\n        <CmtImage src={logoUrl} alt=\"logo\" />\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterLogo;\r\n","import React, { useContext } from 'react';\r\nimport FooterLogo from './FooterLogo';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppContext from '../../contextProvider/AppContextProvider/AppContext';\r\nimport { THEME_TYPES } from '../../../constants/ThemeOptions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  btnRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '6px 12px',\r\n      fontSize: 11,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = props => {\r\n  const classes = useStyles();\r\n  const { themeType } = useContext(AppContext);\r\n  const date = new Date();\r\n\r\n  return (\r\n    <Box className={classes.root} {...props}>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Hidden xsDown>\r\n          <FooterLogo mr={5} color={themeType === THEME_TYPES.DARK ? 'white' : ''} />\r\n        </Hidden>\r\n        <Box fontSize={{ xs: 12, sm: 14 }} component=\"p\" color=\"text.disabled\">\r\n          Copyright Company Name © {date.getFullYear()}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport Header from '../../partials/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  showTourOpt: true,\r\n  showFooterOpt: true,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n  drawerBreakPoint: defaultContext.drawerBreakPoint,\r\n  sidebarWidth: defaultContext.sidebarWidth,\r\n};\r\n\r\nconst VerticalDefault = ({ children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      className=\"verticalDefaultLayout\"\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter>\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalDefault;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport Header from '../../partials/Header';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport { SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst VerticalMinimal = ({ className, children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalMinimal;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { darken, makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '32px 10px 5px',\r\n    width: '100%',\r\n    '& .MuiAlert-root': {\r\n      padding: '0 20px 0 0',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      '& .MuiAlert-icon': {\r\n        padding: '16px 12px',\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Alerts = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          variant=\"filled\"\r\n          iconMapping={{ success: <CachedIcon fontSize=\"inherit\" /> }}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}>\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }>\r\n          A new version has been arrived, Click here to update jumbo 5.0\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { Hidden } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\n\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport Alerts from './Alerts';\r\nimport { HEADER_TYPE, SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  minimalNoHeader: {\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '& .Cmt-toggle-menu': {\r\n      color: theme.palette.text.primary,\r\n      marginLeft: 15,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  headerType: HEADER_TYPE.STATIC,\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst MinimalNoHeader = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalNoHeaderLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.minimalNoHeader}>\r\n          <Hidden lgUp>\r\n            <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n          </Hidden>\r\n          <Alerts />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        <LanguageSwitcher />\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default MinimalNoHeader;\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtDrawer from '../../../../../../@coremat/CmtDrawer';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  actionSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '24px 5px',\r\n    width: 65,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  contentArea: {\r\n    width: 300,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 557,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: '100vh',\r\n    padding: 30,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.dark, 0.38),\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst ActionBarDrawer = ({ activeOption, onIconClick, onDrawerClose, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtDrawer variant=\"temporary\" anchor=\"left\" onClose={onDrawerClose} {...rest}>\r\n      <Box className={clsx(classes.root)}>\r\n        <Box className={classes.actionSidebar}>\r\n          <IconButton className={classes.iconBtn} onClick={onDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box className={classes.contentArea}>\r\n          <PerfectScrollbar className={classes.scrollbarRoot}> </PerfectScrollbar>\r\n        </Box>\r\n      </Box>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nexport default ActionBarDrawer;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Hidden, IconButton, withWidth } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtDropdownMenu from '../../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport LayoutContext from '../../../../../../@coremat/CmtLayouts/LayoutContext';\r\n\r\nimport { AuhMethods } from '../../../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../../../constants/AppConstants';\r\nimport Logo from '../../../partials/Logo';\r\nimport ActionBarDrawer from './ActionBarDrawer';\r\nimport { useHistory } from 'react-router';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '10px 24px 10px 15px',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'column',\r\n      padding: '16px 5px',\r\n    },\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.9),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: <IntlMessages id={'account'} />,\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: <IntlMessages id={'logout'} />,\r\n  },\r\n];\r\n\r\nlet initSidebarWidth = 0;\r\nconst ActionSideBar = ({ width }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [isDrawerOpen, setDrawerStatus] = useState(false);\r\n  const [activeOption, setActiveOption] = useState(null);\r\n  const { isSidebarOpen, setSidebarOpen, sidebarWidth, setSidebarWidth } = useContext(LayoutContext);\r\n\r\n  useEffect(() => {\r\n    initSidebarWidth = sidebarWidth;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSidebarOpen && (width === 'lg' || width === 'xl')) {\r\n      setSidebarWidth(0);\r\n    } else {\r\n      setSidebarWidth(initSidebarWidth);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSidebarOpen, width]);\r\n\r\n  useEffect(() => {\r\n    if (activeOption && !isDrawerOpen) {\r\n      setDrawerStatus(true);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeOption]);\r\n\r\n  const onItemClick = item => {\r\n    if (item.label.props.id === 'logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n    if(item.label.props.id === 'account'){\r\n      history.push('/account');\r\n    }\r\n  };\r\n\r\n  const onIconClick = option => {\r\n    setActiveOption(option);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    setDrawerStatus(false);\r\n    setActiveOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'actionSidebar')}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <SidebarToggleHandler className={classes.iconBtn}>\r\n          {isSidebarOpen && (width === 'lg' || width === 'xl') && <CloseIcon />}\r\n        </SidebarToggleHandler>\r\n        <Hidden lgUp>\r\n          <Logo color=\"white\" ml={{ xs: 3, sm: 6 }} />\r\n        </Hidden>\r\n      </div>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} ml={{ xs: 'auto', lg: 'unset' }}>\r\n        <Box className={classes.iconBtn}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        {isSidebarOpen && (width === 'lg' || width === 'xl') && (\r\n          <IconButton className={classes.iconBtn} onClick={() => setSidebarOpen(!isSidebarOpen)}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} mt={{ xs: 'unset', lg: 'auto' }}>\r\n        <CmtDropdownMenu\r\n          onItemClick={onItemClick}\r\n          TriggerComponent={<CmtAvatar src={'https://via.placeholder.com/150'} />}\r\n          items={actionsList}\r\n        />\r\n      </Box>\r\n\r\n      <ActionBarDrawer\r\n        activeOption={activeOption}\r\n        open={isDrawerOpen}\r\n        onDrawerClose={onDrawerClose}\r\n        onIconClick={onIconClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(ActionSideBar);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport ActionSideBar from './ActionSideBar';\r\nimport Logo from '../../partials/Logo';\r\nimport { THEME_TYPES } from '../../../../constants/ThemeOptions';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sidebarHeader: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: '60px',\r\n      marginBottom: '35px',\r\n      padding: '10px 20px 20px 20px',\r\n      height: 60,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  actionSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst ModernSideBar = ({ children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  const { themeType } = useContext(AppContext);\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      className={clsx('Cmt-modernLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      sidebar={\r\n        <CmtSidebar actionBar={<ActionSideBar />}>\r\n          <Hidden mdDown>\r\n            <Logo color={themeType !== THEME_TYPES.LIGHT ? 'white' : 'dark'} className={classes.sidebarHeader} />\r\n          </Hidden>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default ModernSideBar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false);\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n  headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      showFooterOpt: props.showFooterOpt ? props.showFooterOpt : true,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      props.drawerBreakPoint,\r\n      props.showFooterOpt,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-header': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'none',\r\n        marginRight: 10,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'block !important',\r\n        },\r\n      },\r\n      '& .Cmt-header-nav': {\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  appMain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-customizerBtn': {\r\n      top: 220,\r\n    },\r\n  },\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './MainContainer.style';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst MainContainer = ({ header, footer, sidebar, className, children }) => {\r\n  const { drawerBreakPoint, showFooter, showHeader } = useContext(LayoutContext);\r\n\r\n  const classes = useStyles({ drawerBreakPoint });\r\n\r\n  return (\r\n    <div className={clsx(classes.appRoot, className)}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {showHeader && header}\r\n            {children}\r\n            {showFooter && footer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtHorizontalLayout = ({ layoutOptions, children, header, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontalLayout;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headerNav: {\r\n    width: '100%',\r\n    minHeight: 46,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtHeaderNav = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.headerNav, 'Cmt-header-nav')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderNav;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerTop: {\r\n    width: '100%',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    fontSize: 14,\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderTop = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.headerTop} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderTop;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerMain: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderMain = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.headerMain, 'Cmt-headerMain')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderMain;\r\n","import React from 'react';\r\nimport { Box, Button, Divider } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  loginSection: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > .MuiDivider-root': {\r\n      height: 14,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      backgroundColor: theme.palette.text.secondary,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderLogin = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display=\"flex\" alignItems=\"center\" color=\"warning.main\">\r\n        <CachedIcon fontSize=\"small\" />\r\n        <div className=\"ml-3\">This is primary alert-check it out!</div>\r\n      </Box>\r\n      <div className={classes.loginSection}>\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Login\r\n        </Button>\r\n        <Divider className=\"Cmt-divider\" orientation=\"vertical\" />\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderLogin;\r\n","import React, { useContext, useImperativeHandle } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst SidebarToggleHandler = React.forwardRef(function SidebarToggleHandler(props, ref) {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isOpen: isSidebarOpen,\r\n  }));\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" ref={contentRef} onClick={() => setSidebarOpen(!isSidebarOpen)} {...props}>\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n});\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CmtDropdownMenu from '../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 10,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: 'Account',\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: 'Logout',\r\n  },\r\n];\r\n\r\nconst UserDropDown = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onItemClick = item => {\r\n    if (item.label === 'Logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(classes.profileRoot, 'Cmt-profile-pic')}>\r\n      <CmtDropdownMenu\r\n        onItemClick={onItemClick}\r\n        TriggerComponent={<CmtAvatar size=\"small\" src={'https://via.placeholder.com/150'} />}\r\n        items={actionsList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserDropDown;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, InputBase } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 450,\r\n    },\r\n    '& .Cmt-icon': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      position: 'relative',\r\n      flex: '1 1 auto',\r\n      width: '1%',\r\n      minWidth: 0,\r\n      height: 48,\r\n      borderRadius: '30px 0 0  30px',\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.08),\r\n      color: theme.palette.text.secondary,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n\r\n      '&:not(:last-child) .MuiOutlinedInput-root': {\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n      },\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.12),\r\n      },\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: '0 30px 30px 0',\r\n    height: '100%',\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nconst GlobalSearchForm = () => {\r\n  const classes = useStyles();\r\n  const [showCategories, setShowCategories] = React.useState(null);\r\n\r\n  const onShowCategories = event => {\r\n    setShowCategories(event.currentTarget);\r\n  };\r\n\r\n  const onHideCategories = () => {\r\n    setShowCategories(null);\r\n  };\r\n\r\n  return (\r\n    <Box pr={3} className={clsx(classes.searchRoot, 'Cmt-search')}>\r\n      <Box className={classes.inputGroup}>\r\n        <InputBase className={classes.inputText} placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <SearchIcon className={clsx('Cmt-icon')} />\r\n        <Box className={clsx(classes.inputGroupAppend, 'Cmt-inputGroupAppend')}>\r\n          <Button variant=\"outlined\" className={classes.button} endIcon={<ArrowDropDownIcon />} onClick={onShowCategories}>\r\n            Categories\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={showCategories}\r\n            keepMounted\r\n            open={Boolean(showCategories)}\r\n            onClose={onHideCategories}>\r\n            <MenuItem onClick={onHideCategories}>Option 1</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 2</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 3</MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GlobalSearchForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { alpha, darken, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport AppsMenu from '../AppsMenu';\r\nimport HeaderMessages from '../HeaderMessages';\r\nimport HeaderNotifications from '../HeaderNotifications';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport Logo from '../../Logo';\r\nimport SearchPopover from '../../SearchPopover';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport UserDropDown from '../../UserDropDown';\r\nimport GlobalSearchForm from '../../GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderTop = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderTop;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    boxShadow: '0 1px 8px -1px rgba(0,0,0,.2)',\r\n    position: 'relative',\r\n    zIndex: 99,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { children, className } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return <div className={clsx(classes.appHeader, className, 'Cmt-header')}>{children}</div>;\r\n};\r\n\r\nexport default CmtHeader;\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'Header',\r\n};\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    zIndex: 999,\r\n    '.Cmt-drawer-sidebar &': {\r\n      position: 'relative',\r\n    },\r\n    '& .scrollbar-container': {\r\n      height: '100vh',\r\n      width: '100%',\r\n    },\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtSidebarContent = ({ classes, children }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = props => {\r\n  const { children } = props;\r\n  const { isSidebarOpen, setSidebarOpen, drawerBreakPoint, sidebarWidth } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const classes = useStyles({ sidebarWidth, sidebarTheme });\r\n\r\n  if (matches) {\r\n    return (\r\n      <CmtDrawer\r\n        variant=\"temporary\"\r\n        open={isSidebarOpen}\r\n        onClose={() => setSidebarOpen(false)}\r\n        classes={{\r\n          paper: 'Cmt-drawer-sidebar',\r\n        }}>\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </CmtDrawer>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContentWrapper: {\r\n    position: 'relative',\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.appMainContentWrapper} bgcolor=\"background.main\">\r\n      <Box ref={contentRef} className={classes.appMainContent}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function CmtFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')} bgcolor=\"primary.main\">\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React, { cloneElement, isValidElement } from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link, handleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" disablePadding onClick={handleClick}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={clsx(classes.navText, 'Cmt-nav-text')}>\r\n          {name}\r\n        </Box>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n\r\n    '&.active > .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&.active > .Cmt-navCollapseBtn $subCollapse .Cmt-navCollapseBtn.active': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      '& $navCollapseBtnInner  .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& $navCollapseBtnInner > .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'absolute',\r\n    display: 'none',\r\n    top: 80,\r\n    left: 0,\r\n    zIndex: 2,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 200,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n\r\n    '& $navCollapseItem': {\r\n      top: 50,\r\n      left: '100%',\r\n      right: 'auto',\r\n    },\r\n  },\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n\r\n    '& > $navCollapseItem $navCollapseBtn:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: 0,\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navCollapseBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  subCollapse: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '& .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.textColor,\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n    '&.active .Cmt-nav-menu-link.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavCollapse.style';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const { name, icon, className, children = [] } = props;\r\n  const isExpandable = useMemo(() => children.length, [children]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding className={classes.navCollapseItem}>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} className={classes.subCollapse} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navCollapseBtn, `${open ? 'active' : ''}`, 'Cmt-navCollapseBtn')}>\r\n      <Box component=\"span\" className={classes.navCollapseBtnInner}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={classes.navText}>\r\n          {name}\r\n        </Box>\r\n        {isExpandable && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {isExpandable && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n      </Box>\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Box className={clsx(classes.navCollapse, 'Cmt-navCollapse', className, `${open ? 'active' : ''}`)}>{MenuCollapse}</Box>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navMega: {\r\n    position: 'static',\r\n    '&.Cmt-navMega-5': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 5)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-4': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 4)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-3': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 530,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 3)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-2': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 460,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 2)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navMegaBtn: {\r\n    position: 'static',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navMegaColumnsWrapper': {\r\n      display: 'flex',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navMegaBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navMegaColumnsWrapper: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 600,\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 80,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    margin: '0 auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  navMegaColumn: {\r\n    width: 'calc(100% / 3)',\r\n  },\r\n  navMegaColumnInner: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'unset',\r\n  },\r\n  navMegaColumnLabel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.text.primary,\r\n\r\n    '& .Cmt-icon-root': {\r\n      marginRight: 16,\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavMega.style';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst RenderIcon = ({ icon }) => {\r\n  const classes = useStyles();\r\n\r\n  if (icon && isValidElement(icon)) {\r\n    return cloneElement(icon, {\r\n      className: clsx(classes.iconRoot, '.Cmt-iconRoot', '.Cmt-icon-root'),\r\n    });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst NavMegaColumn = props => {\r\n  const classes = useStyles();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = useMemo(() => children.length, [children]);\r\n\r\n  const MenuItemChildren = totalItems ? (\r\n    <List component=\"div\" disablePadding className={classes.navMegaColumnItems}>\r\n      {children.map((item, index) => (\r\n        <NavMenuItem {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem component=\"div\" disableGutters className={clsx(classes.navMegaColumnInner, 'Cmt-navMegaColumnInner')}>\r\n      {name && (\r\n        <span className={classes.navMegaColumnLabel}>\r\n          <RenderIcon icon={icon} />\r\n          <span className={classes.navText}>{name}</span>\r\n        </span>\r\n      )}\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return <div className={clsx(classes.navMegaColumn, 'Cmt-navMega-column')}>{MenuCollapse}</div>;\r\n};\r\n\r\nconst NavMega = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const MenuItemColumns = totalItems ? (\r\n    <List component=\"div\" disablePadding className={clsx(classes.navMegaColumnsWrapper, 'Cmt-navMegaColumnsWrapper')}>\r\n      {children.map((item, index) => (\r\n        <NavMegaColumn {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navMegaBtn, 'Cmt-navMegaBtn', `${open ? 'active' : ''}`)}>\r\n      <span className={classes.navMegaBtnInner}>\r\n        <RenderIcon icon={icon} />\r\n        <span className={classes.navText}>{name}</span>\r\n        {totalItems > 0 && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {totalItems > 0 && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n      </span>\r\n      {MenuItemColumns}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.navMega, 'Cmt-navMega', `Cmt-navMega-${totalItems}`, `${open ? 'active' : ''}`)}>\r\n      {MenuCollapse}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMega;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport NavMega from './NavMega';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  horizontalNavMenu: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    marginLeft: -14,\r\n    marginRight: -14,\r\n  },\r\n}));\r\n\r\nconst CmtHorizontal = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={clsx(classes.horizontalNavMenu, 'Cmt-horizontalNavMenu')}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'mega':\r\n            return <NavMega {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport HeaderTop from '../../partials/Header/HeaderTop';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\n\r\nconst layoutOptions = {\r\n  showFooter: false,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalDefault = ({ className, children }) => {\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalDefaultLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderTop />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain bgcolor=\"primary.main\" color=\"white\">\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDefault;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-search': {\r\n      position: 'relative',\r\n      '& .MuiInputBase-input': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-inputGroupAppend': {\r\n      '& .MuiButton-root': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n        borderLeftColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box, alpha } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport GlobalSearchForm from '../../partials/GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport useStyles from './index.style';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport HeaderMain from './HeaderMain';\r\nimport clsx from 'clsx';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst HorizontalDark = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      className={clsx('Cmt-horizontalDarkLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDark;\r\n","import React from 'react';\r\nimport { Box, darken, Hidden, Toolbar } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Logo from '../../partials/Logo';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { minimalHorizontalMenus } from '../../partials/menus';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    minHeight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n    '& .Cmt-horizontalNavMenu': {\r\n      position: 'static',\r\n      '& .Cmt-navMegaBtn, & > .Cmt-navCollapse > .Cmt-navCollapseBtn': {\r\n        minHeight: 64,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainHeader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden mdDown>\r\n        <CmtHorizontal menuItems={minimalHorizontalMenus} />\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport MainHeader from './MainHeader';\r\nimport useStyles from './index.style';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalMinimal = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderMain>\r\n            <MainHeader />\r\n          </CmtHeaderMain>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalMinimal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { darken, Hidden } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <Hidden lgUp>\r\n          <AppsMenu />\r\n          <HeaderMessages />\r\n          <HeaderNotifications />\r\n        </Hidden>\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst HeaderTopMenus = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderTopMenus;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& > .Cmt-headerMain': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: 4,\r\n\r\n      '& .Cmt-navCollapseBtn': {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n      '& .Cmt-navCollapseBtn, & .Cmt-appIcon': {\r\n        color: theme.palette.horizontalNav.textColor,\r\n        '&:hover, &:focus': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n        '&.active': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '& > .Cmt-header-nav': {\r\n      minHeight: 54,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport HeaderMain from './HeaderMain';\r\nimport HeaderTopMenus from './HeaderTopMenus';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport useStyles from './index.style';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalTopMenu = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalTopMenuLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <HeaderTopMenus />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalTopMenu;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport globalStyles from '../../../theme/GlobalCss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuhMethods } from '../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../constants/AppConstants';\r\nimport { LAYOUT_TYPES } from '../../constants/ThemeOptions';\r\nimport VerticalDefault from './VerticalLayouts/VerticalDefault';\r\nimport VerticalMinimal from './VerticalLayouts/VerticalMinimal';\r\nimport MinimalNoHeader from './VerticalLayouts/MinimalNoHeader';\r\nimport ModernSideBar from './VerticalLayouts/ModernSidebar';\r\nimport HorizontalDefault from './HorizontalLayouts/HorizontalDefault';\r\nimport HorizontalDark from './HorizontalLayouts/HorizontalDark';\r\nimport HorizontalMinimal from './HorizontalLayouts/HorizontalMinimal';\r\nimport HorizontalTopMenu from './HorizontalLayouts/HorizontalTopMenu';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [showLayoutLoader, setLayoutLoader] = useState(true);\r\n  const { layout } = useContext(AppContext);\r\n  const { loadUser } = useSelector(({ auth }) => auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  globalStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(AuhMethods[CurrentAuthMethod].getAuthUser());\r\n    setLayoutLoader(false);\r\n  }, [dispatch]);\r\n\r\n  if (showLayoutLoader || !loadUser) {\r\n    return (\r\n      <div className={classes.circularProgressRoot}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (['/signin', '/signup', '/forgot-password'].includes(location.pathname)) {\r\n    return <div style={{ minHeight: '100vh', width: '100%', display: 'flex' }}>{children}</div>;\r\n  }\r\n\r\n  switch (layout) {\r\n    case LAYOUT_TYPES.VERTICAL_DEFAULT: {\r\n      return <VerticalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL: {\r\n      return <VerticalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL_NO_HEADER: {\r\n      return <MinimalNoHeader children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR: {\r\n      return <ModernSideBar children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DEFAULT: {\r\n      return <HorizontalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DARK: {\r\n      return <HorizontalDark children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_MINIMAL: {\r\n      return <HorizontalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_TOP_MENU: {\r\n      return <HorizontalTopMenu children={children} />;\r\n    }\r\n    default:\r\n      return <VerticalDefault children={children} />;\r\n  }\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useContext, useMemo } from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { createTheme, jssPreset, StylesProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport AppLocale from '../../../i18n';\r\nimport AppLayout from '../AppLayout';\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst AppWrapper = ({ children }) => {\r\n  const { locale, theme } = useContext(AppContext);\r\n\r\n  const muiTheme = useMemo(() => {\r\n    return createTheme(theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <IntlProvider locale={AppLocale[locale.locale].locale} messages={AppLocale[locale.locale].messages}>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <StylesProvider jss={jss}>\r\n            <CssBaseline />\r\n            <AppLayout>{children}</AppLayout>\r\n          </StylesProvider>\r\n        </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import { THEME_TYPES } from '../@jumbo/constants/ThemeOptions';\r\n\r\nexport const semiDarkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const darkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.DARK,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(0, 0, 0, 0.8)',\r\n      menuActiveBgColor: 'rgb(0, 0, 0, 0.5)',\r\n    },\r\n    common: {\r\n      dark: '#fff',\r\n    },\r\n    background: {\r\n      paper: '#121212',\r\n      default: '#2e2e2e',\r\n    },\r\n    text: {\r\n      primary: 'rgba(255, 255, 255, 0.87)',\r\n      secondary: 'rgba(255, 255, 255, 0.6)',\r\n      disabled: 'rgba(255, 255, 255, 0.38)',\r\n      hint: 'rgba(255, 255, 255, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(255, 255, 255, 0.06)',\r\n      dark: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#535151',\r\n      textColor: 'rgba(255, 255, 255, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#363636',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#535050',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#2e2e2e',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const lightTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nconst validationUrl = window.appsettings.validationUrl || process.env.REACT_APP_VALIDATION_URL;\r\nconst url = window.appsettings.appUrl || process.env.REACT_APP_URL;\r\nconst port = window.appsettings.appPort || process.env.REACT_APP_PORT;\r\n\r\nconst date = new Date();\r\nconst day = date.getDate();\r\nconst month = date.getMonth() + 1;\r\nconst year = date.getFullYear();\r\n\r\nconst addZero = val => {\r\n  if (val < 0) {\r\n    return '0' + val;\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\nconst param = year + '-' + addZero(month) + '-' + addZero(day);\r\nexport const getOffset = async () => {\r\n  return await axios.get(`http://${url}:${port}/zone`);\r\n};\r\nconst timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\nexport const getInboundCalls = async param => {\r\n  let query = `SELECT count (distinct(call_id)),\r\n  to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time\r\n  FROM cl_segments_view_new\r\n  where  (date_trunc('day', NOW() - INTERVAL '${param} day') <= start_time) \r\n  and act != 1 \r\n  and dst_dn_type = 0\r\n  and src_dn_type = 1\r\n  group by start_time::timestamp::date\r\n  order by start_time::timestamp::date asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getDidData = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidDataCount = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidNumbers = async () => {\r\n  let query = `\r\n  select \r\n  substring(conditiondata from '[0-9]+')  as conditiondata\r\n  from inboundrule\r\n  where conditiondata != '' \r\n  and substring(conditiondata from '[0-9]+') is not null\r\n  order by substring(conditiondata from '[0-9]+') asc`;\r\n\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getMonthlyDetails = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getMonthlyTotal = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getAgentList = async values => {\r\n  return await axios.post(`http://${url}:${port}/agentstatus`, values);\r\n};\r\n\r\nexport const getTrunksUp = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getTotalTrunks = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getExtensions = param => {\r\n  return axios.post(`http://${url}:${port}/extension`, param);\r\n};\r\n\r\nexport const getMissedCalls = async param => {\r\n  let query =\r\n    \"select to_char(date_trunc('day',t1.time_start), 'yyyy-mm-dd' ) as times, count(distinct(call_history_id)) from callcent_queuecalls_view t1 where t1.from_userpart != '' and (date_trunc('day', NOW() + INTERVAL '1 day') >=  t1.time_start) and  (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= t1.time_start) and is_answered = false group by times order by times\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getActiveCallCount = param => {\r\n  return axios.post(`http://${url}:${port}/activecallcount`, param);\r\n};\r\n\r\nexport const getOutboundCalls = async param => {\r\n  let query =\r\n    \"SELECT count (start_time::timestamp::date), to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time FROM cl_segments_view where dst_end_time - dst_answer_time != interval '00:00:00' and dst_caller_number like '%' and dst_answer_time is not null  and (date_trunc('day', NOW() + INTERVAL '1 day') >=  start_time) and (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= start_time) and dst_dn_type = 1 and src_dn_type = 0 and act != 0 group by start_time::timestamp::date order by start_time::timestamp::date asc\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getQueue = async () => {\r\n  const query = 'SELECT * FROM queue_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getRepetetiveAll = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(src_display_name) as cnt,\r\n\t  src_display_name \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'\r\n\t  group by src_display_name order by cnt desc\r\n\t  limit ${limit} offset ${allCallOffset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveAllCount = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(distinct(src_display_name)) as cnt \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveCallerDetails = async (param, callerNumber) => {\r\n  const query = `SELECT \r\n  src_display_name,\r\n  src_did,\r\n  dst_display_name,\r\n  to_char(dst_end_time-dst_answer_time ,'HH24h MIm SSs')as talkingtime,\r\n  to_char(dst_answer_time-dst_start_time,'HH24h MIm SSs') as waitingtime\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and src_dn_type = 1\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n  and src_display_name = '${callerNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getReturnedDropCall = async (limit, offset, agNum, qNum) => {\r\n  const string = `with recursive dropped as (\r\n    select \r\n    *\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() + INTERVAL '1 day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '0 day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false  \r\n  )\r\n  select\r\n  cl_segments_view_new.src_dn,\r\n  cl_segments_view_new.src_display_name,\r\n  to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_start_time,\r\n  to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_end_time,\r\n  cl_segments_view_new.dst_dn,\r\n  dropped.q_num,\r\n  to_char(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_start_time,'HH24:MI:SS') as duration\r\n  from dropped\r\n  left outer join cl_segments_view_new on (dropped.from_userpart = cl_segments_view_new.dst_dn)\r\n  where cl_segments_view_new.dst_start_time > dropped.time_start\r\n  and cl_segments_view_new.src_dn like '%${agNum}'\r\n  and dropped.q_num like '%${qNum}'\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getCdr = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMontlyLog = async (paramMonth, paramBack) => {\r\n  const query = `SELECT \r\n    DATE_TRUNC('month',start_time),\r\n    COUNT (distinct(call_id)) as toplam\r\n    FROM cl_segments_view_new\r\n    where (date_trunc('month', NOW() - INTERVAL '${paramBack + paramMonth - 1} month') <= start_time) \r\n    and  date_trunc('month',now() - interval '${paramMonth - 2} month') >= start_time\r\n    GROUP BY DATE_TRUNC('month',start_time)\r\n    ORDER BY DATE_TRUNC('month',start_time) desc`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getCallComparison = async (paramDate, paramBack) => {\r\n  const string =\r\n    \"select count (distinct(call_id)) , cast(sum(end_time-start_time) as text) as total, to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\" +\r\n    timeOffset +\r\n    \"') , 'yyyy-mm-dd HH24:MI:ss') as day_log,date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"') + '- \" +\r\n    paramBack +\r\n    \" day' <= start_time) and (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"')  + '1 day' >= start_time)  and act != 1 and start_time < end_time group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\" +\r\n    timeOffset +\r\n    \"') order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\" +\r\n    timeOffset +\r\n    \"') desc\";\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallComparisonDaily = async (paramDate, paramBack) => {\r\n  const string = `select count (distinct(call_id)),\r\n   sum(end_time-start_time) as total,\r\n   to_char(date_trunc('day',  start_time) , 'yyyy-mm-dd') as day_log,\r\n   date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act\r\n   from cl_segments_view_new\r\n   where (date_trunc('day',  TIMESTAMP '${paramDate}') + '-${paramBack} day' <= start_time) \r\n   and (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)  \r\n   and act != 1 \r\n   and start_time < end_time\r\n   group by date_trunc('day',  start_time) \r\n   order by date_trunc('day',  start_time) desc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLog = async paramDate => {\r\n  let string = `select \r\n  count (distinct(call_id)) ,\r\n  cast(sum(end_time-start_time) as text) as total,\r\n  to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new \r\n  where \r\n  (date_trunc('day',  TIMESTAMP '${paramDate} 00:00:00' ) <= start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate} 23:59:59' )  + '1 day' >= start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  and act != 1\r\n  and\r\n  end_time> start_time\r\n  group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n  order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') desc`;\r\n  // const str = `select\r\n  // count (distinct(call_id)) ,\r\n  // cast(sum(end_time-start_time) as text) as total,\r\n  // to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  // date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id)))\r\n  // as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  // and\r\n  // (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  // and act != 1\r\n  // and\r\n  // end_time> start_time\r\n  // group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  // order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLogTable = async paramDate => {\r\n  const string = ` select \r\n  to_char(date_trunc('day',  start_time),'dd-mm-yyyy HH24:MI:SS') as hour_log,\r\n  count (distinct(call_id)) , sum(end_time-start_time) as total,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new\r\n  where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  start_time<end_time\r\n  group by date_trunc('day',  start_time) \r\n  order by date_trunc('day',  start_time) desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getRepetetiveAnswered = async (param, limit, answeredCallsOffset) => {\r\n  const query =\r\n    \"SELECT count( src_display_name) as cnt,src_display_name FROM  cl_segments_view_new as t where dst_end_time - dst_answer_time != interval '00:00:00' and dst_answer_time is not null and src_display_name like '0%' and (date_trunc('day', timestamp '\" +\r\n    param.paramStart +\r\n    \"' - INTERVAL '0 day') <= start_time) and (date_trunc('day', timestamp '\" +\r\n    param.paramFinish +\r\n    \"' + INTERVAL '1 day') >=  start_time) and dst_dn_type = '0' group by src_display_name order by cnt desc limit \" +\r\n    limit +\r\n    ' offset ' +\r\n    answeredCallsOffset;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getRepetetiveAnsweredCount = async param => {\r\n  const string = `SELECT \r\n  count(distinct( src_display_name)) as cnt\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and dst_answer_time is not null\r\n  and src_display_name like '0%'\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time)\r\n  and dst_dn_type = '0'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetails = async (params, queue) => {\r\n  const query = `SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tto_char(sum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*),'HH24:MI:SS') as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >=  timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n\torder by (date_trunc('day' , callcent_ag_dropped_calls.time_start)) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetailsTotal = async (params, queue) => {\r\n  const query = `with recursive cte1 as (\r\n    SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*) as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >= timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n)\r\nselect\r\ncount(cte1.day_abandoned) as day_count,\r\nsum(cte1.cnt) as totalcount,\r\nsum(cte1.total_waiting) as totalwaiting,\r\nto_char(sum(cte1.act)/count(cte1.day_abandoned),'HH24:MI:SS') as act\r\nfrom cte1`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCalls = async (params, queue, agent) => {\r\n  // const query = `SELECT\r\n  // t1.from_userpart,\r\n  // to_char(date_trunc('second',t1.time_start + interval '3 hour'), 'yyyy-mm-dd HH24:MI:SS') as timeofevent,\r\n  // count(t1.is_answered),\r\n  // queue_view.display_name\r\n  // from callcent_queuecalls_view t1\r\n  // inner join queue_view on queue_view.dn = t1.q_num\r\n  // where\r\n  // t1.from_userpart != ''\r\n  // and\r\n  // queue_view.display_name like '%${queue}'\r\n  // and\r\n  // (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >=  t1.time_start)\r\n  // and\r\n  // (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start)\r\n  // and\r\n  // is_answered = false\r\n  // and\r\n  // reason_noanswercode != 2\r\n  // and\r\n  // reason_failcode = 1\r\n  // group by t1.from_userpart , timeofevent,queue_view.display_name\r\n  // order by timeofevent`;\r\n\r\n  const query = `SELECT\r\n  callcent_ag_dropped_calls.q_num,\r\n  callcent_ag_dropped_calls.ag_num,\r\n  callcent_queuecalls.from_displayname,\r\n  to_char(min(callcent_ag_dropped_calls.time_start at time zone 'utc${timeOffset}'),'yyyy-mm-dd HH24:MI:SS') as time_start,\r\n  to_char(max(callcent_ag_dropped_calls.time_end at time zone 'utc${timeOffset}'),'yyyy-mm-dd HH24:MI:SS') as time_end,\r\n  count(*)\r\n  from callcent_ag_dropped_calls\r\n  inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id\r\n  where\r\n  callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.time_start >= '${params.startDate}' \r\n  and callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n  and callcent_ag_dropped_calls.ag_num like '%${agent}'\r\n  ${queue === '' ? '' : \"and callcent_ag_dropped_calls.q_num like '%\" + queue + \"'\"}\r\n  group by callcent_ag_dropped_calls.q_num, callcent_ag_dropped_calls.ag_num, from_displayname\r\n  order by time_start`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCallDetails = async (params, from_userpart) => {\r\n  const query = `SELECT '<--' as direction,src_dn,to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') AS dst_start_time,to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_end_time,dst_end_time - dst_start_time as calltime from cl_segments_view_new where dst_dn like '%${from_userpart}'\r\n  and (date_trunc('second', timestamp '${params}') <=  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n    union \r\n    SELECT  '-->' as direction, \r\n    from_userpart,\r\n    to_char(time_start at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    time_end - time_start as calltime \r\n    from callcent_queuecalls_view where from_userpart like '%${from_userpart}'\r\n    and \r\n    is_answered = true \r\n    and (date_trunc('second', timestamp '${params}') <=  time_start at time zone 'Etc/GMT${timeOffset}') \r\n`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCalls = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getServiceLevel = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDropCall = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    q_num,\r\n    to_char(time_start at time zone 'utc${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'utc${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    ring_time,\r\n    from_userpart \r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day' ) >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n    order by time_start asc \r\n    LIMIT ${limit} OFFSET ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallSummary = async (paramStart, paramFinish) => {\r\n  const string = `    select\r\n\tto_char(date_trunc('day',time_start) , 'dd-mm-yyyy'),\r\n\tcount(distinct(call_history_id)),\r\n\tto_char(date_trunc('second',sum(ring_time)/count(distinct(call_history_id))),'HH24:MI:SS') as ring_time\r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n\tgroup by date_trunc('day',time_start)\t\r\n\torder by date_trunc('day',time_start) asc\r\n`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallCount = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    count(*)\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - INTERVAL '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day' ) <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getRecording = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return await axios.get(`http://${url}:${port}/downloadrecord/` + query);\r\n};\r\nexport const sendMail = async (emailAddress, directory, dirs, mailSubject, mailBody) => {\r\n  let tempPath = [];\r\n  let tempAttch = [];\r\n  for (var i = 0; i < dirs.length; i++) {\r\n    let path = directory + '/' + dirs[i].split('/')[0];\r\n    let attachment = dirs[i].split('/')[1];\r\n    tempPath.push(path);\r\n    tempAttch.push(attachment);\r\n  }\r\n  return await axios.post(`http://${url}:${port}/mail`, {\r\n    toMail: emailAddress,\r\n    path: tempPath.join(','),\r\n    attachment: tempAttch.join(','),\r\n    subjact: mailSubject,\r\n    body: mailBody,\r\n  });\r\n};\r\n\r\nexport const getRecordingBytes = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return await fetch(`http://${url}:${port}/downloadrecord/${query}`);\r\n};\r\nexport const getPath = async () => {\r\n  return axios.get(`http://${url}:${port}/getRecordingPath`);\r\n};\r\n\r\nexport const getValidation = async (param, type) => {\r\n  const response = await axios.get(`http://${validationUrl}:${port}/api/validation/?string=${param}&type=${type}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserAuth = async (username, password) => {\r\n  const response = await axios.get(`http://${url}:${port}/password/${username}/${password}`, {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const getUserPass = async pass => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(`http://${url}:5600/api/userPass/?pass=` + encodeURIComponent(pass), config);\r\n  return response.data;\r\n};\r\n\r\nexport const getQueueList = async () => {\r\n  return axios.post(`http://${url}:${port}/queuewaiting`, {\r\n    token: localStorage.getItem('token'),\r\n  });\r\n};\r\n\r\nexport const getAgentConnection = async () => {\r\n  return axios.post(`http://${url}:${port}/detailconn`, { token: localStorage.getItem('token') });\r\n};\r\n\r\nexport const getActiveCalls = async () => {\r\n  return axios.get(`http://${url}:${port}/acd`);\r\n};\r\n\r\nexport const getAgentStatus = async pass => {\r\n  let query = `WITH RECURSIVE cte1 as (\r\n    select \r\n    dn.value,\r\n    ivr.name \r\n    from \r\n    dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    ) , \r\n    cte2 as (\r\n    select\r\n    * from callcent_ag_qstatus\r\n    where timeofupdate > date_trunc('day', timestamp '${pass}')\r\n    )\r\n  select\r\n  dn,\r\n  display_name,\r\n  coalesce((\r\n  select \r\n  case \r\n  when cte2.is_loggedin_in_queue = 0 then 'Login' \r\n  when cte2.is_loggedin_in_queue = 1 then 'Logout'\r\n  else cte1.name\r\n  end as status\r\n  from cte2\r\n  left outer join cte1 on cte1.value = cast(cte2.is_loggedin_in_queue as character varying)\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1  \r\n  ),'State') as states,\r\n  date_trunc('second',coalesce(now()- (\r\n  select \r\n  timeofupdate\r\n  from cte2\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1\r\n  ),'10000 hours')) as statusTime\r\n  from users_view t\r\n  order by dn asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getBlock = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:5600/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\nexport const getAgentNumber = async () => {\r\n  let string = 'SELECT * FROM users_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAgentDigitCount = async () => {\r\n  let string = 'SELECT dn FROM users_view order by dn asc limit 1';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueueNumber = async () => {\r\n  let string = 'SELECT * FROM public.queue_view order by dn asc';\r\n\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailyCallDetails = async mydate => {\r\n  let query = `WITH RECURSIVE cte1 AS (\r\n    select \r\n    * \r\n    from cl_segments_view_new\r\n    where \r\n    start_time > date_trunc('day', timestamp '${mydate}')\r\n    and\r\n\t  start_time<end_time\r\n    order by start_time desc\r\n    ), cte2 as (\r\n    select \r\n    (select count (distinct call_id) from cte1) as total_call,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 1 and dst_dn_type = 0) as inbound_calls,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 0 and dst_dn_type = 1) as outbound_calls,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 0 and dst_dn_type = 0) as agent_to_agent_calls,\r\n    (select count (distinct call_id) from cte1 inner join cte3 on cte1.dst_dn = cte3.dn where src_dn_type = 1 and dst_dn_type != 0) as queue_calls,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 1 and dst_dn_type = 0 and (act = 5 or act = 6)) as answered_inbound_calls,\r\n    (select sum(end_time-start_time) as totaltime from cte1),\r\n    (select sum(end_time-start_time) as inbound_totaltime from cte1 where src_dn_type = 1 and dst_dn_type = 0),\r\n    (select sum(end_time-start_time) as outbound_totaltime from cte1 where src_dn_type = 0 and dst_dn_type = 1),\r\n    (select sum(end_time-start_time) as agent_to_agent_totaltime from cte1 where src_dn_type = 0 and dst_dn_type = 0),\r\n    (select sum(end_time-start_time) as queue_totaltime from cte1 where src_dn_type = 0 and dst_dn_type != 0),\r\n    (select (date_trunc('second',(date_trunc('second', sum(end_time-start_time))/( select count (distinct cte1.call_id) from cte1 ))))as average from cte1)\r\n\t), cte3 as (SELECT * FROM public.queue_view order by dn asc)\r\n\tselect * from cte2`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakTime = async () => {\r\n  let query = `select * from logouts`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakName = async () => {\r\n  let digits = (localStorage.getItem('digits') || 4).toString();\r\n  let min = '8072';\r\n  let max = '8079';\r\n  switch (digits) {\r\n    case '4':\r\n      min = '8072';\r\n      max = '8079';\r\n      break;\r\n    case '3':\r\n      min = '072';\r\n      max = '079';\r\n      break;\r\n    case '2':\r\n      min = '72';\r\n      max = '79';\r\n      break;\r\n    default:\r\n      min = '8072';\r\n      max = '8079';\r\n      break;\r\n  }\r\n  let query = `select \r\n  dn.value,\r\n  ivr.name,\r\n  dn.iddn \r\n  from dn \r\n  inner join ivr on dn.iddn = ivr.fkiddn\r\n  where cast(substring(dn.value from '[0-9]+') as bigint) >= ${min} \r\n  and cast(substring(dn.value from '[0-9]+') as bigint) <= ${max}\r\n  order by dn.value asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakName = async (breakName, breakId) => {\r\n  let query = `update ivr set name = '${breakName}'\r\n  where ivr.fkiddn = ${breakId}`;\r\n  return axios.post(`http://${url}:${port}/insertsingle`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakTime = async (breakTime, breakNumber) => {\r\n  let query = `update logouts set period = ${breakTime}\r\n  where logouttype = '${breakNumber}'`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentDetails = async (agentNum, date) => {\r\n  let query = `\r\n  with recursive cte1 as \r\n\t( \r\n\tselect\r\n\tdst_dn,\r\n\tdst_display_name,\t\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time) as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom \r\n\tcl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\t((dst_dn_type = 0))\r\n\tand\r\n\tdst_dn = '${agentNum}'\t\r\n\tand \r\n\tact != 1\r\n\tgroup by dst_dn,dst_display_name),\r\n  cte2 as (\r\n\tselect\r\n\tsrc_dn,\r\n\tsrc_display_name,\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time)as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom cl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\tsrc_dn = '${agentNum}'\t\r\n\tand\r\n\t((src_dn_type =0) and (dst_dn_type=1))\r\n\t\r\n\tand \r\n\tact != 1\r\n\tgroup by src_dn,src_display_name\r\n) \t\r\n\tselect dst_dn,\r\n\tdst_display_name,\r\n  coalesce(cte1.totalcall,0) as inboundtotalcall,\r\n\tcoalesce(cte2.totalcall,0) as outboundtotalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') as inboundtotaltime,\r\n\tcoalesce(cte2.totaltime ,'0 second') as outboundtotaltime,\r\n\tcoalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0) as totalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second') as totaltime,\r\n\tdate_trunc('second',((coalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second'))/(coalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0)))) as average,\r\n  date_trunc('second',((coalesce(cte1.totaltime,'0 second') /(coalesce(cte1.totalcall,1))))) as inboundaverage,\t\r\n\tdate_trunc('second',((coalesce(cte2.totaltime,'0 second')/(coalesce(cte2.totalcall,1))))) as outboundaverage,\r\n\tcoalesce(cte1.totalcall,0) as inbound_call_to_agent,\r\n\tcoalesce(cte2.totalcall,0) as outbound_call_to_agent,\r\n\t(select count(distinct(call_id)) from cl_segments_view_new \r\n\t where dst_answer_time is not null \r\n\t and dst_dn = cte1.dst_dn\r\n\t and start_time > date_trunc('day',timestamp '${date}')) as answered_call\r\n\tfrom cte1\r\n\tleft outer join cte2 on cte1.dst_dn = cte2.src_dn\r\n  \r\n\r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\n//agent cdr session\r\nexport const getAgentSession = async (agNum, qNum, breakName, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%${qNum}'\r\n    and\r\n    ag_num like '%${agNum}'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )\r\n    \r\n    select \r\n    cte2.ag_num,\r\n    cte2.q_num,\r\n    case\r\n    when cte2.mainreason = 0 then 'Login'\r\n    when cte2.mainreason = 1 then 'Logout'\r\n    else cte1.name\r\n    end as status,\r\n    to_char(cte2.escapetime , 'dd.HH24:MI:SS') AS escapetime,\r\n    (select timeofupdate from callcent_ag_qstatus where callcent_ag_qstatus.q_num = cte2.q_num and callcent_ag_qstatus.ag_num = cte2.ag_num and is_loggedin_in_queue = 1 order by timeofupdate limit 1 ) as lastlogin,\r\n    (select timeofupdate from callcent_ag_qstatus where callcent_ag_qstatus.q_num = cte2.q_num and callcent_ag_qstatus.ag_num = cte2.ag_num and is_loggedin_in_queue = 0 order by timeofupdate limit 1 ) as lastlogout\r\n   from cte2\t\r\n   left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n   where cast(cte2.mainreason as text) like '%${breakName}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSessionClicked = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte2.ag_num as Agent,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 1),'0 second')),'DDg HH24h MIm SSs') as Logout,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8072),'0 second')),'DDg HH24h MIm SSs') as \"m8072\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8073),'0 second')),'DDg HH24h MIm SSs') as \"m8073\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8074),'0 second')),'DDg HH24h MIm SSs') as \"m8074\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8075),'0 second')),'DDg HH24h MIm SSs') as \"m8075\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8076),'0 second')),'DDg HH24h MIm SSs') as \"m8076\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8077),'0 second')),'DDg HH24h MIm SSs') as \"m8077\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8078),'0 second')),'DDg HH24h MIm SSs') as \"m8078\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8079),'0 second')),'DDg HH24h MIm SSs') as \"m8079\" \r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n\t  where cte2.ag_num like '%${agNum}'\r\n    group by cte2.ag_num`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getInternalBreakTime = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num \r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte1.name,\r\n\t  to_char(sum(cte2.escapetime),'DDg HH24h MIm SSs')\r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n    where cte2.ag_num = '${agNum}'\r\n\t  and cte1.name is not null\r\n    group by cte1.name\r\n\t  order by sum(cte2.escapetime) desc\r\n\t  limit 5\r\n    `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentNumberV16 = async () => {\r\n  let string = 'SELECT dn,display_name FROM users_view order by dn asc';\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response.data;\r\n};\r\nexport const getIYSReport = async param => {\r\n  let string = '';\r\n  if (param.agent === 'All') {\r\n    string += `Select * from iysagents where issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  } else {\r\n    string += `Select * from iysagents where agent='${param.agent}' and issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  }\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/postgres/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getTeamsUsers = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamsusers`, values);\r\n};\r\n\r\nexport const getCsOnlineVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getcsonlinevoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const getCsTenantDialplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/gettenantdiaplan`, values);\r\n};\r\n\r\nexport const getCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamscallingpolicys`, values);\r\n};\r\n\r\nexport const changeCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changecallingpolicy`, values);\r\n};\r\n\r\nexport const changeCsVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changeteamsvoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const changeCsTenantDiaplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changetenantdiaplan`, values);\r\n};\r\n\r\nexport const getUserDetailsByUserId = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getuserbyid`, values);\r\n};\r\n\r\nexport const getQueueAnswerReport = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    inner join cte2 on cl_segments_view_new.dst_dn = cte2.dn\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  ), cte2 as (SELECT * FROM public.queue_view order by dn asc)\r\n  select \r\n  to_char(cte1.dst_start_time,'yyyy-mm-dd') as dst_start_time,\r\n  sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)) as waiting_time,\r\n  sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time) as talking,\r\n  cte1.src_display_name,\r\n  cte1.dst_dn\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n  ORDER BY cte1.dst_start_time ${order}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportCount = async (startDate, endDate, queueNum, src) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n/*with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '$12-17-2021' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view\r\n  left outer join cte1 on cl_segments_view.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view.dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n  and\r\n  cl_segments_view.dst_start_time<=date_trunc('day', timestamp '12-17-2021' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2\r\n  \r\n*/\r\n\r\nexport const getQueueAnswerReportSummary = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `    \r\n    with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name,\r\n\t  src_did\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n\tand\r\n\tsrc_did != ''\r\n\tand\r\n\tdst_dn_type != 6\r\n  )\r\n  select\r\n  'Total' as total,\r\n  to_char(date_trunc('day' , cte1.dst_start_time), 'dd-mm-yyyy') as date,\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  group by date_trunc('day' , cte1.dst_start_time)\r\n  ORDER BY date_trunc('day' , cte1.dst_start_time)  ASC\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportSummaryTotal = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n    and\r\n    src_did != ''\r\n    and\r\n    dst_dn_type != 6\r\n  )\r\n  select\r\n  count(distinct(date_trunc('day' , cte1.dst_start_time))),\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act  \r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummary = async (startTime, endTime) => {\r\n  let string = `select * from cl_daily_summary_proc('${startTime}','${endTime}')`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryTotal = async (startTime, endTime) => {\r\n  let string = `\r\n  with recursive cte1 as (\r\n  select * from cl_daily_summary_proc('${startTime}','${endTime}')  \r\n  )\r\n  select\r\n'Total' as datetime,\r\nsum(cte1.totalcall) as totalcall,\r\nsum(cte1.answered) as answered,\r\nto_char(sum(cast(cte1.inboundtime as interval)), 'HH24:MI:ss') as inboundtime,\r\nto_char(sum(cast(cte1.waitingtime as interval)), 'HH24:MI:ss') as waitingtime,\r\nto_char(sum(cast(cte1.averageconnection as interval))/count(cte1.averageconnection), 'HH24:MI:ss') as averageconnection,\r\nsum(cte1.abondened) as abondened,\r\nsum(cte1.transfer) as transfer,\r\nto_char(sum(cast(cte1.long_time as interval)), 'HH24:MI:ss') as long_time,\r\nsum(cte1.zdisi) as zdisi,\r\nto_char(sum(cast(cte1.average_abondened_waiting as interval))/count(cte1.average_abondened_waiting), 'HH24:MI:ss') as average_abondened_waiting,\r\nsum(cte1.rona) as rona,\r\nsum(cte1.outbound) as outbound,\r\nto_char(sum(cast(cte1.outbound_time as interval)), 'HH24:MI:ss')as outbound_time,\r\nto_char(sum(cast(cte1.average_outbound_time as interval))/count(cte1.average_outbound_time), 'HH24:MI:ss') as average_outbound_time\r\nfrom cte1\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummary = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by src_dn\r\n  ), answerInb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as ansInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by dst_dn\t\r\n  ), answerOutb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as ansOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n  \r\n  select\r\n    age.dn as id,\r\n    age.display_name,\r\n    coalesce(inb.cntInbound,0) as total_inbound,\r\n    coalesce(outb.cntOutbound,0) as total_outbound,\r\n    coalesce(answerInb.ansInbound,0) as answered_inbound,\r\n    coalesce(answerOutb.ansOutbound,0) as answered_outbound\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn \r\n    left outer join answerInb on answerInb.dst_dn = age.dn\r\n    left outer join answerOutb on answerOutb.src_dn = age.dn\r\n    where age.dn like '%${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalled = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn like '%${agentNum}'\r\n    and dst_dn_type = 1\r\n    and act != 1\r\n  )\r\n  select \r\n  dst_display_name as en_uzun_aranan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n   dst_answer_time is not null\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCaller = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and act!= 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_uzun_arayan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  and\r\n  dst_answer_time is not null\r\n\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalledAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn ='${agentNum}' \r\n    and act != 1\r\n    and dst_dn_type = 1\r\n    order by dst_start_time desc\r\n  )\r\n  select \r\n  dst_display_name as en_cok_aranan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1  \r\n  group by dst_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCallerAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_cok_arayan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  group by src_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAgentTotalCall = (startTime, cte) => {\r\n  let string = `with recursive cte1 as(select * from cl_segments_daily_statics('${startTime}','${startTime}')),cte2 as (select src_did,count(distinct(call_id)) as callDid from cte1 where src_did != '' group by src_did order by count(distinct(call_id)) desc limit 5),cte3 as (select dst_display_name,count(distinct(call_id)) as agentCall from cte1 where dst_dn_type = 0 group by dst_display_name order by count(distinct(call_id)) desc limit 5) select * from ${cte}`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getWallBoardVoiceMail = async agentNum => {\r\n  let string = `SELECT count(distinct(call_id)) \r\n  FROM public.cl_segments_view_new where dst_caller_number = 'Ext.9999' \r\n  and dst_start_time > date_trunc('day',Now()) \r\n  and act != 1\r\n  and src_dn_type = 1 and \r\n  dst_dn = '${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getWallBoardLongTime = async agentNum => {\r\n  let string = `select\r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(dst_end_time - dst_start_time as text) as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  dst_dn = '${agentNum}' --parameter\r\n  and\r\n  dst_answer_time is not null\r\n  order by duration desc\r\n  limit 1`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getVersion = async () => {\r\n  return axios.get(`http://${url}:${port}/version`);\r\n};\r\n\r\nexport const getWallBoardWaitingTime = async agentNum => {\r\n  let string = `select \r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(sum(dst_answer_time - dst_start_time) as text)  as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  dst_answer_time is not null\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn = '${agentNum}'\r\n  group by dst_dn , dst_display_name`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getLogin = param => {\r\n  return axios.post(`http://${url}:${port}/login`, param);\r\n};\r\n\r\nexport const getCallLog = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogDetails = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogTotal = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogTotalSummary = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDashboardTops = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallDetail = async callid => {\r\n  /* OLD\r\nwith recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    )\r\n    select\r\n  */\r\n  let string = `with recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    coalesce(dst_answer_time,dst_end_time) as dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    order by seg_order\r\n    )\r\n    select\r\n    to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','yyyy-mm-dd HH24:MI:SS') as start_time,\r\n    to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'-dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','HH24h MIm SSs') as ring_time,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'-dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','HH24h MIm SSs') as duration,\r\n    src_display_name as callers,\r\n    dst_display_name as calleds,\r\n    case when act = 12 then 'Transfer' when act = 10 and act_dn_type != 0 then 'Karşılama' when act = 10 and act_dn_type = 0 then 'Yönlendirme' when act_dn_type = 4 then 'Açılış ' else '-' end as states,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','yyyy-mm-dd HH24:MI:SS') as end_time\r\n    from cte1\r\n    order by dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}' asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDidReportTotalCall = async (date, didNo) => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date[0]}'\r\n  and dst_start_time <= timestamp '${date[1]}'\r\n  and act != 1\r\n  and src_did like '%${didNo}'\r\n  order by call_id,start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDidReportAnsweredCall = async (date, didNo) => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date[0]}'\r\n  and dst_start_time <= timestamp '${date[1]}'\r\n  and act != 1\r\n  and src_did like '%${didNo}'\r\n  and dst_dn_type =0 \r\n  and dst_answer_time is not null\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDidReportNonAnsweredCall = async (date, didNo) => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date[0]}'\r\n  and dst_start_time <= timestamp '${date[1]}'\r\n  and act != 1\r\n  and src_did like '%${didNo}'\r\n  and dst_dn_type = 1\r\n  order by call_id,dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTotalCall = async date => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  order by call_id,start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalAnsweredCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and\r\n  dst_dn_type =0 \r\n  and\r\n  dst_answer_time is not null\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutOfTime = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act=13\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalAbondenedCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 0 and act=15\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTransferCall = async date => {\r\n  let string = `with recursive cte1 as ( \r\n    select\r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    dst_dn_type =0\r\n    and dst_start_time >= timestamp '${date}'\r\n    and dst_end_time <= timestamp '${date}' + interval '1 day'\r\n    and act = 12 and dst_dn_type = 0 \r\n    )\r\n    select\r\n    cl_segments_view_new.call_id,\r\n    cl_segments_view_new.src_display_name as caller,\r\n    cte1.src_display_name as transferer,\r\n    cte1.dst_display_name as trasfered,\r\n    to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    inner join cte1 on cte1.call_id = cl_segments_view_new.call_id\r\n    where cl_segments_view_new.dst_start_time >= timestamp '${date}'\r\n    and cl_segments_view_new.dst_start_time <= timestamp '${date}' + interval '1 day'\r\n    and cl_segments_view_new.act != 1\r\n    and cl_segments_view_new.act != 12\r\n    order by cl_segments_view_new.call_id,cl_segments_view_new.dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalRonaCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_end_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and dst_dn_type = 0 and dst_answer_time is null\r\n  order by call_id,dst_end_time asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallTransferReport = async (agent, selectedStartTime, selectedEndTime) => {\r\n  let string = `select\r\n\tdst_display_name as transferer,\r\n\tact_display_name as trasfered,\r\n\tsrc_display_name as caller,\r\n\tto_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    src_dn_type = 1\r\n    and \r\n\tdst_start_time >= timestamp '${selectedStartTime}'\r\n    and \r\n\tdst_end_time <= timestamp '${selectedEndTime}' + interval '1 day' \r\n    and \r\n\tdst_dn_type = 0 \r\n\tand \r\n\tdst_answer_time is not null\r\n\tand\r\n\tact = 10 -- transfer\r\n\tand\r\n\tact_dn_type != 8 -- not parked\r\n\tand\r\n\tstart_time != end_time\r\n\tand\r\n\tdst_display_name like '%${agent}%'\r\n\torder by call_id,seg_order`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 1\r\n  order by call_id,dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getUsers = async () => {\r\n  let string = `SELECT * FROM public.users ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUser = async (userName, pass, type) => {\r\n  let string = `INSERT INTO public.users(name, pass, type) VALUES ('${userName}', '${pass}', '${type}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateUser = async (id, userName, pass, type) => {\r\n  let string = `UPDATE public.users\tSET name='${userName}', pass='${pass}', type='${type}' WHERE id = ${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepartmants = async () => {\r\n  let string = `SELECT * FROM public.departments ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepartmant = async name => {\r\n  let string = `INSERT INTO public.departments(name)VALUES ('${name}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateDepartmant = async (id, name) => {\r\n  let string = `UPDATE public.departments SET name='${name}' WHERE id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueues = async () => {\r\n  let string = `SELECT * FROM public.queue_view`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepOwnedQueues = async depId => {\r\n  let string = `SELECT * FROM public.department_queues where department_id = ${depId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `INSERT INTO public.department_queues(department_id, queue_id) VALUES (${depId}, ${queueId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId} and queue_id = ${queueId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedAllQueues = async depId => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserAllDepsWithDepId = async depId => {\r\n  let string = `DELETE FROM public.user_departments WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepWithDepId = async depId => {\r\n  let string = `DELETE FROM public.departments WHERE id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getSupervisors = async () => {\r\n  let string = `SELECT * FROM public.users where type = 'supervisor' ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getUserOwndedDeps = async userId => {\r\n  let string = `SELECT * FROM public.user_departments where user_id = ${userId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUserOwndedDeps = async (userId, depId) => {\r\n  let string = `INSERT INTO public.user_departments(user_id, department_id) VALUES (${userId}, ${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDeps = async (userId, depId) => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId} and department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDepsByUserId = async userId => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserByUserId = async userId => {\r\n  let string = `DELETE FROM public.users WHERE id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAgentsRecordListenAuth = async () => {\r\n  let string = `SELECT * FROM public.agent_auth ORDER BY agent_num ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setAgentsRecordListenAuthByAgentId = async (agentId, auth) => {\r\n  let string = `UPDATE public.agent_auth SET record_listen=${auth} WHERE agent_num = '${agentId}';`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const changeAgentStatus = async agentId => {\r\n  return axios.post(`http://${url}:${port}/changestatus`, {\r\n    token: localStorage.getItem('token'),\r\n    agentDn: `${agentId}`,\r\n  });\r\n};\r\n\r\nexport const getTagsByCallId = async callId => {\r\n  let string = `SELECT * from tag WHERE call_id='${callId}';`;\r\n\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTagtextByCallId = async callId => {\r\n  let string = `SELECT tagtext from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const TagByID = async (tag, id) => {\r\n  const query = `UPDATE tag SET tagtext='${tag}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, tagtext)\r\n         SELECT ${id}, '${tag}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const getCallScoresByCallId = async callId => {\r\n  let string = `SELECT rating from tag WHERE call_id='${callId}';`;\r\n\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getSurveyScoresByCallId = async callId => {\r\n  let string = `SELECT \"supervisorId\" from tag WHERE call_id='${callId}';`;\r\n\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const ScoreByID = async (rating, id) => {\r\n  const query = `UPDATE tag SET rating='${rating}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, rating)\r\n         SELECT ${id}, '${rating}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const SubmitSurveyByID = async (callId, score,answersStr) => {\r\n  const query = `UPDATE tag SET note='${answersStr}',\"supervisorId\"='${score}' WHERE call_id=${callId};\r\n  INSERT INTO tag (call_id, note, \"supervisorId\")\r\n         SELECT ${callId}, '${answersStr}', '${score}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${callId});`;\r\n\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const getTagTypes = async () => {\r\n  let string = `SELECT * from public.tagtypes;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const addTagTypes = async (depName, tagMessage, depId) => {\r\n  let string = `INSERT INTO public.tagtypes(department, tagmassage,department_id) VALUES ('${depName}', '${tagMessage}',${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setTagTypes = async (depName, tagMessage, depId, id) => {\r\n  let string = `UPDATE public.tagtypes SET \r\n  tagmassage='${tagMessage}',\r\n  department='${depName}', \r\n  department_id=${depId} \r\n  WHERE \r\n  tagtypes_id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteTag = async id => {\r\n  let string = `DELETE FROM public.tagtypes WHERE tagtypes_id=${id}`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQualityReport = async () => {\r\n  let string = `SELECT * from public.csat;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueuesByAgent = async param => {\r\n  const query = `SELECT queue_dn,queue_display_name FROM public.extensions_by_queues_view where extension_dn='${param}'`;\r\n\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const showBreaks = async agent => {\r\n  const query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n  ), cte2 as (SELECT to_char(\r\n        sum(timeofupdate - (select\r\n                  timeofupdate\r\n                  from\r\n                  callcent_ag_qstatus\r\n                  where\r\n                  ag_num = qs.ag_num\r\n                  and\r\n                  q_num = qs.q_num\r\n                  and\r\n                  qs.timeofupdate > timeofupdate\r\n                  order by timeofupdate desc\r\n                  limit 1)) , 'dd - HH24:MI:ss') as escapetime,\r\n        (select\r\n         is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) as mainreason,\r\n        ag_num,\r\n        q_num\r\n        FROM\r\n        callcent_ag_qstatus qs\r\n        where\r\n        ag_num like '${agent}'\r\n        and\r\n        is_loggedin_in_queue = 0\r\n        and\r\n        (select\r\n              is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) is not null\r\n        and\r\n       timeofupdate <= timestamp '${param} 23:59:59'\r\n        and\r\n        timeofupdate >= timestamp '${param} 00:00:00'\r\n        group by mainreason,ag_num,q_num\r\n        order by mainreason asc )\r\n        \r\n        select \r\n        cte2.ag_num,\r\n        cte2.q_num,\r\n        case\r\n        when cte2.mainreason = 0 then 'Login'\r\n        when cte2.mainreason = 1 then 'Logout'\r\n        else cte1.name\r\n        end as status,\r\n        cte2.escapetime\r\n        from cte2\r\n        left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const changeSessionStatus = async agent => {\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/changestatus`,\r\n    JSON.stringify({ token: localStorage.getItem('token'), agentDn: agent }),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const qstatus = async param => {\r\n  const response = await axios.post(`http://${url}:${port}/agentqueues`, JSON.stringify(param), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\nexport const getBreakNums = async () => {\r\n  const query = `select dn.value,ivr.name from dn full join ivr on dn.iddn=ivr.fkiddn  where value in ('8072','8073','8074','8075','8076','8077','8078','8079') order by value asc`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getDailyActiveCalls = async paramDate => {\r\n  //  acc.action  at time zone 'Etc/GMT${timeOffset}' ,\r\n  //doğrusu yukarıdaki gibi ama 3 saat ilerde getiriyor. nedenine daha sonra bakılacaktır\r\n  let string = `select \r\n  acc.action  at time zone 'utc',\r\n  acc.acc\r\n  from acc \r\n  where \r\n  acc.action  > timestamp '${paramDate} 00:00:00' at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'\r\n  and\r\n  acc.action  < timestamp '${paramDate} 23:59:59'  at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'\r\n  order by acc.action asc`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getTerminatedCallsByAgent = async (start_time, end_time, limit, offset, callTerminator) => {\r\n  let query = `SELECT * FROM public.cl_segments_view_new\r\n  where\r\n  start_time > '${start_time}'\r\n  and\r\n  end_time < '${end_time}'\r\n  and\r\n  (\r\n  (\r\n  act = 6\r\n  and\r\n  cast(dst_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  or\r\n  (\r\n  act = 5\r\n  and\r\n  cast(src_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  )\r\n  order by call_id, seg_order\r\n  limit ${limit} offset ${offset}`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query,\r\n  });\r\n};\r\nexport const getTerminatedCallsByAgentCount = async (start_time, end_time, callTerminator) => {\r\n  let query = `SELECT count(*) FROM public.cl_segments_view_new\r\n  where\r\n  start_time > '${start_time}'\r\n  and\r\n  end_time < '${end_time}'\r\n  and\r\n  (\r\n  (\r\n  act = 6\r\n  and\r\n  cast(dst_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  or\r\n  (\r\n  act = 5\r\n  and\r\n  cast(src_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  )`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query,\r\n  });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AppContext from './AppContext';\r\nimport defaultContext from './defaultContext';\r\nimport { darkTheme, lightTheme, semiDarkTheme } from '../../../../theme/themeColors';\r\nimport { getOffset, getAgentDigitCount } from 'api/api';\r\nconst initialThemeValue = defaultContext.theme;\r\nconst otherThemes = {\r\n  light: lightTheme,\r\n  'semi-dark': semiDarkTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  const [locale, setLocale] = useState(defaultContext.defaultLng);\r\n  const [theme, setTheme] = useState(initialThemeValue);\r\n  const [themeType, setThemeType] = useState(defaultContext.themeType);\r\n  const [layout, setLayout] = useState(defaultContext.layout);\r\n  const [cardRadius, setCardRadius] = useState(defaultContext.theme.overrides.MuiCard.root.borderRadius);\r\n  const [direction, setDirection] = useState(initialThemeValue.direction || 'rtl');\r\n  const [showTourGuide, setTourGuideStatus] = useState(false);\r\n  const [recordLoading, setRecordLoading] = useState(false);\r\n\r\n  const contextValue = React.useMemo(() => {\r\n    return {\r\n      locale,\r\n      setLocale,\r\n      theme,\r\n      setTheme,\r\n      layout,\r\n      setLayout,\r\n      themeType,\r\n      setThemeType,\r\n      cardRadius,\r\n      setCardRadius,\r\n      direction,\r\n      setDirection,\r\n      showTourGuide,\r\n      setTourGuideStatus,\r\n      recordLoading,\r\n      setRecordLoading,\r\n    };\r\n  }, [locale, theme, themeType, layout, direction, showTourGuide, cardRadius, recordLoading]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      palette: {\r\n        ...prevState.palette,\r\n        ...otherThemes[themeType].palette,\r\n      },\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        ...otherThemes[themeType].overrides,\r\n      },\r\n    }));\r\n  }, [themeType]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        MuiCard: {\r\n          ...prevState.overrides.MuiCard,\r\n          root: {\r\n            ...prevState.overrides.MuiCard.root,\r\n            borderRadius: cardRadius,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  }, [cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      direction: direction,\r\n    }));\r\n    document.body.setAttribute('dir', direction);\r\n  }, [direction]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setThemeType(params.get('theme-type'));\r\n    }\r\n\r\n    if (params.get('layout')) {\r\n      setLayout(params.get('layout'));\r\n    }\r\n  }, [location.search]);\r\n  useEffect(() => {\r\n    getOffset().then(resp => {\r\n      if (parseInt(resp.data) > 0 || parseInt(resp.data) === 0) {\r\n        localStorage.setItem('timeoffset', `+${resp.data}`);\r\n      } else {\r\n        localStorage.setItem('timeoffset', resp.data);\r\n      }\r\n    });\r\n    getAgentDigitCount().then(resp => {\r\n      let digits = JSON.parse(resp.data.data)[0].dn.toString().length;\r\n      localStorage.setItem('digits', digits);\r\n    });\r\n    let company = localStorage.getItem('company') || '';\r\n    if (company !== null && company !== 'undefined' && company !== '') {\r\n      if(document.title.charAt(7) === \"-\"){\r\n        document.title = document.title.replace('-', `${company} -`);\r\n      }else{\r\n        var newTitle = `ESNEKS ${company} - V${process.env.REACT_APP_VERSION} - Admin Dashboard`\r\n        document.title = newTitle;\r\n      }\r\n    }\r\n  }, []);\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst GridContainer = ({ children, ...rest }) => {\r\n  return (\r\n    <Grid container spacing={6} {...rest}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GridContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\n\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footerRoot: props => ({\r\n    ...props.separatorStyles,\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardFooter = ({ backgroundColor, gradientDirection, separator, children }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator, true);\r\n\r\n  const classes = useStyles({ separatorStyles });\r\n\r\n  return (\r\n    <Box className={clsx(classes.footerRoot, 'Cmtfooter-root')} style={backgroundStyles}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtCardFooter.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n};\r\n\r\nCmtCardFooter.defaultProps = {\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n};\r\n\r\nexport default CmtCardFooter;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { hexToRgba } from '../CmtHelpers/JssHelper';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  advCardRoot: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    height: '100%',\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  actionMenu: {\r\n    position: 'absolute',\r\n    top: 15,\r\n    right: 15,\r\n    zIndex: 4,\r\n    '& button': {\r\n      backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.5)',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.7)',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\nimport { Box, Card } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport useStyles from './index.style';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CmtAdvCard = ({\r\n  className,\r\n  actions,\r\n  actionHandleIcon,\r\n  actionHandler,\r\n  actionMenuClassName,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  children,\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.advCardRoot, className)}\r\n      style={backgroundStyles}>\r\n      {actions.length > 0 && (\r\n        <Box ml={2} className={clsx(classes.actionMenu, actionMenuClassName)}>\r\n          <CmtDropdownMenu\r\n            TriggerComponent={<IconButton size=\"small\">{actionHandleIcon || <MoreVertIcon fontSize=\"small\" />}</IconButton>}\r\n            items={actions}\r\n            onItemClick={actionHandler}\r\n          />\r\n        </Box>\r\n      )}\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtAdvCard.propTypes = {\r\n  actions: PropTypes.array,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionHandler: PropTypes.func,\r\n  actionMenuClassName: PropTypes.string,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtAdvCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  actions: [],\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n};\r\n\r\nexport default CmtAdvCard;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  advCardContent: props => ({\r\n    ...props.backgroundStyles,\r\n    padding: 24,\r\n    position: 'relative',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '&:before': props.overlayStyles\r\n      ? {\r\n          ...props.overlayStyles,\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0,\r\n          zIndex: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n        }\r\n      : {},\r\n  }),\r\n  alignCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    '& .Cmt-content-head': {\r\n      flexDirection: 'column',\r\n    },\r\n    '& .Cmt-avatar': {\r\n      marginRight: 0,\r\n      marginBottom: 15,\r\n    },\r\n  },\r\n  gridOrder1: {\r\n    order: 1,\r\n  },\r\n  gridOrder2: {\r\n    order: 2,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport useStyles from './CmtAdvCardContent.style';\r\nimport clsx from 'clsx';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst CmtAdvCardContent = ({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  extraContent,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  columnSizes,\r\n  alignCenter,\r\n  reverseDir,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles({ overlayStyles, backgroundStyles, alignCenter });\r\n  const alignCenterClass = alignCenter ? classes.alignCenter : {};\r\n  const blockClasses = reverseDir ? [classes.gridOrder1, classes.gridOrder2] : [classes.gridOrder2, classes.gridOrder1];\r\n  const [blockFirst, blockSecond] = blockClasses;\r\n\r\n  let extraContentRender = null;\r\n  if (extraContent) {\r\n    extraContentRender = typeof extraContent === 'function' ? extraContent() : extraContent;\r\n  }\r\n\r\n  return (\r\n    <Box className={clsx(classes.advCardContent, 'Cmt-card-content', 'CmtAdvCard-Content', className)} {...rest}>\r\n      {extraContentRender || icon || avatar || title || subTitle ? (\r\n        <Grid container spacing={6}>\r\n          <Grid\r\n            item\r\n            xs={alignCenter ? 12 : 12}\r\n            sm={alignCenter ? 12 : columnSizes[0] === 12 ? 12 : 6}\r\n            md={alignCenter ? 12 : columnSizes[0]}\r\n            className={clsx(blockFirst, alignCenterClass)}>\r\n            <Box>\r\n              <CmtContentHead\r\n                icon={icon}\r\n                avatar={avatar}\r\n                title={title}\r\n                titleProps={titleProps}\r\n                subTitle={subTitle}\r\n                subTitleProps={subTitleProps}\r\n              />\r\n            </Box>\r\n            {extraContentRender && <Box>{extraContentRender}</Box>}\r\n          </Grid>\r\n          {children && (\r\n            <Grid\r\n              item\r\n              xs={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 12}\r\n              sm={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 6}\r\n              md={alignCenter ? 12 : columnSizes[1]}\r\n              className={blockSecond}>\r\n              <Box width={1}>{children}</Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} md={12}>\r\n            <Box width={1}>{children}</Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtAdvCardContent.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  extraContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n  reverseDir: PropTypes.bool,\r\n  columnSizes: PropTypes.array,\r\n  alignCenter: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtAdvCardContent.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  reverseDir: false,\r\n  columnSizes: [6, 6],\r\n  alignCenter: false,\r\n  className: '',\r\n};\r\n\r\nexport default CmtAdvCardContent;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeaderRoot: {\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 12,\r\n    marginBottom: 2,\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  iconRoot: {\r\n    fontSize: 14,\r\n    display: 'block',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst apps = [\r\n  {\r\n    label: 'Andrioid App',\r\n    imageURL: '/images/dashboard/google_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n  {\r\n    label: 'IOS App',\r\n    imageURL: '/images/dashboard/apple_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    color: theme.palette.common.white,\r\n    padding: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    marginBottom: 7,\r\n    textTransform: 'uppercase',\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst DownloadApps = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard\r\n      className={classes.cardRoot}\r\n      backgroundColor={['#03DAC5 -18.96%', '#6200EE 108.17%']}\r\n      gradientDirection=\"180deg\">\r\n      <CmtAdvCardContent\r\n        title=\"Download Mobile Apps\"\r\n        titleProps={{\r\n          variant: 'body1',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Now, your account is on your fingers\"\r\n        subTitleProps={{\r\n          variant: 'h1',\r\n          component: 'div',\r\n          className: classes.subTitleRoot,\r\n        }}\r\n        extraContent={\r\n          <Box mt={5} mx={-2} display=\"flex\" alignItems=\"center\">\r\n            {apps.map((app, index) => (\r\n              <Box px={2} key={index}>\r\n                <Link href={app.link}>\r\n                  <CmtImage src={app.imageURL} />\r\n                </Link>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default DownloadApps;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport useStyles from './CryptoCard.style';\r\n\r\nconst CryptoCard = ({ title, amount, progress, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const headerSubTitle = (\r\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n      <div style={{ fontWeight: 'fontWeightBold', fontSize: 20 }}>{amount}</div>\r\n      <Box ml={2} fontSize={16} color={progress.color} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n        {progress.icon}\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CmtCard>\r\n      <CmtCardHeader\r\n        className={classes.cardHeaderRoot}\r\n        titleProps={{\r\n          variant: 'h6',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        title={title}\r\n        subTitle={headerSubTitle}\r\n      />\r\n      {children}\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\n\r\nimport GridContainer from '../../GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mbSpace: {\r\n    marginBottom: 16,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    name: 'USD',\r\n    code: 'usd',\r\n  },\r\n  {\r\n    name: 'INR',\r\n    code: 'inr',\r\n  },\r\n  {\r\n    name: 'EURO',\r\n    code: 'euro',\r\n  },\r\n];\r\n\r\nconst currencyRates = {\r\n  'usd-inr': 74,\r\n  'inr-usd': 0.0135,\r\n  'usd-euro': 0.89,\r\n  'euro-usd': 1.13,\r\n  'inr-euro': 0.0117,\r\n  'euro-inr': 85,\r\n  'inr-inr': 1,\r\n  'usd-usd': 1,\r\n  'euro-euro': 1,\r\n};\r\n\r\nconst ConversionResult = ({ fromCurrency, toCurrency, amount, convertedValue, currencyRate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box component=\"p\" mb={4} fontSize={12} color=\"text.primary\">\r\n        {`${amount} ${fromCurrency.name} equals`}\r\n      </Box>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.textPrimary, classes.mbSpace)}>\r\n        {convertedValue + ' ' + toCurrency.name}\r\n      </Typography>\r\n      <Box component=\"p\" fontSize={12} display=\"flex\" alignItems=\"center\" color=\"text.secondary\" mb={6}>\r\n        <span className=\"mr-2\">\r\n          {`@ 1 ${fromCurrency.name}`} = <span className={classes.textPrimary}>{`${currencyRate} ${toCurrency.name}`}</span>\r\n        </span>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConversionControls = ({ amount, setAmount, fromCurrency, setFromCurrency, toCurrency, setToCurrency }) => {\r\n  return (\r\n    <Box pb={{ xs: 6, md: 10, xl: 16 }}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>From</InputLabel>\r\n            <Select\r\n              label=\"From\"\r\n              value={fromCurrency}\r\n              onChange={event => setFromCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'from',\r\n                id: 'demo-controlled-open-select',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>To</InputLabel>\r\n            <Select\r\n              label=\"To\"\r\n              value={toCurrency}\r\n              onChange={event => setToCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'to',\r\n                id: 'demo-controlled-open-select-to',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Amount\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            fullWidth\r\n            style={{\r\n              marginTop: 0,\r\n              marginBottom: 0,\r\n            }}\r\n            value={amount}\r\n            onChange={e => setAmount(parseFloat(e.target.value))}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CurrencyCalculator = ({ title, titleProps, className }) => {\r\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\r\n  const [toCurrency, setToCurrency] = useState(currencies[1]);\r\n  const [amount, setAmount] = useState(0);\r\n  const [convertedValue, setConvertedValue] = useState(0);\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setCurrencyRate(currencyRates[`${fromCurrency.code}-${toCurrency.code}`]);\r\n    setConvertedValue(amount * currencyRate);\r\n  }, [fromCurrency, toCurrency, amount, currencyRate]);\r\n\r\n  const resetCalculator = () => {\r\n    setFromCurrency(currencies[0]);\r\n    setToCurrency(currencies[1]);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <CmtCard className={className}>\r\n      {title && <CmtCardHeader title={title} titleProps={titleProps} />}\r\n      <CmtCardContent>\r\n        <div>\r\n          <ConversionResult\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              amount,\r\n              convertedValue,\r\n              currencyRate,\r\n            }}\r\n          />\r\n          <ConversionControls\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              setFromCurrency,\r\n              setToCurrency,\r\n              amount,\r\n              setAmount,\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Button variant=\"outlined\" size={'large'} onClick={resetCalculator}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CurrencyCalculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.typography.body1,\r\n    color: theme.palette.text.primary,\r\n    wordBreak: 'break-word',\r\n    '& .anchor-link': {\r\n      marginTop: -96,\r\n      position: 'absolute',\r\n    },\r\n    '& pre, pre.language-jsx': {\r\n      margin: theme.spacing(0, 'auto'),\r\n      padding: theme.spacing(4),\r\n      backgroundColor: '#272c34',\r\n      direction: 'ltr',\r\n      borderRadius: 0,\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      maxWidth: 'calc(100vw - 32px)',\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: 'calc(100vw - 32px - 16px)',\r\n      },\r\n    },\r\n    '& code': {\r\n      direction: 'ltr',\r\n      lineHeight: 1.4,\r\n      display: 'inline-block',\r\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n      WebkitFontSmoothing: 'subpixel-antialiased',\r\n      padding: '0 3px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 229, 100, 0.2)' : 'rgba(255, 229, 100, 0.2)',\r\n      fontSize: '.85em',\r\n      borderRadius: 2,\r\n    },\r\n    '& code[class*=\"language-\"]': {\r\n      backgroundColor: '#272c34',\r\n      color: '#fff',\r\n      lineHeight: 1.5,\r\n    },\r\n    '& pre code': {\r\n      fontSize: '.9em',\r\n    },\r\n    '& .token.operator': {\r\n      background: 'transparent',\r\n    },\r\n    '& h1': {\r\n      ...theme.typography.h3,\r\n      fontSize: 40,\r\n      margin: '16px 0',\r\n    },\r\n    '& .description': {\r\n      ...theme.typography.h5,\r\n      margin: '0 0 40px',\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h4,\r\n      fontSize: 30,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h5,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h6,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.subtitle2,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& p, & ul, & ol': {\r\n      marginTop: 0,\r\n      marginBottom: 16,\r\n    },\r\n    '& ul': {\r\n      paddingLeft: 30,\r\n    },\r\n    '& h1, & h2, & h3, & h4': {\r\n      '& code': {\r\n        fontSize: 'inherit',\r\n        lineHeight: 'inherit',\r\n        wordBreak: 'break-all',\r\n      },\r\n      '& .anchor-link-style': {\r\n        display: 'none',\r\n      },\r\n      '&:hover .anchor-link-style': {\r\n        display: 'inline-block',\r\n        padding: '0 8px',\r\n        color: theme.palette.text.secondary,\r\n        '&:hover': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n        '& svg': {\r\n          width: '0.7em',\r\n          height: '0.7em',\r\n          fill: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n    '& table': {\r\n      display: 'block',\r\n      wordBreak: 'normal',\r\n      width: '100%',\r\n      overflowX: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderCollapse: 'collapse',\r\n      marginBottom: '16px',\r\n      borderSpacing: 0,\r\n      overflow: 'hidden',\r\n      '& .prop-name': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n      },\r\n      '& .required': {\r\n        color: theme.palette.type === 'light' ? '#006500' : '#a5ffa5',\r\n      },\r\n      '& .prop-type': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        color: theme.palette.type === 'light' ? '#932981' : '#ffb6ec',\r\n      },\r\n      '& .prop-default': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        borderBottom: `1px dotted ${theme.palette.divider}`,\r\n      },\r\n    },\r\n    '& td': {\r\n      ...theme.typography.body2,\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& td code': {\r\n      lineHeight: 1.6,\r\n    },\r\n    '& th': {\r\n      lineHeight: theme.typography.pxToRem(24),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      color: theme.palette.text.primary,\r\n      whiteSpace: 'pre',\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n    },\r\n    '& blockquote': {\r\n      borderLeft: '5px solid #ffe564',\r\n      backgroundColor: 'rgba(255,229,100,0.2)',\r\n      padding: '4px 24px',\r\n      margin: '24px 0',\r\n      '& p': {\r\n        marginTop: '16px',\r\n      },\r\n    },\r\n    '& a, & a code': {\r\n      color: theme.palette.secondary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n    '& img, video': {\r\n      maxWidth: '100%',\r\n    },\r\n    '& img': {\r\n      display: 'inline-block',\r\n    },\r\n    '& hr': {\r\n      height: 1,\r\n      margin: theme.spacing(6, 0),\r\n      border: 'none',\r\n      flexShrink: 0,\r\n      backgroundColor: theme.palette.divider,\r\n    },\r\n    '& kbd': {\r\n      padding: '2px 5px',\r\n      font: '11px Consolas,Liberation Mono,Menlo,monospace',\r\n      lineHeight: '10px',\r\n      color: '#444d56',\r\n      verticalAlign: 'middle',\r\n      backgroundColor: '#fafbfc',\r\n      border: '1px solid #d1d5da',\r\n      borderRadius: 3,\r\n      boxShadow: 'inset 0 -1px 0 #d1d5da',\r\n    },\r\n    '& .token.property, .token.tag, .token.constant, .token.symbol, .token.deleted': {\r\n      color: 'rgb(252, 146, 158)',\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    maxHeight: 'min(68vh, 1000px)',\r\n  },\r\n});\r\nconst useStyles = makeStyles(styles, { name: 'MarkdownElement', flip: false });\r\n\r\nconst MarkdownElement = React.forwardRef(function MarkdownElement(props, ref) {\r\n  const { className, renderedMarkdown, ...other } = props;\r\n  const classes = useStyles();\r\n  const more = {};\r\n\r\n  if (typeof renderedMarkdown === 'string') {\r\n    more.dangerouslySetInnerHTML = { __html: renderedMarkdown };\r\n  }\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.scrollbarRoot}>\r\n      <div className={clsx(classes.root, 'markdown-body', className)} {...more} {...other} ref={ref} />\r\n    </PerfectScrollbar>\r\n  );\r\n});\r\n\r\nMarkdownElement.propTypes = {\r\n  className: PropTypes.string,\r\n  renderedMarkdown: PropTypes.string,\r\n};\r\n\r\nexport default MarkdownElement;\r\n","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport MarkdownElement from './MarkdownElement';\r\nimport prism from '../../../utils/prism';\r\n\r\nconst HighlightedCode = React.forwardRef(function HighlightedCode(props, ref) {\r\n  const { code, language, ...other } = props;\r\n  const renderedCode = React.useMemo(() => {\r\n    return prism(code.trim(), language);\r\n  }, [code, language]);\r\n\r\n  return (\r\n    <MarkdownElement ref={ref} {...other}>\r\n      <pre>\r\n        <code\r\n          className={`language-${language}`}\r\n          // eslint-disable-next-line react/no-danger\r\n          dangerouslySetInnerHTML={{ __html: renderedCode }}\r\n        />\r\n      </pre>\r\n    </MarkdownElement>\r\n  );\r\n});\r\n\r\nHighlightedCode.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  language: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HighlightedCode;\r\n","import prism from 'prismjs';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-diff';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\n\r\nexport default function highlight(code, language) {\r\n  let prismLanguage;\r\n  switch (language) {\r\n    case 'ts':\r\n      prismLanguage = prism.languages.tsx;\r\n      break;\r\n\r\n    case 'js':\r\n    case 'sh':\r\n      prismLanguage = prism.languages.jsx;\r\n      break;\r\n\r\n    case 'diff':\r\n      prismLanguage = { ...prism.languages.diff };\r\n      prismLanguage.deleted = /^[-].*$/m;\r\n      break;\r\n\r\n    default:\r\n      prismLanguage = prism.languages[language];\r\n      break;\r\n  }\r\n\r\n  if (!prismLanguage) {\r\n    if (language) {\r\n      throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\r\n    } else {\r\n      prismLanguage = prism.languages.jsx;\r\n    }\r\n  }\r\n\r\n  return prism.highlight(code, prismLanguage);\r\n}\r\n","import React from 'react';\r\n\r\nimport { CardActions, makeStyles } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: '8px 24px',\r\n  },\r\n}));\r\n\r\nconst CmtCardActions = ({ className, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardActions className={clsx(classes.root, className, 'CmtCard-Actions')} {...rest}>\r\n      {children}\r\n    </CardActions>\r\n  );\r\n};\r\n\r\nCmtCardActions.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CmtCardActions;\r\n","import React, { useState } from 'react';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport HighlightedCode from './HighlightedCode';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Collapse, IconButton, Snackbar, Tooltip } from '@material-ui/core';\r\nimport CmtCardActions from '../../../../@coremat/CmtCard/CmtCardActions';\r\nimport copy from 'clipboard-copy';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    overflow: 'unset',\r\n  },\r\n  cardContent: {\r\n    position: 'relative',\r\n    paddingBottom: 0,\r\n  },\r\n  cardContentInner: {\r\n    position: 'relative',\r\n    paddingBottom: 40,\r\n  },\r\n  actionButtons: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  collapseStyle: {\r\n    borderBottomRightRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottomLeftRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottom: `4px solid ${theme.palette.primary.main}`,\r\n    overflow: 'hidden',\r\n  },\r\n}));\r\n\r\nconst CodeViewerCard = ({ code, language, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(undefined);\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleCopyClick = async () => {\r\n    await copy(code);\r\n    setSnackbarMessage('The source code has been copied.');\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const showCodeLabel = collapsed ? 'Hide the source' : 'Show the source';\r\n\r\n  return (\r\n    <CmtCard {...rest} className={classes.card}>\r\n      <CmtCardContent className={classes.cardContent}>\r\n        <Box className={classes.cardContentInner}>\r\n          {children}\r\n          {code && (\r\n            <CmtCardActions className={classes.actionButtons}>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={showCodeLabel} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={() => setCollapsed(!collapsed)}>\r\n                  <CodeIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={'Copy the source'} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={handleCopyClick}>\r\n                  <FileCopyOutlinedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </CmtCardActions>\r\n          )}\r\n        </Box>\r\n      </CmtCardContent>\r\n\r\n      <Collapse className={classes.collapseStyle} in={collapsed}>\r\n        <HighlightedCode code={code} language={language} />\r\n      </Collapse>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={handleSnackbarClose} message={snackbarMessage} />\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CodeViewerCard;\r\n","import React from 'react';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeader: {\r\n    padding: 16,\r\n  },\r\n  cardBody: {\r\n    position: 'relative',\r\n  },\r\n  cardContent: {\r\n    padding: 16,\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    zIndex: 1,\r\n  },\r\n  chartTitle: {\r\n    marginBottom: 6,\r\n  },\r\n  chartSubTitle: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nconst StatisticsCard = ({ backgroundColor, title, titleProps, amount, description, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard backgroundColor={backgroundColor} {...rest}>\r\n      <CmtCardHeader className={classes.cardHeader} title={title} titleProps={titleProps} />\r\n      <Box className={classes.cardBody}>\r\n        <CmtAdvCardContent\r\n          className={classes.cardContent}\r\n          title={amount}\r\n          titleProps={{\r\n            variant: 'h1',\r\n            component: 'div',\r\n            className: classes.chartTitle,\r\n          }}\r\n          subTitle={description}\r\n          subTitleProps={{\r\n            className: classes.chartSubTitle,\r\n          }}\r\n          columnSizes={[12, 0]}\r\n        />\r\n        {children}\r\n      </Box>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default StatisticsCard;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#FA744F',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst MissedCallGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"card-img-bottom overflow-hidden\" width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time}({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color5\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#F79071\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#FA744F\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={0}\r\n          stackId=\"2\"\r\n          stroke=\"#FA744F\"\r\n          fill=\"url(#color5)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MissedCallGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneMissed';\r\nimport MissedGraph from './MissedCallGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst MissedCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.missed'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#8DCD03' }}>\r\n        <MissedGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissedCall;\r\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#8d46ef',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport useStyles from './InboundStyle';\r\n\r\nconst InboundGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className={classes.root} width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time} ({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#6166B3\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#544179\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#6200EE\"\r\n          fill=\"url(#color3)\"\r\n          fillOpacity={1}\r\n          type={'monotone'}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default InboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneCallBackIcon from '@material-ui/icons/PhoneCallback';\r\nimport InboundGraph from './InboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst InboundRules = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.inbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ color: '#ffc107', icon: <PhoneCallBackIcon /> }}>\r\n        <InboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboundRules;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst HeaderChart = props => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const _stroke = ctx.stroke;\r\n    let label = [];\r\n    let countInbound = [];\r\n    let countOutbound = [];\r\n    let countMissed = [];\r\n    ctx.stroke = function() {\r\n      ctx.save();\r\n      ctx.shadowColor = '#4C4C4C';\r\n      ctx.shadowBlur = 10;\r\n      ctx.shadowOffsetX = 2;\r\n      ctx.shadowOffsetY = 2;\r\n      _stroke.apply(this, arguments);\r\n      ctx.restore();\r\n    };\r\n    const inbound = props.inbound;\r\n    const outbound = props.outbound;\r\n    const missed = props.missed;\r\n    for (var i = 0; i < inbound.length; i++) {\r\n      label[i] = inbound[i].start_time;\r\n      countInbound[i] = inbound[i].count;\r\n      countOutbound[i] = outbound[i] !== undefined ? outbound[i].count : 0;\r\n      countMissed[i] = missed[i] !== undefined ? missed[i].count : 0;\r\n    }\r\n\r\n    return {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: 'Inbound Calls',\r\n          data: countInbound,\r\n          borderColor: '#7F39FB',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#7F39FB',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#7F39FB',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Outbound Calls',\r\n          data: countOutbound,\r\n          borderColor: '#FF8C00',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#FF8C00',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#FF8C00',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Missed Calls',\r\n          data: countMissed,\r\n          borderColor: '#0795F4',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#0795F4',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#0795F4',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <Line data={data} height={100} options={options} />;\r\n};\r\n\r\nexport default HeaderChart;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    marginRight: 15,\r\n  },\r\n});\r\n\r\nconst HeaderChartItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box bgcolor={item.bgColor} color={item.color} className={classes.avatar}>\r\n        {item.icon}\r\n      </Box>\r\n      <Box fontSize={16} fontWeight={700} color=\"text.primary\">\r\n        {item.label}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default HeaderChartItem;\r\n","import React from 'react';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport SiteTrafficGraph from './HeaderChart';\r\nimport { PhoneCallback, PhoneMissed, PhoneForwarded } from '@material-ui/icons';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Item from './HeaderChartItem';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles(theme => ({\r\n  scrollbarRoot: {\r\n    maxHeight: 350,\r\n  },\r\n  searchAction: {\r\n    position: 'relative',\r\n    width: 38,\r\n    height: 38,\r\n  },\r\n  searchActionBar: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 2,\r\n    zIndex: 1,\r\n  },\r\n  cardContentRoot: {\r\n    '& .MuiGrid-container': {\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.15),\r\n    color: theme.palette.success.main,\r\n    padding: '2px 10px',\r\n    borderRadius: 30,\r\n  },\r\n  optionList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 24,\r\n\r\n    '& > *:not(:last-child)': {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up('md')]: {\r\n        marginRight: 40,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SiteTraffic = props => {\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n  const actions = [\r\n    {\r\n      label: <IntlMessages id={'select.menu.weekly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('weekly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.monthly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('monthly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.yearly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('yearly');\r\n      },\r\n    },\r\n  ];\r\n  const list = [\r\n    {\r\n      icon: <PhoneCallback />,\r\n      label: <IntlMessages id={'dashboard.inbound'} />,\r\n      bgColor: '#C8BDFA',\r\n      color: '#7F39FB',\r\n    },\r\n    {\r\n      icon: <PhoneMissed />,\r\n      label: <IntlMessages id={'dashboard.missed'} />,\r\n      bgColor: '#ADD8E6',\r\n      color: '#0795F4',\r\n    },\r\n    {\r\n      icon: <PhoneForwarded />,\r\n      label: <IntlMessages id={'dashboard.outbound'} />,\r\n      bgColor: '#FBF3D2',\r\n      color: '#FF8C00',\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CmtAdvCard>\r\n        <CmtCardHeader\r\n          className={clsx(classes.headerRoot, 'pt-4')}\r\n          title={<IntlMessages id={'dashboard.statistics'} />}\r\n          actionsPos=\"top-corner\"\r\n          actions={actions}\r\n          style={{ height: '10px' }}></CmtCardHeader>\r\n        <CmtAdvCardContent className={classes.cardContentRoot}>\r\n          <CmtList\r\n            className={classes.optionList}\r\n            data={list}\r\n            style={{ height: '25px' }}\r\n            renderRow={(item, index) => <Item key={index} item={item} />}\r\n          />\r\n          <Box>\r\n            <SiteTrafficGraph inbound={props.inbound} outbound={props.outbound} missed={props.missed} />\r\n          </Box>\r\n        </CmtAdvCardContent>\r\n      </CmtAdvCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteTraffic;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#4E8D7C',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst OutboundGraph = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <Box className={classes.tooltip}>\r\n                {(data.payload[0].payload.start_time)} ({data.payload[0].payload.count})\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color12\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#ADCE74\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#4E8D7C\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#4E8D7C\"\r\n          fill=\"url(#color12)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default OutboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneForwarded';\r\nimport OutboundGraph from './OutboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst OutboundCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.outbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#E00930' }}>\r\n        <OutboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboundCall;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport clsx from 'clsx';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  containerRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  containerRootCenter: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  contentRoot: {\r\n    position: 'relative',\r\n  },\r\n  contentRootCenter: {\r\n    marginLeft: 0,\r\n    marginTop: 13,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n  },\r\n}));\r\n\r\nconst CounterCard = ({\r\n  icon,\r\n  number,\r\n  numberProps,\r\n  label,\r\n  labelProps,\r\n  counterProps,\r\n  color,\r\n  gradientDirection,\r\n  alignCenter,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtCard gradientDirection={gradientDirection} {...rest}>\r\n      <CmtCardContent>\r\n        <Box\r\n          className={clsx(classes.containerRoot, 'container', {\r\n            [classes.containerRootCenter]: alignCenter,\r\n          })}\r\n          color={color}>\r\n          {typeof icon === 'string' ? <CmtImage src={icon} alt={label} /> : icon}\r\n          <Box\r\n            ml={{ xs: 3, xl: 5 }}\r\n            className={clsx(classes.contentRoot, 'content-wrapper', {\r\n              [classes.contentRootCenter]: alignCenter,\r\n            })}>\r\n            <Box component=\"h3\" fontSize={{ xs: 20, xl: 24 }} className={clsx(classes.titleRoot, 'title')} {...numberProps}>\r\n              {typeof number === 'string' ? (\r\n                number\r\n              ) : (\r\n                <CountUp start={0} end={number || 0} useEasing={false} separator={','} {...counterProps} />\r\n              )}\r\n            </Box>\r\n            <Box component=\"p\" {...labelProps}>\r\n              {label}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCounterCard.prototype = {\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  numberProps: PropTypes.object,\r\n  label: PropTypes.string,\r\n  labelProps: PropTypes.object,\r\n  counterProps: PropTypes.object,\r\n  color: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  alignCenter: PropTypes.bool,\r\n};\r\n\r\nCounterCard.defaultProps = {\r\n  color: 'common.white',\r\n  gradientDirection: '180deg',\r\n  alignCenter: false,\r\n};\r\n\r\nexport default CounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport { GroupOutlined } from '@material-ui/icons';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst TasksCounterCard = () => {\r\n  const [extensions, setExtensions] = useState('');\r\n  const [param] = useState({ token: localStorage.getItem('token') });\r\n  useEffect(() => {\r\n    api\r\n      .getExtensions(param)\r\n      .then(resp => setExtensions(resp.data.data.activeExtension + '/' + resp.data.data.totalExtension));\r\n  }, [param]);\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<GroupOutlined />}\r\n        number={String(extensions)}\r\n        label={<IntlMessages id={'dashboard.extensions'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksCounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cable from '@material-ui/icons/Link';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst Trunks = () => {\r\n  let totalquery = 'select * from public.externalline order by fkiddn ASC';\r\n  let trunksUpQuery = 'SELECT count(ipincontactreg) FROM gateway';\r\n\r\n  const [paramtotal] = useState({ token: localStorage.getItem('token'), query: totalquery });\r\n  const [paramTrunksUp] = useState({ token: localStorage.getItem('token'), query: trunksUpQuery });\r\n  const [totalTrunks, setTotalTrunks] = useState('');\r\n\r\n  const [trunksUp, setTrunksUp] = useState([{ count: 0 }]);\r\n  useEffect(() => {\r\n    api.getTotalTrunks(paramtotal).then(resp => setTotalTrunks(JSON.parse(resp.data.data)));\r\n    api.getTrunksUp(paramTrunksUp).then(resp => setTrunksUp(JSON.parse(resp.data.data)));\r\n  }, [paramtotal, paramTrunksUp]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<Cable />}\r\n        number={String(trunksUp[0].count) + '/' + String(totalTrunks.length)}\r\n        label={<IntlMessages id={'dashboard.trunks'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trunks;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport PhoneIcon from '@material-ui/icons/PhoneOutlined';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nconst ActiveCallCount = () => {\r\n  const [response, setactiveCount] = useState();\r\n  const [param] = useState({\r\n    token: localStorage.getItem('token'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.getActiveCallCount(param).then(resp => setactiveCount(resp.data.data.count));\r\n  }, [param]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<PhoneIcon />}\r\n        number={String(response)}\r\n        label={<IntlMessages id={'dashboard.active'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#EA4C4C -18.96%', '#C14545 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveCallCount;\r\n","export function Logout() {\r\n  localStorage.removeItem('login');\r\n  localStorage.removeItem('token');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5AnsweredCalls() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n        select\r\n        dn,\r\n        display_name\r\n        from\r\n        users_view\r\n      ), inb as (\r\n        select \r\n        dst_dn,\r\n        count(distinct(call_id)) as cntInbound\r\n        from\r\n        cl_segments_view\r\n        where start_time >= date_trunc('day',timestamp '${startTime}')\r\n        and dst_dn_type = 0\r\n        and dst_answer_time is not null\r\n        and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n        group by dst_dn\r\n      )\r\n      \r\n      select\r\n        age.display_name,\r\n        sum(coalesce(inb.cntInbound,0)) as total,\r\n        age.dn\r\n        from age\r\n        left outer join inb on inb.dst_dn = age.dn\r\n        where age.dn like '%'\r\n        group by age.display_name,age.dn\r\n        order by sum(coalesce(inb.cntInbound,0)) desc\r\n        limit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5answercalls'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && parseInt(data[1]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && parseInt(data[2]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && parseInt(data[3]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && parseInt(data[4]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Inbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5inbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name.split(':')[0]} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name.split(':')[0]} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name.split(':')[0]} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name.split(':')[0]} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name.split(':')[0]} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Outbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5outbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { QueryBuilder } from '@material-ui/icons';\r\n\r\nexport default function DashboardTop5TalkTime() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n\tsum(dst_end_time-dst_answer_time) as durationInb,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n\tsum(dst_end_time - dst_answer_time) as duration,  \r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n    select\r\n    age.display_name,\r\n\tage.dn,\r\n\tsum(outb.duration+inb.durationInb)\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn\r\n\twhere outb.duration+inb.durationInb is not null\r\n\tgroup by age.display_name,age.dn\r\n\torder by sum(outb.duration+inb.durationInb) desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  const totalseconds = items => {\r\n    let total = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i]?.sum.includes('.')) {\r\n        total += parseInt(items[i]?.sum.split('.')[0]) * 24 * 60 * 60;\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      } else {\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const checkDots = timeString => {\r\n    if (timeString === undefined) {\r\n      return '';\r\n    }\r\n    if (timeString?.includes('.')) {\r\n      let tempHour = parseInt(timeString.split('.')[0]) * 24 + parseInt(timeString.split('.')[1].split(':')[0]);\r\n      return tempHour + 'h ' + timeString.split(':')[1] + 'm ' + timeString.split(':')[2] + 's';\r\n    } else {\r\n      return timeString?.split(':')[0] + 'h ' + timeString?.split(':')[1] + 'm ' + timeString?.split(':')[2] + 's';\r\n    }\r\n  };\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5talktime'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[0]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[0]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[1]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[1]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[2]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[2]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[3]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[3]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[4]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[4]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DashboardTop5AnsweredCalls from './DashboardTop5AnsweredCalls';\r\nimport DashboardTop5Inbound from './DashboardTop5Inbound';\r\nimport DashboardTop5Outbound from './DashboardTop5Outbound';\r\nimport DashboardTop5TalkTime from './DashboardTop5TalkTime';\r\n\r\nexport default function DashboardTops() {\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <Grid item md={3}>\r\n          <DashboardTop5TalkTime />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5AnsweredCalls />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Inbound />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Outbound />\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MissedCalls from './MissedCalls';\r\nimport InboundRules from './InboundRules';\r\nimport HeaderChartComponent from './HeaderChartComponent';\r\nimport OutboundCall from './OutboundCall';\r\nimport Extensions from './Extensions';\r\nimport * as api from '../../../api/api';\r\nimport Trunks from './TrunksUp';\r\nimport ActiveCallCount from './ActiveCallCount';\r\nimport { useHistory } from 'react-router';\r\nimport { Logout } from 'services/auth/logout';\r\nimport DashboardTops from './Tops';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nconst breadcrumbs = [\r\n  { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n  { label: <IntlMessages id={'sidebar.dashboard'} />, isActive: true },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  orderLg1: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SamplePage = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  let date = new Date();\r\n\r\n  let totalInbound = 0;\r\n  let totalOutbound = 0;\r\n  let totalMissed = 0;\r\n  const [param, setParam] = useState(date.getDate());\r\n  const [inboundcalls, setInbound] = useState([]);\r\n  const [outboundcalls, setOutbound] = useState([]);\r\n  const [missedcalls, setMissedCalls] = useState([]);\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n  const sort = array => {\r\n    return array.sort((a, b) => {\r\n      let da = new Date(a.start_time.split('-')[1] + '/' + a.start_time.split('-')[0] + '/' + a.start_time.split('-')[2]);\r\n      let db = new Date(b.start_time.split('-')[1] + '/' + b.start_time.split('-')[0] + '/' + b.start_time.split('-')[2]);\r\n      return da - db;\r\n    });\r\n  };\r\n  if (missedcalls.length > 0) {\r\n    for (let i = 0; i < missedcalls.length; i++) {\r\n      totalMissed += parseInt(missedcalls[i].count);\r\n    }\r\n  }\r\n\r\n  if (outboundcalls.length > 0) {\r\n    for (let i = 0; i < outboundcalls.length; i++) {\r\n      totalOutbound += parseInt(outboundcalls[i].count);\r\n    }\r\n  }\r\n\r\n  if (inboundcalls.length > 0) {\r\n    for (let i = 0; i < inboundcalls.length; i++) {\r\n      totalInbound += parseInt(inboundcalls[i].count);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMissedCalls(param - 1)\r\n      .then(resp => setMissedCalls(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getOutboundCalls(param - 1)\r\n      .then(resp => setOutbound(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getInboundCalls(param - 1)\r\n      .then(resp => {\r\n        setInbound(JSON.parse(resp.data.data));\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [param, history]);\r\n\r\n  const inboundObject = inboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const outboundObject = outboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const missedObject = missedcalls.map(data => ({\r\n    start_time: data.times,\r\n    count: data.count,\r\n  }));\r\n\r\n  for (let d = new Date(date.getFullYear(), date.getMonth(), 1); d <= date; d.setDate(d.getDate() + 1)) {\r\n    if (!inboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      inboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!outboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      outboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!missedObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      missedObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n  }\r\n\r\n  const fetchData = array => {\r\n    const arr = sort(array);\r\n    if (param <= 7) {\r\n      return arr.slice(Math.max(arr.length - param, 0));\r\n    } else {\r\n      return arr;\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < inboundObject.length; i++) {\r\n    inboundObject[i].start_time = getNewDate(inboundObject[i].start_time);\r\n  }\r\n\r\n  for (let i = 0; i < outboundObject.length; i++) {\r\n    outboundObject[i].start_time = getNewDate(outboundObject[i].start_time);\r\n  }\r\n  for (let i = 0; i < missedObject.length; i++) {\r\n    missedObject[i].start_time = getNewDate(missedObject[i].start_time);\r\n  }\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"sidebar.dashboard\" />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <InboundRules setParam={setParam} date={date} data={fetchData(inboundObject)} total={totalInbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <OutboundCall setParam={setParam} date={date} data={fetchData(outboundObject)} total={totalOutbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <MissedCalls setParam={setParam} date={date} data={fetchData(missedObject)} total={totalMissed} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Grid item xs={12} xl={12} className={classes.orderLg1}>\r\n        <GridContainer>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <ActiveCallCount />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Extensions />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Trunks />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DashboardTops />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <HeaderChartComponent\r\n              date={date}\r\n              setParam={setParam}\r\n              inbound={fetchData(inboundObject)}\r\n              missed={fetchData(missedObject)}\r\n              outbound={fetchData(outboundObject)}\r\n            />\r\n          </Grid>\r\n        </GridContainer>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SamplePage;\r\n","import React from 'react';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, IconButton, InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  },\r\n  errorNumber: {\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 800,\r\n    lineHeight: 1,\r\n    marginBottom: 30,\r\n    textShadow: '10px 6px 8px hsla(0,0%,45.9%,.8)',\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .searchBtn': {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 50px 5px 15px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      '&:focus': {\r\n        boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Error404 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box fontSize={{ xs: 100, sm: 160 }} className={classes.errorNumber}>\r\n        404\r\n      </Box>\r\n      <Box fontSize={{ xs: 16, sm: 24 }} mb={8} color=\"grey.500\">\r\n        <IntlMessages id=\"extraPages.404Msg\" />\r\n      </Box>\r\n      <Box className={classes.searchRoot}>\r\n        <InputBase placeholder={'Search...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <IconButton className=\"searchBtn\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <IntlMessages id=\"extraPages.goHome\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/auth/auth-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authWrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: props => (props.variant === 'bgColor' ? `URL(${bgImage})` : ''),\r\n    backgroundPosition: props => (props.variant === 'bgColor' ? 'center center' : ''),\r\n    backgroundRepeat: props => (props.variant === 'bgColor' ? 'no-repeat' : ''),\r\n    backgroundSize: props => (props.variant === 'bgColor' ? 'cover' : ''),\r\n    position: 'relative',\r\n    padding: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: props => (props.variant === 'bgColor' ? alpha(theme.palette.primary.main, 0.5) : ''),\r\n    },\r\n  },\r\n  authCard: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    maxWidth: props => (props.variant === 'default' ? '850px' : '550px'),\r\n    width: '100%',\r\n    boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.14), 0px 3px 1px rgba(0, 0, 0, 0.12), 0px 1px 5px rgba(0, 0, 0, 0.2)',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: props => (props.variant === 'default' ? '1050px' : '750px'),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AuthWrapper = ({ children, variant }) => {\r\n  const classes = useStyles({ variant });\r\n  return (\r\n    <Box className={classes.authWrap}>\r\n      <Box className={classes.authCard}>{children}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Button, Link } from '@mui/material';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport GoogleChrome from '../../../../assets/Chrome_Logo.svg';\r\nimport Firefox from '../../../../assets/Firefox_Logo.svg';\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n\r\n  authContent: {\r\n    padding: 30,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  formcontrolLabelRoot: {\r\n    '& .MuiFormControlLabel-label': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst SignIn = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  let history = useHistory();\r\n  const [param, setParam] = useState({\r\n    name: '',\r\n    password: '',\r\n    type: 'console',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [loginState, setLoginState] = useState();\r\n  let data = [];\r\n  var myDate = new Date();\r\n  myDate.setDate(myDate.getDate() + 1);\r\n  data.push(myDate);\r\n\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    api\r\n      .getLogin(param)\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          setLoginState(resp.status);\r\n          localStorage.setItem('company', resp.data.data?.company || '');\r\n          localStorage.setItem('username', param.name || '');\r\n          localStorage.setItem('token', resp.data.data.token);\r\n          var tomorrow = new Date();\r\n          tomorrow.setDate(tomorrow.getDate() + 1);\r\n          localStorage.setItem('exptime',tomorrow.getTime());\r\n          if (resp.data.data?.company) {\r\n            if(document.title.charAt(7) === \"-\"){\r\n              document.title = document.title.replace('-', `${resp.data.data?.company} -`);\r\n            }else{\r\n              var newTitle = `ESNEKS ${resp.data.data?.company} - V${process.env.REACT_APP_VERSION} - Admin Dashboard`\r\n              document.title = newTitle;\r\n            }\r\n          }\r\n          history.push('/dashboard');\r\n        }\r\n      })\r\n      .catch(response => {\r\n        NotificationManager.error(<IntlMessages id={'wrongpassword'} />, '', 3000);\r\n      });\r\n  };\r\n\r\n  function addNotification() {\r\n    onSubmit();\r\n  }\r\n\r\n  if (loginState === 200) {\r\n    localStorage.setItem('login', loginState);\r\n  }\r\n\r\n  let [, setVersion] = useState('0.0.0');\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const browser = (function() {\r\n    const test = function(regexp) {\r\n      return regexp.test(window.navigator.userAgent);\r\n    };\r\n    switch (true) {\r\n      case test(/edg/i):\r\n        return 'Edge';\r\n      case test(/opr/i) || test(/opera/i):\r\n        return 'Opera';\r\n      case test(/chrome/i) && !!window.chrome:\r\n        return 'Chrome';\r\n      case test(/MSIE/i):\r\n        return 'Internet Explorer 10-';\r\n      case test(/trident/i):\r\n        return 'Internet Explorer 11';\r\n      case test(/firefox/i):\r\n        return 'Firefox';\r\n      case test(/safari/i):\r\n        return 'Safari';\r\n      default:\r\n        return 'Other';\r\n    }\r\n  })();\r\n\r\n  useEffect(() => {\r\n    if (browser === 'Chrome' || browser === 'Firefox') {\r\n      handleClose();\r\n    }\r\n    api.getVersion().then(response => {\r\n      setVersion(response.data.version);\r\n    });\r\n  }, [browser]);\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      <NotificationContainer />\r\n\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/login-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={1}>\r\n          <CmtImage src={'/images/favicon.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot} style={{ fontFamily: 'Roboto' }}>\r\n          <IntlMessages id={'login'} />\r\n        </Typography>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addNotification(e);\r\n          }}>\r\n          <Box mb={1}>\r\n            <TextField\r\n              label={<IntlMessages id={'username'} />}\r\n              fullWidth\r\n              onChange={event => {\r\n                setParam({\r\n                  name: event.target.value,\r\n                  password: param.password,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id={'password'} />}\r\n              fullWidth\r\n              id=\"pass\"\r\n              onChange={event => {\r\n                setParam({\r\n                  name: param.name,\r\n                  password: event.target.value,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <IntlMessages id={'language'} />:\r\n            <LanguageSwitcher />\r\n          </div>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              <IntlMessages id={'login'} />\r\n            </Button>\r\n            <Link underline=\"none\" href={`${window.location.protocol}//${window.location.hostname}:3005`}>\r\n              <IntlMessages id={'userNagentLogin'} />\r\n            </Link>\r\n          </Box>\r\n        </form>\r\n        <p style={{ textAlign: 'center' }}>V{process.env.REACT_APP_VERSION}</p>\r\n        <Box>\r\n        <Typography style={{ textAlign: 'center', marginBottom: '1rem' }} component=\"div\" variant=\"h5\">\r\n          <IntlMessages id={'chooseBrowser'} />\r\n        </Typography>\r\n        <GridContainer>\r\n          <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            <Avatar alt=\"Google Chrome\" src={GoogleChrome} sx={{ mr: 1 }} /> <b>Google Chrome</b>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            <Avatar alt=\"Mozilla Firefox\" src={Firefox} sx={{ mr: 1 }} /> <b>Mozilla Firefox</b>\r\n          </Grid>\r\n        </GridContainer>\r\n      </Box>\r\n        {dispatch(AuhMethods[method].getSocialMediaIcons())}\r\n\r\n        <ContentLoader />\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\" style={{ textAlign: 'center' }}>\r\n          <IntlMessages id={'changeBrowser'} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\" component=\"div\">\r\n            <Typography style={{ textAlign: 'justify', marginBottom: '1rem' }} component=\"div\" variant=\"h5\">\r\n              <IntlMessages id={'chooseBrowser'} />\r\n            </Typography>\r\n            <GridContainer>\r\n              <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <Avatar alt=\"Google Chrome\" src={GoogleChrome} sx={{ mr: 1 }} /> <b>Google Chrome</b>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <Avatar alt=\"Mozilla Firefox\" src={Firefox} sx={{ mr: 1 }} /> <b>Mozilla Firefox</b>\r\n              </Grid>\r\n            </GridContainer>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>\r\n            <IntlMessages id={'close'} />\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const AppHeaderHeight = 72;\r\nexport const AppHeaderHeightSm = 64;\r\nexport const AppFooterHeight = 72;\r\nexport const AppFooterHeightSm = 64;\r\nexport const AppMainContentPadding = 60;\r\nexport const InBuildAppHeaderHeight = 70;\r\n\r\nexport const InBuildAppSidebarHeaderHeight = 86;\r\nexport const MailAppContentHeaderHeight = 78;\r\n\r\nexport const TaskDetailHeaderHeight = 72;\r\nexport const TaskDetailAddCommentHeight = 72;\r\n\r\nexport const ChatSidebarHeaderHeight = 124;\r\nexport const ChatSidebarTabContainerHeight = 49;\r\nexport const ChatFooterHeight = 70;\r\nexport const CurrentAuthMethod = 'basic'; //jwtAuth,firebase,basic\r\n\r\nexport const getAppSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppHeaderHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getMailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getContactContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskDetailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getWallHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport SignIn from '../../@jumbo/components/Common/authComponents/SignIn';\r\n\r\nconst Login = () => <SignIn variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport const localeText ={\r\n    toolbarExport: <IntlMessages id={'export'} />,\r\n    toolbarExportPrint: <IntlMessages id={'print'} />,\r\n    toolbarExportCSV: <IntlMessages id={'downloadasCSV'} />,\r\n    columnMenuUnsort: <IntlMessages id={'unsort'} />,\r\n    columnMenuSortAsc: <IntlMessages id={'sortbyASC'} />,\r\n    columnMenuSortDesc: <IntlMessages id={'sortbyDESC'} />,\r\n    columnMenuFilter: <IntlMessages id={'filter'} />,\r\n    columnMenuHideColumn: <IntlMessages id={'hide'} />,\r\n    columnMenuShowColumns: <IntlMessages id={'showcolumns'} />,\r\n    noRowsLabel: <IntlMessages id={'norows'} />,\r\n    columnsPanelTextFieldLabel: <IntlMessages id={'findColumn'} />,\r\n    columnsPanelTextFieldPlaceholder: <IntlMessages id={'columnTitle'} />,\r\n    columnsPanelDragIconLabel: <IntlMessages id={'reorderColumn'} />,\r\n    columnsPanelShowAllButton: <IntlMessages id={'showAll'} />,\r\n    columnsPanelHideAllButton: <IntlMessages id={'hideAll'} />\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { Switch, Menu, MenuItem } from '@mui/material';\r\nimport * as api from 'api/api';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function AgentTable({ rows, setReloadValues }) {\r\n  const [value, setValue] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [agentId, setAgentId] = useState('');\r\n  useEffect(() => {\r\n    api.getBreakNums().then(resp => setValue([...JSON.parse(resp.data)]));\r\n  }, []);\r\n\r\n  const handleChangeRecordAuth = (event, agentId) => {\r\n    api.setAgentsRecordListenAuthByAgentId(agentId, event.target.checked).then(res => {\r\n      setReloadValues(agentId + event + new Date().getTime());\r\n    });\r\n  };\r\n  const handleChangeQueueAuth = (event, agentId) => {};\r\n  const handleChangeStatus = (event, agentId) => {\r\n    if (!event.target.checked) {\r\n      setAgentId(agentId);\r\n      setAnchorEl(event.currentTarget);\r\n    } else {\r\n      api.changeAgentStatus(agentId).then(res => {\r\n        setReloadValues(agentId + event + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n  const handleClose = value => {\r\n    setAnchorEl(null);\r\n    const reg = /^\\d+$/;\r\n    if (reg.test(value)) {\r\n      api.changeSessionStatus(agentId).then(resp => {\r\n        setReloadValues(agentId + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n  const handleEndOfShift = () => {\r\n    setAnchorEl(null);\r\n    api.changeSessionStatus(agentId).then(() => {\r\n      api.qstatus({ agentDn: agentId, token: localStorage.getItem('token') });\r\n      setReloadValues(agentId + new Date().getTime());\r\n    });\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  const column = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    { field: 'id', headerName: <IntlMessages id={'agentnumber'} />, width: 300 },\r\n    { field: 'displayname', headerName: <IntlMessages id={'agentname'} />, width: 500 },\r\n    {\r\n      field: 'status',\r\n      headerName: <IntlMessages id={'stateRow'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch\r\n            checked={params.value === 'Active' ? true : false}\r\n            onChange={event => handleChangeStatus(event, params.id)}\r\n          />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'recordAuth',\r\n      headerName: <IntlMessages id={'reacordlistenauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeRecordAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'queueAuth',\r\n      headerName: <IntlMessages id={'agentqueueauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeQueueAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Agent Status'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Agent Durum'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Agentstatus'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Agentenstatus'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"rows\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam Agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Name des Agenten'\r\n                    : ''\r\n                }\r\n                value=\"displayname\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Status'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Statusagent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenstatus'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper>\r\n        <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n          <MenuItem onClick={() => handleEndOfShift()}>\r\n            <IntlMessages id={'shift.end'} />\r\n          </MenuItem>\r\n          {value.map((item, index) => (\r\n            <MenuItem key={index} onClick={() => handleClose(item.value)}>\r\n              {item.value} {item.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <div style={{ height: 700, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={column}\r\n            pageSize={100}\r\n            rowsPerPageOptions={[10, 25, 50, 100]}\r\n            localeText={localeText}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport default function AgentList() {\r\n  const [response, setResponse] = useState([]);\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  useEffect(() => {\r\n    api.getAgentList({ token: localStorage.getItem('token') }).then(resp => {\r\n      let responseStatus = resp.data.data;\r\n      api.getAgentsRecordListenAuth().then(result => {\r\n        let recordAuths = JSON.parse(result.data.data);\r\n        for (let i = 0; i < responseStatus.length; i++) {\r\n          for (let j = 0; j < recordAuths.length; j++) {\r\n            if (responseStatus[i].agentNumber === recordAuths[j].agent_num) {\r\n              responseStatus[i].recordAuth = recordAuths[j].record_listen === 'True';\r\n            }\r\n          }\r\n        }\r\n        setResponse(responseStatus);\r\n      });\r\n    });\r\n  }, [reloadValues]);\r\n  const createData = (num,id, displayname, status, recordAuth) => {\r\n    return {num, id, displayname, status, recordAuth };\r\n  };\r\n  const rows = response.map((dataValue,index) =>\r\n    createData(\r\n      index+1,\r\n      dataValue.agentNumber,\r\n      dataValue.agentName,\r\n      dataValue.agentState === 'True' ? 'Active' : 'Passive',\r\n      dataValue.recordAuth,\r\n    ),\r\n  );\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'reports.callcenter'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.status'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.status'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Table rows={rows} setReloadValues={setReloadValues} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  textCapital: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  textAcc: {\r\n    textAlign: 'center',\r\n    '& a': {\r\n      marginLeft: 4,\r\n    },\r\n  },\r\n  alrTextRoot: {\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('sm')]: {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignUp = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const [name, setName] = useState('Demo User');\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const [password, setPassword] = useState('demo#123');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onRegister({ name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/sign-up-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={7}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          Create an account\r\n        </Typography>\r\n        <form>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.name\" />}\r\n              fullWidth\r\n              onChange={event => setName(event.target.value)}\r\n              defaultValue={name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id=\"appModule.password\" />}\r\n              fullWidth\r\n              onChange={event => setPassword(event.target.value)}\r\n              defaultValue={password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection={{ xs: 'column', sm: 'row' }}\r\n            alignItems={{ sm: 'center' }}\r\n            justifyContent={{ sm: 'space-between' }}\r\n            mb={3}>\r\n            <Box mb={{ xs: 2, sm: 0 }}>\r\n              <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n                <IntlMessages id=\"appModule.regsiter\" />\r\n              </Button>\r\n            </Box>\r\n\r\n            <Typography className={classes.alrTextRoot}>\r\n              <NavLink to=\"/signin\">\r\n                <IntlMessages id=\"signUp.alreadyMember\" />\r\n              </NavLink>\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n\r\n        <Box mb={3}>{dispatch(AuhMethods[method].getSocialMediaIcons())}</Box>\r\n\r\n        <Typography className={classes.textAcc}>\r\n          Have an account?\r\n          <NavLink to=\"/signin\">Sign In</NavLink>\r\n        </Typography>\r\n        <ContentLoader />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignUp from '../../@jumbo/components/Common/authComponents/SignUp';\r\n\r\nconst Register = () => <SignUp variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Register;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport { getQueueNumber } from 'api/api';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nexport default function CallLogtherFilters({\r\n  setDirectionApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setQueueDn,\r\n  setAnswerStatus,\r\n}) {\r\n  useEffect(() => {\r\n    getQueueNumber().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  let [queues, setQueues] = useState([]);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  let [directionSelect, setDirectionSelect] = useState('');\r\n  const handleDirectionSelect = event => {\r\n    setDirectionSelect(event.target.value);\r\n    setDirectionApi(event.target.value);\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [stateSelect, setStateSelect] = useState('');\r\n  const handleChangeStateSelect = event => {\r\n    setStateSelect(event.target.value);\r\n    setAnswerStatus(event.target.value);\r\n  };\r\n  let [advancedFilter, setAdvancedFilter] = useState([]);\r\n  const handleChangeAdvancedFilterSelect = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setAdvancedFilter(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  const handleChangeQueueSelect = event => {\r\n    if (event.target.value === 'all') {\r\n      setQueueSelect('');\r\n      setQueueDn('');\r\n    } else {\r\n      setQueueSelect(event.target.value);\r\n      setQueueDn(event.target.value);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!advancedFilter.includes('Queue')) {\r\n      setQueueDn('');\r\n      setQueueSelect('');\r\n    }\r\n  }, [advancedFilter, setQueueDn]);\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CompareArrowsIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'directionfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={directionSelect}\r\n                  label={<IntlMessages id={'direction'} />}\r\n                  onChange={handleDirectionSelect}>\r\n                  <MenuItem value=\"all\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' ||\r\n                sourceFilterSelect === 'numberfilter' ||\r\n                sourceFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : sourceFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' ||\r\n                targetFilterSelect === 'numberfilter' ||\r\n                targetFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : targetFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <QuestionAnswerIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={stateSelect}\r\n                  label={<IntlMessages id={'stateFilter'} />}\r\n                  onChange={handleChangeStateSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'CallLog.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'nonanswered'}>\r\n                    <IntlMessages id={'CallLog.filter.unanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'missed'}>\r\n                    <IntlMessages id={'missedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'transfered'}>\r\n                    <IntlMessages id={'dailysummary.transfer'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={advancedFilter}\r\n                  label={<IntlMessages id={'CallLog.filter.filter3'} />}\r\n                  onChange={handleChangeAdvancedFilterSelect}\r\n                  renderValue={() => \"\"}>\r\n                  <MenuItem value={'Queue'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Queue') > -1} />\r\n                    <ContactPhoneIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {advancedFilter.includes('Queue') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"queue-label\">\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"queue-label\"\r\n                    value={queueSelect}\r\n                    label={<IntlMessages id={'queueFilter'} />}\r\n                    onChange={handleChangeQueueSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {queues.map(que => (\r\n                      <MenuItem key={que.id} value={que.dn}>\r\n                        {que.dn} - {que.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog, getCallLogCount } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLogDateFilter from './DateFilter';\r\nimport CallLogtherFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallListeningFilter({ setData, limit, offset, setCount }) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [directionApi, setDirectionApi] = useState('');\r\n  let [directionSql, setDirectionSql] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n  let [didNumber, setDidNumber] = useState('');\r\n  let [queueDn, setQueueDn] = useState('');\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [answerStatusSql, setAnswerStatusSql] = useState('');\r\n\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  useEffect(() => {\r\n    if (directionApi === 'all') {\r\n      setDirectionSql('');\r\n    } else if (directionApi === 'inb') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'out') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%1' and\");\r\n    } else if (directionApi === 'agent') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'ques') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) not like '%0' and\");\r\n    }\r\n  }, [directionApi]);\r\n\r\n  useEffect(() => {\r\n    if (answerStatus === 'all') {\r\n      setAnswerStatusSql('');\r\n    } else if (answerStatus === 'answered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'answered'\");\r\n    } else if (answerStatus === 'nonanswered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'nonanswered'\");\r\n    } else if (answerStatus === 'transfered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'transfered'\");\r\n    } else if (answerStatus === 'missed') {\r\n      setAnswerStatusSql(\r\n        \"where statusofcall != 'transfered' and statusofcall != 'answered' and statusofcall != 'nonanswered'\",\r\n      );\r\n    }\r\n  }, [answerStatus]);\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as(  \r\n  SELECT\r\n  call_id, \r\n  src_did,\r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording') as recording_url,  \r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  when (act >= 400 and dst_dn_type = 13) then 'dışarı'\r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%'\r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time,seg_order asc\r\n  )\r\n  select \r\n  * \r\n  from cte2 \r\n  ${answerStatusSql} \r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as(  \r\n  SELECT\r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%' \r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax} \r\n  )\r\n  )select \r\n  count(*)\r\n  from cte2 ${answerStatusSql}`;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n        setDidNumber('');\r\n      }\r\n    } else if (sourceFilterText.startsWith('didno====')) {\r\n      setDidNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnLike('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceNumber('');\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n        setDidNumber('');\r\n      }\r\n    } else if (destinationFilterText.startsWith('didno====')) {\r\n      setDidNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogCount(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].count));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n  return (\r\n    <div>\r\n      <CallLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLogtherFilters\r\n        setDirectionApi={setDirectionApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setQueueDn={setQueueDn}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Typography, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { sendMail } from 'api/api';\r\nimport { Box } from '@mui/system';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function SendAudioRecords({ path, dirs }) {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  let curentLanguage = useIntl();\r\n  const handleSendClick = () => {\r\n    setLoading(true);\r\n    if (/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      let mailSubject =\r\n        curentLanguage.locale === 'en-EN'\r\n          ? 'Recording(s)'\r\n          : curentLanguage.locale === 'tr-TR'\r\n          ? 'Kayıt(lar)'\r\n          : curentLanguage.locale === 'nl-NL'\r\n          ? 'Opname(s)'\r\n          : curentLanguage.locale === 'de-DE'\r\n          ? 'Aufnahme(n)'\r\n          : 'Recording(s)';\r\n      let mailBody =\r\n        curentLanguage.locale === 'en-EN'\r\n          ? 'Recording(s) was/were attached.'\r\n          : curentLanguage.locale === 'tr-TR'\r\n          ? 'Kayıt(lar) ektedir.'\r\n          : curentLanguage.locale === 'nl-NL'\r\n          ? 'Opname(s) was/waren bijgevoegd.'\r\n          : curentLanguage.locale === 'de-DE'\r\n          ? 'Aufzeichnung(en) war/waren angehängt.'\r\n          : 'Recording(s) was/were attached.';\r\n      sendMail(email, path, dirs, mailSubject, mailBody)\r\n        .then(resp => {\r\n          if (resp.status === 200) {\r\n            if (resp.data.message === 'Send') {\r\n              NotificationManager.success(<IntlMessages id={'sendingSuccess'} />, '', 3000);\r\n              setEmail('');\r\n              setLoading(false);\r\n            }\r\n          } else {\r\n            NotificationManager.error(resp.data.message, '', 3000);\r\n            setLoading(false);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          NotificationManager.error(err.message, '', 3000);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      NotificationManager.warning(<IntlMessages id={'invalidemail'} />, '', 3000);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '& .MuiTextField-root': {\r\n          my: 1,\r\n        },\r\n        '&': {\r\n          p: 1,\r\n        },\r\n      }}>\r\n      <Typography variant=\"h5\" sx={{ textAlign: 'center' }}>\r\n        <IntlMessages id={'sendrecordtoemail'} />\r\n      </Typography>\r\n      <Typography variant=\"h6\" sx={{ textAlign: 'center' }}>\r\n        <IntlMessages id={'totalRecord'} values={{ records: dirs.length }} />\r\n      </Typography>\r\n      <TextField\r\n        required\r\n        fullWidth\r\n        label={<IntlMessages id={'email'} />}\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n        variant=\"standard\"\r\n      />\r\n      <LoadingButton\r\n        size=\"large\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={handleSendClick}\r\n        endIcon={<SendIcon />}\r\n        loading={loading}\r\n        loadingPosition=\"end\"\r\n        sx={{ mt: 1 }}>\r\n        <IntlMessages id={'send'} />\r\n      </LoadingButton>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport VolumeDown from '@mui/icons-material/VolumeDown';\r\nimport VolumeUp from '@mui/icons-material/VolumeUp';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport PauseRounded from '@mui/icons-material/PauseRounded';\r\nimport PlayArrowRounded from '@mui/icons-material/PlayArrowRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport { WaveFile } from 'wavefile';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst formWaveSurferOptions = ref => ({\r\n  container: ref,\r\n  waveColor: '#9cceff',\r\n  progressColor: '#1976d2',\r\n  cursorColor: '#1976d2',\r\n  barWidth: 2,\r\n  barRadius: 3,\r\n  barHeight: 1,\r\n  barGap: 2,\r\n  responsive: true,\r\n});\r\n\r\nexport default function AudioWaveForm({ buffer }) {\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [duration, setDuration] = useState('0:00');\r\n  const [currentTime, setCurrentTime] = useState('0:00');\r\n\r\n  const { setRecordLoading } = useContext(AppContext);\r\n  useEffect(() => {\r\n    setPlay(false);\r\n\r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n\r\n    if (window.appsettings.appUrl === '78.47.177.25' || window.appsettings.appUrl === '185.141.110.253') {\r\n      wavesurfer.current.loadBlob(new Blob([buffer], { type: 'audio/wav' }));\r\n    } else {\r\n      let wav = new WaveFile(new Uint8Array(buffer));\r\n      wav.fromIMAADPCM();\r\n      let newBuf = wav.toBuffer();\r\n      wavesurfer.current.loadBlob(new Blob([newBuf], { type: 'audio/wav' }));\r\n    }\r\n    wavesurfer.current.on('ready', function() {\r\n      setRecordLoading(false);\r\n      setLoading(false);\r\n      document.body.style.cursor = 'default';\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(0.5);\r\n        setDuration(formatDuration(Math.round(wavesurfer.current.getDuration())));\r\n        setCurrentTime(formatDuration(Math.round(wavesurfer.current.getCurrentTime())));\r\n      }\r\n    });\r\n    wavesurfer.current.on('audioprocess', function() {\r\n      if (wavesurfer.current.isPlaying()) {\r\n        setDuration(formatDuration(Math.round(wavesurfer.current.getDuration())));\r\n        setCurrentTime(formatDuration(Math.round(wavesurfer.current.getCurrentTime())));\r\n      }\r\n    });\r\n    return () => wavesurfer.current.destroy();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [buffer]);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n  const onVolumeChange = e => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n  function formatDuration(value) {\r\n    const minute = Math.floor(value / 60);\r\n    const secondLeft = value - minute * 60;\r\n    return `${minute}:${secondLeft <= 9 ? `0${secondLeft}` : secondLeft}`;\r\n  }\r\n  const TinyText = styled(Typography)({\r\n    fontSize: '1rem',\r\n    opacity: 0.6,\r\n    fontWeight: 500,\r\n    letterSpacing: 0.2,\r\n  });\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n      <div id=\"waveform\" ref={waveformRef} />\r\n      <Stack spacing={2} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <TinyText>\r\n          {currentTime}/{duration}\r\n        </TinyText>\r\n        <IconButton aria-label={!playing ? 'play' : 'pause'} onClick={handlePlayPause} disabled={loading}>\r\n          {!playing ? (\r\n            <PlayArrowRounded sx={{ fontSize: '3rem' }} htmlColor=\"#000\" />\r\n          ) : (\r\n            <PauseRounded sx={{ fontSize: '3rem' }} htmlColor=\"#000\" />\r\n          )}\r\n        </IconButton>\r\n        <Stack width={300} spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <VolumeDown />\r\n          <Slider\r\n            disabled={loading}\r\n            id=\"volume\"\r\n            name=\"volume\"\r\n            aria-label=\"Volume\"\r\n            value={volume}\r\n            onChange={onVolumeChange}\r\n            min={0.01}\r\n            max={1}\r\n            step={0.025}\r\n          />\r\n          <VolumeUp />\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, IconButton, Paper, TablePagination } from '@material-ui/core';\r\nimport {\r\n  AccessTime,\r\n  Check,\r\n  CloudDownload,\r\n  DateRange,\r\n  Person,\r\n  PhoneDisabled,\r\n  PlayArrow,\r\n  GetApp,\r\n  PhoneMissed,\r\n} from '@material-ui/icons';\r\nimport { getPath, getRecordingBytes, getQueues } from 'api/api';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport SendAudioRecords from '../SendAudioRecords';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport SendToMobileIcon from '@mui/icons-material/SendToMobile';\r\nimport TtyIcon from '@mui/icons-material/Tty';\r\nimport { darken, lighten } from '@mui/material/styles';\r\n\r\nexport default function CallListeningTable({ data, limit, setLimit, setOffset, page, setPage, count, offset }) {\r\n  const [listenedRecords, setListenedRecords] = useState([]);\r\n  const getBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6));\r\n\r\n  const getHoverBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5));\r\n\r\n  let [path, setPath] = useState('');\r\n  const [queues, setQueues] = useState([]);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  const { recordLoading, setRecordLoading } = useContext(AppContext);\r\n  const [record, setRecord] = useState('');\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = (dir, num) => {\r\n    setRecordLoading(true);\r\n    document.body.style.cursor = 'wait';\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer !== null) {\r\n          setRecord(buffer);\r\n          setListenedRecords(prev => [...prev, num]);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          setRecordLoading(false);\r\n          document.body.style.cursor = 'default';\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setRecordLoading(false);\r\n        document.body.style.cursor = 'default';\r\n        NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n      });\r\n  };\r\n  const downloadRecord = dir => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = getCorrectFilesHour(dir);\r\n        link.click();\r\n        link.remove();\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  const getCorrectFilesHour = dir => {\r\n    var timeOffset = localStorage.getItem('timeoffset');\r\n    var copyarr = [...dir.split('')];\r\n    var hour = dir.split('_')[2].slice(8, 10);\r\n    var hourIndex = dir.lastIndexOf('_') + 9;\r\n    var newtime = 0;\r\n    if (timeOffset[0] === '+') {\r\n      newtime = parseInt(hour) + parseInt(timeOffset.slice(1));\r\n    } else {\r\n      newtime = parseInt(hour) - parseInt(timeOffset.slice(1));\r\n    }\r\n    if (newtime < 10) {\r\n      newtime = `0${newtime}`;\r\n    } else {\r\n      newtime.toString();\r\n    }\r\n    copyarr.splice(hourIndex, 2, newtime);\r\n    return copyarr.join('');\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n      width: 40,\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value, params.row.num)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'download',\r\n      headerName: <IntlMessages id={'download'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => downloadRecord(params.value)}\r\n              style={{ backgroundColor: '#1769aa', color: '#fff' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <GetApp />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'srcDid',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#d6851a' }}>\r\n            <TtyIcon style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value || '-'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => (q.dn = params.value[1]))?.display_name || <IntlMessages id=\"queue\" />}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'answered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          ) : params.value === 'nonanswered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          ) : params.value === 'transfered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#bd88f7',\r\n                color: '#27034f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n              <IntlMessages id={'dailysummary.transfer'} />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#f3bbfc',\r\n                color: '#a402bd',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'missedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  let tabledata = data.map((item, index) => ({\r\n    num: index + 1 + offset,\r\n    listen: item.recording_url,\r\n    download: item.recording_url,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    srcDid: item.src_did,\r\n    caller:\r\n      item.src_display_name === item.src_dn || item.src_dn === '-'\r\n        ? item.src_display_name\r\n        : item.src_display_name + '(' + item.src_dn + ')',\r\n    called:\r\n      item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n        ? item.dst_display_name\r\n        : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    direction: [item.direction, item.dst_dn],\r\n    duration: item.duration,\r\n    salable: item.statusofcall,\r\n    id: index,\r\n  }));\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n\r\n  const [allDirs, setAllDirs] = useState([]);\r\n  const [mailMenu, setMailMenu] = useState(false);\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <Button\r\n            disabled={allDirs.length === 0}\r\n            endIcon={<SendIcon />}\r\n            style={{ margin: '0 1rem', textTransform: 'none' }}\r\n            variant=\"contained\"\r\n            onClick={() => setMailMenu(true)}>\r\n            <IntlMessages id={'sendrecordtoemail'} />\r\n          </Button>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Anrufliste'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"src_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Destination'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Hedef'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Bestemming'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ziel'\r\n                    : ''\r\n                }\r\n                value=\"dst_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Direction'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Yön'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Richting'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Genaamd'\r\n                    : ''\r\n                }\r\n                value=\"direction\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"duration\"\r\n              />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={mailMenu} onClose={() => setMailMenu(false)}>\r\n        <div style={{ width: '600px', padding: '2rem 1.5rem' }}>\r\n          <SendAudioRecords path={path} dirs={allDirs} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={openAudioModal}\r\n        onClose={() => setOpenAudioModal(false)}\r\n        aria-labelledby=\"Audio\"\r\n        aria-describedby=\"Audio Player Modal\">\r\n        <Box style={audioModalStyle}>\r\n          <Paper\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              borderRadius: 'inherit',\r\n              borderBottomLeftRadius: '0',\r\n              borderBottomRightRadius: '0',\r\n            }}>\r\n            <Button onClick={() => setOpenAudioModal(false)}>X</Button>\r\n          </Paper>\r\n          <Box style={{ padding: '12px 8px' }}>\r\n            <AudioWaveForm buffer={record} />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n      <Paper style={{ marginTop: '.5rem' }}>\r\n        {recordLoading && (\r\n          <div style={{ width: '100%', marginTop: '8px' }}>\r\n            <LinearProgress />\r\n          </div>\r\n        )}\r\n        <Box\r\n          style={{ height: '440px', width: '100%' }}\r\n          sx={{\r\n            '& .Calllog-Table-Listened': {\r\n              bgcolor: getBackgroundColor('#ffeb7a', 'light'),\r\n              '&:hover': {\r\n                bgcolor: getHoverBackgroundColor('#ffeb7a', 'light'),\r\n              },\r\n            },\r\n          }}>\r\n          <DataGrid\r\n            disableSelectionOnClick\r\n            getRowClassName={params => listenedRecords.includes(params.row.num) && `Calllog-Table-Listened`}\r\n            rows={tabledata}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n            checkboxSelection\r\n            onSelectionModelChange={ids => {\r\n              const selectedIDs = new Set(ids);\r\n              const selectedRecords = tabledata.reduce((filtered, item) => {\r\n                if (selectedIDs.has(item.id)) {\r\n                  filtered.push(item.listen);\r\n                }\r\n                return filtered;\r\n              }, []);\r\n              setAllDirs(selectedRecords);\r\n            }}\r\n          />\r\n        </Box>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tabledata.length < limit || tabledata.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tabledata.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallListeningFilter from './Filter';\r\nimport CallListeningTable from './Table';\r\n\r\nexport default function CallListeningReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllistening'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calllistening'} />} breadcrumbs={breadcrumbs}>\r\n        <CallListeningFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setCount={setCount}\r\n        />\r\n        <CallListeningTable\r\n          count={count}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport LocalOfferRoundedIcon from '@mui/icons-material/LocalOfferRounded';\r\nimport { getTagTypes, getQueueNumber } from 'api/api';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\n\r\nexport default function CallLogtherFilters({\r\n  setDirectionApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setQueueDn,\r\n  setAnswerStatus,\r\n  setScore,\r\n  setTagFilter,\r\n}) {\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)));\r\n    getQueueNumber().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  let [queues, setQueues] = useState([]);\r\n  let [tagsList, setTagsList] = useState([]);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [directionSelect, setDirectionSelect] = useState('');\r\n  const handleDirectionSelect = event => {\r\n    setDirectionSelect(event.target.value);\r\n    setDirectionApi(event.target.value);\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  const handleChangeQueueSelect = event => {\r\n    if (event.target.value === 'all') {\r\n      setQueueSelect('');\r\n      setQueueDn('');\r\n    } else {\r\n      setQueueSelect(event.target.value);\r\n      setQueueDn(event.target.value);\r\n    }\r\n  };\r\n  let [stateSelect, setStateSelect] = useState('');\r\n  const handleChangeStateSelect = event => {\r\n    setStateSelect(event.target.value);\r\n    setAnswerStatus(event.target.value);\r\n  };\r\n\r\n  let [advancedFilter, setAdvancedFilter] = useState([]);\r\n  const handleChangeAdvancedFilterSelect = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setAdvancedFilter(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n\r\n  let [scoreSelect, setScoreSelect] = useState('');\r\n  const handleScoreSelect = e => {\r\n    setScoreSelect(e.target.value);\r\n    setScore(e.target.value);\r\n  };\r\n  let [tagSelect, setTagSelect] = useState('');\r\n  const handleTagSelect = e => {\r\n    setTagSelect(e.target.value);\r\n    setTagFilter(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!advancedFilter.includes('Score')) {\r\n      setScoreSelect('');\r\n      setScore('');\r\n    }\r\n    if (!advancedFilter.includes('Tag')) {\r\n      setTagSelect('');\r\n      setTagFilter('');\r\n    }\r\n    if (!advancedFilter.includes('Queue')) {\r\n      setQueueDn('');\r\n      setQueueSelect('');\r\n    }\r\n  }, [advancedFilter, setScore, setTagFilter, setQueueDn]);\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CompareArrowsIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'directionfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={directionSelect}\r\n                  label={<IntlMessages id={'direction'} />}\r\n                  onChange={handleDirectionSelect}>\r\n                  <MenuItem value=\"all\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' ||\r\n                sourceFilterSelect === 'numberfilter' ||\r\n                sourceFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : sourceFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' ||\r\n                targetFilterSelect === 'numberfilter' ||\r\n                targetFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : targetFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <QuestionAnswerIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={stateSelect}\r\n                  label={<IntlMessages id={'stateFilter'} />}\r\n                  onChange={handleChangeStateSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'CallLog.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'nonanswered'}>\r\n                    <IntlMessages id={'CallLog.filter.unanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'missed'}>\r\n                    <IntlMessages id={'missedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'transfered'}>\r\n                    <IntlMessages id={'dailysummary.transfer'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={advancedFilter}\r\n                  label={<IntlMessages id={'CallLog.filter.filter3'} />}\r\n                  onChange={handleChangeAdvancedFilterSelect}\r\n                  renderValue={() => \"\"}>\r\n                  <MenuItem value={'Score'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Score') > -1} />\r\n                    <StarRoundedIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'score'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'Tag'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Tag') > -1} />\r\n                    <LocalOfferRoundedIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'tag'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'Queue'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Queue') > -1} />\r\n                    <ContactPhoneIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {advancedFilter.includes('Score') && (\r\n              <Grid item md={3}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <StarRoundedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'score'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"score\">\r\n                    <IntlMessages id={'score'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"score\"\r\n                    label={<IntlMessages id={'score'} />}\r\n                    value={scoreSelect}\r\n                    onChange={handleScoreSelect}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"5\">5</MenuItem>\r\n                    <MenuItem value=\"4\">4</MenuItem>\r\n                    <MenuItem value=\"3\">3</MenuItem>\r\n                    <MenuItem value=\"2\">2</MenuItem>\r\n                    <MenuItem value=\"1\">1</MenuItem>\r\n                    <MenuItem value=\"0\">0</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            {advancedFilter.includes('Tag') && (\r\n              <Grid item md={3}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <LocalOfferRoundedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'tag'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"tag\">\r\n                    <IntlMessages id={'tag'} />\r\n                  </InputLabel>\r\n                  <Select labelId=\"tag\" label={<IntlMessages id={'tag'} />} value={tagSelect} onChange={handleTagSelect}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {tagsList.map((item, index) => (\r\n                      <MenuItem key={index} value={item.tagmassage}>\r\n                        {item.tagmassage}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            {advancedFilter.includes('Queue') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"queue-label\">\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"queue-label\"\r\n                    value={queueSelect}\r\n                    label={<IntlMessages id={'queueFilter'} />}\r\n                    onChange={handleChangeQueueSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {queues.map(que => (\r\n                      <MenuItem key={que.id} value={que.dn}>\r\n                        {que.dn} - {que.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog, getCallLogCount } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLogDateFilter from './DateFilter';\r\nimport CallLogtherFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallManagementFilter({ setData, limit, offset, setCount, setScore, setTagFilter }) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [directionApi, setDirectionApi] = useState('');\r\n  let [directionSql, setDirectionSql] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n  let [didNumber, setDidNumber] = useState('');\r\n  let [queueDn, setQueueDn] = useState('');\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [answerStatusSql, setAnswerStatusSql] = useState('');\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  useEffect(() => {\r\n    if (directionApi === 'all') {\r\n      setDirectionSql('');\r\n    } else if (directionApi === 'inb') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'out') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%1' and\");\r\n    } else if (directionApi === 'agent') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'ques') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) not like '%0' and\");\r\n    }\r\n  }, [directionApi]);\r\n\r\n  useEffect(() => {\r\n    if (answerStatus === 'all') {\r\n      setAnswerStatusSql('');\r\n    } else if (answerStatus === 'answered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'answered'\");\r\n    } else if (answerStatus === 'nonanswered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'nonanswered'\");\r\n    } else if (answerStatus === 'transfered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'transfered'\");\r\n    } else if (answerStatus === 'missed') {\r\n      setAnswerStatusSql(\r\n        \"where statusofcall != 'transfered' and statusofcall != 'answered' and statusofcall != 'nonanswered'\",\r\n      );\r\n    }\r\n  }, [answerStatus]);\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as (  \r\n  SELECT\r\n  call_id, \r\n  src_did,\r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording') as recording_url,  \r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall, \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  when (act >= 400 and dst_dn_type = 13) then 'dışarı' \r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%'\r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time,seg_order asc\r\n  )\r\n  select \r\n  * \r\n  from cte2 \r\n  ${answerStatusSql} \r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as( \r\n  SELECT\r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%'\r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax} \r\n  )  \r\n  )select \r\n  count(*)\r\n  from cte2 ${answerStatusSql}\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n        setDidNumber('');\r\n      }\r\n    } else if (sourceFilterText.startsWith('didno====')) {\r\n      setDidNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnLike('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceNumber('');\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n        setDidNumber('');\r\n      }\r\n    } else if (destinationFilterText.startsWith('didno====')) {\r\n      setDidNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogCount(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].count));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n  return (\r\n    <div>\r\n      <CallLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLogtherFilters\r\n        setDirectionApi={setDirectionApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setQueueDn={setQueueDn}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n        setScore={setScore}\r\n        setTagFilter={setTagFilter}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { InputLabel, MenuItem, Select, FormControl, Chip, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getTagsByCallId, ScoreByID } from 'api/api';\r\n\r\nexport default function CallManagementCallDetail({ callId, setReloadValues }) {\r\n  const [tags, setTags] = useState([]);\r\n  const [rating, setRating] = useState('-1');\r\n  useEffect(() => {\r\n    getTagsByCallId(callId).then(resp => {\r\n      setTags(JSON.parse(resp.data.data));\r\n      setRating(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n    });\r\n  }, [callId]);\r\n  const handleRating = event => {\r\n    ScoreByID(event.target.value, callId).then(() => setRating(event.target.value));\r\n    setReloadValues(new Date());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n        <IntlMessages id={'CallLog.detail.callinfo'} />\r\n      </Typography>\r\n\r\n      {tags.length > 0 && tags[0]?.tagtext !== '' && (\r\n        <Typography variant=\"h6\">\r\n          <IntlMessages id={'tag'} /> :\r\n          <Chip color=\"info\" label={tags[0]?.tagtext} />\r\n        </Typography>\r\n      )}\r\n      <FormControl variant=\"standard\" fullWidth>\r\n        <InputLabel id=\"score\">\r\n          <IntlMessages id={'score'} />\r\n        </InputLabel>\r\n        <Select labelId=\"score\" label={<IntlMessages id={'score'} />} value={rating} onChange={handleRating}>\r\n          <MenuItem value=\"-1\">\r\n            <br />\r\n          </MenuItem>\r\n          <MenuItem value=\"5\">\r\n            <IntlMessages id={'score.rating5'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"4\">\r\n            <IntlMessages id={'score.rating4'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"3\">\r\n            <IntlMessages id={'score.rating3'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"2\">\r\n            <IntlMessages id={'score.rating2'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"1\">\r\n            <IntlMessages id={'score.rating1'} />\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","const questions = [\r\n  {\r\n    title: 'SurveyTitle1',\r\n    question: 'SurveyQuestion1',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle1',\r\n    question: 'SurveyQuestion2',\r\n    point: 2,\r\n  },\r\n  {\r\n    title: 'SurveyTitle2',\r\n    question: 'SurveyQuestion3',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle3',\r\n    question: 'SurveyQuestion4',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle3',\r\n    question: 'SurveyQuestion5',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle4',\r\n    question: 'SurveyQuestion6',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle4',\r\n    question: 'SurveyQuestion7',\r\n    point: 2,\r\n  },\r\n  {\r\n    title: 'SurveyTitle5',\r\n    question: 'SurveyQuestion8',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle5',\r\n    question: 'SurveyQuestion9',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle5',\r\n    question: 'SurveyQuestion10',\r\n    point: 4,\r\n  },\r\n  {\r\n    title: 'SurveyTitle6',\r\n    question: 'SurveyQuestion11',\r\n    point: 15,\r\n  },\r\n  {\r\n    title: 'SurveyTitle7',\r\n    question: 'SurveyQuestion12',\r\n    point: 7,\r\n  },\r\n  {\r\n    title: 'SurveyTitle7',\r\n    question: 'SurveyQuestion13',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle8',\r\n    question: 'SurveyQuestion14',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle8',\r\n    question: 'SurveyQuestion15',\r\n    point: 2,\r\n  },\r\n  {\r\n    title: 'SurveyTitle9',\r\n    question: 'SurveyQuestion16',\r\n    point: 7,\r\n  },\r\n  {\r\n    title: 'SurveyTitle9',\r\n    question: 'SurveyQuestion17',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle10',\r\n    question: 'SurveyQuestion18',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle10',\r\n    question: 'SurveyQuestion19',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle10',\r\n    question: 'SurveyQuestion20',\r\n    point: 4,\r\n  },\r\n  {\r\n    title: 'SurveyTitle11',\r\n    question: 'SurveyQuestion21',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle12',\r\n    question: 'SurveyQuestion22',\r\n    point: 10,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion23',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion24',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion25',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion26',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion27',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion28',\r\n    point: 0,\r\n  },\r\n];\r\n\r\nexport { questions };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { questions } from './SurveyQuestions';\r\nimport { Stack, Divider, Typography, Radio, RadioGroup, FormControlLabel, Button } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ChevronRightRoundedIcon from '@mui/icons-material/ChevronRightRounded';\r\nimport { getTagsByCallId, SubmitSurveyByID } from 'api/api';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nexport default function CallSurvey({ callId }) {\r\n  const [startSurvey, setStartSurvey] = useState(false);\r\n  const [survey, setSurvey] = useState([]);\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  useEffect(() => {\r\n    getTagsByCallId(callId).then(resp => setSurvey(JSON.parse(resp.data.data)));\r\n  }, [callId, btnLoading]);\r\n  const questionsArray = questions.map(item => ({\r\n    title: item.title,\r\n    question: item.question,\r\n    point: item.point,\r\n    answer: '',\r\n  }));\r\n  const questionsObjFormik = questionsArray.reduce((a, value) => ({ ...a, [value.question]: '' }), {});\r\n  return (\r\n    <div style={{ marginTop: '1rem', textAlign: 'center' }}>\r\n      {survey.length > 0 && survey[0]?.supervisorId !== '' ? (\r\n        <Typography variant=\"h5\" component=\"div\">\r\n          <IntlMessages id={'surveyScore'} />\r\n          {' = '}\r\n          <b>{survey[0].supervisorId}</b>\r\n        </Typography>\r\n      ) : !startSurvey ? (\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          onClick={() => setStartSurvey(true)}\r\n          endIcon={<ChevronRightRoundedIcon />}>\r\n          <IntlMessages id={'startSurvey'} />\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h4\" component=\"div\">\r\n            <IntlMessages id={'survey'} />\r\n          </Typography>\r\n          <Formik\r\n            initialValues={questionsObjFormik}\r\n            onSubmit={values => {\r\n              setBtnLoading(true);\r\n              let score = 0;\r\n              let answers = Object.values(values);\r\n              let answersStr = JSON.stringify(\r\n                answers.reduce((a, v, i) => ({ ...a, [i]: v === 'EVET' ? '1' : v === 'HAYIR' ? '0' : '-' }), {}),\r\n              )\r\n                .replaceAll('\"', '')\r\n                .replace('{', '')\r\n                .replace('}', '');\r\n\r\n              for (let i = 0; i < questionsArray.length; i++) {\r\n                questionsArray[i].answer = answers[i];\r\n                if (answers[i] === 'EVET') {\r\n                  if (questionsArray[i].title === 'SurveyTitle13') {\r\n                    score *= questionsArray[i].point;\r\n                  } else {\r\n                    score += questionsArray[i].point;\r\n                  }\r\n                }\r\n              }\r\n              SubmitSurveyByID(callId, score, answersStr)\r\n                .then(resp => resp.success && setBtnLoading(false))\r\n                .catch(err => {\r\n                  NotificationManager.error(err.message, '', 3000);\r\n                  setBtnLoading(false);\r\n                });\r\n            }}>\r\n            {({ handleSubmit, handleChange }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Stack spacing={2} divider={<Divider orientation=\"horizontal\" flexItem />}>\r\n                  {questionsArray.map((item, index) => (\r\n                    <div key={index}>\r\n                      <Typography variant=\"h5\" component=\"div\">\r\n                        <IntlMessages id={item.title} />\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        <b>{`${index + 1}) `}</b>\r\n                        <span>\r\n                          <IntlMessages id={item.question} />\r\n                        </span>\r\n                      </Typography>\r\n                      <RadioGroup style={{ justifyContent: 'center' }} row name={item.question} onChange={handleChange}>\r\n                        <FormControlLabel value=\"EVET\" control={<Radio />} label={<IntlMessages id={'yes'} />} />\r\n                        <FormControlLabel value=\"HAYIR\" control={<Radio />} label={<IntlMessages id={'no'} />} />\r\n                      </RadioGroup>\r\n                    </div>\r\n                  ))}\r\n                </Stack>\r\n                <LoadingButton\r\n                  size=\"large\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  endIcon={<SendIcon />}\r\n                  loading={btnLoading}\r\n                  loadingPosition=\"end\"\r\n                  sx={{ mt: 1 }}>\r\n                  <IntlMessages id={'send'} />\r\n                </LoadingButton>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//dbden gelen soru-cevap stringini tekrardan objecte dönüştürmek için kullanırız. doğrudan object dbye yollanmıyor.\r\n//JSON.parse ederken sorun oluşuyor çünkü o field string türünde ve object \"{  }\" şeklinde yazıldığından parse edemiyor\r\nconst AnswersToObject = str => {\r\n  let arr = str.split(',');\r\n  return arr.reduce((a, v) => ({ ...a, [v.split(':')[0]]: v.split(':')[1] }), {});\r\n};\r\n","import { FormControl, InputLabel, MenuItem, Select, Chip } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTagtextByCallId, TagByID } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Tag({call_id,tagsList}) {\r\n  const [tagValue, setTagValue] = useState('');\r\n\r\n  const handleChangeTag = event => {\r\n    TagByID(event.target.value,call_id).then(() =>{\r\n      setTagValue(event.target.value);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    if(call_id !== \"\"){\r\n      getTagtextByCallId(call_id).then(resp => {\r\n        setTagValue(JSON.parse(resp.data.data)[0]?.tagtext || '');\r\n    });\r\n    }\r\n\r\n  },[call_id]);\r\n\r\n  return (\r\n    <>\r\n    {\r\n      call_id === \"\"?(<div style={{textAlign:\"center\"}}><IntlMessages id={'nontaggable'} /></div>):(\r\n        <>\r\n        {\r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label11\"><IntlMessages id={'tag'} /></InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label11\"\r\n              id=\"demo-simple-select222\"\r\n              value={tagValue}\r\n              label={<IntlMessages id={'tag'} />}\r\n              style={{ width: '100%' }}\r\n              onChange={handleChangeTag}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n                {\r\n                  tagsList.map((item,index)=>(\r\n                  <MenuItem key={index} value={item.tagmassage}>\r\n                    <Chip color=\"info\" size=\"small\" label={item.tagmassage} />\r\n                  </MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        </> \r\n      )\r\n    }\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {getCallScoresByCallId } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Score({call_id, reloadValues}) {\r\n    const [callScore, setCallScore] = useState('-1');\r\n    useEffect(()=>{\r\n        getCallScoresByCallId(call_id).then(resp => {\r\n            setCallScore(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n        });\r\n        return () => {setCallScore('-1')}\r\n    },[call_id, reloadValues]);\r\n  return (\r\n      <>\r\n      {\r\n          callScore !== '-1' ? (\r\n            <div>\r\n            {\r\n                GetScoreName(callScore)\r\n            }\r\n            {` (${callScore})`}\r\n            </div>\r\n          ) : (\r\n            <small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'noscore'} /></small>\r\n          )\r\n      }\r\n      </>\r\n  );\r\n}\r\n\r\nfunction GetScoreName(rating){\r\n    switch (rating) {\r\n        case \"5\":\r\n            return <IntlMessages id={'score.rating5'} />\r\n        case \"4\":\r\n            return <IntlMessages id={'score.rating4'} />\r\n        case \"3\":\r\n            return <IntlMessages id={'score.rating3'} />\r\n        case \"2\":\r\n            return <IntlMessages id={'score.rating2'} />\r\n        case \"1\":\r\n            return <IntlMessages id={'score.rating1'} />\r\n        default:\r\n            return <IntlMessages id={'noscore'} /> \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { getSurveyScoresByCallId } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function SurveyScore({ call_id }) {\r\n  const [surveyScore, setSurveyScore] = useState('-1');\r\n  useEffect(() => {\r\n    getSurveyScoresByCallId(call_id).then(resp => {\r\n      setSurveyScore(JSON.parse(resp.data.data)[0]?.supervisorId || '-1');\r\n    });\r\n    return () => {\r\n      setSurveyScore('-1');\r\n    };\r\n  }, [call_id]);\r\n  return (\r\n    <>\r\n      {surveyScore !== '-1' ? (\r\n        <div>{surveyScore}</div>\r\n      ) : (\r\n        <small style={{ margin: '0 4px' }}>\r\n          <IntlMessages id={'nosurvey'} />\r\n        </small>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, IconButton, Paper, TablePagination } from '@material-ui/core';\r\nimport {\r\n  AccessTime,\r\n  Check,\r\n  CloudDownload,\r\n  DateRange,\r\n  Person,\r\n  PhoneDisabled,\r\n  PlayArrow,\r\n  GetApp,\r\n  PhoneMissed,\r\n} from '@material-ui/icons';\r\nimport { getPath, getTagTypes, getRecordingBytes, getQueues, getTagsByCallId } from 'api/api';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallManagementCallDetail from '../CallDetails';\r\nimport CallSurvey from '../CallSurvey';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Tag from './Tag';\r\nimport Score from './Score';\r\nimport SurveyScore from './SurveyScore';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport SendToMobileIcon from '@mui/icons-material/SendToMobile';\r\nimport TtyIcon from '@mui/icons-material/Tty';\r\nimport { darken, lighten } from '@mui/material/styles';\r\n\r\nexport default function CallManagementTable({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  count,\r\n  setReloadValues,\r\n  reloadValues,\r\n  offset,\r\n  scoreFilter,\r\n  tagFilter,\r\n}) {\r\n  const [listenedRecords, setListenedRecords] = useState([]);\r\n  const getBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6));\r\n\r\n  const getHoverBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5));\r\n\r\n  let [path, setPath] = useState('');\r\n  const [queues, setQueues] = useState([]);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  const { recordLoading, setRecordLoading } = useContext(AppContext);\r\n  const [record, setRecord] = useState(null);\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = (dir, num) => {\r\n    setRecordLoading(true);\r\n    document.body.style.cursor = 'wait';\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer.byteLength > 0) {\r\n          setRecord(buffer);\r\n          setListenedRecords(prev => [...prev, num]);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          setRecordLoading(false);\r\n          document.body.style.cursor = 'default';\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setRecordLoading(false);\r\n        document.body.style.cursor = 'default';\r\n        NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n      });\r\n  };\r\n  const downloadRecord = dir => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = getCorrectFilesHour(dir);\r\n        link.click();\r\n        link.remove();\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  const getCorrectFilesHour = dir => {\r\n    var timeOffset = localStorage.getItem('timeoffset');\r\n    var copyarr = [...dir.split('')];\r\n    var hour = dir.split('_')[2].slice(8, 10);\r\n    var hourIndex = dir.lastIndexOf('_') + 9;\r\n    var newtime = 0;\r\n    if (timeOffset[0] === '+') {\r\n      newtime = parseInt(hour) + parseInt(timeOffset.slice(1));\r\n    } else {\r\n      newtime = parseInt(hour) - parseInt(timeOffset.slice(1));\r\n    }\r\n    if (newtime < 10) {\r\n      newtime = `0${newtime}`;\r\n    } else {\r\n      newtime.toString();\r\n    }\r\n    copyarr.splice(hourIndex, 2, newtime);\r\n    return copyarr.join('');\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n      width: 40,\r\n    },\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value, params.row.num)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'download',\r\n      headerName: <IntlMessages id={'download'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => downloadRecord(params.value)}\r\n              style={{ backgroundColor: '#1769aa', color: '#fff' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <GetApp />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'srcDid',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#d6851a' }}>\r\n            <TtyIcon style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value || '-'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => (q.dn = params.value[1]))?.display_name || <IntlMessages id=\"queue\" />}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'answered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          ) : params.value === 'nonanswered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          ) : params.value === 'transfered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#bd88f7',\r\n                color: '#27034f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n              <IntlMessages id={'dailysummary.transfer'} />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#f3bbfc',\r\n                color: '#a402bd',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'missedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'Tag',\r\n      headerName: <IntlMessages id={'tag'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Tag call_id={params.value} tagsList={params.value !== '' ? tagsList : []} />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: 'score',\r\n      headerName: <IntlMessages id={'score'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Score call_id={params.value} reloadValues={reloadValues} />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: 'surveyScore',\r\n      headerName: <IntlMessages id={'surveyScore'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <SurveyScore call_id={params.value} />\r\n        </div>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let canListable = id => {\r\n      return new Promise((resolve, reject) => {\r\n        getTagsByCallId(id).then(resp => {\r\n          let data = JSON.parse(resp.data.data)[0];\r\n          let result = false;\r\n          if (data) {\r\n            if (tagFilter !== '' && scoreFilter !== '') {\r\n              if (data.tagtext === tagFilter && data.rating === scoreFilter) {\r\n                result = true;\r\n              }\r\n            } else {\r\n              if (tagFilter !== '' && data.tagtext === tagFilter) {\r\n                result = true;\r\n              }\r\n              if (scoreFilter !== '' && data.rating === scoreFilter) {\r\n                result = true;\r\n              }\r\n            }\r\n          }\r\n          resolve(result ? id : '');\r\n        });\r\n      });\r\n    };\r\n    if (tagFilter !== '' || scoreFilter !== '') {\r\n      let allRequests = [];\r\n      data.forEach(item => allRequests.push(canListable(item.call_id)));\r\n      Promise.all(allRequests).then(ids => {\r\n        let tabledata = data.reduce((filtered, item, index) => {\r\n          if (ids.includes(item.call_id)) {\r\n            let value = {\r\n              num: index + 1 + offset,\r\n              callId: item.call_id,\r\n              listen: item.recording_url,\r\n              download: item.recording_url,\r\n              date: getNewDate(item.date),\r\n              startTime: item.hour,\r\n              srcDid: item.src_did,\r\n              caller:\r\n                item.src_display_name === item.src_dn || item.src_dn === '-'\r\n                  ? item.src_display_name\r\n                  : item.src_display_name + '(' + item.src_dn + ')',\r\n              called:\r\n                item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n                  ? item.dst_display_name\r\n                  : item.dst_display_name + '(' + item.dst_dn + ')',\r\n              direction: [item.direction, item.dst_dn],\r\n              duration: item.duration,\r\n              salable: item.statusofcall,\r\n              id: index,\r\n              Tag: isTaggable(item.direction, item.statusofcall) ? item.call_id : '',\r\n              score: item.call_id,\r\n              surveyScore:item.call_id\r\n            };\r\n            filtered.push(value);\r\n          }\r\n          return filtered;\r\n        }, []);\r\n        setTableData(tabledata);\r\n      });\r\n    } else {\r\n      let tabledata = data.map((item, index) => ({\r\n        num: index + 1 + offset,\r\n        callId: item.call_id,\r\n        listen: item.recording_url,\r\n        download: item.recording_url,\r\n        date: getNewDate(item.date),\r\n        startTime: item.hour,\r\n        srcDid: item.src_did,\r\n        caller:\r\n          item.src_display_name === item.src_dn || item.src_dn === '-'\r\n            ? item.src_display_name\r\n            : item.src_display_name + '(' + item.src_dn + ')',\r\n        called:\r\n          item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n            ? item.dst_display_name\r\n            : item.dst_display_name + '(' + item.dst_dn + ')',\r\n        direction: [item.direction, item.dst_dn],\r\n        duration: item.duration,\r\n        salable: item.statusofcall,\r\n        id: index,\r\n        Tag: isTaggable(item.direction, item.statusofcall) ? item.call_id : '',\r\n        score: item.call_id,\r\n        surveyScore:item.call_id\r\n      }));\r\n      setTableData(tabledata);\r\n    }\r\n  }, [tagFilter, scoreFilter, data, offset]);\r\n\r\n  const [tagsList, setTagsList] = useState([]);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)));\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Anrufliste'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"src_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Destination'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Hedef'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Bestemming'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ziel'\r\n                    : ''\r\n                }\r\n                value=\"dst_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Direction'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Yön'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Richting'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Genaamd'\r\n                    : ''\r\n                }\r\n                value=\"direction\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"duration\"\r\n              />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px', padding: '2rem 1.5rem' }}>\r\n          <CallManagementCallDetail callId={callIdEye} setReloadValues={setReloadValues} />\r\n          <CallSurvey callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={openAudioModal}\r\n        onClose={() => setOpenAudioModal(false)}\r\n        aria-labelledby=\"Audio\"\r\n        aria-describedby=\"Audio Player Modal\">\r\n        <Box style={audioModalStyle}>\r\n          <Paper\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              borderRadius: 'inherit',\r\n              borderBottomLeftRadius: '0',\r\n              borderBottomRightRadius: '0',\r\n            }}>\r\n            <Button onClick={() => setOpenAudioModal(false)}>X</Button>\r\n          </Paper>\r\n          <Box style={{ padding: '12px 8px' }}>\r\n            <AudioWaveForm buffer={record} />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n      <Paper style={{ marginTop: '.5rem' }}>\r\n        {recordLoading && (\r\n          <div style={{ width: '100%', marginTop: '8px' }}>\r\n            <LinearProgress />\r\n          </div>\r\n        )}\r\n        <Box\r\n          style={{ height: '440px', width: '100%' }}\r\n          sx={{\r\n            '& .Calllog-Table-Listened': {\r\n              bgcolor: getBackgroundColor('#ffeb7a', 'light'),\r\n              '&:hover': {\r\n                bgcolor: getHoverBackgroundColor('#ffeb7a', 'light'),\r\n              },\r\n            },\r\n          }}>\r\n          <DataGrid\r\n            disableSelectionOnClick\r\n            getRowClassName={params => listenedRecords.includes(params.row.num) && `Calllog-Table-Listened`}\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </Box>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tableData.length < limit || tableData.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tableData.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nconst nonTaggableCallTypes = ['dahili', ''];\r\nconst isTaggable = (callType, status) => {\r\n  if (status === 'answered') {\r\n    if (!nonTaggableCallTypes.includes(callType)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallManagementFilter from './Filter';\r\nimport CallManagementTable from './Table';\r\n\r\nexport default function CallManagement() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'callmanagement'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [reloadValues, setReloadValues] = useState([]);\r\n  const [score, setScore] = useState('');\r\n  const [tagFilter, setTagFilter] = useState('');\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'callmanagement'} />} breadcrumbs={breadcrumbs}>\r\n        <CallManagementFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setCount={setCount}\r\n          setScore={setScore}\r\n          setTagFilter={setTagFilter}\r\n        />\r\n        <CallManagementTable\r\n          count={count}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n          reloadValues={reloadValues}\r\n          setReloadValues={setReloadValues}\r\n          scoreFilter={score}\r\n          tagFilter={tagFilter}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DropCallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate());\r\n        end.setHours(0, 0, 0);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getDropCall, getDropCallCount, getDropCallSummary, getQueueNumber } from 'api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport DropCallLogDateFilter from './DateFilter';\r\nfunction Filter({ setResponse, limit, offset, setCount, setResponseSummary }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: dateDifference(formatDate(today)),\r\n    paramFinish: dateDifference(formatDate(today)),\r\n  });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n      setParams({\r\n        paramStart: dateDifference(startDate),\r\n        paramFinish: dateDifference(endDate),\r\n      });\r\n  },[startDate,endDate]);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDropCall(params.paramStart, params.paramFinish, limit, offset).then(resp => {\r\n      var list = JSON.parse(resp.data.data);\r\n      getQueueNumber().then(queueList => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          JSON.parse(queueList.data.data).map(queue => {\r\n            if (list[i].q_num === queue.dn) {\r\n              list[i].q_num = queue.dn + '-' + queue.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n      });\r\n      setLoading(false);\r\n    });\r\n\r\n    getDropCallSummary(params.paramStart, params.paramFinish).then(resp => {\r\n      setResponseSummary(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getDropCallCount(params.paramStart, params.paramFinish).then(resp => {\r\n      setCount(JSON.parse(resp.data.data)[0]);\r\n    });\r\n  }, [params, offset, limit, setCount, setResponse, setResponseSummary]);\r\n\r\n  return (\r\n    <div>\r\n      <DropCallLogDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { Check, CloudDownload, DateRange } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport RingVolumeIcon from '@mui/icons-material/RingVolume';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, count, responseSummary }) {\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'filter.menu.enddate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#DE834D' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'from'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#5584AC' }} />{' '}\r\n          <b style={{ color: '#5584AC' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'q_num',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#064635' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'ringing_time',\r\n      headerName: <IntlMessages id={'ringingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <RingVolumeIcon style={{ verticalAlign: '-5px', color: '#A3423C' }} />{' '}\r\n          <b style={{ color: '#781D42' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(num, id, q_num, start_time, end_time, ringing_time, from_userpart) {\r\n    return { num, id, q_num, start_time, end_time, ringing_time, from_userpart };\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index + 1 + offset,\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.time_end,\r\n      data.ring_time\r\n        .split('.')[0]\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_userpart,\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(count.count);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Dropped_call'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kacan_cagri_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Afgebroken oproep'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Aufgelegter Anruf'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"q_num\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'End Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bitiş Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Eindtijd'\r\n                          : ''\r\n                      }\r\n                      value=\"end_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Ringing Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Çalma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Beltijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Klingelzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"ringing_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'From Userpart'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Van gebruikersgedeelte'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Vom Benutzerteil'\r\n                          : ''\r\n                      }\r\n                      value=\"from_userpart\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={rows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={parseInt(count.count)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'average_ring_time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {responseSummary.map((total, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {total.to_char}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {total.count}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        padding: '5px',\r\n                        borderRadius: '7px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      {total.ring_time}\r\n                    </span>{' '}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction DroppedCall() {\r\n  const [responseSummary, setResponseSummary] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [count, setCount] = useState({ count: 0 });\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'droppedcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'droppedcall'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            limit={limit}\r\n            offset={offset}\r\n            setCount={setCount}\r\n            setResponseSummary={setResponseSummary}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            count={count}\r\n            responseSummary={responseSummary}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default DroppedCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DidReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({\r\n  setSelectedStartTime,\r\n  setSelectedEndTime,\r\n  setDidNumber,\r\n  didNumber,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const [didNumbers, setDidNumbers] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    api.getDidNumbers().then(resp => {\r\n      setDidNumbers(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'mountlydetails.didnumber'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'mountlydetails.didnumber'} />}\r\n                  value={didNumber}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {didNumbers.map((did, index) => (\r\n                    <MenuItem key={index} value={did.conditiondata}>\r\n                      {did.conditiondata}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDidReportTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\nexport default function TotalCallModal({ date, didNo, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDidReportTotalCall(date, didNo).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date,didNo]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'callid'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.call_id}</TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDidReportAnsweredCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function AnsweredCallModal({ date, didNo, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDidReportAnsweredCall(date, didNo).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date, didNo]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDidReportNonAnsweredCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function NonAnsweredCallModal({ date, didNo, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDidReportNonAnsweredCall(date, didNo).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date, didNo]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button, TableBody } from '@material-ui/core';\r\nimport { AccessTime, CloudDownload, ContactPhone, Phone, PhoneInTalk, PhoneMissed } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport NonAnsweredCallModal from '../Modals/NonAnsweredCallModal';\r\n\r\nexport default function DataTable({\r\n  response,\r\n  setLimit,\r\n  limit,\r\n  setOffset,\r\n  setPage,\r\n  page,\r\n  count,\r\n  setResponse,\r\n  offset,\r\n  startEndDate,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const column = [\r\n    { id: 'did_number', headerName: <IntlMessages id={'did.number'} />, width: '60px' },\r\n    { id: 'total_did', headerName: <IntlMessages id={'wallboard.total.call'} />, width: '100px' },\r\n    { id: 'did_not_answered', headerName: <IntlMessages id={'wallboard.unanswered'} />, width: '30px' },\r\n    { id: 'did_answered', headerName: <IntlMessages id={'wallboard.answered'} />, width: '30px' },\r\n    { id: 'duration', headerName: <IntlMessages id={'Duration'} />, width: '30px' },\r\n    { id: 'act', headerName: <IntlMessages id={'average'} />, width: '30px' },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    total_did_number: 0,\r\n    total_did: 0,\r\n    did_not_answered: 0,\r\n    did_answered: 0,\r\n    duration: 0,\r\n  };\r\n\r\n  for (let i = 0; i < response.length; i++) {\r\n    total.total_did_number++;\r\n    total.total_did += parseInt(response[i].total_did);\r\n    total.did_not_answered += parseInt(response[i].did_not_answered);\r\n    total.did_answered += parseInt(response[i].answered);\r\n    total.duration += parseInt(hourToSecond(response[i].duration));\r\n  }\r\n  function hourToSecond(param) {\r\n    var second =\r\n      parseInt(param.split(' ')[0].slice(0, -1)) * 3600 +\r\n      parseInt(param.split(' ')[1].slice(0, -1)) * 60 +\r\n      parseInt(param.split(' ')[2].slice(0, -1));\r\n    return second;\r\n  }\r\n\r\n  function secondToTime(param) {\r\n    let time =\r\n      addZero(Math.floor(param / 60 / 60)) +\r\n      'h ' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      'm ' +\r\n      addZero(Math.floor((param % 3600) % 60)) +\r\n      's';\r\n    return time;\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = response.map((item, index) => ({\r\n    num: index + 1 + offset,\r\n    id: index,\r\n    did_number: item.did_number,\r\n    total_did: parseInt(item.total_did),\r\n    did_not_answered: parseInt(item.did_not_answered),\r\n    answered: parseInt(item.answered),\r\n    duration: item.duration,\r\n    act: item.act,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'did_number',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhone style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_did',\r\n      headerName: <IntlMessages id={'totalcallcount'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span onClick={() => handleTotalCallClick(params.row.did_number)} style={{ cursor: 'pointer' }}>\r\n          <Phone style={{ verticalAlign: '-5px', color: '#6998AB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#6998AB' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'did_not_answered',\r\n      headerName: <IntlMessages id={'unansweredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span onClick={() => handleNonAnsweredCallClick(params.row.did_number)} style={{ cursor: 'pointer' }}>\r\n          <PhoneMissed style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#F05454' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'answeredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span onClick={() => handleAnsweredCallClick(params.row.did_number)} style={{ cursor: 'pointer' }}>\r\n          <PhoneInTalk style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#D47AE8' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'act',\r\n      headerName: <IntlMessages id={'average'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#7267CB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(parseInt(count));\r\n    setPage(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const totalCallStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [didNo, setDidNo] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = didno => {\r\n    setDidNo(didno);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = didno => {\r\n    setDidNo(didno);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [nonAnsweredCallModalOpen, setNonAnsweredCallOpen] = useState(false);\r\n  const handleNonAnsweredCallOpen = () => setNonAnsweredCallOpen(true);\r\n  const handleNonAnsweredCallClose = () => setNonAnsweredCallOpen(false);\r\n  const handleNonAnsweredCallClick = didno => {\r\n    setDidNo(didno);\r\n    handleNonAnsweredCallOpen();\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {response.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {response.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {response.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {response.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'DID_report'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'DID_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'DID_rapport'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'DID_report'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={response} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'DID Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Did Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'DID-Nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'DID-Nummer'\r\n                          : ''\r\n                      }\r\n                      value=\"did_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Total Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Toplam Arama Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Totaal aantal gesprekken'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesamtzahl der Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"total_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Unanswered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmamış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal onbeantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anzahl unbeantworteter Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"did_not_answered\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Answered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal beantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Zählung angenommener Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"answered\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={dataGridRows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <TableContainer component={Paper} className={classes.root} style={{ fontFamily: 'Roboto' }}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map(column => (\r\n                <TableCell key={column.id} style={{ width: column.width }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {response.length > 0 && (\r\n              <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n                <TableCell>\r\n                  {count + ' '} <IntlMessages id={'did.number'} />\r\n                </TableCell>\r\n                <TableCell>{total.total_did}</TableCell>\r\n                <TableCell>{total.did_not_answered}</TableCell>\r\n                <TableCell>{total.did_answered}</TableCell>\r\n                <TableCell>{secondToTime(total.duration)}</TableCell>\r\n                <TableCell>{secondToTime(total.duration / total.total_did)}</TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={totalCallStyle}>\r\n          <TotalCallModal date={startEndDate} didNo={didNo} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={totalCallStyle}>\r\n          <AnsweredCallModal date={startEndDate} didNo={didNo} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={nonAnsweredCallModalOpen}\r\n        onClose={handleNonAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={totalCallStyle}>\r\n          <NonAnsweredCallModal date={startEndDate} didNo={didNo} handleNonAnsweredCallClose={handleNonAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nconst DIDReport = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'did.report'} />, isActive: true },\r\n  ];\r\n\r\n  let [selectedStartTime, setSelectedStartTime] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [selectedEndTime, setSelectedEndTime] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n\r\n  let query = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${selectedStartTime}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${selectedEndTime}') >= start_time)\r\n    and src_did != ''\r\n  \tand\r\n\t  dst_answer_time is not null\r\n    )\r\n\t,\r\n\tcte2 as (\r\n    select\r\n\t sum(dst_end_time-dst_answer_time) as duration,\r\n    src_did,\t\r\n    count(distinct(call_id)) as total_call\r\n    from cte1 \t\r\n    group by src_did\r\n    )\r\n\t,\t\r\n\tcte3 as (\r\n    select\r\n    src_did,\t\r\n    count(distinct(call_id)) as did_not_asnwered\r\n    from cte1 \t\r\n    where dst_answer_time is  null\t\r\n    and act!= 1\r\n    group by src_did\r\n    )\r\n    select\r\n    cte2.src_did as did_number,\r\n    cte2.total_call as total_did,\r\n    coalesce(cte3.did_not_asnwered,0) as did_not_answered,\r\n    cte2.total_call - coalesce(cte3.did_not_asnwered,0) as answered,\r\n\tto_char(coalesce(cte2.duration,'0 second'),'HH24h MIm SSs') as duration,\r\n\tto_char((coalesce(cte2.duration/cte2.total_call,'0 second')),'HH24h MIm SSs') as act\r\n    from\r\n    cte2\r\n    left outer join cte3 on cte2.src_did = cte3.src_did\r\n    where (cte2.src_did like '%${didNumber}' or cte2.src_did like '%${didNumber}')\r\n    limit ${limit} offset ${offset}\t\t\r\n`;\r\n\r\n  let queryCount = ` select \r\n    count(distinct(src_did))\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${selectedStartTime}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${selectedEndTime}') >= start_time)\r\n    and src_did != ''`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getDidData(query).then(resp => {\r\n      setResponse(JSON.parse(resp.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    api.getDidDataCount(queryCount).then(resp => {\r\n      setCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n    });\r\n  }, [query, didNumber, queryCount]);\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'did.report'} />} breadcrumbs={breadcrumbs}>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            didNumber={didNumber}\r\n            setDidNumber={setDidNumber}\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            startEndDate={[selectedStartTime, selectedEndTime]}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            response={response}\r\n            count={count}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default DIDReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Collapse, IconButton, Link } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { setForgetPassMailSent } from '../../../../redux/actions/Auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      order: 1,\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  alertRoot: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const { send_forget_password_email } = useSelector(({ auth }) => auth);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let timeOutStopper = null;\r\n    if (send_forget_password_email) {\r\n      setOpen(true);\r\n\r\n      timeOutStopper = setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(false));\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n\r\n    return () => {\r\n      if (timeOutStopper) clearTimeout(timeOutStopper);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [send_forget_password_email]);\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onForgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <div className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/forgot-img.png'} />\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.authContent}>\r\n        <div className={'mb-7'}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </div>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          ForgotPassword\r\n        </Typography>\r\n        <Collapse in={open}>\r\n          <Alert\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n            className={classes.alertRoot}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}>\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }>\r\n            A mail has been sent on your email address with reset password link.\r\n          </Alert>\r\n        </Collapse>\r\n        <form>\r\n          <div className={'mb-5'}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </div>\r\n          <div className={'mb-5'}>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n              <IntlMessages id=\"appModule.resetPassword\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography>\r\n              Don't remember your email?\r\n              <span className={'ml-2'}>\r\n                <Link href=\"#\">\r\n                  <IntlMessages id=\"appModule.contactSupport\" />\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </form>\r\n        <ContentLoader />\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport ForgotPassword from '../../@jumbo/components/Common/authComponents/ForgotPassword';\r\n\r\nconst ForgotPasswordPage = () => <ForgotPassword variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouteLogin = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) !== 200 && localStorage.getItem('validation') !== true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuhMethods } from '../../services/auth';\r\nimport { CurrentAuthMethod } from '@jumbo/constants/AppConstants';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const NotPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const dispatch = useDispatch();\r\n  if(localStorage.getItem('token')){\r\n    var exptime = localStorage.getItem('exptime');\r\n    if(Date.now() >= exptime){\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    }\r\n  }\r\n  else{\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        parseInt(localStorage.getItem('login')) === 200 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: '/signin', state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function ServiceLevelDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getQueue, getServiceLevel } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ServiceLevelDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [params, setParams] = useState({ startDate: formatDate(yesterday), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT '10' as ring,count(q_num) as cnt FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59'\r\n    and ring_time > interval '0 seconds' and ring_time < interval '10 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '20' as ring,count(q_num) FROM callcent_queuecalls_view where \r\n    time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '10 seconds' and ring_time < interval '20 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union\r\n    SELECT '30' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and\r\n    ring_time > interval '20 seconds' and ring_time < interval '30 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '40' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00'\r\n    and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '30 seconds' and ring_time < interval '40 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '50' as ring,count(q_num) FROM \r\n    callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '40 seconds' and ring_time < interval '50 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '60' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '50 seconds'\r\n    and ring_time < interval '60 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` order by ring asc`;\r\n  useEffect(() => {\r\n    getServiceLevel(string).then(response => setResponse(JSON.parse(response.data.data)));\r\n  }, [string, setResponse]);\r\n  useEffect(() => {\r\n    getQueue().then(response => setQueueList(JSON.parse(response.data.data)));\r\n  }, []);\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  }, [startDate, endDate]);\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <ServiceLevelDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                        <InputLabel id=\"queue-select-label\">\r\n                          <IntlMessages id={'queue.answer.report.queues'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((queue, index) => (\r\n                            <MenuItem key={index} value={queue.dn}>\r\n                              {queue.dn} {queue.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\nfunction createData(level, cnt) {\r\n  return { level, cnt };\r\n}\r\n\r\nfunction DataTable({ response }) {\r\n  const classes = useStyles();\r\n\r\n  let total = 0;\r\n  for (var i = 0; i < response.length; i++) {\r\n    total = total + parseInt(response[i].cnt);\r\n  }\r\n  function percent(cnt) {\r\n    var result = 0;\r\n    result = parseInt(cnt) / total;\r\n    return (parseFloat(result) * 100).toFixed(2);\r\n  }\r\n  const rows = response.map(data => createData(data.ring, percent(data.cnt)));\r\n\r\n  const csvData = rows.map(row => ({\r\n    level: row.level,\r\n    cnt: `%${row.cnt === 'NaN' ? '00.00' : row.cnt}`,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-EN'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Servis Seviyesi'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Service Level'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Seconds'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Saniye'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Seconden'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Sekunden'\r\n                  : ''\r\n              }\r\n              value=\"level\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Servis Seviyesi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Service Level'\r\n                  : ''\r\n              }\r\n              value=\"cnt\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'seconds'} />\r\n              </TableCell>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'service.level'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.level}>\r\n                <TableCell align=\"center\">{row.level}</TableCell>\r\n                <TableCell align=\"center\">%{row.cnt === 'NaN' ? '00.00' : row.cnt}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction ServiceLevel() {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'service.level'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'service.level'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item xs={12} xl={12}>\r\n          <Table response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Alert style={{ marginTop: '20px' }} severity=\"info\">\r\n        <IntlMessages id={'servicelevel.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default ServiceLevel;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedQueuesDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CircularProgress, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getAbandonedQueueCalls, getQueue } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AbondenedQueuesDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse, limit, offset, setQueueList, queuelist, setResponseCount }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ startDate: formatDate(today), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  let string = `SELECT \r\n  queue_view.display_name,\r\n  t1.from_userpart,\r\n  count(*),\r\n  sum (time_end - time_start) as waiting\r\n  from callcent_queuecalls_view t1\r\n  inner join queue_view on queue_view.dn = t1.q_num\r\n  where\r\n  t1.from_userpart != ''\r\n  and queue_view.display_name like '%${queue}'\r\n  and (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start)\r\n  and (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >= t1.time_start) \r\n  and is_answered = false\r\n  and  reason_noanswercode != 2\r\n  and  reason_failcode = 1\r\n  group by t1.from_userpart , queue_view.display_name \r\n  order by display_name,from_userpart\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `SELECT \r\n  count(*)\r\n  from callcent_queuecalls_view t1\r\n  inner join queue_view on queue_view.dn = t1.q_num\r\n  where\r\n  t1.from_userpart != ''\r\n  and queue_view.display_name like '%${queue}'\r\n  and (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start)\r\n  and (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >= t1.time_start) \r\n  and is_answered = false\r\n  and  reason_noanswercode != 2\r\n  and  reason_failcode = 1`;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAbandonedQueueCalls(string).then(response => {\r\n      getAbandonedQueueCalls(stringCount).then(resp => {\r\n        setResponse(JSON.parse(response.data.data));\r\n        setResponseCount(parseInt(JSON.parse(resp.data.data)[0]?.count));\r\n        setLoading(false);\r\n      });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [string]);\r\n  useEffect(() => {\r\n    getQueue().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  }, [startDate, endDate]);\r\n  const handleChangeQueue = event => {\r\n    event.target.value === '' ? setQueue('') : setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <AbondenedQueuesDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((que, index) => (\r\n                            <MenuItem key={index} value={que.display_name}>\r\n                              {que.dn} - {que.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, responseCount }) {\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'caller.id'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'count',\r\n      headerName: <IntlMessages id={'count'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting',\r\n      headerName: <IntlMessages id={'waiting.time'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(num, id, display_name, from_userpart, count, waiting) {\r\n    return { num, id, display_name, from_userpart, count, waiting };\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index + 1 + offset,\r\n      index,\r\n      data.display_name,\r\n      data.from_userpart,\r\n      data.count,\r\n      data.waiting\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(responseCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Abondened_queues'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_terk_raporu'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Verlassene Warteschlangen'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Verlaten wachtrijen'\r\n                      : ' '\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Saati'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Caller Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Bellernummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anrufernummer'\r\n                          : ''\r\n                      }\r\n                      value=\"caller_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Sıra'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrij'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlange'\r\n                          : ''\r\n                      }\r\n                      value=\"queue\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Agent Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Agent Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Agent nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Agentennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"agent_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={rows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport const AbandonedQueues = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abandoned.queues'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abandoned.queues'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setQueueList={setQueueList}\r\n            queuelist={queuelist}\r\n            limit={limit}\r\n            offset={offset}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            page={page}\r\n            setPage={setPage}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function RepadativeCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {\r\n  getQueueNumber,\r\n  getRepetetiveAll,\r\n  getRepetetiveAnswered,\r\n  getDidNumbers,\r\n  getRepetetiveAllCount,\r\n  getRepetetiveAnsweredCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getRepetetiveCallerDetails } from 'api/api';\r\nimport RepadativeCallsDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setallcalls,\r\n  limit,\r\n  allCallOffset,\r\n  answeredLimit,\r\n  answeredCallsOffset,\r\n  setAnsweredCalls,\r\n  callerNumber,\r\n  setResponseCaller,\r\n  setAllCallCount,\r\n  setAnsweredCallCount,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: formatDate(yesterday),\r\n    paramFinish: formatDate(today),\r\n  });\r\n\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [didList, setDidList] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRepetetiveAll(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setallcalls(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n    getRepetetiveAllCount(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setAllCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, limit, allCallOffset, queue, setallcalls, setAllCallCount, didNumber]);\r\n  useEffect(() => {\r\n    getRepetetiveAnswered(params, answeredLimit, answeredCallsOffset, queue).then(response =>\r\n      setAnsweredCalls(JSON.parse(response.data.data)),\r\n    );\r\n\r\n    getRepetetiveAnsweredCount(params).then(response => {\r\n      setAnsweredCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, answeredLimit, answeredCallsOffset, setAnsweredCalls, setAnsweredCallCount, queue]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDidNumbers().then(resp => {\r\n      setDidList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRepetetiveCallerDetails(params, callerNumber).then(resp => {\r\n      setResponseCaller(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params, callerNumber, setQueueList, setDidList, setResponseCaller]);\r\n\r\n  useEffect(()=>{\r\n    setParams({\r\n      paramStart: formatDate(startDate),\r\n      paramFinish: formatDate(endDate),\r\n    });\r\n  },[startDate,endDate])\r\n  const handleChangeQueueNumber = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeDidNumber = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RepadativeCallsDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <GridContainer>\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={queue}\r\n                    onChange={handleChangeQueueNumber}\r\n                    label={<IntlMessages id={'queue'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {queuelist.map((queue, index) => (\r\n                      <MenuItem key={index} value={queue.dn}>\r\n                        {queue.dn} - {queue.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={didNumber}\r\n                    onChange={handleChangeDidNumber}\r\n                    label={<IntlMessages id={'mountlydetails.didnumber'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {didList.map((did, index) => (\r\n                      <MenuItem key={index} value={did.conditiondata}>\r\n                        {did.conditiondata}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </GridContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AllCalls = ({\r\n  allcalls,\r\n  setallcalls,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  setCallerNumber,\r\n  setOpen,\r\n  allCallCount,\r\n  offset,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      id: 'num',\r\n      label: '#',\r\n    },\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(num, cnt, src_display_name) {\r\n    return { num, cnt, src_display_name };\r\n  }\r\n\r\n  const rows = allcalls.map((data, index) => createData(index + 1 + offset, data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClick = number => {\r\n    setCallerNumber(number);\r\n    setOpen(true);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [exportAllOpen, setExpotAllOpen] = useState(false);\r\n  const handleExportAllOpen = () => setExpotAllOpen(true);\r\n  const handleExportAllClose = () => setExpotAllOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(allCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setallcalls([]);\r\n    handleExportAllOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={exportAllOpen}\r\n        onClose={handleExportAllClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'allcalls'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell>\r\n                  <IntlMessages id={'details'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell style={{ cursor: 'pointer' }} onClick={() => handleClick(row.src_display_name)}>\r\n                      <VisibilityIcon style={{ color: '#F05454' }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, allCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={allCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={allcalls.length < limit || allcalls.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCalls;\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ responseCaller }) => {\r\n  const columns = [\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n    { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n    { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n    { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'><b>#</b></TableCell>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {responseCaller.map((row, index) => {\r\n            return (\r\n              <TableRow style={{ cursor: 'pointer' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell align='left'><b>{index+1}</b></TableCell>\r\n                {columns.map(column => {\r\n                  const value = row[column.id];\r\n                  return <TableCell align='center'>{value}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AnsweredCalls = ({\r\n  answeredcalls,\r\n  setAnsweredCalls,\r\n  setAnsweredLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  answeredCallCount,\r\n  offset,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      id: 'num',\r\n      label: '#',\r\n    },\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(num, cnt, src_display_name) {\r\n    return { num, cnt, src_display_name };\r\n  }\r\n\r\n  const rows = answeredcalls.map((data, index) => createData(index + 1 + offset, data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setAnsweredLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setAnsweredLimit(answeredCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setAnsweredCalls([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'wallboard.answered'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, answeredCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={answeredCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={\r\n            answeredcalls.length < limit || answeredcalls.length === 0 ? { disabled: true } : { disabled: false }\r\n          }\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnsweredCalls;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport CallTable from './AllCalls';\r\nimport Model from './Model';\r\nimport AnsweredCalls from './AnsweredCalls';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box, Button } from '@mui/material';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst RepetetiveCalls = () => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [answeredLimit, setAnsweredLimit] = useState(10);\r\n  const [allCallOffset, setAllCallOffset] = useState(0);\r\n  const [answeredCallsOffset, setAnsweredCallOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [pageAnswered, setPageAnswered] = useState(0);\r\n  const [allcalls, setallcalls] = useState([]);\r\n  const [answeredCalls, setAnsweredCalls] = useState([]);\r\n  const [callerNumber, setCallerNumber] = useState('');\r\n  const [responseCaller, setResponseCaller] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [allCallCount, setAllCallCount] = useState(10);\r\n  const [answeredCallCount, setAnsweredCallCount] = useState(10);\r\n  let curentLanguage = useIntl();\r\n\r\n  const handleClose = event => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'repetetive.calls'} />, isActive: true },\r\n  ];\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'repetetive.calls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <Filter\r\n            setResponseCaller={setResponseCaller}\r\n            setAnsweredCallCount={setAnsweredCallCount}\r\n            setallcalls={setallcalls}\r\n            callerNumber={callerNumber}\r\n            answeredLimit={answeredLimit}\r\n            limit={limit}\r\n            allCallOffset={allCallOffset}\r\n            answeredCallsOffset={answeredCallsOffset}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            setAllCallCount={setAllCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<AddIcCallIcon />}\r\n                    number={allCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'allcalls'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<PhoneInTalkIcon />}\r\n                    number={answeredCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'wallboard.answered'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <CallTable\r\n            setOpen={setOpen}\r\n            responseCaller={responseCaller}\r\n            offset={allCallOffset}\r\n            setOffset={setAllCallOffset}\r\n            allcalls={allcalls}\r\n            setallcalls={setallcalls}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setCallerNumber={setCallerNumber}\r\n            setPage={setPage}\r\n            page={page}\r\n            allCallCount={allCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <AnsweredCalls\r\n            answeredcalls={answeredCalls}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            answeredCallCount={answeredCallCount}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            setPage={setPageAnswered}\r\n            page={pageAnswered}\r\n            limit={answeredLimit}\r\n            setOffset={setAnsweredCallOffset}\r\n            offset={answeredCallsOffset}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model responseCaller={responseCaller} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <ExcelFile\r\n              filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls_Detail' : 'Mükerrer_arama_Detay'}\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={responseCaller} name=\"responseCaller\">\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'DID Number' : 'DID Numarası'} value=\"src_did\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Called' : 'Hedef DN'} value=\"dst_display_name\" />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Talk Time' : 'Konuşma Süresi'}\r\n                  value=\"talkingtime\"\r\n                />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                  value=\"waitingtime\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginLeft: '10px' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default RepetetiveCalls;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst QueueList = ({ setQueueAmaunt }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getQueueList().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n      setQueueAmauntFunction();\r\n    }\r\n    var queueListTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(queueListTimeout);\r\n    }\r\n  };\r\n\r\n  const setQueueAmauntFunction = () => {\r\n    let queAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].waitingNumber !== '-') {\r\n        queAmaunt++;\r\n      }\r\n    }\r\n    setQueueAmaunt(queAmaunt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.waiting'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.length >= 1\r\n            ? response.map((row, index) => {\r\n                return row.waitingNumber !== '-' ? (\r\n                  <TableRow style={{ backgroundColor: '#FFFD95' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.waitingNumber}</b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                      <b>\r\n                        {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                          ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                              .toString()\r\n                              .replace(':', 'h ')\r\n                              .replace(':', 'm ') + 's'\r\n                          : null}\r\n                      </b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : null;\r\n              })\r\n            : null}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.waitingNumber === '-' ? (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                  <b>\r\n                    <IntlMessages id={'no.waiting'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                  <b>\r\n                    {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default QueueList;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport Chip from '@mui/material/Chip';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentConnection = ({ setCallAmaunt, setAgentAmaunt, setAgentNum, setAgentName }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    api.getQueueNumber().then(resp => setQueues(JSON.parse(resp.data.data)));\r\n  }, []);\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentConnection().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n      setValuesFunction();\r\n    }\r\n\r\n    var agentConnectionTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentConnectionTimeout);\r\n    }\r\n  };\r\n\r\n  const setValuesFunction = () => {\r\n    let callAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].connectionNumber !== '-') {\r\n        callAmaunt++;\r\n      }\r\n    }\r\n\r\n    setCallAmaunt(callAmaunt);\r\n    setAgentAmaunt(response.length);\r\n  };\r\n\r\n  const setAgentNumFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const column = [\r\n    { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'agent'} />, width: '30px' },\r\n    { id: 'direction', headerName: <IntlMessages id={'direction'} />, width: '100px' },\r\n    { id: 'queue', headerName: <IntlMessages id={'queue'} />, width: '100px' },\r\n    { id: 'connection_number', headerName: <IntlMessages id={'connection.number'} />, width: '60px' },\r\n    { id: 'connection_time', headerName: <IntlMessages id={'connection.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'internals.summary.agent'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'direction'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.number'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.time'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber !== '-' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}\r\n                hover\r\n                role=\"checkbox\"\r\n                tabIndex={-1}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  {row.direction.includes('inbound') ? (\r\n                    <Chip color=\"success\" label={<IntlMessages id={'incomingcall'} />} />\r\n                  ) : row.connectionNumber.length < 10 ? (\r\n                    <Chip color=\"info\" label={<IntlMessages id={'agentedcall'} />} />\r\n                  ) : (\r\n                    <Chip color=\"error\" label={<IntlMessages id={'outgoingcall'} />} />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  {row?.queue !== null ? (\r\n                    row?.queue !== undefined ? (\r\n                      queues.find(e => e.dn === row?.queue?.split('.')[0])?.display_name || <b>-</b>\r\n                    ) : (\r\n                      <b>-</b>\r\n                    )\r\n                  ) : (\r\n                    <b>-</b>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber === '-' ? (\r\n              <TableRow key={index} hover role=\"checkbox\" tabIndex={-1} style={{ cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentConnection;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentStatus = ({ setBreakeAgentAmount, setLoginAgentAmount, setAgentNum, setAgentName }) => {\r\n  var now = new Date();\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentStatus(convertToLocalTime(now)).then(resp => {\r\n        setResponse(JSON.parse(resp.data.data));\r\n      });\r\n      setValuesFunction();\r\n    }\r\n    var agentStatusTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentStatusTimeout);\r\n    }\r\n  };\r\n\r\n  const setValuesFunction = () => {\r\n    let breakeAgenAmaunt = 0;\r\n    let loginAgentAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout') {\r\n        breakeAgenAmaunt++;\r\n      } else if (response[i].states === 'Login') {\r\n        loginAgentAmaunt++;\r\n      }\r\n    }\r\n    setBreakeAgentAmount(breakeAgenAmaunt);\r\n    setLoginAgentAmount(loginAgentAmaunt);\r\n  };\r\n\r\n  const onClickUptateValuesFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const column = [\r\n    { id: 'agent_name', headerName: <IntlMessages id={'internals.summary.agent'} />, width: '30px' },\r\n    { id: 'states', headerName: <IntlMessages id={'state'} />, width: '60px' },\r\n    { id: 'statustime', headerName: <IntlMessages id={'state.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '33vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map(column => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={{\r\n                  paddingTop: '8px',\r\n                  paddingBottom: '8px',\r\n                  fontFamily: 'Roboto',\r\n                  color: 'white',\r\n                  backgroundColor: '#FA744F',\r\n                }}>\r\n                {column.headerName}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Login' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states !== 'Login' && res.states !== 'State' && res.states !== 'Logout' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{\r\n                  backgroundColor:\r\n                    res.states === 'YEMEK' && parseInt(res.statustime.split(':')[0]) >= 1\r\n                      ? '#DD4A48'\r\n                      : res.states === 'WC' && parseInt(res.statustime.split(':')[1]) >= 5\r\n                      ? '#DD4A48'\r\n                      : '#F3950D',\r\n                  cursor: 'pointer',\r\n                }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Logout' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#DE834D', cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'State' ? (\r\n              <TableRow key={index} style={{ cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />{' '}\r\n                  <b>{res.states === 'State' ? <IntlMessages id={'passive'} /> : res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { Grid, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PhonePausedIcon from '@mui/icons-material/PhonePaused';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport PhoneMissedIcon from '@mui/icons-material/PhoneMissed';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport SupportAgentIcon from '@mui/icons-material/SupportAgent';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\n\r\nimport dateFormat from 'dateformat';\r\nimport { DateRange } from '@material-ui/icons';\r\n\r\nexport default function CallDetail({ queueAmaunt, callAmaunt, agentAmaunt, breakeAgentAmaunt, loginAgentAmaunt }) {\r\n  let history = useHistory();\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd'));\r\n  const [dateFilter, setDateFilter] = useState('daily');\r\n  const [direction, setDirection] = useState('all');\r\n  const [callType, setCallType] = useState('all');\r\n  const handleChangeFilter = e => {\r\n    setDateFilter(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'weekly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 7)), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'daily':\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'monthly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 30)), 'yyyy-mm-dd'));\r\n        break;\r\n      default:\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getDailyCallDetails(startTimeApi)\r\n      .then(resp => {\r\n        setResponse(JSON.parse(resp.data.data)[0]);\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [startTimeApi, history]);\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      api\r\n        .getDailyCallDetails(startTimeApi)\r\n        .then(resp => setResponse(JSON.parse(resp.data.data)[0]))\r\n        .catch(err => {\r\n          if (err.response.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [startTimeApi, history]);\r\n\r\n  const convertTime = timeString => {\r\n    if (timeString !== undefined) {\r\n      if (timeString.includes('.')) {\r\n        let tempHour = parseInt(timeString.split('.')[0]) * 24;\r\n        return (\r\n          tempHour +\r\n          parseInt(timeString.split('.')[1].split(':')[0]) +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[1] +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[2]\r\n        );\r\n      } else {\r\n        return timeString;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ marginBottom: '1px', fontFamily: 'Roboto' }}>\r\n      <GridContainer>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={dateFilter} onChange={handleChangeFilter}>\r\n              <MenuItem value=\"daily\">\r\n                <DateRange />\r\n                <IntlMessages id=\"daily\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"weekly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.weekly\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"monthly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.monthly\" />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={direction} onChange={e => setDirection(e.target.value)}>\r\n              <MenuItem value=\"all\">\r\n                <CompareArrowsIcon />\r\n                <IntlMessages id={'all'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"inbound\">\r\n                <PhoneCallbackIcon />\r\n                <IntlMessages id={'dashboard.inbound'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"outbound\">\r\n                <PhoneForwardedIcon />\r\n                <IntlMessages id={'dashboard.outbound'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"queue\">\r\n                <PhoneForwardedIcon />\r\n                <IntlMessages id={'queue'} />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={callType} onChange={e => setCallType(e.target.value)}>\r\n              <MenuItem value=\"all\">\r\n                <AddIcCallIcon />\r\n                <IntlMessages id={'all'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"agent\">\r\n                <SupportAgentIcon />\r\n                <IntlMessages id={'CallLog.filter.innumber'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"out\">\r\n                <PhoneInTalkIcon />\r\n                <IntlMessages id={'CallLog.filter.outnumber'} />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                callType === 'agent'\r\n                  ? convertReadableTime(response.agent_to_agent_totaltime)\r\n                  : direction === 'inbound'\r\n                  ? convertReadableTime(response.inbound_totaltime)\r\n                  : direction === 'outbound'\r\n                  ? convertReadableTime(response.outbound_totaltime)\r\n                  : direction === 'queue'\r\n                  ? convertReadableTime(response.queue_totaltime)\r\n                  : (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00') !== undefined\r\n                  ? (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.call.time'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<AddIcCallIcon />}\r\n              number={response.total_call}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.total.call'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={2}\r\n          style={{ display: direction === 'queue' || direction === 'outbound' || callType === 'agent' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneCallbackIcon />}\r\n              number={response.inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.inbound'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={2}\r\n          style={{ display: direction === 'queue' || direction === 'inbound' || callType === 'agent' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.outbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.outbound'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'agent' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<SupportAgentIcon />}\r\n              number={response.agent_to_agent_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'agentedcall'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'queue' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.queue_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'queue'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={response.answered_inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.answered'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#EA4C4C  -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneMissedIcon />}\r\n              number={String(\r\n                parseInt(response.inbound_calls) - parseInt(response.answered_inbound_calls) < 0\r\n                  ? '0'\r\n                  : parseInt(response.inbound_calls) - parseInt(response.answered_inbound_calls),\r\n              )}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.unanswered'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                callType === 'agent'\r\n                  ? getAverageTime(response.agent_to_agent_totaltime, response.agent_to_agent_calls)\r\n                  : direction === 'inbound'\r\n                  ? getAverageTime(response.inbound_totaltime, response.inbound_calls)\r\n                  : direction === 'outbound'\r\n                  ? getAverageTime(response.outbound_totaltime, response.outbound_calls)\r\n                  : direction === 'queue'\r\n                  ? getAverageTime(response.queue_totaltime, response.queue_calls)\r\n                  : (response.average !== '' ? convertTime(response.average) : '00:00:00') !== undefined\r\n                  ? (response.average !== '' ? convertTime(response.average) : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.average.time'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhonePausedIcon />}\r\n              number={queueAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.waiting.queue'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#EA4C4C -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={callAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.call'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PersonIcon />}\r\n              number={agentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<TimerIcon />}\r\n              number={breakeAgentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.inbreak'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<GroupIcon />}\r\n              number={String(loginAgentAmaunt - callAmaunt < 0 ? 0 : loginAgentAmaunt - callAmaunt)}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.available'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\nconst getAverageTime = (totaltime, count) => {\r\n  let temptime = totaltime.split(':');\r\n  let totalSec = parseInt(temptime[0]) * 3600 + parseInt(temptime[1]) * 60 + parseInt(temptime[2]);\r\n  let average = Math.round(totalSec / (parseInt(count) === 0 ? 1 : parseInt(count)));\r\n  var hours = Math.floor(average / 3600);\r\n  average %= 3600;\r\n  var minutes = Math.floor(average / 60);\r\n  var seconds = average % 60;\r\n  return `${hours < 10 ? `0${hours}` : hours}h ${minutes < 10 ? `0${minutes}` : minutes}m ${\r\n    seconds < 10 ? `0${seconds}` : seconds\r\n  }s`;\r\n};\r\n\r\nconst convertReadableTime = time => {\r\n  return (\r\n    time\r\n      .toString()\r\n      .replace(':', 'h ')\r\n      .replace(':', 'm ') + 's'\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Tab, Tabs, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nimport { DateRange } from '@material-ui/icons';\r\n\r\nexport default function AgentDetail({ agentNum, agentName }) {\r\n  const [agentDetail, setAgentDetail] = useState({\r\n    dst_display_name: '-',\r\n    totalcall: '0',\r\n    answered_call: '0',\r\n    inbound_call_to_agent: '0',\r\n    outbound_call_to_agent: '0',\r\n    totaltime: '00:00:00',\r\n    average: '00:00:00',\r\n    inboundtotaltime: '00:00:00',\r\n    outboundtotaltime: '00:00:00',\r\n    inboundaverage: '00:00:00',\r\n    outboundaverage: '00:00:00',\r\n  });\r\n  let [voiceMail, setVoiceMail] = useState('0');\r\n  let [longTime, setLongTime] = useState('00:00:00');\r\n  let [waitingTime, setWaitingTime] = useState('00:00:00');\r\n\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  const [dateFilter, setDateFilter] = useState('daily');\r\n\r\n  const handleChangeFilter = e => {\r\n    setDateFilter(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'weekly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 7)), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'daily':\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'monthly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 30)), 'yyyy-mm-dd'));\r\n        break;\r\n      default:\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n    }\r\n  };\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getInternalsSummaryLongestCalled(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      api.getInternalsSummaryLongestCaller(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      api\r\n        .getInternalsSummaryLongestCalledAmount(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum)\r\n        .then(result => {\r\n          setLongestAmount(JSON.parse(result.data.data));\r\n        });\r\n      api\r\n        .getInternalsSummaryLongestCallerAmount(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum)\r\n        .then(result => {\r\n          setLongestCallerAmount(JSON.parse(result.data.data));\r\n        });\r\n    }\r\n  }, [agentNum, startTimeApi]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getAgentDetails(agentNum, startTimeApi).then(res => {\r\n        if (JSON.parse(res.data.data).length === 0) {\r\n          setAgentDetail({\r\n            dst_display_name: agentName,\r\n            totalcall: '0',\r\n            answered_call: '0',\r\n            inbound_call_to_agent: '0',\r\n            outbound_call_to_agent: '0',\r\n            totaltime: '00:00:00',\r\n            average: '00:00:00',\r\n            inboundtotaltime: '00:00:00',\r\n            outboundtotaltime: '00:00:00',\r\n            inboundaverage: '00:00:00',\r\n            outboundaverage: '00:00:00',\r\n          });\r\n        } else {\r\n          setAgentDetail(JSON.parse(res.data.data)[JSON.parse(res.data.data).length-1]);\r\n        }\r\n      });\r\n    }\r\n  }, [agentNum, agentName, startTimeApi]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardVoiceMail(agentNum).then(response => {\r\n        setVoiceMail(JSON.parse(response.data.data)[0].count);\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardLongTime(agentNum).then(response => {\r\n        setLongTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardWaitingTime(agentNum).then(response => {\r\n        setWaitingTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <Paper>\r\n        <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select id=\"direction-select\" value={dateFilter} onChange={handleChangeFilter}>\r\n              <MenuItem value=\"daily\">\r\n                <DateRange />\r\n                <IntlMessages id=\"daily\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"weekly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.weekly\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"monthly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.monthly\" />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <div style={{ minHeight: '33vh', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Box style={{ width: '100%' }}>\r\n            <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n              <Tabs value={value} onChange={handleChange}>\r\n                <Tab style={{ borderRight: '3px solid #a1bf6e' }} label={<IntlMessages id={'Total'} />} {...a11yProps(0)} />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Inbound'} />}\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Outbound'} />}\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <span>{longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}</span>\r\n                    <b>{longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}</b>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <span> {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}</span>\r\n                    <b>{longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}</b>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={8}>\r\n                  <p style={{ opacity: '.5', display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                    </span>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.callednumber'} />\r\n                    </span>\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <b>\r\n                      {longestCalleds[0] !== undefined\r\n                        ? longestCalleds[0].en_uzun_aranan_süre\r\n                            .toString()\r\n                            .replace(':', 'h ')\r\n                            .replace(':', 'm ') + 's'\r\n                        : '-'}\r\n                    </b>\r\n                    <span>{longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}</span>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={8}>\r\n                  <p style={{ opacity: '.5', display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                    </span>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.callernumber'} />\r\n                    </span>\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <b>\r\n                      {longestCallers[0] !== undefined\r\n                        ? longestCallers[0].en_uzun_aranan_süre\r\n                            .toString()\r\n                            .replace(':', 'h ')\r\n                            .replace(':', 'm ') + 's'\r\n                        : '-'}\r\n                    </b>\r\n                    <span>{longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}</span>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n          </Box>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport QueueList from './QueueList';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport AgentConnection from './AgentConnection';\r\nimport AgentStatus from './AgentStatus/AgentStatus';\r\nimport CallDetail from './CallDetail';\r\nimport AgentDetail from './AgentDetail';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst WallBoard = () => {\r\n  let [queueAmaunt, setQueueAmaunt] = useState(0);\r\n  let [callAmaunt, setCallAmaunt] = useState(0);\r\n  let [agentAmaunt, setAgentAmaunt] = useState(0);\r\n  let [breakeAgentAmaunt, setBreakeAgentAmount] = useState(0);\r\n  let [loginAgentAmaunt, setLoginAgentAmount] = useState(0);\r\n  let [agentNum, setAgentNum] = useState('0');\r\n  let [agentName, setAgentName] = useState('-');\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n    { label: <IntlMessages id={'wallboard'} />, isActive: true },\r\n  ];\r\n\r\n  let [callDetailVisible, setCallDetailVisible] = useState(true);\r\n  const handleSwitchChange = e => {\r\n    setCallDetailVisible(e.target.checked);\r\n  };\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"wallboard\" />} breadcrumbs={breadcrumbs}>\r\n      <div>\r\n        {callDetailVisible && (\r\n          <CallDetail\r\n            queueAmaunt={queueAmaunt}\r\n            callAmaunt={callAmaunt}\r\n            agentAmaunt={agentAmaunt}\r\n            breakeAgentAmaunt={breakeAgentAmaunt}\r\n            loginAgentAmaunt={loginAgentAmaunt}\r\n          />\r\n        )}\r\n        <FormControlLabel\r\n          control={<Switch checked={callDetailVisible} onChange={handleSwitchChange} />}\r\n          label={<IntlMessages id=\"showCards\" />}\r\n        />\r\n      </div>\r\n      <GridContainer>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#EA4C4C   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queuelist'} />\r\n            </div>\r\n            <QueueList queueAmaunt={queueAmaunt} setQueueAmaunt={setQueueAmaunt} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#2978B5   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.connection'} />\r\n            </div>\r\n            <AgentConnection\r\n              setCallAmaunt={setCallAmaunt}\r\n              setAgentAmaunt={setAgentAmaunt}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#FA744F',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agent.status'} />\r\n            </div>\r\n            <AgentStatus\r\n              setBreakeAgentAmount={setBreakeAgentAmount}\r\n              setLoginAgentAmount={setLoginAgentAmount}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#ADCE74',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.detail'} />\r\n            </div>\r\n            <AgentDetail agentNum={agentNum} agentName={agentName} />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default WallBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { getDailyLog, getDailyLogTable } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, setResponseTable }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyLog(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  useEffect(() => {\r\n    getDailyLogTable(params.date).then(resp => {\r\n      setResponseTable(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params.date, setResponseTable]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  useEffect(()=>{\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  },[endDate])\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  maxDate={new Date()}\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst DataTable = ({ response, responseTable }) => {\r\n  let date;\r\n  let totalCall = 0;\r\n  let total = 0;\r\n  let act = 0;\r\n\r\n  for (let i = 0; i < responseTable.length; i++) {\r\n    date = responseTable[i].hour_log !== 'undefined' ? responseTable[i].hour_log.split(' ')[0] : '-';\r\n    totalCall += parseInt(responseTable[i].count);\r\n    total = responseTable[i].total;\r\n\r\n    act = responseTable[i].act;\r\n  }\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function createData(date, totalCall, totalMin, act) {\r\n    return { date, totalCall, totalMin, act };\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const rows = [createData(date, totalCall, total, act)];\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"totalCall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalMin\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalam Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Duration'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b>{row.date !== undefined ? row.date : '-'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.totalCall}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.totalMin.length > 0\r\n                      ? row.totalMin.split(':')[0].length > 2\r\n                        ? parseInt(row.totalMin?.split(':')[0].split('.')[0]) * 24 +\r\n                          parseInt(row.totalMin?.split(':')[0].split('.')[1]).toString() +\r\n                          ':' +\r\n                          row.totalMin.split(':')[1] +\r\n                          ':' +\r\n                          row.totalMin.split(':')[2]\r\n                        : row.totalMin\r\n                      : row.totalMin\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {row.act\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis, Label } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst Chart = ({ response }) => {\r\n  let datalist = [];\r\n  datalist = response.map(data => ({\r\n    count: data.count,\r\n    hour: parseInt(data.hour_log.split(' ')[1].split(':')[0]),\r\n  }));\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    const found = datalist.some(data => parseInt(data.hour) === i);\r\n    if (!found) {\r\n      datalist.push({ count: 0, hour: i });\r\n    }\r\n  }\r\n  datalist.sort(function(a, b) {\r\n    return parseInt(a.hour) - parseInt(b.hour);\r\n  });\r\n  var maximum = Math.max.apply(\r\n    Math,\r\n    datalist.map(function(o) {\r\n      return o.count;\r\n    }),\r\n  );\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\">\r\n                <Label\r\n                  value={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunden'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : 'Hour'\r\n                  }\r\n                  position=\"insideBottomRight\"\r\n                  offset={0}\r\n                />\r\n              </XAxis>\r\n              <YAxis\r\n                domain={[0, maximum]}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={data => {\r\n                  return data.payload[0] ? (\r\n                    <div style={{ backgroundColor: 'white' }}>\r\n                      <p>\r\n                        <IntlMessages id={'hour'} />: {data.payload[0].payload.hour}\r\n                      </p>\r\n                      <p>\r\n                        <IntlMessages id={'call.time'} />: {data.payload[0].payload.count}\r\n                      </p>\r\n                    </div>\r\n                  ) : null;\r\n                }}\r\n              />\r\n              <Legend />\r\n              <defs>\r\n                <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                  <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                </linearGradient>\r\n              </defs>\r\n\r\n              <Bar dataKey=\"count\" fill=\"url(#color1)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DailyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTable, setResponseTable] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailylog'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'dailylog'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse} setResponseTable={setResponseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <DataTable response={response} responseTable={responseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyLog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { getDailyActiveCalls } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyActiveCalls(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  useEffect(() => {\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  }, [endDate]);\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  maxDate={new Date()}\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { createRef } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport dateFormat from 'dateformat';\r\nconst Chart = ({ response }) => {\r\n  let datalist = [{ hour: '', count: 0 }];\r\n  datalist = response.map(item => ({\r\n    hour: dateFormat(item.timezone, 'HH:MM'),\r\n    count: parseInt(item.acc),\r\n  }));\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\" label={{\r\n                  value:\r\n                  curentLanguage.locale === 'en-EN'\r\n                  ? 'Hour'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Stunden'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Saat'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Uur'\r\n                  : 'Hour',\r\n                  position: 'insideBottom',\r\n                  offset:0\r\n                }}>\r\n              </XAxis>\r\n              <YAxis\r\n                allowDecimals={false}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={<CustomTooltip/>}\r\n              />\r\n              <Legend verticalAlign=\"top\" />\r\n              <Line dataKey=\"count\" dot={false} stroke=\"#3b65ff\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div style={{ backgroundColor: 'white' }}>\r\n        <p>\r\n          <IntlMessages id={'hour'} />: {payload[0]?.payload.hour}\r\n        </p>\r\n        <p>\r\n          <IntlMessages id={'call.time'} />: {payload[0]?.payload.count}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DailyAcc = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailyacc'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'dailyacc'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse}/>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyAcc;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(date, count, total, act) {\r\n    return { date, count, total, act };\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n  const rows = response.map(data => createData(data.day_log, data.count, data.total, data.act));\r\n\r\n  let data = rows.map(unit => ({\r\n    date: unit.date.split('T')[0],\r\n    count: unit.count,\r\n    total:\r\n      unit.total.hours === undefined\r\n        ? unit.total.minutes === undefined\r\n          ? unit.total.seconds === undefined\r\n            ? '00:00:00'\r\n            : '00:00:' + addZero(unit.total.seconds)\r\n          : unit.total.seconds === undefined\r\n          ? '00:' + addZero(unit.total.minutes) + ':00'\r\n          : '00:' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds)\r\n        : unit.total.minutes === undefined\r\n        ? unit.total.seconds === undefined\r\n          ? addZero(unit.total.hours) + ':00:00'\r\n          : addZero(unit.total.hours) + ':00:' + addZero(unit.total.seconds)\r\n        : unit.total.seconds === undefined\r\n        ? addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':00'\r\n        : addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds),\r\n    act:\r\n      unit.act !== undefined\r\n        ? unit.act.hours === undefined\r\n          ? unit.act.minutes === undefined\r\n            ? unit.act.seconds === undefined\r\n              ? '00:00:00'\r\n              : '00:00:' + addZero(unit.act.seconds)\r\n            : unit.act.seconds === undefined\r\n            ? '00:' + addZero(unit.act.minutes) + ':00'\r\n            : '00:' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n          : unit.act.minutes === undefined\r\n          ? unit.act.seconds === undefined\r\n            ? addZero(unit.act.hours) + ':00:00'\r\n            : addZero(unit.act.hours) + ':00:' + addZero(unit.act.seconds)\r\n          : unit.act?.seconds === undefined\r\n          ? addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':00'\r\n          : addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n        : '00:00:00',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    day: 0,\r\n    count: 0,\r\n    totalTime: 0,\r\n    averageTime: 0,\r\n  };\r\n\r\n  function timeToSecond(param) {\r\n    let second = parseInt(param.hours) * 3600 + parseInt(param.minutes) * 60 + parseInt(param.seconds);\r\n    return second;\r\n  }\r\n  for (let i = 0; i < rows.length; i++) {\r\n    total.count += parseInt(rows[i].count);\r\n    total.day = rows.length;\r\n    total.totalTime += timeToSecond(rows[i].total);\r\n    total.averageTime += timeToSecond(rows[i].act);\r\n  }\r\n\r\n  function secondToTime(param, day) {\r\n    param = param / parseInt(day);\r\n    let string =\r\n      addZero(Math.floor(param / 3600)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) % 60));\r\n    return string;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily log report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk yuk raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell>\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.date.split('T')[0]}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.count}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.total.hours === undefined\r\n                      ? row.total.minutes === undefined\r\n                        ? row.total.seconds === undefined\r\n                          ? '00:00:00'\r\n                          : '00:00:' + addZero(row.total.seconds)\r\n                        : row.total.seconds === undefined\r\n                        ? '00:' + addZero(row.total.minutes) + ':00'\r\n                        : '00:' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                      : row.total.minutes === undefined\r\n                      ? row.total.seconds === undefined\r\n                        ? addZero(row.total.hours) + ':00:00'\r\n                        : addZero(row.total.hours) + ':00:' + addZero(row.total.seconds)\r\n                      : row.total.seconds === undefined\r\n                      ? addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':00'\r\n                      : addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b style={{ color: '#FF87CA' }}>\r\n                    {(row.act !== undefined\r\n                      ? row.act.hours === undefined\r\n                        ? row.act.minutes === undefined\r\n                          ? row.act.seconds === undefined\r\n                            ? '00:00:00'\r\n                            : '00:00:' + addZero(row.act.seconds)\r\n                          : row.act.seconds === undefined\r\n                          ? '00:' + addZero(row.act.minutes) + ':00'\r\n                          : '00:' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                        : row.act.minutes === undefined\r\n                        ? row.act.seconds === undefined\r\n                          ? addZero(row.act.hours) + ':00:00'\r\n                          : addZero(row.act.hours) + ':00:' + addZero(row.act.seconds)\r\n                        : row.act?.seconds === undefined\r\n                        ? addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':00'\r\n                        : addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                      : '00:00:00'\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <b>\r\n                  {total.day + ' '} <IntlMessages id={'day'} />{' '}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.totalTime, 1)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.averageTime, total.day)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TableContainer } from '@material-ui/core';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = props => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const data = {\r\n    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\r\n    datasets: [\r\n      {\r\n        label: typeof props.array[0] === 'undefined' ? [] : props.array[0].date,\r\n        data: typeof props.array[0] === 'undefined' ? [] : props.array[0].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 206, 86, 0.8)',\r\n        borderColor: 'rgba(255, 206, 86, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[1] === 'undefined' ? [] : props.array[1].date,\r\n        data: typeof props.array[1] === 'undefined' ? [] : props.array[1].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[2] === 'undefined' ? [] : props.array[2].date,\r\n        data: typeof props.array[2] === 'undefined' ? [] : props.array[2].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        borderColor: 'rgba(54, 162, 235, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[3] === 'undefined' ? [] : props.array[3].date,\r\n        data: typeof props.array[3] === 'undefined' ? [] : props.array[3].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n      {\r\n        label: typeof props.array[4] === 'undefined' ? [] : props.array[4].date,\r\n        data: typeof props.array[4] === 'undefined' ? [] : props.array[4].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderColor: 'rgba(153, 102, 255, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n\r\n      <TableContainer className={classes.root} component={Paper} ref={ref}>\r\n        <Line data={data} options={options} />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, Select, InputLabel, MenuItem, Card, CardContent, CircularProgress } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getCallComparison, getCallComparisonDaily } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, response, setGraphData, setResponseDaily }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const showTime = date => {\r\n    const date_ = new Date(date);\r\n    return date_.getHours();\r\n  };\r\n  const today = new Date();\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [select, setSelect] = useState(1);\r\n  const [, setParams] = useState({ date: formatDate(today), choice: '' });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let array = [];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallComparisonDaily(formatDate(endDate), select).then(resp => {\r\n      let tempResponse = JSON.parse(resp.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          'T00:00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours:\r\n            tempResponse[i].total.split(':')[0].length > 2\r\n              ? parseInt(tempResponse[i].total.split(':')[0].split('.')[0]) * 24 +\r\n                parseInt(tempResponse[i].total.split(':')[0].split('.')[1]).toString()\r\n              : tempResponse[i].total.split(':')[0].startsWith('0')\r\n              ? tempResponse[i].total.split(':')[0].substring(1)\r\n              : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponseDaily(tempResponse);\r\n      setGraphData(array);\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  useEffect(() => {\r\n    getCallComparison(formatDate(endDate), select).then(response => {\r\n      let tempResponse = JSON.parse(response.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          'T' +\r\n          tempResponse[i].day_log.split(' ')[1].split(':')[0] +\r\n          ':00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours: tempResponse[i].total.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[0].substring(1)\r\n            : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponse(tempResponse);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  const respdata = response.map(data => ({\r\n    DayLog: formatDate(data.day_log),\r\n    Count: data.count,\r\n    TotalHour: data.total.hours === undefined || data.total.hour === 0 ? 0 : data.total.hour,\r\n    TotalMinutes: data.total.minutes === undefined || data.total.minutes === 0 ? 0 : data.total.minutes,\r\n    TotalSeconds: data.total.seconds === undefined || data.total.seconds === 0 ? 0 : data.total.seconds,\r\n    Hour: showTime(data.day_log),\r\n    Act: data.act.seconds === undefined || data.act.seconds === 0 ? 0 : data.act.seconds,\r\n  }));\r\n\r\n  let labelArray = [];\r\n\r\n  for (let i = select; i >= 0; i--) {\r\n    var date = new Date(formatDate(endDate));\r\n    date.setDate(date.getDate() - i);\r\n    labelArray.push(formatDate(date));\r\n  }\r\n  labelArray.reverse();\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    if (!respdata.some(daylog => daylog.DayLog === labelArray[i])) {\r\n      respdata.push({\r\n        DayLog: labelArray[i],\r\n        Count: 0,\r\n        TotalHour: 0,\r\n        TotalMinutes: 0,\r\n        TotalSeconds: 0,\r\n        Hour: 0,\r\n        Act: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    let group = [];\r\n    let totalDataArray = [];\r\n    let totalMins = [];\r\n    let totalSeconds = [];\r\n    let act = [];\r\n    group = respdata.filter(function(el) {\r\n      return !(el.DayLog !== labelArray[i]);\r\n    });\r\n\r\n    group.map(data => {\r\n      for (let j = 0; j < 24; j++) {\r\n        if (j === data.Hour) {\r\n          totalDataArray[j] = data.Count;\r\n          act[j] = data.Act;\r\n          totalSeconds[j] = data.TotalSeconds;\r\n          totalMins[j] = data.TotalMinutes;\r\n        } else {\r\n          if (typeof totalDataArray[j] === 'undefined') {\r\n            totalDataArray[j] = 0;\r\n            act[j] = 0;\r\n            totalSeconds[j] = 0;\r\n            totalMins[j] = 0;\r\n          }\r\n        }\r\n      }\r\n      array[i] = {\r\n        date: labelArray[i],\r\n        count: totalDataArray,\r\n        totalSeconds: totalSeconds,\r\n        totalMins: totalMins,\r\n        act: act,\r\n      };\r\n      return data;\r\n    });\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSelect(event.target.value);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  useEffect(() => {\r\n    setParams({ date: formatDate(endDate), choice: select });\r\n    setGraphData(array);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                {' '}\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'days.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"* days ago\"\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport DataTable from './Table';\r\nimport { Grid } from '@material-ui/core';\r\nimport Graph from './Graph';\r\nimport Filter from './Filter';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst CallComparison = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseDaily, setResponseDaily] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'call.comparison'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'call.comparison'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n          <Filter\r\n            setGraphData={setGraphData}\r\n            response={response}\r\n            setResponse={setResponse}\r\n            setResponseDaily={setResponseDaily}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <DataTable response={responseDaily} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Graph array={graphData} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CallComparison;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getMontlyLog } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nfunction Filter({ setResponse }) {\r\n  const today = new Date();\r\n  const [selectedMonth, setSelectedMonth] = useState(1);\r\n  const [select, setSelect] = useState(1);\r\n  const [sum, setSum] = useState(0);\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let selectboxdata = [];\r\n\r\n  for (var i = 6; i >= 0; i -= 1) {\r\n    var date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n\r\n    selectboxdata.push({\r\n      data: months[date.getMonth()] + ' ' + date.getFullYear(),\r\n      year: date.getFullYear(),\r\n      month: <IntlMessages id={`${months[date.getMonth()]}`} />,\r\n    });\r\n  }\r\n  selectboxdata.reverse();\r\n\r\n  const handleChange = event => {\r\n    setSum(event.target.value - 1);\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleMonthChange = event => {\r\n    setSelectedMonth(event.target.value);\r\n    setSum(select - 1);\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n      setLoading(true);\r\n      getMontlyLog(selectedMonth, sum).then(response => {\r\n        let resultArray = JSON.parse(response.data.data);\r\n        for (let i = 0; i < resultArray.length; i++) {\r\n          let tempArray = resultArray[i].date_trunc.split(' ')[0].split('.');\r\n          resultArray[i].date_trunc = tempArray[2] + '-' + tempArray[1] + '-0' + tempArray[0];\r\n        }\r\n        setResponse(resultArray);\r\n        setLoading(false);\r\n      });\r\n  }, [sum, selectedMonth, setResponse]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                  value={selectedMonth}\r\n                  onChange={handleMonthChange}>\r\n                  <MenuItem value={' '}>\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {selectboxdata.map((data, index) => (\r\n                    <MenuItem key={index} value={selectboxdata.indexOf(data) + 1}>\r\n                      {data.month} {data.year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'months.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={'* ' + <IntlMessages id={'months.ago'} />}\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={5}>\r\n                    5 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={6}>\r\n                    6 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  customTooltip: {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: 5,\r\n  },\r\n}));\r\nconst formatDate = date => {\r\n  let d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  let year = d.getFullYear();\r\n  let hour = d.getHours();\r\n  let min = d.getMinutes();\r\n\r\n  if (month < 10) month = '0' + month;\r\n  if (day < 10) day = '0' + day;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n\r\n  return year + '-' + month;\r\n};\r\nconst ApplicationsGraph = ({ pieData }) => {\r\n  const classes = useStyles();\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      return (\r\n        <Box className={classes.customTooltip}>\r\n          <label>{`${payload[0].name} : ${payload[0].value}`}</label>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const data = pieData.map(data => ({\r\n    name: formatDate(data.date_trunc),\r\n    value: parseInt(data.toplam),\r\n  }));\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n  return (\r\n    <PieChart width={194} height={194}>\r\n      <Pie\r\n        data={data}\r\n        color=\"#000000\"\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        isAnimationActive={true}\r\n        outerRadius={95}\r\n        fill=\"#8884d8\">\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip content={<CustomTooltip />} />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default ApplicationsGraph;\r\n","import React, { createRef } from 'react';\r\nimport CmtCard from '@coremat/CmtCard';\r\nimport CmtCardHeader from '@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '@coremat/CmtCard/CmtCardContent';\r\nimport Chart from './graph';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = ({ response }) => {\r\n  const useStyles = makeStyles({\r\n    cardRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative',\r\n      '& .Cmt-card-content': {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n      <div ref={ref}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader className=\"pt-5\" title={<IntlMessages id={'monthly.log'} />}></CmtCardHeader>\r\n          <CmtCardContent>\r\n            <Chart pieData={response} />\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { toInteger } from 'lodash';\r\n\r\nconst DataTable = ({ response }) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  let aylar = [\r\n    'Ocak',\r\n    'Şubat',\r\n    'Mart',\r\n    'Nisan',\r\n    'Mayıs',\r\n    'Haziran',\r\n    'Temmuz',\r\n    'Ağustos',\r\n    'Eylül',\r\n    'Ekim',\r\n    'Kasım',\r\n    'Aralık',\r\n  ];\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 200,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + d.getMonth();\r\n\r\n    return { month: <IntlMessages id={`${months[parseInt(month)]}`} />, year: d.getFullYear() };\r\n  };\r\n  function createData(date, total) {\r\n    return { date, total };\r\n  }\r\n  const rows = response.map(data => createData(formatDate(data.date_trunc), data.toplam));\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  function formatDateExcel(param) {\r\n    let d = new Date(param);\r\n    let month = parseInt(d.getMonth());\r\n\r\n    let returnedMonth = currentLanguage.locale === 'en-US' ? months[month] : aylar[month];\r\n\r\n    return returnedMonth + '-' + d.getFullYear();\r\n  }\r\n\r\n  let data = response.map(unit => ({\r\n    date: formatDateExcel(unit.date_trunc),\r\n    total: unit.toplam,\r\n  }));\r\n\r\n  let totalCall = 0;\r\n  for (let i = 0; i < rows.length; i++) {\r\n    totalCall += toInteger(rows[i].total);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Monthly_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Aylık_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Maandelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Monatlicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5', color: 'white' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow style={{ backgroundColor: colors[index] }} key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>\r\n                    {row.date.month}-{row.date.year}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.total}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {rows.length > 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px' }} /> <b>{totalCall}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Graph from './Graph';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst MonthlyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthly.log'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthly.log'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xs={12} lg={12}>\r\n          <Filter setResponse={setResponse}/>\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <Graph response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default MonthlyLog;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function AgentSessionReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  let [endDate, setEndDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  MenuItem,\r\n  Grid,\r\n  CardContent,\r\n  Card,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueueNumber, getAgentSession, getBreakName, getAgentSessionClicked } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AgentSessionReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\n\r\nfunction Filter({\r\n  setAgentSession,\r\n  qnum,\r\n  agent,\r\n  setQnum,\r\n  setAgent,\r\n  setClickedResponse,\r\n  clickedAgent,\r\n  responseBreak,\r\n  setResponseBreak,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  \r\n  const [params, setParams] = useState({\r\n    agent: '',\r\n    queue: '',\r\n    break: '',\r\n  });\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => setQnum(JSON.parse(response.data.data)));\r\n    getAgentNumber().then(response => setAgent(JSON.parse(response.data.data)));\r\n    getBreakName().then(response => {\r\n      setResponseBreak(JSON.parse(response.data.data));\r\n    });\r\n  }, [setQnum, setAgent, setResponseBreak]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let [startTime, setStartTime] = useState(dateFormat(new Date(),'yyyy-mm-dd '));\r\n  let [endTime, setEndTime] = useState(dateFormat(new Date(),'yyyy-mm-dd '));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAgentSession(params.agent, params.queue, params.break, startTime, endTime).then(response => {\r\n      setAgentSession(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getAgentSessionClicked(clickedAgent, startTime, endTime).then(resp => {\r\n      setClickedResponse(JSON.parse(resp.data.data));\r\n    });\r\n  }, [clickedAgent, params, endTime, startTime, setAgentSession, setClickedResponse]);\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  let [agentSelect, setAgentSelect] = useState('');\r\n  const [breakSelect, setBreakSelect] = useState('');\r\n\r\n  const handleChangeQueueSelect = event => {\r\n    setQueueSelect(event.target.value);\r\n  };\r\n  const handleChangeAgentSelect = event => {\r\n    setAgentSelect(event.target.value);\r\n  };\r\n  const handleBreakChange = event => {\r\n    setBreakSelect(event.target.value);\r\n  };\r\n  useEffect(()=>{\r\n    setParams({\r\n      agent: agentSelect === 'all' ? '' : agentSelect,\r\n      queue: queueSelect === 'all' ? '' : queueSelect,\r\n      break: breakSelect === 'all' ? '' : breakSelect,\r\n      paramFinish: dateDifference(startTime),\r\n    });\r\n  },[startTime,agentSelect,queueSelect,breakSelect])\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '15px' }}>\r\n        <AgentSessionReportDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card className={classes.root}>\r\n        <Formik initialValues={{ queue: '', agent: '' }} onSubmit={values => {}}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"queue-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          value={queueSelect}\r\n                          onChange={handleChangeQueueSelect}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {qnum.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">\r\n                          <IntlMessages id={'internals.summary.agent'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={agentSelect}\r\n                          onChange={handleChangeAgentSelect}\r\n                          label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {agent.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"break-select-label\">\r\n                          <IntlMessages id={'breaks'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"break-select-label\"\r\n                          id=\"break-select\"\r\n                          value={breakSelect}\r\n                          onChange={handleBreakChange}\r\n                          label={<IntlMessages id={'breaks'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {responseBreak.map((data, index) => (\r\n                            <MenuItem key={index} value={data.value}>\r\n                              {data.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function DataTable({ qnum, agent, agentSession, setClickedAgent, setOpen }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < agent.length; z++) {\r\n      if (agentSession[i].ag_num === agent[z].dn) {\r\n        agentSession[i].ag_num = agentSession[i].ag_num + '-' + agent[z].display_name;\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < qnum.length; z++) {\r\n      if (agentSession[i].q_num === qnum[z].dn) {\r\n        agentSession[i].q_num = qnum[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  let csvData = agentSession.map(row => ({\r\n    ag_num: row.ag_num,\r\n    q_num: row.q_num,\r\n    status: row.status,\r\n    state_time:\r\n      row.escapetime\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    last_state_date:\r\n      new Date(row.lastlogout).getTime() > new Date(row.lastlogin).getTime()\r\n        ? dateFormat(row.lastlogout, 'dd/mm/yyyy HH:MM:ss')\r\n        : dateFormat(row.lastlogin, 'dd/mm/yyyy HH:MM:ss'),\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  const handleClick = ag_num => {\r\n    setClickedAgent(ag_num.split('-')[0]);\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <>\r\n      {agentSession.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Agent_Session_Report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Agent_Oturum_Raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Agentsessierapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Agentensitzungsbericht'\r\n                : ' '\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"ag_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Queue Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachtrijnaam'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Warteschlangenname'\r\n                    : ''\r\n                }\r\n                value=\"q_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Staat'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Bundesland'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Status Tijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Staatszeit'\r\n                    : ''\r\n                }\r\n                value=\"state_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Last State Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Son Durum Tarihi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Laatste Staat Tijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Letzte Zustandszeit'\r\n                    : ''\r\n                }\r\n                value=\"last_state_date\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'detail'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'wallboard.queue.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state.time'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'last.state.date'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {agentSession.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{index + 1}</b>\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => handleClick(row.ag_num)}>\r\n                  <VisibilityIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />\r\n                  <b>{row.ag_num.split('-')[1] + ' (' + row.ag_num.split('-')[0] + ')'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <b>{row.q_num}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n                  <b style={{ color: '#F05454' }}>{row.status}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b style={{ color: '#F2789F' }}>\r\n                    {' '}\r\n                    {row.escapetime\r\n                      .replace('.', 'd ')\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EventNoteIcon style={{ verticalAlign: '-5px', color: '#240499' }} />{' '}\r\n                  <b style={{ color: '#240499' }}>\r\n                    {new Date(row.lastlogout).getTime() > new Date(row.lastlogin).getTime()\r\n                      ? dateFormat(row.lastlogout, 'dd/mm/yyyy HH:MM:ss')\r\n                      : dateFormat(row.lastlogin, 'dd/mm/yyyy HH:MM:ss')}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ clickedResponse, responseBreak }) => {\r\n\r\n  let keys = [];\r\n\r\n  if (clickedResponse.length > 0) {\r\n    keys = Object.keys(clickedResponse[0]);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      for (let j = 0; j < responseBreak.length; j++) {\r\n        if (keys[i].substring(1) === responseBreak[j].value) {\r\n          keys[i] = responseBreak[j].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Agent</TableCell>\r\n            <TableCell>Logout</TableCell>\r\n            <TableCell>{keys[2]}</TableCell>\r\n            <TableCell>{keys[3]}</TableCell>\r\n            <TableCell>{keys[4]}</TableCell>\r\n            <TableCell>{keys[5]}</TableCell>\r\n            <TableCell>{keys[6]}</TableCell>\r\n            <TableCell>{keys[7]}</TableCell>\r\n            <TableCell>{keys[8]}</TableCell>\r\n            <TableCell>{keys[9]}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clickedResponse.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.agent}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.logout}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8072}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8073}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8074}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8075}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8076}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8077}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8078}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8079}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Model from './Model';\r\nimport { Modal } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box } from '@mui/material';\r\n\r\nconst AgentCDR = () => {\r\n  const [agentSession, setAgentSession] = useState([]);\r\n  const [qnum, setQnum] = useState([]);\r\n  const [agent, setAgent] = useState([]);\r\n  const [clickedAgent, setClickedAgent] = useState('');\r\n  const [clickedResponse, setClickedResponse] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.session.report'} />, isActive: true },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const [responseBreak, setResponseBreak] = useState([]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.session.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <Filter\r\n            responseBreak={responseBreak}\r\n            setResponseBreak={setResponseBreak}\r\n            setAgentSession={setAgentSession}\r\n            qnum={qnum}\r\n            agent={agent}\r\n            setQnum={setQnum}\r\n            setAgent={setAgent}\r\n            setClickedResponse={setClickedResponse}\r\n            clickedAgent={clickedAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <DataTable\r\n            qnum={qnum}\r\n            agent={agent}\r\n            agentSession={agentSession}\r\n            setClickedAgent={setClickedAgent}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model clickedResponse={clickedResponse} responseBreak={responseBreak} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AgentCDR;\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getAgentNumberV16 } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Filter({ selectedStartTime, selectedEndTime, setSelectedEndTime, setSelectedStartTime, setParams }) {\r\n  const [agent, setAgent] = React.useState('All');\r\n  const [menuItems, setMenuItems] = React.useState([]);\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  useEffect(() => {\r\n    getAgentNumberV16().then(response => setMenuItems(response));\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setParams({\r\n      startdate: formatDate(selectedStartTime),\r\n      enddate: formatDate(selectedEndTime),\r\n      agent: agent,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          <IntlMessages id={'filter'} />\r\n        </Typography>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedStartTime}\r\n              onChange={setSelectedStartTime}\r\n              label={<IntlMessages id={'filter.menu.startdate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedEndTime}\r\n              onChange={setSelectedEndTime}\r\n              label={<IntlMessages id={'filter.menu.enddate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Agent</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={agent}\r\n                  label=\"Agent\"\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"All\">\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {menuItems.map((data, index) => (\r\n                    <MenuItem value={data.dn} key={index}>\r\n                      {data.dn} {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Table, TableHead, TableBody, TableContainer, TableCell, Paper, TableRow } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n    let seconds = d.getSeconds();\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + seconds;\r\n  };\r\n  function createData(agent, called, date, key) {\r\n    return { agent, called, date, key };\r\n  }\r\n  const rows = response.map(data => createData(data.agent, data.called, formatDate(data.issuetime), data.key));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'agent.number'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'called'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'filter.menu.date'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell align=\"center\">{row.agent}</TableCell>\r\n              <TableCell align=\"center\">{row.called}</TableCell>\r\n              <TableCell align=\"center\">{row.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { getIYSReport } from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\n\r\nconst IYS = () => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const today = new Date();\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(today) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n  const [response, setResponse] = useState([]);\r\n  const [params, setParams] = useState({\r\n    agent: 'All',\r\n    startdate: formatDate(today) + ' 00:00:00',\r\n    enddate: formatDate(today) + ' 23:59:00',\r\n  });\r\n  useEffect(() => {\r\n    getIYSReport(params).then(response => setResponse(response.data));\r\n  }, [params]);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item sm={12} md={12} lg={12}>\r\n          <Filter\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setParams={setParams}\r\n          />\r\n        </Grid>\r\n        <Grid item sm={12} md={12} lg={12}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default IYS;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTeamsUsers,\r\n  getCsOnlineVoiceRoutingPolicy,\r\n  getCsTenantDialplan,\r\n  getCsTeamsCallingPolicy,\r\n  changeCsTeamsCallingPolicy,\r\n  changeCsVoiceRoutingPolicy,\r\n  getUserDetailsByUserId,\r\n  changeCsTenantDiaplan,\r\n} from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Button,\r\n  AccordionActions,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Users() {\r\n  let [users, setUsers] = useState([]);\r\n  let [selecetedUser, setSelectedUser] = useState('');\r\n  let [selectedUserDetails, setSelectedUserDetails] = useState({\r\n    onlineVoiceRoutingPolicy: '-',\r\n    tenantDialPlan: '-',\r\n    teamsCallingPolicy: '-',\r\n    userPrincibleName: '-',\r\n  });\r\n\r\n  let [voiceRoutingPolicys, setVoiceRoutingPolicys] = useState([]);\r\n  let [selectedvoiceRoutingPolicy, setSelectedvoiceRoutingPolicy] = useState('');\r\n\r\n  let [tenantDiaplans, setTenantDiaplan] = useState([]);\r\n  let [selectedTenantDiaplans, setSelectedTenantDiaplans] = useState('');\r\n\r\n  let [teamsCallingPolicys, setTeamsCallingPolicy] = useState([]);\r\n  let [selectedTeamsCallingPolicy, setSelectedTeamsCallingPolicy] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getTeamsUsers({ token: localStorage.getItem('token') })\r\n      .then(result => {\r\n        setUsers(result.data.data);\r\n        getCsOnlineVoiceRoutingPolicy({\r\n          token: localStorage.getItem('token'),\r\n        }).then(res => {\r\n          setVoiceRoutingPolicys(res.data.data);\r\n          getCsTenantDialplan({\r\n            token: localStorage.getItem('token'),\r\n          }).then(res2 => {\r\n            setTenantDiaplan(res2.data.data);\r\n            getCsTeamsCallingPolicy({\r\n              token: localStorage.getItem('token'),\r\n            }).then(res3 => {\r\n              setTeamsCallingPolicy(res3.data.data);\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (selecetedUser !== '') {\r\n      getUserDetailsByUserId({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n      }).then(result => {\r\n        setSelectedUserDetails(result.data.data);\r\n      });\r\n    }\r\n  }, [selecetedUser]);\r\n\r\n  const handleChangeUserEmail = event => {\r\n    setSelectedUser(event.target.value);\r\n  };\r\n  const handleChangeVoiceRoutingPolicy = event => {\r\n    setSelectedvoiceRoutingPolicy(event.target.value);\r\n  };\r\n  const handleChangeTenantDiaplans = event => {\r\n    setSelectedTenantDiaplans(event.target.value);\r\n  };\r\n  const handleChangeTeamsCallingPolicy = event => {\r\n    setSelectedTeamsCallingPolicy(event.target.value);\r\n  };\r\n\r\n  const handleSubmitChangeTeamsCallingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTeamsCallingPolicy === '') {\r\n      NotificationManager.error('Teams Calling Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTeamsCallingPolicy !== '') {\r\n      changeCsTeamsCallingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        policyName: selectedTeamsCallingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeVoiceRoutingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedvoiceRoutingPolicy === '') {\r\n      NotificationManager.error('Voice Routing Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedvoiceRoutingPolicy !== '') {\r\n      changeCsVoiceRoutingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        voiceRoutingPolicy: selectedvoiceRoutingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeTenantDiaplan = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTenantDiaplans === '') {\r\n      NotificationManager.error('Tenant Diaplan must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTenantDiaplans !== '') {\r\n      changeCsTenantDiaplan({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        tenantDiaplan: selectedTenantDiaplans,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <NotificationContainer />\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Teams Calling Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"teamsCallingPolicy-label\">Teams Calling Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"teamsCallingPolicy-label\"\r\n                  id=\"teamsCallingPolicy\"\r\n                  value={selectedTeamsCallingPolicy}\r\n                  onChange={handleChangeTeamsCallingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>Teams Calling Policy</em>\r\n                  </MenuItem>\r\n                  {teamsCallingPolicys.map((teamsCallingPolicy, index) => (\r\n                    <MenuItem key={index} value={teamsCallingPolicy.callingPolicy}>\r\n                      {teamsCallingPolicy.callingPolicy}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTeamsCallingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Voice Routing Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"voiceRoutingPolicy-label\">Voice Routing Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"voiceRoutingPolicy-label\"\r\n                  id=\"voiceRoutingPolicy\"\r\n                  value={selectedvoiceRoutingPolicy}\r\n                  onChange={handleChangeVoiceRoutingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>VoiceRoutingPolicy</em>\r\n                  </MenuItem>\r\n                  {voiceRoutingPolicys.map((voiceRoutingPolicy, index) => (\r\n                    <MenuItem key={index} value={voiceRoutingPolicy.policyName}>\r\n                      {voiceRoutingPolicy.policyName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeVoiceRoutingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Tenant Diaplan</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"tenantDiaplan-label\">Tenant Diaplan</InputLabel>\r\n                <Select\r\n                  labelId=\"tenantDiaplan-label\"\r\n                  id=\"tenantDiaplan\"\r\n                  value={selectedTenantDiaplans}\r\n                  onChange={handleChangeTenantDiaplans}>\r\n                  <MenuItem value=\"\">\r\n                    <em>TenantDiaplan</em>\r\n                  </MenuItem>\r\n                  {tenantDiaplans.map((tenantDiaplan, index) => (\r\n                    <MenuItem key={index} value={tenantDiaplan.teanantDiaPlan}>\r\n                      {tenantDiaplan.teanantDiaPlan}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTenantDiaplan}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n        Değişim işlemlerinin sonuca yansıması biraz zaman alabilir.\r\n      </div>\r\n      <Card style={{ marginTop: '20px' }}>\r\n        <p style={{ textAlign: 'center', fontSize: '20px', padding: '10px' }}>Selected User Details</p>\r\n        <div style={{ padding: '10px' }}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>User Email</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.userPrincibleName}\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Teams Calling Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.teamsCallingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>Voice Routing Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.onlineVoiceRoutingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Tenant Diaplan</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.tenantDialPlan}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </div>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getAgentTotalCall } from 'api/api';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function Filter({ selectedEndTime, setSelectedEndTime, setTotalAgent, setTotalDid, selectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte3').then(resp => {\r\n      setTotalAgent(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte2').then(resp => {\r\n      setTotalDid(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider\r\n              dateAdapter={AdapterDateFns}\r\n              locale={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? enLocale\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? nlLocale\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? trLocale\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? deLocale\r\n                  : enLocale\r\n              }>\r\n              {' '}\r\n              <DatePicker\r\n                value={selectedEndTime}\r\n                views={['year', 'month']}\r\n                onChange={newValue => setSelectedEndTime(dateFormat(newValue, 'yyyy-mm-dd'))}\r\n                renderInput={params => <TextField {...params} />}\r\n                inputVariant=\"outlined\"\r\n                format=\"MM-YYYY\"\r\n                maxDate={new Date()}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function DataTable({ response, limit, setOffset, setPage, setCsvData, setSelectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  function returnedTime(param1, param2) {\r\n    let Param1Array = param1.split(':');\r\n    let Param2Array = param2.split(':');\r\n    if (param1.includes('.')) {\r\n      Param1Array[0] = parseInt(Param1Array[0]) + parseInt(param1.split('.')[0]) * 24;\r\n    }\r\n    if (param2.includes('.')) {\r\n      Param2Array[0] = parseInt(Param2Array[0]) + parseInt(param2.split('.')[0]) * 24;\r\n    }\r\n\r\n    let hour = parseInt(Param1Array[0]) + parseInt(Param2Array[0]);\r\n    let minute = parseInt(Param1Array[1]) + parseInt(Param2Array[1]);\r\n    let second = parseInt(Param1Array[2]) + parseInt(Param2Array[2]);\r\n    return (\r\n      addZero(hour + Math.floor(minute / 60)) +\r\n      ':' +\r\n      addZero((minute % 60) + Math.floor(second / 60)) +\r\n      ':' +\r\n      addZero(second % 60)\r\n    );\r\n  }\r\n\r\n  function calculateAverage(totalCall, totalTime) {\r\n    let timeArray;\r\n    if (totalTime.includes('.')) {\r\n      let tempHour = parseInt(totalTime.split('.')[0]) * 24 + parseInt(totalTime.split('.')[1].split(':')[0]);\r\n      let tempTime = tempHour + ':' + totalTime.split('.')[1].split(':')[1] + ':' + totalTime.split('.')[1].split(':')[2];\r\n      timeArray = tempTime.split(':');\r\n    } else {\r\n      timeArray = totalTime.split(':');\r\n    }\r\n    let time = parseInt(timeArray[0]) * 60 * 60 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);\r\n    let averageSecond = time / (parseInt(totalCall) !== 0 ? parseInt(totalCall) : 1);\r\n\r\n    return totalCall !== 0\r\n      ? addZero(Math.floor(averageSecond / 3600)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) / 60)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) % 60))\r\n      : '00:00:00';\r\n  }\r\n\r\n  const column = [\r\n    {\r\n      id: 'd',\r\n      headerName: <IntlMessages id={'filter.menu.date'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalcall',\r\n      headerName: <IntlMessages id={'wallboard.total.call'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalinbound',\r\n      headerName: <IntlMessages id={'dashboard.inbound'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'answeredinb',\r\n      headerName: <IntlMessages id={'wallboard.answered'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationcalls',\r\n      headerName: <IntlMessages id={'total.time'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationinbound',\r\n      headerName: <IntlMessages id={'durationinbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'totaloutbound',\r\n      headerName: <IntlMessages id={'dashboard.outbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationoutbound',\r\n      headerName: <IntlMessages id={'durationoutbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageTotal',\r\n      headerName: <IntlMessages id={'Act'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageInbound',\r\n      headerName: <IntlMessages id={'avIn'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageOutbound',\r\n      headerName: <IntlMessages id={'avOut'} />,\r\n      width: '30px',\r\n    },\r\n  ];\r\n  const createData = (\r\n    d,\r\n    totalcall,\r\n    totalinbound,\r\n    answeredinb,\r\n    durationcalls,\r\n    durationinbound,\r\n    totaloutbound,\r\n    durationoutbound,\r\n    averageTotal,\r\n    averageInbound,\r\n    averageOutbound,\r\n  ) => {\r\n    return {\r\n      d,\r\n      totalcall,\r\n      totalinbound,\r\n      answeredinb,\r\n      durationcalls,\r\n      durationinbound,\r\n      totaloutbound,\r\n      durationoutbound,\r\n      averageTotal,\r\n      averageInbound,\r\n      averageOutbound,\r\n    };\r\n  };\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.d !== 'Total Call' ? getNewDate(data.d.split(' ')[0]) : data.d,\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      data.totalinbound,\r\n      data.answeredinb,\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.totaloutbound,\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(\r\n        parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n        returnedTime(data.durationinbound, data.durationoutbound),\r\n      )\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const csvData = response.map(data => ({\r\n    date: data.d !== 'Total Call' ? data.d.split(' ')[0] : data.d,\r\n    totalcall: parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n    totalinbound: data.totalinbound,\r\n    answeredinb: data.answeredinb,\r\n    durationcalls:\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n\r\n    durationinbound:\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    totaloutbound: data.totaloutbound,\r\n    durationoutbound:\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageTotal: calculateAverage(\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      returnedTime(data.durationinbound, data.durationoutbound),\r\n    ),\r\n    averageinbound:\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageoutbound:\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-US'\r\n              ? 'Monthly_Details'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Aylik_Detaylar'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Maandelijkse details'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Monatliche Details'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Date'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Tarih'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Datum'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Datum'\r\n                  : ''\r\n              }\r\n              value=\"date\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Arama Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal aantal gesprekken'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamtzahl der Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"totalcall\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Aramalar'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal inkomend'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamteingang'\r\n                  : ''\r\n              }\r\n              value=\"totalinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Answered Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Cevaplanmış Çağrı Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Aantal beantwoorde oproepen'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Zählung angenommener Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"answeredinb\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Duration'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Süre'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Looptijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Dauer'\r\n                  : ''\r\n              }\r\n              value=\"durationcalls\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Inbound Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Çağrı Süresi Toplamı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Inkomende tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Eingangszeit'\r\n                  : ''\r\n              }\r\n              value=\"durationinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Giden Çağrı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamt ausgehend'\r\n                  : ''\r\n              }\r\n              value=\"totaloutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Outbound Total Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Giden Çağrı toplam süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Uitgaande totale tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Ausgehend Gesamtzeit'\r\n                  : ''\r\n              }\r\n              value=\"durationoutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Total'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Toplam Arama'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld totaal'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittliche Summe'\r\n                  : ''\r\n              }\r\n              value=\"averageTotal\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddelde inkomende'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher Eingang'\r\n                  : ''\r\n              }\r\n              value=\"averageinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher ausgehender'\r\n                  : ''\r\n              }\r\n              value=\"averageoutbound\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root} style={{ maxHeight: '550px' }}>\r\n        <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column, index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  style={{\r\n                    width: column.width,\r\n                    opacity: '.9',\r\n                    backgroundColor: '#4E9F3D',\r\n                    color: 'white',\r\n                  }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return row.d !== 'Total Call' ? (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column, inds) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell\r\n                        onClick={() => setSelectedDate(row.d)}\r\n                        key={inds}\r\n                        style={{ padding: '0px', textAlign: 'center', cursor: 'pointer' }}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ) : null;\r\n            })}\r\n\r\n            {rows.map((row, index) => {\r\n              return row.d === 'Total Call' ? (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={index}\r\n                  style={{ backgroundColor: '#4E9F3D', opacity: '.9' }}>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    <IntlMessages id={'Total'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.totalcall}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.totalinbound}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.answeredinb}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.durationcalls}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.totaloutbound}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationoutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.averageTotal}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.averageInbound}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageOutbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : null;\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function Detail({ totalAgent, totalDid }) {\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <GridContainer>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalDid.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'DID_top_5' : 'DID_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalDid} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'DID number' : 'DID Numarası'}\r\n                      value=\"src_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"calldid\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.src_did !== undefined ? totalDid[0]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.calldid !== undefined ? totalDid[0]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.src_did !== undefined ? totalDid[1]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.calldid !== undefined ? totalDid[1]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.src_did !== undefined ? totalDid[2]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.calldid !== undefined ? totalDid[2]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.src_did !== undefined ? totalDid[3]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.calldid !== undefined ? totalDid[3]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.src_did !== undefined ? totalDid[4]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.calldid !== undefined ? totalDid[4]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalAgent.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'Agent_top_5' : 'Agent_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalAgent} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'}\r\n                      value=\"dst_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"agentcall\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.agentnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.dst_display_name !== undefined ? totalAgent[0]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.agentcall !== undefined ? totalAgent[0]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.dst_display_name !== undefined ? totalAgent[1]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.agentcall !== undefined ? totalAgent[1]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.dst_display_name !== undefined ? totalAgent[2]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.agentcall !== undefined ? totalAgent[2]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.dst_display_name !== undefined ? totalAgent[3]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.agentcall !== undefined ? totalAgent[3]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.dst_display_name !== undefined ? totalAgent[4]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.agentcall !== undefined ? totalAgent[4]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n        </GridContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Detail from './Detail';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst MonthlyDetails = () => {\r\n  const [, setCsvData] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTotal] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate(),\r\n  );\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthlydetails'} />, isActive: true },\r\n  ];\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedTime, setSelectedTime] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  const [totalAgent, setTotalAgent] = useState([]);\r\n  const [totalDid, setTotalDid] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `select * from cl_get_daily_statics_proc('${selectedTime}')`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  function lastDay(date) {\r\n    var year = parseInt(date.split('-')[0]);\r\n    var month = parseInt(date.split('-')[1]);\r\n    if (new Date().getMonth() + 1 === month) {\r\n      return dateFormat(date, 'yyyy-mm-dd');\r\n    } else {\r\n      var d = new Date(year, month, 0);\r\n      return dateFormat(d, 'yyyy-mm-dd');\r\n    }\r\n  }\r\n\r\n  let queryTotal = `with recursive cte1 as (\r\n    select * from cl_get_daily_statics_proc('${selectedTime}')\r\n      )\r\n  select \r\n  'Total Call' as d,\r\n  (sum(totalinbound)) as totalinbound,\r\n  (sum(answeredinb)) as answeredinb,\r\n  (sum(durationinbound)) as durationinbound ,\r\n  (sum(totaloutbound)) as totaloutbound,\r\n  (sum(durationoutbound)) as durationoutbound\r\n  from cte1`;\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setSelectedTime(lastDay(selectedTime));\r\n    api\r\n      .getMonthlyDetails({ token: localStorage.getItem('token'), query: query })\r\n      .then(resp => {\r\n        setResponse(JSON.parse(resp.data.data));\r\n        api.getMonthlyTotal({ token: localStorage.getItem('token'), query: queryTotal }).then(resps => {\r\n          setResponse([...JSON.parse(resp.data.data), ...JSON.parse(resps.data.data)]);\r\n          setLoading(false);\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [query, selectedTime, history, queryTotal]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthlydetails'} />} breadcrumbs={breadcrumbs}>\r\n      <Filter\r\n        selectedEndTime={selectedTime}\r\n        setSelectedEndTime={setSelectedTime}\r\n        setOffset={setOffset}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        setTotalAgent={setTotalAgent}\r\n        setTotalDid={setTotalDid}\r\n        selectedDate={selectedDate}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Table\r\n        page={page}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        setResponse={setResponse}\r\n        setCsvData={setCsvData}\r\n        limit={limit}\r\n        setOffset={setOffset}\r\n        responseTotal={responseTotal}\r\n        offset={offset}\r\n        response={response}\r\n        setSelectedDate={setSelectedDate}\r\n      />\r\n      <Detail totalAgent={totalAgent} totalDid={totalDid} />\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default MonthlyDetails;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QueueAnswerReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  FormControl,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  getQueueAnswerReport,\r\n  getQueueAnswerReportSummary,\r\n  getQueueNumber,\r\n  getQueueAnswerReportSummaryTotal,\r\n  getQueueAnswerReportCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport QueueAnswerReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setData, rowsPerPage, page, setSummary, setSummaryTotal, setResponseCount }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startDate, setStartDate] = useState(formatDate(new Date()));\r\n  let [endDate, setEndDate] = useState(formatDate(new Date()));\r\n  let [queueNum, setQueueNum] = useState('');\r\n  let [src, setSrc] = useState('');\r\n  let [order, setOrder] = useState('ASC');\r\n  let [queues, setQueues] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getQueueAnswerReportCount(startDate, endDate, queueNum, src).then(resp => {\r\n      setResponseCount(JSON.parse(resp.data.data)[0].summed);\r\n    });\r\n\r\n    getQueueAnswerReportSummary(startDate, endDate, queueNum).then(resp => {\r\n      setSummary(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getQueueAnswerReportSummaryTotal(startDate, endDate, queueNum).then(resp => {\r\n      setSummaryTotal(JSON.parse(resp.data.data));\r\n    });\r\n  }, [startDate, endDate, queueNum, src, order, rowsPerPage, page, setData, setResponseCount, setSummary, setSummaryTotal]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueues(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n  const handleChangeQueueNum = event => {\r\n    setQueueNum(event.target.value);\r\n  };\r\n  const handleChangeOrder = event => {\r\n    setOrder(event.target.value);\r\n  };\r\n  const handleChangeCaller = event => {\r\n    setSrc(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <QueueAnswerReportDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'queue.answer.report.queues'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                  value={queueNum}\r\n                  onChange={handleChangeQueueNum}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {queues.map(que => (\r\n                    <MenuItem key={que.id} value={que.dn}>\r\n                      {que.dn} - {que.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"distinct-label\">\r\n                  <IntlMessages id={'queue.answer.report.orderby'} />\r\n                </InputLabel>\r\n                <Select\r\n                  label={<IntlMessages id={'queue.answer.report.orderby'} />}\r\n                  labelId=\"distinct-label\"\r\n                  id=\"distinct\"\r\n                  value={order}\r\n                  onChange={handleChangeOrder}>\r\n                  <MenuItem value=\"ASC\">\r\n                    <IntlMessages id={'oldtonew'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"DESC\">\r\n                    <IntlMessages id={'newtoold'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-basic\"\r\n                label={<IntlMessages id={'callernumber'} />}\r\n                onChange={handleChangeCaller}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { getQueueNumber } from 'api/api';\r\nimport { Button } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DataTable({\r\n  data,\r\n  setData,\r\n  rowsPerPage,\r\n  setRowsPerPage,\r\n  page,\r\n  setPage,\r\n  summaryTotal,\r\n  responseCount,\r\n}) {\r\n  const [queueList, setQueueList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(resp => {\r\n      setQueueList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < queueList.length; j++) {\r\n      if (queueList[j].dn === data[i].dst_dn) {\r\n        data[i].dst_dn = queueList[j].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  const rows = data.map((dataUnit, index) => ({\r\n    num: index + 1 + page * rowsPerPage,\r\n    id: index,\r\n    dst_start_time: getNewDate(dataUnit.dst_start_time),\r\n    waiting_time: dataUnit.waiting_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    talking:\r\n      dataUnit.talking\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    src_display_name: dataUnit.src_display_name,\r\n    dst_dn: dataUnit.dst_dn,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleDowlandButtonClick = () => {\r\n    setRowsPerPage(responseCount);\r\n    setPage(0);\r\n    setData([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'dst_start_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.date'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'talking',\r\n      headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'src_display_name',\r\n      headerName: <IntlMessages id={'queueanswerreport.caller'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#F05454' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'dst_dn',\r\n      headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Queue_answer_report'\r\n                      : currentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_cevap_raporu'\r\n                      : currentLanguage.locale === 'nl-NL'\r\n                      ? 'Rapport voor antwoord in wachtrij'\r\n                      : currentLanguage.locale === 'de-DE'\r\n                      ? 'Warteschlangen-Antwortbericht'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Date'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Tarih'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Datum'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Datum'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi Toplamı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Talking Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Konuşma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Gesprekstijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesprächszeit'\r\n                          : ''\r\n                      }\r\n                      value=\"talking\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Caller'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Beller'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Anruferin'\r\n                          : ''\r\n                      }\r\n                      value=\"src_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_dn\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={rows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={parseInt(responseCount)}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nexport default function QueueAnswerReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'queue.answer.report'} />, isActive: true },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [summary, setSummary] = useState([]);\r\n  const [summaryTotal, setSummaryTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  let classes = useStyles();\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'queue.answer.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            setSummary={setSummary}\r\n            setSummaryTotal={setSummaryTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            data={data}\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            setRowsPerPage={setRowsPerPage}\r\n            page={page}\r\n            setPage={setPage}\r\n            summaryTotal={summaryTotal}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {summaryTotal.length > 0 && (\r\n            <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n              <ExcelFile\r\n                filename={`Queue Answer Report Summary`}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={summary} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"count\" />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                    value=\"waiting_time\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Talking Time' : 'Konuşma Süresi'}\r\n                    value=\"talking\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Görüşme Süresi'}\r\n                    value=\"act\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            </div>\r\n          )}\r\n          <TableContainer component={Paper} className={classes.root}>\r\n            {summary.length > 0 && (\r\n              <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.date'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.total.call'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'waiting.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.talkingtime'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.average.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'average.waiting'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {summary.map((sum,index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.date}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.count}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_time}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.talking}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.act}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_act}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  {summaryTotal.map((row, index) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                        <TableCell style={{ textAlign: 'center' }}>\r\n                          <IntlMessages id={'total'} />\r\n                        </TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.count1}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_time}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.talking}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.act}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_act}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            )}\r\n          </TableContainer>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport AbondenedCallsDateFilter from './DateFilter';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getQueue, getAgentNumber } from 'api/api';\r\n\r\nfunction Filter({ setColor, color, queue, setQueue, agent, setAgent, setStartDate, setEndDate }) {\r\n  let [loading] = useState(false);\r\n\r\n  const colors = [\r\n    {\r\n      name: 'Green',\r\n      value: <IntlMessages id={'returned'} />,\r\n    },\r\n    {\r\n      name: 'Red',\r\n      value: <IntlMessages id={'notreturned'} />,\r\n    },\r\n  ];\r\n\r\n  const handleChangeColor = event => {\r\n    setColor(event.target.value);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  const handleChangeAgent = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n  const [queues, setQueues] = useState([]);\r\n\r\n  const [agents, setAgents] = useState([]);\r\n  useEffect(() => {\r\n    getQueue().then(resp => setQueues(JSON.parse(resp.data.data)));\r\n    getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AbondenedCallsDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n        {loading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'returnfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={color}\r\n                  onChange={handleChangeColor}\r\n                  label={<IntlMessages id={'returnfilter'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {colors.map((color, index) => (\r\n                    <MenuItem key={index} value={color.name}>\r\n                      {color.value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'queue'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={queue}\r\n                  onChange={handleChangeQueue}\r\n                  label={<IntlMessages id={'queue'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {queues.map((queue, index) => (\r\n                    <MenuItem key={index} value={queue.dn}>\r\n                      {queue.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={agent}\r\n                  onChange={handleChangeAgent}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((data, index) => (\r\n                    <MenuItem key={index} value={data.dn}>\r\n                      {data.dn} - {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Box, Button, CircularProgress, Collapse, Typography, IconButton } from '@material-ui/core';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nexport default function DataTable({ params, color, queue, agent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 580,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [agents, setAgents] = useState([]);\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    api.getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n    api.getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  }, []);\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [detail, setDetail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let getDetails = (time, userpart) => {\r\n      return new Promise((resolve, reject) => {\r\n        api.getAbondenedCallDetails(time, userpart).then(resp => resolve(JSON.parse(resp.data.data)));\r\n      });\r\n    };\r\n\r\n    api.getAbondenedCalls(params, queue, agent).then(call => {\r\n      let calls = JSON.parse(call.data.data);\r\n      let detailPromises = [];\r\n      calls.forEach(item => detailPromises.push(getDetails(item.time_start, item.from_displayname)));\r\n      Promise.all(detailPromises).then(details => {\r\n        setDetail(details);\r\n        setResponse(calls);\r\n        setLoading(false);\r\n      });\r\n    });\r\n  }, [params, queue, agent]);\r\n\r\n  let res = [];\r\n  for (let i = 0; i < response.length; i++) {\r\n    res.push({\r\n      from_userpart: response[i].from_displayname,\r\n      timeofevent: getNewDate(response[i].time_start.split(' ')[0]) + ' ' + response[i].time_start.split(' ')[1],\r\n      count: response[i].count,\r\n      queue: queues.find(e => e.dn === response[i].q_num)?.display_name || '',\r\n      agent: `${agents.find(a => a.dn === response[i].ag_num)?.display_name} (${response[i].ag_num})`,\r\n    });\r\n  }\r\n  let curentLanguage = useIntl();\r\n\r\n  function Row(props) {\r\n    const { calls, index } = props;\r\n    const [open, setOpen] = useState(false);\r\n    let hasDetail = detail[index]?.length > 0;\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow\r\n          style={{\r\n            display: ((color === 'Green' && !hasDetail) || (color === 'Red' && hasDetail)) && 'none',\r\n            backgroundColor: hasDetail ? '#4E9F3D' : '#FF5C58',\r\n          }}\r\n          sx={{\r\n            '& > *': { borderBottom: 'unset' },\r\n          }}>\r\n          <TableCell align=\"left\">\r\n            <b>{index + 1}</b>\r\n          </TableCell>\r\n          <TableCell>\r\n            <IconButton\r\n              disabled={detail[index] !== undefined ? (detail[index].length !== 0 ? false : true) : true}\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\">{calls.timeofevent}</TableCell>\r\n          <TableCell align=\"center\">{calls.from_userpart}</TableCell>\r\n          <TableCell align=\"center\">{calls.agent}</TableCell>\r\n          <TableCell align=\"center\">{calls.queue}</TableCell>\r\n          <TableCell align=\"center\">{calls.count}</TableCell>\r\n        </TableRow>\r\n        {hasDetail && (\r\n          <TableRow style={{ display: ((color === 'Green' && !hasDetail) || (color === 'Red' && hasDetail)) && 'none' }}>\r\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <Box sx={{ margin: 1 }}>\r\n                  <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                    <IntlMessages id={'abondenedcalls.detail'} />\r\n                  </Typography>\r\n                  <Table size=\"small\" aria-label=\"Details\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell align=\"left\">\r\n                          <b>#</b>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.diraction'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.srcdn'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.dststarttime'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.dstendtime'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {detail[index].map((deta, ins) => (\r\n                        <TableRow key={ins}>\r\n                          <TableCell component=\"th\" scope=\"row\" align=\"left\">\r\n                            <b>{ins + 1}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {deta.direction === '-->' ? (\r\n                              <span\r\n                                style={{\r\n                                  padding: '5px',\r\n                                  backgroundColor: '#4E9F3D',\r\n                                  color: '#125C13',\r\n                                  borderRadius: '10px',\r\n                                  fontWeight: '600',\r\n                                }}>\r\n                                <IntlMessages id={'incomingcall'} />\r\n                              </span>\r\n                            ) : (\r\n                              <span\r\n                                style={{\r\n                                  padding: '5px',\r\n                                  backgroundColor: '#FF7777',\r\n                                  color: '#852747',\r\n                                  borderRadius: '10px',\r\n                                  fontWeight: '600',\r\n                                }}>\r\n                                <IntlMessages id={'outgoingcall'} />\r\n                              </span>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>{deta.src_dn}</TableCell>\r\n                          <TableCell>{deta.dst_start_time}</TableCell>\r\n                          <TableCell>{deta.dst_end_time}</TableCell>\r\n                          <TableCell>{deta.calltime}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </Collapse>\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {res.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '15px' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Abondened_calls'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cevaplanmayan_cagrilar'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Verlaten oproepen'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Abgebrochene Anrufe'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={res} name=\"res\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Time of Event'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Etkinlik Zamanı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Tijd van evenement'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zeitpunkt des Ereignisses'\r\n                    : ''\r\n                }\r\n                value=\"timeofevent\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"from_userpart\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Display Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ekran adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Weergavenaam'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzeigename'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Adet'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Graaf'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      {loading ? (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"Abondened Calls Table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">\r\n                    <b>#</b>\r\n                  </TableCell>\r\n                  <TableCell />\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.timeofevent'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.fromuserpart'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'called'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.displayname'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.count'} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {res.length > 0 && res.map((item, index) => <Row key={index} index={index} calls={item} />)}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Alert, Stack } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function AbondenedCalls() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abondenedcalls'} />, isActive: true },\r\n  ];\r\n  let [queue, setQueue] = useState('');\r\n  let [agent, setAgent] = useState('');\r\n  const [color, setColor] = useState('');\r\n  let [params, setParams] = useState({\r\n    startDate: dateFormat(new Date(), 'yyyy-mm-dd'),\r\n    endDate: dateFormat(new Date(), 'yyyy-mm-dd'),\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  const [endDate, setEndDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  useEffect(() => {\r\n    setParams({\r\n      startDate: dateFormat(startDate, 'yyyy-mm-dd'),\r\n      endDate: dateFormat(endDate, 'yyyy-mm-dd'),\r\n    });\r\n  }, [startDate, endDate]);\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abondenedcalls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setStartDate={setStartDate}\r\n            setEndDate={setEndDate}\r\n            setColor={setColor}\r\n            color={color}\r\n            queue={queue}\r\n            setQueue={setQueue}\r\n            agent={agent}\r\n            setAgent={setAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table params={params} color={color} queue={queue} agent={agent} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Stack sx={{ width: '100%' }} spacing={2}>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.red'} />\r\n          </Alert>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.green'} />\r\n          </Alert>\r\n        </Stack>\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallTerminationReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nexport default function CallTerminationReportFilters({\r\n  setCallTerminator\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if(event.target.value === 'all'){\r\n      setCallTerminator('')\r\n    }else if(event.target.value === 'outnumber'){\r\n      setCallTerminator(\"1\");\r\n    }else if(event.target.value === 'agent'){\r\n      setCallTerminator(\"0\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CallEndIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'callterminator'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'callterminator'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'callterminator'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'outnumber'}>\r\n                    <IntlMessages id={'CallLog.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'agent'}>\r\n                    <IntlMessages id={'CallLog.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getTerminatedCallsByAgent, getTerminatedCallsByAgentCount } from 'api/api';\r\nimport CallTerminationReportDateFilter from './DateFilter';\r\nimport CallTerminationReportFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallTerminationReportFilter({ setData, setTotalCount, limit, offset }) {\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  const [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n\r\n  const [callTerminator, setCallTerminator] = useState('');\r\n  useEffect(() => {\r\n    getTerminatedCallsByAgent(startTimeApi, endTimeApi, limit, offset, callTerminator).then(resp =>\r\n      setData(JSON.parse(resp.data.data)),\r\n    );\r\n    getTerminatedCallsByAgentCount(startTimeApi, endTimeApi, callTerminator).then(resp => {\r\n      setTotalCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n    });\r\n  }, [startTimeApi, endTimeApi, setData, setTotalCount, limit, offset, callTerminator]);\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <CallTerminationReportDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallTerminationReportFilters setCallTerminator={setCallTerminator} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nexport default function CallTerminationReportTable({ data, totalCount, limit, setLimit, page, setPage, offset, setOffset }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <b>#</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.startdate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.enddate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.modal.caller'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.modal.called'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'callterminator'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.length > 0 &&\r\n                data.map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>\r\n                      <b>{index + 1 + offset}</b>\r\n                    </TableCell>\r\n                    <TableCell>{dateFormat(item.start_time, 'yyyy-mm-dd HH:MM:ss')}</TableCell>\r\n                    <TableCell>{dateFormat(item.end_time, 'yyyy-mm-dd HH:MM:ss')}</TableCell>\r\n                    <TableCell>\r\n                      {item.src_display_name} ({item.src_dn})\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.dst_display_name} ({item.dst_dn})\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <b>\r\n                        {item.act === '5'\r\n                          ? `${item.src_display_name} (${item.src_dn})`\r\n                          : `${item.dst_display_name} (${item.dst_dn})`}\r\n                      </b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={totalCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallTerminationReportFilter from './Filter';\r\nimport CallTerminationReportTable from './Table';\r\n\r\nexport default function CallTerminationReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'callterminationreport'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [limit,setLimit] = useState(10);\r\n  const [offset,setOffset] = useState(0);\r\n  const [page,setPage] = useState(0);\r\n  const [totalCount,setTotalCount]=useState(10);\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'callterminationreport'} />} breadcrumbs={breadcrumbs}>\r\n        <CallTerminationReportFilter setData={setData} setTotalCount={setTotalCount} limit={limit} offset={offset}/>\r\n        <CallTerminationReportTable \r\n        data={data}\r\n        totalCount={totalCount}\r\n        limit={limit}\r\n        setLimit={setLimit}\r\n        page={page}\r\n        setPage={setPage}\r\n        offset={offset}\r\n        setOffset={setOffset}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Button, Card, CardActions, CardContent, Grid } from '@material-ui/core';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport React from 'react';\r\n\r\nexport default function AgentCdrRportFilter() {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"Start Time\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"End Time\"\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button>Search</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AgentCdrReportTable() {\r\n  return <div />;\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React from 'react';\r\nimport AgentCdrRportFilter from './Filter';\r\nimport AgentCdrReportTable from './Table';\r\n\r\nexport default function AgentCdrReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'Agent CDR Report'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'Agent CDR Report'} />} breadcrumbs={breadcrumbs}>\r\n        <AgentCdrRportFilter />\r\n        <AgentCdrReportTable />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DailySummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getDailySummary, getDailySummaryTotal } from 'api/api';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport DailySummaryDateFilter from './DateFilter';\r\n\r\nexport default function DailySummaryReportFilter({ setData, setDataTotal }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailySummary(startTime, endTime).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getDailySummaryTotal(startTime, endTime).then(response => {\r\n      setDataTotal(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [startTime, endTime, setData, setDataTotal]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <DailySummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDailySummaryModalTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\nexport default function TotalCallModal({ date, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTotalCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'callid'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.call_id}</TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAnsweredCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function AnsweredCallModal({ date, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAnsweredCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAbondenedCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function AbondenedCallModal({ date, handleAbondenedCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAbondenedCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n              <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAbondenedCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalTransferCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function TransferCallModal({ date, handleTransferCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTransferCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transferer'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transfered'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.caller}</TableCell>\r\n                <TableCell>{item.transferer}</TableCell>\r\n                <TableCell>{item.trasfered}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTransferCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutOfTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function OutOfTimeModal({ date, handleOutOfTimeClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutOfTime(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutOfTimeClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalRonaCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function RonaCallModla({ date, handleRonaCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalRonaCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleRonaCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function OutCallModal({ date, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport { Box, Modal } from '@mui/material';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport AbondenedCallModal from '../Modals/AbondenedCallModal';\r\nimport TransferCallModal from '../Modals/TransferCallModal';\r\nimport OutOfTimeModal from '../Modals/OutOfTimeModal';\r\nimport RonaCallModla from '../Modals/RonaCallModla';\r\nimport OutCallModal from '../Modals/OutCallModal';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport dateFormat from 'dateformat';\r\nexport default function DailySummaryReportTable({ data, dataTotal }) {\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    datetime: dateFormat(dataUnit.datetime, 'yyyy-mm-dd'),\r\n    totalcall: dataUnit.totalcall,\r\n    answered: dataUnit.answered,\r\n    inboundtime: dataUnit.inboundtime,\r\n    waitingtime: dataUnit.waitingtime,\r\n    averageconnection: dataUnit.averageconnection,\r\n    abondened: dataUnit.abondened,\r\n    transfer: dataUnit.transfer,\r\n    long_time: dataUnit.long_time,\r\n    zdisi: dataUnit.zdisi,\r\n    average_abondened_waiting: dataUnit.average_abondened_waiting,\r\n    rona: dataUnit.rona,\r\n    outbound: dataUnit.outbound,\r\n    outbound_time: dataUnit.outbound_time,\r\n    average_outbound_time: dataUnit.average_outbound_time,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = data.map((row, index) => ({\r\n    num: index + 1,\r\n    id: index,\r\n    date: dateFormat(row.datetime, 'dd-mm-yyyy'),\r\n    totalCall: parseInt(row.totalcall),\r\n    answered: parseInt(row.answered),\r\n    inboundTime: row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    waitingTime: row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    averageTime: row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    abondened: parseInt(row.abondened),\r\n    transfer: parseInt(row.transfer),\r\n    longestTime: row.long_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outOfTime: parseInt(row.zdisi),\r\n    averageAbondenedWaiting: row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    rona: parseInt(row.rona),\r\n    outbound: parseInt(row.outbound),\r\n    outboundTotalTime: row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outboundAverageTime: row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [totalCallDate, setTotalCallDate] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = date => {\r\n    setTotalCallDate(date);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const [answeredCallDate, setAnsweredCallDate] = useState('');\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = date => {\r\n    setAnsweredCallDate(date);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [abondenedCallModalOpen, setAbondenedCallOpen] = useState(false);\r\n  const [abondenedCallDate, setAbondenedCallDate] = useState('');\r\n  const handleAbondenedCallOpen = () => setAbondenedCallOpen(true);\r\n  const handleAbondenedCallClose = () => setAbondenedCallOpen(false);\r\n  const handleAbondenedCallClick = date => {\r\n    setAbondenedCallDate(date);\r\n    handleAbondenedCallOpen();\r\n  };\r\n  const [transferCallModalOpen, setTransferCallOpen] = useState(false);\r\n  const [transferCallDate, setTransferCallDate] = useState('');\r\n  const handleTransferCallOpen = () => setTransferCallOpen(true);\r\n  const handleTransferCallClose = () => setTransferCallOpen(false);\r\n  const handleTransferCallClick = date => {\r\n    setTransferCallDate(date);\r\n    handleTransferCallOpen();\r\n  };\r\n\r\n  const [outOfTimeModalOpen, setOutOfTimeModalOpen] = useState(false);\r\n  const [outOfTimeDate, setOutOfTimeDate] = useState('');\r\n  const handleOutOfTimeOpen = () => setOutOfTimeModalOpen(true);\r\n  const handleOutOfTimeClose = () => setOutOfTimeModalOpen(false);\r\n  const handleOutOfTimeClick = date => {\r\n    setOutOfTimeDate(date);\r\n    handleOutOfTimeOpen();\r\n  };\r\n  const [ronaCallModalOpen, setRonaCallOpen] = useState(false);\r\n  const [ronaCallDate, setRonaCallDate] = useState('');\r\n  const handleRonaCallOpen = () => setRonaCallOpen(true);\r\n  const handleRonaCallClose = () => setRonaCallOpen(false);\r\n  const handleRonaCallClick = date => {\r\n    setRonaCallDate(date);\r\n    handleRonaCallOpen();\r\n  };\r\n  const [outCallModalOpen, setOutCallOpen] = useState(false);\r\n  const [outCallDate, setOutCallDate] = useState('');\r\n  const handleOutCallOpen = () => setOutCallOpen(true);\r\n  const handleOutCallClose = () => setOutCallOpen(false);\r\n  const handleOutCallClick = date => {\r\n    setOutCallDate(date);\r\n    handleOutCallOpen();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'dailysummary.date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span>\r\n          <CalendarTodayIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'totalCall',\r\n      headerName: <IntlMessages id={'dailysummary.totalcall'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTotalCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ color: '#406882' }}>{params.row.totalCall}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'dailysummary.answered'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAnsweredCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <PermPhoneMsgIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'inboundTime',\r\n      headerName: <IntlMessages id={'dailysummary.inboundtime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waitingTime',\r\n      headerName: <IntlMessages id={'dailysummary.waitingtime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageTime',\r\n      headerName: <IntlMessages id={'dailysummary.avaragetime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'abondened',\r\n      headerName: <IntlMessages id={'dailysummary.abondened'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAbondenedCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#DD4A48' }}>\r\n          <PersonOffIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'transfer',\r\n      headerName: <IntlMessages id={'dailysummary.transfer'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTransferCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#396EB0' }}>\r\n          <TransferWithinAStationIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'longestTime',\r\n      headerName: <IntlMessages id={'dailysummary.longesttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outOfTime',\r\n      headerName: <IntlMessages id={'dailysummary.outoftime'} />,\r\n      width: 230,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutOfTimeClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageAbondenedWaiting',\r\n      headerName: <IntlMessages id={'dailysummary.averageabondenedwaiting'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rona',\r\n      headerName: <IntlMessages id={'dailysummary.rona'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleRonaCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outbound',\r\n      headerName: <IntlMessages id={'dailysummary.outboundcount'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#519259', cursor: 'pointer' }}>\r\n          <CallIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundTotalTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundtotaltime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundAverageTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundaveragetime'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      {csvData.length > 0 && (\r\n        <div style={{ marginBottom: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Daily_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijkse samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Tägliche Zusammenfassung'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"datetime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Çağrı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal gesprek'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anruf insgesamt'\r\n                    : ''\r\n                }\r\n                value=\"totalcall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Inbound Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Gelen Çağrı Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomende tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingangszeit'\r\n                    : ''\r\n                }\r\n                value=\"inboundtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Waiting Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Bekleme Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachttijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Wartezeit'\r\n                    : ''\r\n                }\r\n                value=\"waitingtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Zeit'\r\n                    : ''\r\n                }\r\n                value=\"averageconnection\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Abandoned'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Terkeden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Verlaten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Verlassen'\r\n                    : ''\r\n                }\r\n                value=\"abondened\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Transfer'\r\n                    : ''\r\n                }\r\n                value=\"transfer\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Longest Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'En uzun süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Langste tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Längste Zeit'\r\n                    : ''\r\n                }\r\n                value=\"long_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Out Of Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk dışı taşanlar'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Geen tijd meer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Außerhalb der Zeit'\r\n                    : ''\r\n                }\r\n                value=\"zdisi\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Abadoned Waiting'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Terkeden Bekleme'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddeld verlaten wachten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliches verlassenes Warten'\r\n                    : ''\r\n                }\r\n                value=\"average_abondened_waiting\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Rona'\r\n                    : ''\r\n                }\r\n                value=\"rona\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı Sayısı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande telling'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehender Zähler'\r\n                    : ''\r\n                }\r\n                value=\"outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Total Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı toplam süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande totale tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend Gesamtzeit'\r\n                    : ''\r\n                }\r\n                value=\"outbound_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden çağrı ortalama süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd uitgaan'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche ausgehende Zeit'\r\n                    : ''\r\n                }\r\n                value=\"average_outbound_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            localeText={localeText}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.totalcall'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.answered'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.inboundtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.waitingtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.avaragetime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.abondened'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.transfer'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.longesttime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 230 }}>\r\n                  <IntlMessages id={'dailysummary.outoftime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 260 }}>\r\n                  <IntlMessages id={'dailysummary.averageabondenedwaiting'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.rona'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.outboundcount'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.outboundtotaltime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 220 }}>\r\n                  <IntlMessages id={'dailysummary.outboundaveragetime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataTotal.map((data, index) => (\r\n                <TableRow key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                  <TableCell>\r\n                    {' '}\r\n                    <IntlMessages id={'total'} />{' '}\r\n                  </TableCell>\r\n                  <TableCell>{data.totalcall}</TableCell>\r\n                  <TableCell>{data.answered}</TableCell>\r\n                  <TableCell>{data.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.abondened}</TableCell>\r\n                  <TableCell>{data.transfer}</TableCell>\r\n                  <TableCell>{data.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.zdisi}</TableCell>\r\n                  <TableCell>{data.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.rona}</TableCell>\r\n                  <TableCell>{data.outbound}</TableCell>\r\n                  <TableCell>{data.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TotalCallModal date={totalCallDate} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AnsweredCallModal date={answeredCallDate} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={abondenedCallModalOpen}\r\n        onClose={handleAbondenedCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AbondenedCallModal date={abondenedCallDate} handleAbondenedCallClose={handleAbondenedCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outOfTimeModalOpen}\r\n        onClose={handleOutOfTimeClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutOfTimeModal date={outOfTimeDate} handleOutOfTimeClose={handleOutOfTimeClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={ronaCallModalOpen}\r\n        onClose={handleRonaCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <RonaCallModla date={ronaCallDate} handleRonaCallClose={handleRonaCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={transferCallModalOpen}\r\n        onClose={handleTransferCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TransferCallModal date={transferCallDate} handleTransferCallClose={handleTransferCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outCallModalOpen}\r\n        onClose={handleOutCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutCallModal date={outCallDate} handleOutCallClose={handleOutCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DailySummaryReportFilter from './Filter';\r\nimport DailySummaryReportTable from './Table';\r\n\r\nexport default function DailySumaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailysummary'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  let [dataTotal, setDataTotal] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'dailysummary'} />} breadcrumbs={breadcrumbs}>\r\n        <DailySummaryReportFilter setData={setData} setDataTotal={setDataTotal} />\r\n        <DailySummaryReportTable data={data} dataTotal={dataTotal} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function InternalSummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getInternalsSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InternalSummaryDateFilter from './DateFilter';\r\n\r\nexport default function InternalsSummaryReportFilter({ setData, startTime, setStartTime, endTime, setEndTime, direction, setDirection }) {\r\n  let [agents, setAgents] = useState([]);\r\n  let [seletAgent, setSelectAgent] = useState(\"\");\r\n  const handleChangeAgentSelect = event => {\r\n    setSelectAgent(event.target.value === 'all' ? '' : event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAgentNumber().then(response => {\r\n      setAgents(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n        setLoading(true);\r\n        getInternalsSummary(startTime, endTime, seletAgent).then(result => {\r\n          let filtered = JSON.parse(result.data.data).filter((item)=> (\r\n            direction === \"all\" ? item :\r\n            direction === \"inbound\" ? parseInt(item.total_inbound) > 0 : parseInt(item.total_outbound) > 0\r\n          ));\r\n          setData(filtered);\r\n          setLoading(false);\r\n        });\r\n  }, [startTime, endTime, seletAgent, setData,direction]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBlock: '10px' }}>\r\n        <InternalSummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={seletAgent}\r\n                  onChange={handleChangeAgentSelect}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.dn}>\r\n                      {agent.dn} - {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"direction-select-label\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"direction-select-label\"\r\n                  id=\"direction-select\"\r\n                  value={direction}\r\n                  onChange={(e)=> setDirection(e.target.value)}\r\n                  label={<IntlMessages id={'direction'} />}>\r\n                  <MenuItem value='all'>\r\n                    <IntlMessages id={'alltimes'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inbound\">\r\n                    <IntlMessages id={'dashboard.inbound'} />\r\n                    </MenuItem>\r\n                  <MenuItem value=\"outbound\">\r\n                    <IntlMessages id={'dashboard.outbound'} />\r\n                    </MenuItem>\r\n\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload, ArrowForward, ArrowBack, Person, PhoneMissed, PhoneInTalk, Phone } from '@material-ui/icons';\r\nimport { DataGrid, GridToolbarFilterButton } from '@mui/x-data-grid';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport {\r\n  getInternalsSummaryLongestCalled,\r\n  getInternalsSummaryLongestCaller,\r\n  getInternalsSummaryLongestCalledAmount,\r\n  getInternalsSummaryLongestCallerAmount,\r\n  getInternalBreakTime,\r\n} from 'api/api';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function InternalsSummaryReportTable({ data, startTime, endTime, direction }) {\r\n  let [selectedAgent, setSelectedAgent] = useState('');\r\n  const handleAgentClick = agentNum => {\r\n    setSelectedAgent(agentNum);\r\n    handleOpenModal();\r\n  };\r\n\r\n  let [modalOpen, setModalOpen] = useState(false);\r\n  const handleOpenModal = () => setModalOpen(true);\r\n  const handleCloseModal = () => setModalOpen(false);\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  let [longestBreakTime, setLongestBreakTime] = useState([]);\r\n  useEffect(() => {\r\n    if (selectedAgent !== '') {\r\n      getInternalsSummaryLongestCalled(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCaller(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCalledAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestAmount(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCallerAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallerAmount(JSON.parse(result.data.data));\r\n      });\r\n\r\n      getInternalBreakTime(selectedAgent, startTime, endTime).then(result => {\r\n        setLongestBreakTime(JSON.parse(result.data.data));\r\n      });\r\n    }\r\n  }, [selectedAgent, startTime, endTime]);\r\n\r\n  let csvData = data.map((dataUnit, index) => ({\r\n    num: index + 1,\r\n    details: dataUnit.id,\r\n    id: dataUnit.id,\r\n    display_name: dataUnit.display_name,\r\n    total_inbound: parseInt(dataUnit.total_inbound),\r\n    answered_inbound: parseInt(dataUnit.answered_inbound),\r\n    unanswered_inbound: dataUnit.total_inbound - dataUnit.answered_inbound,\r\n    total_outbound: parseInt(dataUnit.total_outbound),\r\n    answered_outbound: parseInt(dataUnit.answered_outbound),\r\n    unanswered_outbound: dataUnit.total_outbound - dataUnit.answered_outbound,\r\n  }));\r\n  let curentLanguage = useIntl();\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'details',\r\n      headerName: <IntlMessages id={'details'} />,\r\n      renderCell: params => (\r\n        <span onClick={() => handleAgentClick(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF5959', verticalAlign: '-5px' }} />{' '}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'id',\r\n      headerName: <IntlMessages id={'agentnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <b style={{ color: '#406882' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: <IntlMessages id={'agentname'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <span style={{ verticalAlign: '-5px', color: '#5584AC' }}>\r\n            <Person />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_inbound',\r\n      headerName: <IntlMessages id={'totalinbound'} />,\r\n      width: 225,\r\n      hide: direction === 'outbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_inbound',\r\n      headerName: <IntlMessages id={'answeredinbound'} />,\r\n      width: 220,\r\n      hide: direction === 'outbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_inbound',\r\n      headerName: <IntlMessages id={'unansweredinbound'} />,\r\n      width: 260,\r\n      hide: direction === 'outbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_outbound',\r\n      headerName: <IntlMessages id={'totaloutbound'} />,\r\n      width: 225,\r\n      hide: direction === 'inbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_outbound',\r\n      headerName: <IntlMessages id={'answeredoutbound'} />,\r\n      width: 220,\r\n      hide: direction === 'inbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_outbound',\r\n      headerName: <IntlMessages id={'unansweredoutbound'} />,\r\n      width: 260,\r\n      hide: direction === 'inbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = selectedAgent, extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'ınternal_summary_report'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'dahili özet raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'ıintern samenvattend rapport'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'interner zusammenfassender Bericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamteingang'\r\n                    : ''\r\n                }\r\n                value=\"total_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomend beantwoord'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord Inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantworteter Eingang'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamt ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"total_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande beantwoording'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantwortet ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_outbound\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginTop: '20px', height: '700px' }}>\r\n        <DataGrid\r\n          rows={csvData}\r\n          columns={columns}\r\n          pageSize={100}\r\n          rowsPerPageOptions={[100]}\r\n          components={{ Toolbar: GridToolbarFilterButton }}\r\n          localeText={localeText}\r\n        />\r\n      </Card>\r\n\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <div style={{ padding: '10px' }} ref={ref}>\r\n            <GridContainer>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined\r\n                            ? longestCalleds[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined ? longestCalleds[1].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined\r\n                            ? longestCalleds[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined ? longestCalleds[2].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined\r\n                            ? longestCalleds[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined ? longestCalleds[3].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined\r\n                            ? longestCalleds[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined ? longestCalleds[4].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined\r\n                            ? longestCalleds[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined\r\n                            ? longestCallers[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined ? longestCallers[1].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined\r\n                            ? longestCallers[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined ? longestCallers[2].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined\r\n                            ? longestCallers[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined ? longestCallers[3].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined\r\n                            ? longestCallers[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined ? longestCallers[4].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined\r\n                            ? longestCallers[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4}></Grid>\r\n              <Grid item md={4} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestbreaketimes'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={4}></Grid>\r\n            </GridContainer>\r\n          </div>\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white', marginRight: '10px' }} onClick={downloadScreenshot}>\r\n              <IntlMessages id={'dowlandimage'} />\r\n            </Button>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleCloseModal()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport InternalsSummaryReportFilter from './Filter';\r\nimport InternalsSummaryReportTable from './Table';\r\n\r\nexport default function InternalsSummaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'internalssummary'} />, isActive: true },\r\n  ];\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [data, setData] = useState([]);\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n  const [direction,setDirection] = useState(\"all\");\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'internalssummary'} />} breadcrumbs={breadcrumbs}>\r\n      <InternalsSummaryReportFilter\r\n        setData={setData}\r\n        startTime={startTime}\r\n        setStartTime={setStartTime}\r\n        endTime={endTime}\r\n        setEndTime={setEndTime}\r\n        direction={direction}\r\n        setDirection={setDirection}\r\n      />\r\n      <InternalsSummaryReportTable data={data} startTime={startTime} endTime={endTime} direction={direction} />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { getQueueNumber } from 'api/api';\r\n\r\nexport default function CallLogtherFilters({\r\n  setDirectionApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus,\r\n  setDuration,\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [directionSelect, setDirectionSelect] = useState('');\r\n  const handleDirectionSelect = event => {\r\n    setDirectionSelect(event.target.value);\r\n    setDirectionApi(event.target.value);\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [stateSelect, setStateSelect] = useState('');\r\n  const handleChangeStateSelect = event => {\r\n    setStateSelect(event.target.value);\r\n    setAnswerStatus(event.target.value);\r\n  };\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  const handleChangeQueueSelect = event => {\r\n    if (event.target.value === 'all') {\r\n      setQueueSelect('');\r\n      setDestinationFilterText('all');\r\n    } else {\r\n      setQueueSelect(event.target.value);\r\n      setDestinationFilterText(`dnOrDns====${event.target.value}`);\r\n    }\r\n  };\r\n  let [advancedFilter, setAdvancedFilter] = useState([]);\r\n  const handleChangeAdvancedFilterSelect = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setAdvancedFilter(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n  let [durationSelect, setDurationSelect] = useState('');\r\n  let [durationMinMax, setDurationMinMax] = useState({ durationMin: '', durationMax: '' });\r\n  const handleDurationSelect = e => {\r\n    setDurationSelect(e.target.value);\r\n    e.target.value === 'all'\r\n      ? setDuration('')\r\n      : e.target.value === 'spec'\r\n      ? setDuration(durationMinMax)\r\n      : setDuration(e.target.value);\r\n  };\r\n  const handleDurationChange = e => {\r\n    const { name, value } = e.target;\r\n    if (/^\\d*$/.test(value)) {\r\n      setDurationMinMax({\r\n        ...durationMinMax,\r\n        [name]: value,\r\n      });\r\n      setDuration({\r\n        ...durationMinMax,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!advancedFilter.includes('Duration')) {\r\n      setDuration('');\r\n      setDurationSelect('');\r\n    }\r\n    if (!advancedFilter.includes('Queue')) {\r\n      setDestinationFilterText('all');\r\n      setQueueSelect('');\r\n    }\r\n  }, [advancedFilter, setDuration, setDestinationFilterText]);\r\n\r\n  let [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    getQueueNumber().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CompareArrowsIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'directionfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={directionSelect}\r\n                  label={<IntlMessages id={'direction'} />}\r\n                  onChange={handleDirectionSelect}>\r\n                  <MenuItem value=\"all\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' ||\r\n                sourceFilterSelect === 'numberfilter' ||\r\n                sourceFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : sourceFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' ||\r\n                targetFilterSelect === 'numberfilter' ||\r\n                targetFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : targetFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <QuestionAnswerIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={stateSelect}\r\n                  label={<IntlMessages id={'stateFilter'} />}\r\n                  onChange={handleChangeStateSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'CallLog.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'nonanswered'}>\r\n                    <IntlMessages id={'CallLog.filter.unanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'missed'}>\r\n                    <IntlMessages id={'missedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'transfered'}>\r\n                    <IntlMessages id={'dailysummary.transfer'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={advancedFilter}\r\n                  label={<IntlMessages id={'CallLog.filter.filter3'} />}\r\n                  onChange={handleChangeAdvancedFilterSelect}\r\n                  renderValue={() => \"\"}>\r\n                  <MenuItem value={'Duration'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Duration') > -1} />\r\n                    <AccessTime style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'durationfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'Queue'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Queue') > -1} />\r\n                    <ContactPhoneIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {advancedFilter.includes('Duration') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'durationfilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"durationLbl\">\r\n                    <IntlMessages id={'durationfilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"durationLbl\"\r\n                    id=\"duration-simple-select\"\r\n                    value={durationSelect}\r\n                    label={<IntlMessages id={'durationfilter'} />}\r\n                    onChange={handleDurationSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"3\">\r\n                      3 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"5\">\r\n                      5 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"10\">\r\n                      10 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"20\">\r\n                      20 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"spec\">\r\n                      <IntlMessages id={'custom'} />\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                {durationSelect === 'spec' && (\r\n                  <>\r\n                    <FormControl sx={{ mt: 2 }}>\r\n                      <TextField\r\n                        label=\"Min\"\r\n                        variant=\"outlined\"\r\n                        name=\"durationMin\"\r\n                        onChange={handleDurationChange}\r\n                        value={durationMinMax.durationMin}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IntlMessages id={'seconds'} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl sx={{ mt: 2 }}>\r\n                      <TextField\r\n                        sx={{ mt: 3 }}\r\n                        label=\"Max\"\r\n                        name=\"durationMax\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleDurationChange}\r\n                        value={durationMinMax.durationMax}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IntlMessages id={'seconds'} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            )}\r\n            {advancedFilter.includes('Queue') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"queue-label\">\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"queue-label\"\r\n                    value={queueSelect}\r\n                    label={<IntlMessages id={'queueFilter'} />}\r\n                    onChange={handleChangeQueueSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {queues.map(que => (\r\n                      <MenuItem key={que.id} value={que.dn}>\r\n                        {que.dn} - {que.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog, getCallLogTotal, getCallLogCount, getCallLogTotalSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLogDateFilter from './DateFilter';\r\nimport CallLogtherFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLogFilter({ setData, limit, offset, setPage, setTotalData, setCount, setResponseTotalSummary }) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [directionApi, setDirectionApi] = useState('');\r\n  let [directionSql, setDirectionSql] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n  let [didNumber, setDidNumber] = useState('');\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [answerStatusSql, setAnswerStatusSql] = useState('');\r\n  let [duration, setDuration] = useState('');\r\n  let [durationSql, setDurationSql] = useState('');\r\n  useEffect(() => {\r\n    if (duration === '') {\r\n      setDurationSql('');\r\n    } else if (duration?.durationMin === undefined) {\r\n      setDurationSql(`and \r\n  (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) <= interval '${duration}' second`);\r\n    } else if (duration.durationMin === '' && duration.durationMax !== '') {\r\n      setDurationSql(`and \r\n      (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) <= interval '${duration.durationMax}' second`);\r\n    } else if (parseInt(duration.durationMin) <= parseInt(duration.durationMax)) {\r\n      setDurationSql(`\r\n      and\r\n      (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) >= interval '${duration.durationMin}' second\r\n      and \r\n      (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) <= interval '${duration.durationMax}' second`);\r\n    }\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    if (directionApi === 'all') {\r\n      setDirectionSql('');\r\n    } else if (directionApi === 'inb') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'out') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%1' and\");\r\n    } else if (directionApi === 'agent') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'ques') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) not like '%0' and\");\r\n    }\r\n  }, [directionApi]);\r\n\r\n  useEffect(() => {\r\n    if (answerStatus === 'all') {\r\n      setAnswerStatusSql('');\r\n    } else if (answerStatus === 'answered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'answered'\");\r\n    } else if (answerStatus === 'nonanswered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'nonanswered'\");\r\n    } else if (answerStatus === 'transfered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'transfered'\");\r\n    } else if (answerStatus === 'missed') {\r\n      setAnswerStatusSql(\r\n        \"where statusofcall != 'transfered' and statusofcall != 'answered' and statusofcall != 'nonanswered'\",\r\n      );\r\n    }\r\n  }, [answerStatus]);\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  let string = `with recursive cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc\r\n  ), cte2 as( \r\n  SELECT\r\n  call_id,\r\n  act, \r\n  src_did,\r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording'),  \r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall,\r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  when (act >= 400 and dst_dn_type = 13) then 'dışarı' \r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  ${directionSql} \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'\r\n  and\r\n  src_did like '%${didNumber}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )\r\n  ${durationSql}\r\n  order by dst_start_time,seg_order asc \r\n  ) \r\n  select \r\n  * \r\n  from cte2 \r\n  ${answerStatusSql}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let totalString = `\r\n    WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc\r\n  ),cte2 as(  \r\n    SELECT\r\n    *,\r\n    case \r\n    when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n    when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n    left outer join cte1  on \r\n    cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n    where \r\n    ${directionSql}\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    ${durationSql}\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    src_did like '%${didNumber}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  to_char((date_trunc('day',dst_start_time)),'dd-mm-yyyy'),\r\n  count(*),\r\n  sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as answered,\r\n  sum(case when act in (3,15,101,400,418) then 1 else 0 end) as not_answered,\r\n  sum(case when act in (9,10,12) then 1 else 0 end) as transfered,\r\n  count(*)-sum(case when act in (9,10,12) then 1 else 0 end) - sum(case when act in (3,15,101,400,418) then 1 else 0 end) - sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as missed,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from cte2 ${answerStatusSql}\r\n  group by date_trunc('day',dst_start_time) \r\n  order by date_trunc('day',dst_start_time) asc`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as\r\n  (    \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,    \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,    \r\n  start_time,    \r\n  end_time,      \r\n  recording_url    \r\n  from recordings as records    \r\n  where    \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time)\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'        \r\n  order by start_time desc    \r\n  ), cte2 as( \r\n    SELECT\r\n    case \r\n    when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n    when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n    FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n    left outer join cte1  on \r\n    cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n    where  \r\n    ${directionSql} \r\n    act != 1 \r\n    and  \r\n    dst_display_name like '%${destinationFilterNumber}%'  \r\n    and  \r\n    src_display_name like '%${sourceFilterNumber}%'  \r\n    and\r\n    src_did like '%${didNumber}%'\r\n    and\r\n    (  \r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n    and\r\n    cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n    and \r\n    cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n    )\r\n    ${durationSql}\r\n    order by dst_start_time,seg_order asc \r\n    ) \r\n    select \r\n    count(*) as cnt\r\n    from cte2 \r\n    ${answerStatusSql}`;\r\n\r\n  let stringTotalSummary = `\r\n    WITH RECURSIVE cte1 as \r\n    (     \r\n    select  \r\n    split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n    split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n    start_time,     \r\n    end_time,      \r\n    recording_url     \r\n    from recordings as records     \r\n    where     \r\n    (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n    and      \r\n    (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n    and\r\n    split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n    and\r\n    split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n    order by start_time desc\r\n    ), cte2 as( \r\n    SELECT\r\n    *,\r\n    case \r\n    when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n    when act = 2 then 'phoneispickedup'\r\n    when act = 3 then 'nonanswered'\r\n    when act = 7 then 'FailedBXferOfSrc'\r\n    when act = 8  then 'FailedBXferOfDst'\r\n    when act = 9 then 'transfered'\r\n    when act = 10 then 'transfered'\r\n    when act = 12 then 'transfered'\r\n    when act = 15 then 'nonanswered'\r\n    when act = 404 then 'CallerForbidden'\r\n    when act = 408 then 'TargetNotFound'\r\n    when act = 418 then 'nonanswered'\r\n    when act = 400 then 'nonanswered'\r\n    when act = 102 then 'FwdOnBusy'\r\n    when act = 101 then 'nonanswered'\r\n    when act = 409 then 'TerminatedByRule'\r\n    when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n    left outer join cte1  on \r\n    cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n    where \r\n    ${directionSql}\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    ${durationSql}\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    src_did like '%${didNumber}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  count(*),\r\n  sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as answered,\r\n  sum(case when act in (3,15,101,400,418) then 1 else 0 end) as not_answered,\r\n  sum(case when act in (9,10,12) then 1 else 0 end) as transfered,\r\n  count(*)-sum(case when act in (9,10,12) then 1 else 0 end) - sum(case when act in (3,15,101,400,418) then 1 else 0 end) - sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as missed,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from cte2 ${answerStatusSql}\r\n  `;\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setDidNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setDidNumber('');\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n      } else {\r\n        setDidNumber('');\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    } else if (sourceFilterText.startsWith('didno====')) {\r\n      setDidNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnLike('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceNumber('');\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDidNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDidNumber('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDidNumber('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    } else if (destinationFilterText.startsWith('didno====')) {\r\n      setDidNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogTotal(totalString).then(result => {\r\n      setTotalData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [totalString, setTotalData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogTotalSummary(stringTotalSummary).then(result => {\r\n      setResponseTotalSummary(JSON.parse(result.data.data)[0]);\r\n      setLoading(false);\r\n    });\r\n  }, [stringTotalSummary, setResponseTotalSummary]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogCount(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].cnt));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n\r\n  return (\r\n    <div>\r\n      <CallLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLogtherFilters\r\n        setDirectionApi={setDirectionApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n        setDuration={setDuration}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Grid, Tab, Tabs, Typography } from '@mui/material';\r\nimport { getCallDetail } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineOppositeContent,\r\n  TimelineSeparator,\r\n} from '@material-ui/lab';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function CallLogCallDetail({ callId }) {\r\n  let [data, setData] = useState([]);\r\n  const detailContainerStyle={borderBottom:\"1px solid rgba(0, 0, 0, 0.87)\", margin:\"10px 0\", width:\"100%\"};\r\n\r\n  useEffect(() => {\r\n    getCallDetail(callId).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      setTotalTime(\r\n        new Date(JSON.parse(resp.data.data)[JSON.parse(resp.data.data).length - 1]?.end_time).getTime() -\r\n          new Date(JSON.parse(resp.data.data)[0]?.start_time).getTime(),\r\n      );\r\n    });\r\n  }, [callId]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let [totalTime, setTotalTime] = useState(0);\r\n\r\n  const secondToTime = ms => {\r\n    let seconds = ms / 1000;\r\n    const hours = parseInt(seconds / 3600);\r\n    seconds = seconds % 3600;\r\n    const minutes = parseInt(seconds / 60);\r\n    seconds = seconds % 60;\r\n    let hourString = hours.toString().length === 1 ? '0' : '';\r\n    let minutesString = minutes.toString().length === 1 ? '0' : '';\r\n    let secondsString = seconds.toString().length === 1 ? '0' : '';\r\n    let string = hourString + hours + 'h ' + minutesString + minutes + 'm ' + secondsString + seconds + 's ';\r\n    return string;\r\n  };\r\n\r\n  let [totalRingTime, setTotalRingTime] = useState(0);\r\n  let [totalTalkTime, setTotalTalkTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let tempRingTime = 0;\r\n    let tempTalkTime = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].ring_time !== '') {\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n      if (data[i].duration !== '') {\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n    }\r\n    setTotalRingTime(tempRingTime);\r\n    setTotalTalkTime(tempTalkTime);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ background: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)' }}>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              background: 'rgb(173,206,116)',\r\n              height: '200px',\r\n              marginRight: '0px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#89a658',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.callers}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ width: '100%', height: '200px' }}>\r\n            <div\r\n              style={{\r\n                width: 0,\r\n                height: 0,\r\n                borderTop: '100px solid transparent',\r\n                borderLeft: '200px solid',\r\n                borderLeftColor: 'rgb(173,206,116)',\r\n                borderBottom: '100px solid transparent',\r\n              }}></div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)',\r\n              height: '200px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#2978B5',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.calleds}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <hr style={{ marginTop: '0px', height: '5px', color: 'gray' }} />\r\n      <div>\r\n        <Box sx={{ width: '100%' }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'CallLog.detail.callinfo'} />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'CallLog.datail.detail'} />}\r\n                {...a11yProps(1)}\r\n              />\r\n            </Tabs>\r\n          </Box>\r\n          <TabPanel value={value} index={0}>\r\n            <Timeline position=\"alternate\">\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#2978B5' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[0]?.start_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"primary\">\r\n                    <DateRangeIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n              {data.map((item, index) => (\r\n                <TimelineItem key={index}>\r\n                  <TimelineOppositeContent\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ marginTop: '80px' }}>\r\n                    <Typography variant=\"h6\" component=\"span\" style={{ marginTop: '45px' }}>\r\n                      <b>{item.calleds}</b>\r\n                    </Typography>\r\n                    <Typography>{item.states}</Typography>\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color=\"secondary\">\r\n                      <CallIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography style={{ marginTop: '20px' }}>\r\n                        <IntlMessages id={'CallLog.datail.starttime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#A6CF98', borderRadius: '10px', color: '#557C55' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.start_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'CallLog.datail.ringtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#EEC373', borderRadius: '10px', color: '#EA5C2B' }}>\r\n                        <NotificationsActiveIcon style={{ verticalAlign: '-5px' }} /> <b>{item.ring_time}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'CallLog.datail.talktime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#6998AB', borderRadius: '10px', color: '#1A374D' }}>\r\n                        <PhoneInTalkIcon style={{ verticalAlign: '-5px' }} /> <b>{item.duration}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'CallLog.datail.endtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#FF7272', borderRadius: '10px', color: '#9B0000' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.end_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))}\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#EA4C4C' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[data.length - 1]?.end_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"secondary\">\r\n                    <CallEndIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n          <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>Call Id:</b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <p style={{ fontSize: '16px' }}>{callId}</p>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.from'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#086E7D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.callers}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.to'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.calleds}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.duration'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{secondToTime(totalTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.talktime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#406882' }}>{secondToTime(totalTalkTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.ringtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#EF2F88' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#EF2F88' }}>{secondToTime(totalRingTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.date'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.start_time.split(' ')[0]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.starttime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[0]?.start_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.endtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[data.length - 1]?.end_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n          </TabPanel>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport {\r\n  AccessTime,\r\n  Check,\r\n  Clear,\r\n  CloudDownload,\r\n  DateRange,\r\n  Person,\r\n  PhoneDisabled,\r\n  PlayArrow,\r\n  PhoneMissed,\r\n} from '@material-ui/icons';\r\nimport { getPath, getRecordingBytes, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallLogCallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\nimport SendToMobileIcon from '@mui/icons-material/SendToMobile';\r\nimport TtyIcon from '@mui/icons-material/Tty';\r\nimport { darken, lighten } from '@mui/material/styles';\r\nexport default function CallLogTable({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  totalData,\r\n  count,\r\n  responseTotalSummary,\r\n  offset,\r\n}) {\r\n  let [path, setPath] = useState('');\r\n\r\n  const [listenedRecords, setListenedRecords] = useState([]);\r\n  const getBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6));\r\n\r\n  const getHoverBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5));\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  const [record, setRecord] = useState('');\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = (dir, num) => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer !== null) {\r\n          setRecord(buffer);\r\n          setListenedRecords(prev => [...prev, num]);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  let tableData = data.map((item, index) => ({\r\n    num: index + 1 + offset,\r\n    callId: item.call_id,\r\n    listen: item.coalesce,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    srcDid: item.src_did,\r\n    caller:\r\n      item.src_display_name === item.src_dn || item.src_dn === '-'\r\n        ? item.src_display_name\r\n        : item.src_display_name + '(' + item.src_dn + ')',\r\n    called:\r\n      item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n        ? item.dst_display_name\r\n        : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    direction: [item.direction, item.dst_dn],\r\n    duration: item.duration,\r\n    salable: item.statusofcall,\r\n    id: index,\r\n  }));\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n      width: 40,\r\n    },\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value, params.row.num)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n          {params.value === 'no recording' && (\r\n            <IconButton disabled style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }} size=\"small\" aria-label=\"listen\">\r\n              <Clear />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'srcDid',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#d6851a' }}>\r\n            <TtyIcon style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value || '-'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => q.dn === params.value[1])?.display_name || <IntlMessages id=\"queue\" />}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'answered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          ) : params.value === 'nonanswered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          ) : params.value === 'transfered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#bd88f7',\r\n                color: '#27034f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n              <IntlMessages id={'dailysummary.transfer'} />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#f3bbfc',\r\n                color: '#a402bd',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'missedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          {\r\n            <ExcelFile\r\n              filename={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? 'Call_Log'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Cagri_raporu'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Oproep_Log'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Anrufliste'\r\n                  : ''\r\n              }\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={data} name=\"data\">\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Date'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Tarih'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Datum'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Datum'\r\n                      : ''\r\n                  }\r\n                  value=\"date\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunde'\r\n                      : ''\r\n                  }\r\n                  value=\"hour\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'From'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kimden'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Van'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Von'\r\n                      : ''\r\n                  }\r\n                  value=\"src_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Destination'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Hedef'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Bestemming'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Ziel'\r\n                      : ''\r\n                  }\r\n                  value=\"dst_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Direction'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Yön'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Richting'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Genaamd'\r\n                      : ''\r\n                  }\r\n                  value=\"direction\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Duration'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Süre'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Looptijd'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Dauer'\r\n                      : ''\r\n                  }\r\n                  value=\"duration\"\r\n                />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          }\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px' }}>\r\n          <CallLogCallDetail callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {data.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {data.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {data.length > 0 && (\r\n              <ExcelFile\r\n                filename={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Call_Log'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cagri_raporu'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Oproep_Log'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufliste'\r\n                    : ''\r\n                }\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={data} name=\"data\">\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Date'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Tarih'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Datum'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Datum'\r\n                        : ''\r\n                    }\r\n                    value=\"date\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Hour'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Saat'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Uur'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Stunde'\r\n                        : ''\r\n                    }\r\n                    value=\"hour\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Caller'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Arayan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Beller'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Anruferin'\r\n                        : ''\r\n                    }\r\n                    value=\"src_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Called'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Aranan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Genaamd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Namens'\r\n                        : ''\r\n                    }\r\n                    value=\"dst_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Direction'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Yön'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Richting'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Genaamd'\r\n                        : ''\r\n                    }\r\n                    value=\"direction\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Duration'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Süre'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Looptijd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Dauer'\r\n                        : ''\r\n                    }\r\n                    value=\"duration\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'State'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Durum'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Staat'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Bundesland'\r\n                        : ''\r\n                    }\r\n                    value=\"salable\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <Box\r\n          style={{ height: '440px', width: '100%' }}\r\n          sx={{\r\n            '& .Calllog-Table-Listened': {\r\n              bgcolor: getBackgroundColor('#ffeb7a', 'light'),\r\n              '&:hover': {\r\n                bgcolor: getHoverBackgroundColor('#ffeb7a', 'light'),\r\n              },\r\n            },\r\n          }}>\r\n          <DataGrid\r\n            disableSelectionOnClick\r\n            getRowClassName={params => listenedRecords.includes(params.row.num) && `Calllog-Table-Listened`}\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </Box>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tableData.length < limit || tableData.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tableData.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {totalData.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log Samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Zusammenfassung des Anrufprotokolls'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={totalData} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"to_char\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmamış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal onbeantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl unbeantworteter Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalduration\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"averageduration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'missedcallcount'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'transferedcallcount'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.average.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalData.map((total, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    <b>{total.to_char}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#1C7947',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#852747',\r\n                      }}>\r\n                      <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.not_answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#a402bd',\r\n                      }}>\r\n                      <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.missed}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#27034f',\r\n                      }}>\r\n                      <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.transfered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalduration}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.averageduration}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{responseTotalSummary.count}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#1C7947',\r\n                    }}>\r\n                    <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#852747',\r\n                    }}>\r\n                    <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    <b>{responseTotalSummary.not_answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#a402bd',\r\n                    }}>\r\n                    <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.missed}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#27034f',\r\n                    }}>\r\n                    <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <b>{responseTotalSummary.transfered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.totalduration}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.averageduration}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Modal\r\n          open={openAudioModal}\r\n          onClose={() => setOpenAudioModal(false)}\r\n          aria-labelledby=\"Audio\"\r\n          aria-describedby=\"Audio Player Modal\">\r\n          <Box style={audioModalStyle}>\r\n            <Paper\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n                borderRadius: 'inherit',\r\n                borderBottomLeftRadius: '0',\r\n                borderBottomRightRadius: '0',\r\n              }}>\r\n              <Button onClick={() => setOpenAudioModal(false)}>X</Button>\r\n            </Paper>\r\n            <Box style={{ padding: '12px 8px' }}>\r\n              <AudioWaveForm buffer={record} />\r\n            </Box>\r\n          </Box>\r\n        </Modal>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallLogFilter from './Filter';\r\nimport CallLogTable from './Table';\r\n\r\nexport default function CallLog() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllog'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [responseTotalSummary, setResponseTotalSummary] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calllog'} />} breadcrumbs={breadcrumbs}>\r\n        <CallLogFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setTotalData={setTotalData}\r\n          setCount={setCount}\r\n          setResponseTotalSummary={setResponseTotalSummary}\r\n        />\r\n        <CallLogTable\r\n          count={count}\r\n          totalData={totalData}\r\n          responseTotalSummary={responseTotalSummary}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QualityReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography, Box, Chip } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAgentNumber } from 'api/api';\r\nimport QualityReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function QualityFilters({ data, setFiltered }) {\r\n  const [agentNo, setAgentNo] = useState('');\r\n  const [agentName, setAgentName] = useState([]);\r\n  const [score, setScore] = useState('');\r\n  const [agents, setAgents] = useState([]);\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  const [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  useState(() => {\r\n    getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  }, []);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  useEffect(() => {\r\n    var filtered = [...data];\r\n    if (agentNo !== '') {\r\n      filtered = filtered.filter(item => {\r\n        return Object.keys(item).some(() => {\r\n          return item.ani\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(agentNo.toLowerCase());\r\n        });\r\n      });\r\n    }\r\n    if (agentName.length > 0) {\r\n      filtered = filtered.filter(item => {\r\n        return agentName.includes(item.agent);\r\n      });\r\n    }\r\n    if (score !== '') {\r\n      filtered = filtered.filter(item => {\r\n        return Object.keys(item).some(() => {\r\n          return item.score\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(score.toLowerCase());\r\n        });\r\n      });\r\n    }\r\n    filtered = filtered.filter(item => {\r\n      return (\r\n        new Date(item.timeofinsertion).getTime() <= new Date(endTimeApi).getTime() &&\r\n        new Date(item.timeofinsertion).getTime() >= new Date(startTimeApi).getTime()\r\n      );\r\n    });\r\n    if (agentName === '' && agentNo === '' && score === '') {\r\n      setFiltered(data);\r\n    } else {\r\n      setFiltered(filtered);\r\n    }\r\n  }, [agentNo, agentName, score, data, setFiltered, startTimeApi, endTimeApi]);\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <QualityReportDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.number'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <TextField\r\n                  id=\"agentNo\"\r\n                  type=\"text\"\r\n                  name=\"agentNo\"\r\n                  value={agentNo}\r\n                  placeholder=\"Agent Number\"\r\n                  onChange={e => {\r\n                    setAgentNo(e.target.value);\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl variant=\"standard\" fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"agentName\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"agentName\"\r\n                  label={<IntlMessages id={'agent.name'} />}\r\n                  value={agentName}\r\n                  MenuProps={{ style: { maxHeight: 300 } }}\r\n                  renderValue={selected => (\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                      {selected.map(value => (\r\n                        <Chip key={value} label={value} />\r\n                      ))}\r\n                    </Box>\r\n                  )}\r\n                  onChange={e => {\r\n                    const {\r\n                      target: { value },\r\n                    } = e;\r\n                    if (value[value.length - 1] === '') {\r\n                      setAgentName([]);\r\n                    } else {\r\n                      setAgentName(typeof value === 'string' ? value.split(',') : value);\r\n                    }\r\n                  }}>\r\n                  <MenuItem value=\"\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  {agents &&\r\n                    agents.map((item, index) => (\r\n                      <MenuItem key={index} value={item.dn}>\r\n                        {item.dn + '-' + item.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'score'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl variant=\"standard\" fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"score\">\r\n                  <IntlMessages id={'score'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"score\"\r\n                  label={<IntlMessages id={'score'} />}\r\n                  value={score}\r\n                  onChange={e => setScore(e.target.value)}>\r\n                  <MenuItem value=\"\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"5\">5</MenuItem>\r\n                  <MenuItem value=\"4\">4</MenuItem>\r\n                  <MenuItem value=\"3\">3</MenuItem>\r\n                  <MenuItem value=\"2\">2</MenuItem>\r\n                  <MenuItem value=\"1\">1</MenuItem>\r\n                  <MenuItem value=\"0\">0</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport dateFormat from 'dateformat';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nexport default function QualityTable({ filtered }) {\r\n  var nonRepeatingArr = [];\r\n  var copyArr = JSON.parse(JSON.stringify(filtered));\r\n  for (var i = 0; i < filtered.length; i++) {\r\n    var temp = [];\r\n    for (var j = 0; j < copyArr.length; j++) {\r\n      if (filtered[i].agent === copyArr[j].agent && filtered[i].score === copyArr[j].score) {\r\n        temp.push(filtered[i].ani);\r\n        copyArr[j].score = null;\r\n      }\r\n    }\r\n    if (temp.length > 0) {\r\n      nonRepeatingArr.push({\r\n        agent: filtered[i].agent,\r\n        score: filtered[i].score,\r\n        timeofinsertion: filtered[i].timeofinsertion,\r\n        voters: temp,\r\n      });\r\n    }\r\n  }\r\n\r\n  const [averageScores, setAverageScores] = useState([]);\r\n  useEffect(() => {\r\n    const totalScoreByAgent = filtered.reduce((acc, item) => {\r\n      return { ...acc, [item.agent]: (acc[item.agent] || 0) + parseInt(item.score) };\r\n    }, {});\r\n    const totalVotesByAgent = filtered.reduce((acc, item) => {\r\n      return { ...acc, [item.agent]: (acc[item.agent] || 0) + 1 };\r\n    }, {});\r\n    let temp = [];\r\n    for (let i in totalScoreByAgent) {\r\n      temp.push({\r\n        agent: i,\r\n        totalVote: totalVotesByAgent[i],\r\n        averageScore: (totalScoreByAgent[i] / totalVotesByAgent[i]).toFixed(1),\r\n      });\r\n    }\r\n    setAverageScores(temp);\r\n  }, [filtered]);\r\n\r\n  const [voters, setVoters] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <TableContainer style={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"Scores\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'date'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'votescount'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'score'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {nonRepeatingArr.length > 0 &&\r\n              nonRepeatingArr.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>{dateFormat(item.timeofinsertion, 'yyyy-mm-dd HH:MM:ss')}</TableCell>\r\n                  <TableCell>{item.agent}</TableCell>\r\n                  <TableCell>\r\n                    <span\r\n                      aria-controls={open ? 'voters-menu' : undefined}\r\n                      aria-haspopup=\"true\"\r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={e => {\r\n                        setVoters(item.voters);\r\n                        setAnchorEl(e.currentTarget);\r\n                      }}>\r\n                      <b>{item.voters.length}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell>{item.score}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {averageScores.length > 0 && (\r\n        <TableContainer style={{ maxHeight: '500px', marginTop: '1rem', width: '500px', float: 'right' }} component={Paper}>\r\n          <Table stickyHeader aria-label=\"Average Scores\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'totalvotes'} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'average'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {averageScores.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell align=\"right\">{item.agent}</TableCell>\r\n                  <TableCell align=\"right\">{item.totalVote}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <b>{item.averageScore}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      <Menu id=\"voters-menu\" anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n        {voters.map((item, index) => (\r\n          <MenuItem key={index}>\r\n            <Chip label={item} variant=\"outlined\" />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState, useEffect } from 'react';\r\nimport QualityFilter from './Filter';\r\nimport QualityTable from './Table';\r\nimport { getQualityReport } from '../../../api/api';\r\nexport default function QualityReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'survey.report'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  useEffect(() => {\r\n    getQualityReport().then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'survey.report'} />} breadcrumbs={breadcrumbs}>\r\n      <QualityFilter data={data} setFiltered={setFiltered} />\r\n      <QualityTable filtered={filtered} />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallTransferReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setSelectedStartTime, setSelectedEndTime, agent, setAgent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'calltransferreport.agnet'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'calltransferreport.agnet'} />}\r\n                  value={agent}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.display_name}>\r\n                      {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { getCallTransferReport } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { AccessTime, DateRange } from '@material-ui/icons';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\n\r\nexport default function DataTable({ agent, selectedStartTime, selectedEndTime }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getCallTransferReport(agent, selectedStartTime, selectedEndTime).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    });\r\n  }, [agent, selectedStartTime, selectedEndTime]);\r\n\r\n  let rows = data.map((item, index) => ({\r\n    num:index+1,\r\n    id: index,\r\n    transferer: item.transferer,\r\n    trasfered: item.trasfered,\r\n    caller: item.caller,\r\n    start_time: item.start_time,\r\n    answer_time: item.answer_time,\r\n    end_time: item.end_time,\r\n    ring_time: item.ring_time,\r\n    talk_time: item.talk_time,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field:'num',\r\n      headerName:\"#\",\r\n      renderCell:params =>(\r\n        <b>{params.value}</b>\r\n      )\r\n    },\r\n    {\r\n      field: 'transferer',\r\n      headerName: <IntlMessages id={'calltransferreport.transferfrom'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'trasfered',\r\n      headerName: <IntlMessages id={'calltransferreport.transferto'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'calltransferreport.caller'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'calltransferreport.starttime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'answer_time',\r\n      headerName: <IntlMessages id={'calltransferreport.answertime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'calltransferreport.endtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'ring_time',\r\n      headerName: <IntlMessages id={'calltransferreport.ringingtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'talk_time',\r\n      headerName: <IntlMessages id={'calltransferreport.talktime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n  ];\r\n\r\n  const [total, setTotal] = useState({totalRingTime:\"00h 00m 00s\",totalTalkTime:\"00h 00m 00s\",totalCount:0});\r\n  useEffect(()=>{\r\n    let totalring = 0;\r\n    let totalTalk = 0;\r\n    data.forEach(async (item)=>{\r\n      totalring+= convertSec(item.ring_time);\r\n      totalTalk+= convertSec(item.talk_time);\r\n    });\r\n    setTotal({\r\n      totalRingTime: convertTime(totalring),\r\n      totalTalkTime: convertTime(totalTalk),\r\n      totalCount:data.length\r\n    })\r\n  },[data])\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{ height: '600px', width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          localeText={localeText}\r\n          componentsProps={{\r\n            pagination: {\r\n              labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.totalCount}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalRingTime}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalTalkTime}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst convertSec = (str) =>{\r\n  var hour = parseInt(str.slice(0,2));\r\n  var min = parseInt(str.slice(3,6));\r\n  var sec = parseInt(str.slice(8,10));\r\n  return hour*3600+min*60+sec;\r\n}\r\nconst convertTime = (sec) =>{\r\n  var hours   = Math.floor(sec / 3600);\r\n  var minutes = Math.floor((sec - (hours * 3600)) / 60);\r\n  var seconds = sec - (hours * 3600) - (minutes * 60);\r\n  if (hours   < 10) {hours   = \"0\"+hours;}\r\n  if (minutes < 10) {minutes = \"0\"+minutes;}\r\n  if (seconds < 10) {seconds = \"0\"+seconds;}\r\n  return `${hours}h ${minutes}m ${seconds}s`;\r\n}","import GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallTransferReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calltransferreport'} />, isActive: true },\r\n  ];\r\n\r\n  const [selectedStartTime, setSelectedStartTime] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd'));\r\n  const [selectedEndTime, setSelectedEndTime] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd'));\r\n  const [agent, setAgent] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calltransferreport'} />} breadcrumbs={breadcrumbs}>\r\n        <GridContainer>\r\n          <Grid item xs={12}>\r\n            <Filter\r\n              agent={agent}\r\n              setAgent={setAgent}\r\n              selectedStartTime={selectedStartTime}\r\n              selectedEndTime={selectedEndTime}\r\n              setSelectedEndTime={setSelectedEndTime}\r\n              setSelectedStartTime={setSelectedStartTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table agent={agent} selectedStartTime={selectedStartTime} selectedEndTime={selectedEndTime} />\r\n          </Grid>\r\n        </GridContainer>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakName } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakNameModal({ id, selectedBreakName, handleBreakNameModalClose }) {\r\n  let [newName, setNewName] = useState(selectedBreakName);\r\n  const handleSubmit = () => {\r\n    setBreakName(newName, id).then(rep => {\r\n      handleBreakNameModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breakname'} />}\r\n        variant=\"outlined\"\r\n        value={newName}\r\n        onChange={event => setNewName(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakNameModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakTime } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakTimeModal({ logouttype, period, handleBreakTimeModalClose }) {\r\n  let [newTime, setNewTime] = useState(period);\r\n  const handleSubmit = () => {\r\n    setBreakTime(newTime, logouttype).then(resp => {\r\n      handleBreakTimeModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breaktime'} />}\r\n        variant=\"outlined\"\r\n        value={newTime}\r\n        onChange={event => setNewTime(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakTimeModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Box, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getBreakName, getBreakTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport BreaksChangeBreakNameModal from './Modals/BreaksChangeBreakNameModal';\r\nimport BreaksChangeBreakTimeModal from './Modals/BreaksChangeBreakTimeModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function EditBreaks() {\r\n  const [breaks, setBreaks] = useState([]);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [breakNameModalopen, setBreakNameModalOpen] = useState(false);\r\n  const handleBreakNameModalOpen = () => setBreakNameModalOpen(true);\r\n  const handleBreakNameModalClose = () => setBreakNameModalOpen(false);\r\n  let [selectedBreakId, setSelectedBreakId] = useState('');\r\n  let [selectedBreakName, setSelectedBreakName] = useState('');\r\n  const handleClickName = (id, name) => {\r\n    setSelectedBreakId(id);\r\n    setSelectedBreakName(name);\r\n    handleBreakNameModalOpen();\r\n  };\r\n\r\n  const [breakTimeModalopen, setBreakTimeModalOpen] = useState(false);\r\n  const handleBreakTimeModalOpen = () => setBreakTimeModalOpen(true);\r\n  const handleBreakTimeModalClose = () => setBreakTimeModalOpen(false);\r\n  let [selectedLogoutType, setSelectedLogoutType] = useState('');\r\n  let [selectedBreakTime, setSelectedBreakTime] = useState('');\r\n  const handleClickTime = (logoutType, time) => {\r\n    setSelectedLogoutType(logoutType);\r\n    setSelectedBreakTime(time);\r\n    handleBreakTimeModalOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBreakTime().then(resp => {\r\n      var mola = JSON.parse(resp.data.data);\r\n      getBreakName().then(res => {\r\n        var molaAdı = JSON.parse(res.data.data);\r\n        for (var i = 0; i < mola.length; i++) {\r\n          for (var z = 0; z < molaAdı.length; z++) {\r\n            if (mola[i].logouttype === molaAdı[z].value) {\r\n              mola[i].name = molaAdı[z].name;\r\n              mola[i].id = molaAdı[z].iddn;\r\n            }\r\n          }\r\n        }\r\n        setBreaks(mola);\r\n      });\r\n    });\r\n  }, [breakNameModalopen, breakTimeModalopen]);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakcode'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakname'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breaktime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {breaks.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.logouttype}</TableCell>\r\n                  <TableCell onClick={() => handleClickName(item.id, item.name)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.name}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleClickTime(item.logouttype, item.period)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.period}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Modal\r\n        open={breakNameModalopen}\r\n        onClose={handleBreakNameModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakNameModal\r\n            id={selectedBreakId}\r\n            selectedBreakName={selectedBreakName}\r\n            handleBreakNameModalClose={handleBreakNameModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={breakTimeModalopen}\r\n        onClose={handleBreakTimeModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakTimeModal\r\n            logouttype={selectedLogoutType}\r\n            period={selectedBreakTime}\r\n            handleBreakTimeModalClose={handleBreakTimeModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { addUserOwndedDeps, deleteUserOwndedDeps, getDepartmants, getSupervisors, getUserOwndedDeps } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserDepartmans({ reloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  let [deps, setDeps] = useState([]);\r\n  let [userOwnedDeps, setUserOwnedDeps] = useState([]);\r\n  let [selectedUserId, setSelectedUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getSupervisors().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserOwndedDeps(selectedUserId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].department_id);\r\n      }\r\n      setUserOwnedDeps(tempArr);\r\n    });\r\n  }, [selectedUserId]);\r\n\r\n  const handleCheckboxClick = (depId, event) => {\r\n    if (event.target.checked) {\r\n      addUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      deleteUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'supervisors'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users.map(user => (\r\n                    <TableRow key={user.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedUserId === user.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedUserId(user.id)}>\r\n                        {user.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={userOwnedDeps.includes(dep.id)}\r\n                          onChange={event => handleCheckboxClick(dep.id, event)}\r\n                        />\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addUser } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddUserModal({ setReloadValues, addHandleClose }) {\r\n  let [userName, setUserName] = useState('');\r\n  const handleChangeUserName = event => {\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState('');\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState('admin');\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      addUser(userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(userName);\r\n        addHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'admin'}>Admin</MenuItem>\r\n          <MenuItem value={'supervisor'}>Supervisor</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateUser } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateUserModal({ setReloadValues, updateHandleClose, selectedUser }) {\r\n  let [userName, setUserName] = useState(selectedUser.name);\r\n  const handleChangeUserName = event => {\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState(selectedUser.pass);\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState(selectedUser.type);\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateUser(selectedUser.id, userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Güncellendi', '', 3000);\r\n        setReloadValues(userName);\r\n        updateHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'admin'}>Admin</MenuItem>\r\n          <MenuItem value={'supervisor'}>Supervisor</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteUserByUserId, deleteUserOwndedDepsByUserId, getUsers } from '../../../../api/api';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport UpdateUserModal from './UpdateUserModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserTable({ reloadValues, setReloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    getUsers().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({ id: '0', name: '', pass: '', type: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = user => {\r\n    setSelectedUser(user);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = userId => {\r\n    deleteUserOwndedDepsByUserId(userId).then(res1 => {\r\n      deleteUserByUserId(userId).then(res2 => {\r\n        setReloadValues(userId.toString());\r\n      });\r\n    });\r\n  };\r\n  const username = localStorage.getItem(\"username\") || \"admin\";\r\n\r\n  return (\r\n    <>\r\n      <div style={{marginBottom: '10px',display:'flex',justifyContent:'space-between' }}>\r\n        <h2 style={{fontWeight:'300'}}><IntlMessages id={'welcome'} />, <b>{username}</b></h2>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adduser'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'username'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'password'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'usertype'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map(user => (\r\n              <TableRow key={user.id}>\r\n                <TableCell>{user.name}</TableCell>\r\n                <TableCell>********</TableCell>\r\n                <TableCell>{user.type}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(user)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(user.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddUserModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateUserModal\r\n            selectedUser={selectedUser}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport UserDepartmans from './UserDepartmans/UserDepartmans';\r\nimport UserTable from './UserTable/UserTable';\r\n\r\nexport default function UserSettings() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'usersettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'usersettings'} />} breadcrumbs={breadcrumbs}>\r\n        <UserTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <UserDepartmans reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddTagModal({ setReloadTags, addHandleClose }) {\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const [depId, setDepId] = useState('');\r\n  const [depName, setDepName] = useState('');\r\n  const [tagName, setTagName] = useState('');\r\n\r\n  const handleDepChange = e => {\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value);\r\n  };\r\n  const handleSubmit = () => {\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n      addTagTypes(depName, tagName, depId).then(() => {\r\n        NotificationManager.success('Etiket Eklendi', '', 3000);\r\n        setReloadTags(prev => prev + 1);\r\n        addHandleClose();\r\n      });\r\n    } else {\r\n      NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\">\r\n            <IntlMessages id={'tag'} />\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={e => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\"\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"depNameAddLbl\">\r\n            <IntlMessages id={'departmentname'} />\r\n          </InputLabel>\r\n          <Select labelId=\"depNameAddLbl\" fullWidth value={depId} onChange={handleDepChange}>\r\n            {departments &&\r\n              departments.map((item, index) => (\r\n                <MenuItem key={index} value={item.id}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n        <Button sx={{ width: '100%', marginTop: '1rem' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { setTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateTagModal({ selectedTag, setReloadTags, updateHandleClose }) {\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const [depId, setDepId] = useState(selectedTag.department_id);\r\n  const [depName, setDepName] = useState(selectedTag.department);\r\n  const [tagName, setTagName] = useState(selectedTag.tagmassage);\r\n\r\n  const handleDepChange = e => {\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n      setTagTypes(depName, tagName, depId, selectedTag.tagtypes_id).then(() => {\r\n        NotificationManager.success('Etiket Güncellendi', '', 3000);\r\n        setReloadTags(prev => prev + 1);\r\n        updateHandleClose();\r\n      });\r\n    } else {\r\n      NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\">\r\n            <IntlMessages id={'tag'} />\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={e => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\"\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"depNameUpdateLbl\">\r\n            <IntlMessages id={'departmentname'} />\r\n          </InputLabel>\r\n          <Select labelId=\"depNameUpdateLbl\" fullWidth value={depId} onChange={handleDepChange}>\r\n            {departments &&\r\n              departments.map((item, index) => (\r\n                <MenuItem key={index} value={item.id}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n        <Button sx={{ width: '100%', marginTop: '1rem' }} color=\"warning\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getTagTypes, deleteTag } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddTagModal from './AddTagModal';\r\nimport UpdateTagModal from './UpdateTagModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TagTable() {\r\n  let [tags, setTags] = useState([]);\r\n  let [reloadTags,setReloadTags] = useState(0);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => {\r\n        setTags(JSON.parse(resp.data.data));\r\n    });\r\n  }, [reloadTags]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n   let [selectedTag, setSelectedTag] = useState({ department: '', department_id: '',tagmassage:'' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = tag => {\r\n    setSelectedTag(tag);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = (tag) => {\r\n    deleteTag(tag).then(() => {\r\n      setReloadTags((prev)=> prev+1);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex',alignItems:\"center\",justifyContent:\"space-between\", margin: '10px 0' }}>\r\n        <h3><IntlMessages id={'tag'} /></h3>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'addtag'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer sx={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n              <IntlMessages id={'tag'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tags.map((item,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{item.department}</TableCell>\r\n                <TableCell>{item.tagmassage}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(item)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(item.tagtypes_id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddTagModal addHandleClose={addHandleClose} setReloadTags={setReloadTags} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateTagModal\r\n            selectedTag={selectedTag}\r\n            setReloadTags={setReloadTags}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { addDepOwnedQueues, deleteDepOwnedQueues, getDepartmants, getDepOwnedQueues, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TagTable from '../TagTable/TagTable';\r\n\r\nexport default function DepartmentQueues({ reloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  let [queues, setQueues] = useState([]);\r\n  let [depOwnedQueues, setDepOwnedQueues] = useState([]);\r\n  let [selectedDepId, setSelectedDepId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n  useEffect(() => {\r\n    getQueues().then(result => {\r\n      setQueues(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getDepOwnedQueues(selectedDepId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].queue_id);\r\n      }\r\n      setDepOwnedQueues(tempArr);\r\n    });\r\n  }, [selectedDepId]);\r\n\r\n  const handleCheckboxClick = (queueId, event) => {\r\n    if (event.target.checked) {\r\n      addDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      deleteDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedDepId === dep.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedDepId(dep.id)}>\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n\r\n          <TagTable />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'queue.answer.report.queues'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {queues.map(queue => (\r\n                    <TableRow key={queue.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={depOwnedQueues.includes(queue.id)}\r\n                          onChange={event => handleCheckboxClick(queue.id, event)}\r\n                        />\r\n\r\n                        {queue.display_name}\r\n                        <b> ({queue.dn})</b>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddDepartmanModal({ setReloadValues, addHandleClose }) {\r\n  let [name, setName] = useState('');\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      addDepartmant(name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        addHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateDepartmanModal({ selectedDep, setReloadValues, updateHandleClose }) {\r\n  let [name, setName] = useState(selectedDep.name);\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateDepartmant(selectedDep.id, name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        updateHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { deleteDepOwnedAllQueues, deleteDepWithDepId, deleteUserAllDepsWithDepId, getDepartmants } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddDepartmanModal from './AddDepartmanModal';\r\nimport UpdateDepartmanModal from './UpdateDepartmanModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DepartmantTable({ reloadValues, setReloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  let [selectedDep, setSelectedDep] = useState({ id: 0, name: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = dep => {\r\n    setSelectedDep(dep);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = depId => {\r\n    deleteDepOwnedAllQueues(depId).then(res1 => {\r\n      deleteUserAllDepsWithDepId(depId).then(res2 => {\r\n        deleteDepWithDepId(depId).then(res3 => {\r\n          setReloadValues(depId.toString());\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adddepartment'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deps.map(dep => (\r\n              <TableRow key={dep.id}>\r\n                <TableCell>{dep.name}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(dep)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(dep.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddDepartmanModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateDepartmanModal\r\n            selectedDep={selectedDep}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DepartmentQueues from './DepartmentQueues/DepartmentQueues';\r\nimport DepartmantTable from './DeportmentTable/DepartmantTable';\r\n\r\nexport default function DepartmansSettigns() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'departmentsettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'departmentsettings'} />} breadcrumbs={breadcrumbs}>\r\n        <DepartmantTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <DepartmentQueues reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Typography, Paper, Grid } from '@mui/material';\r\nimport { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\n\r\nexport default function Account() {\r\n  const [company, setCompany] = useState('');\r\n  const [user, setUser] = useState('');\r\n  useEffect(() => {\r\n    setCompany(localStorage.getItem('company') || '');\r\n    setUser(localStorage.getItem('username') || '');\r\n  }, []);\r\n\r\n  const flexbox = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  return (\r\n    <PageContainer>\r\n      {company && (\r\n        <Typography variant=\"h3\" component=\"div\">\r\n          {company}\r\n        </Typography>\r\n      )}\r\n      <Paper sx={{ py: 3, px: 2, my: 3 }}>\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          <span style={{ fontWeight: '300' }}>\r\n            <IntlMessages id={'welcome'} />,\r\n          </span>{' '}\r\n          {user}\r\n        </Typography>\r\n      </Paper>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2 }} style={flexbox}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              Yeni Bildirimlerim\r\n            </Typography>\r\n            <PieChart width={250} height={250}>\r\n              <Pie\r\n                data={newNotifications}\r\n                color=\"#000\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                isAnimationActive={true}\r\n                outerRadius={95}\r\n                fill=\"#8884d8\">\r\n                {newNotifications.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2 }} style={flexbox}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              Devam Eden Bildirimlerim\r\n            </Typography>\r\n            <PieChart width={250} height={250}>\r\n              <Pie\r\n                data={currentNotifications}\r\n                color=\"#000\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                isAnimationActive={true}\r\n                outerRadius={95}\r\n                fill=\"#8884d8\">\r\n                {currentNotifications.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2 }} style={flexbox}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              Gecikmiş Bildirimlerim\r\n            </Typography>\r\n            <PieChart width={250} height={250}>\r\n            <Pie\r\n                data={delayedNotifications}\r\n                color=\"#000\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                isAnimationActive={true}\r\n                outerRadius={95}\r\n                fill=\"#8884d8\">\r\n                {delayedNotifications.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\nconst newNotifications = [\r\n  {\r\n    name: 'mesaj',\r\n    value: 30,\r\n  },\r\n  {\r\n    name: 'kuyruk',\r\n    value: 3,\r\n  },\r\n];\r\nconst currentNotifications = [\r\n  {\r\n    name: 'mesaj',\r\n    value: 27,\r\n  },\r\n  {\r\n    name: 'kuyruk',\r\n    value: 12,\r\n  },\r\n];\r\nconst delayedNotifications = [\r\n  {\r\n    name: 'mesaj',\r\n    value: 1,\r\n  },\r\n  {\r\n    name: 'kuyruk',\r\n    value: 0,\r\n  },\r\n];","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Error404 from './Pages/404';\r\nimport Login from './Auth/Login';\r\nimport AgentStatus from './Pages/AgentStatus';\r\nimport Register from './Auth/Register';\r\nimport CallListening from './Pages/CallListeningReport';\r\nimport CallManagement from './Pages/CallManagement';\r\nimport DroppedCall from './Pages/DroppedCall';\r\nimport DidReport from './Pages/DIDReport';\r\nimport ForgotPasswordPage from './Auth/ForgotPassword';\r\nimport { PrivateRouteLogin } from './Private/PrivateRouteLogin';\r\nimport { NotPrivateRoute } from './Private/NotPrivateRoute';\r\nimport ServiceLevel from './Pages/ServiceLevel';\r\nimport { AbandonedQueues } from './Pages/AbandonedQueues';\r\nimport RepetetiveCalls from './Pages/RepetetiveCalls';\r\nimport WallBoard from './Pages/WallBoard';\r\nimport DailyLog from './Pages/DailyLog';\r\nimport DailyAcc from './Pages/DailyAcc';\r\nimport CallComparison from './Pages/CallComparison';\r\nimport MonthlyLog from './Pages/MonthlyLog';\r\n// import ReturnedDropCall from './Pages/ReturnedDropCall';\r\nimport AgentCDR from './Pages/AgentSessionReport';\r\nimport IYS from './Pages/IYS';\r\nimport Users from './Pages/MicrosoftTeams/Users';\r\nimport MonthlyDetails from './Pages/MonthlyDetails';\r\nimport QueueAnswerReport from './Pages/QueueAnswerReport';\r\nimport AbondenedCalls from './Pages/AbondenedCalls';\r\nimport CallTerminationReport from './Pages/CallTerminationReport';\r\nimport AgentCdrReport from './Pages/AgentCdrReport';\r\nimport DailySumaryReport from './Pages/DailySummaryReport';\r\nimport InternalsSummaryReport from './Pages/InternalsSummaryReport';\r\nimport CallLog from './Pages/CallLog';\r\nimport QualityReport from './Pages/QualityReport';\r\nimport './index.css';\r\nimport CallTransferReport from './Pages/CallTransferReport';\r\nimport EditBreaks from './Pages/EditBreaks';\r\nimport UserSettings from './Pages/UserSettings/UserSettings';\r\nimport DepartmansSettigns from './Pages/DepartmansSettingns/DepartmansSettigns';\r\nimport Account from './Pages/Account';\r\n\r\n\r\nconst Routes = () => {\r\n  const location = useLocation();\r\n\r\n  if (location.pathname === '' || location.pathname === '/') {\r\n    return <Redirect to={'/dashboard'} />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <NotPrivateRoute path=\"/reports/agentcdr\" component={AgentCDR} />\r\n        {/* <NotPrivateRoute path=\"/reports/returned-dropcall\" component={ReturnedDropCall} /> */}\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <NotPrivateRoute path=\"/wallboard\" component={WallBoard} />\r\n        <NotPrivateRoute path=\"/reports/calltransferreport\" component={CallTransferReport} />\r\n        <NotPrivateRoute path=\"/reports/callLog\" component={CallLog} />\r\n        <NotPrivateRoute path=\"/reports/calllistening\" component={CallListening}/>\r\n        <NotPrivateRoute path=\"/reports/callmanagement\" component={CallManagement}/>\r\n        <NotPrivateRoute path=\"/reports/servicelevel\" component={ServiceLevel} />\r\n        <NotPrivateRoute path=\"/reports/agentstatus\" component={AgentStatus} />\r\n        <NotPrivateRoute path=\"/reports/callcomparison\" component={CallComparison} />\r\n        <NotPrivateRoute path=\"/signup\" component={Register} />\r\n        <NotPrivateRoute path=\"/reports/repetetive-calls\" component={RepetetiveCalls} />\r\n        <NotPrivateRoute path=\"/forgot-password\" component={ForgotPasswordPage} />\r\n        <NotPrivateRoute path=\"/reports/abandoned-queues\" component={AbandonedQueues} />\r\n        <NotPrivateRoute path=\"/reports/dailylog\" component={DailyLog} />\r\n        <NotPrivateRoute path=\"/reports/dailyacc\" component={DailyAcc} />\r\n        <NotPrivateRoute path=\"/reports/didreport\" component={DidReport} />\r\n        <NotPrivateRoute path=\"/reports/monthlylog\" component={MonthlyLog} />\r\n        <NotPrivateRoute path=\"/reports/droppedcall\" component={DroppedCall} />\r\n        <NotPrivateRoute path=\"/settings/editbreaks\" component={EditBreaks} />\r\n        <NotPrivateRoute path=\"/settings/usersettings\" component={UserSettings} />\r\n        <NotPrivateRoute path=\"/settings/departmentsettings\" component={DepartmansSettigns} />\r\n        <NotPrivateRoute path=\"/iys/called-number\" component={IYS} />\r\n        <NotPrivateRoute path=\"/teams/users\" component={Users} />\r\n        <NotPrivateRoute path=\"/reports/monthlyDetails\" component={MonthlyDetails} />\r\n        <NotPrivateRoute path=\"/reports/quality-report\" component={QualityReport}/>\r\n        <NotPrivateRoute path=\"/reports/queueanswerreport\" component={QueueAnswerReport} />\r\n        <NotPrivateRoute path=\"/reports/abondenedcalls\" component={AbondenedCalls} />\r\n        <NotPrivateRoute path=\"/reports/calltermination\" component={CallTerminationReport} />\r\n        <NotPrivateRoute path=\"/reports/agentcdrreport\" component={AgentCdrReport} />\r\n        <NotPrivateRoute path=\"/reports/internalssummary\" component={InternalsSummaryReport} />\r\n        <NotPrivateRoute path=\"/reports/dailysummaryreport\" component={DailySumaryReport} />\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <NotPrivateRoute path=\"/account\" component={Account}/>\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport configureStore, { history } from './redux/store';\r\nimport AppWrapper from './@jumbo/components/AppWrapper';\r\nimport AppContextProvider from './@jumbo/components/contextProvider/AppContextProvider';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport Routes from './routes';\r\n\r\nexport const store = configureStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <AppContextProvider>\r\n        <AppWrapper>\r\n          <Switch>\r\n            <Routes />\r\n          </Switch>\r\n        </AppWrapper>\r\n      </AppContextProvider>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Chrome_Logo.d60a042e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Firefox_Logo.5ab3328a.svg\";"],"sourceRoot":""}