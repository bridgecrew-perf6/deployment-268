{"version":3,"sources":["redux/reducers/Common.js","@jumbo/constants/ActionTypes.js","redux/reducers/Auth.js","redux/reducers/index.js","redux/store/index.js","theme/GlobalCss.js","@jumbo/constants/ThemeOptions.js","theme/defaultTheme.js","@jumbo/components/contextProvider/AppContextProvider/defaultContext.js","@jumbo/components/contextProvider/AppContextProvider/AppContext.js","i18n/entries/en_EN.js","i18n/entries/tr_TR.js","i18n/entries/nl_NL.js","i18n/index.js","i18n/entries/de_DE.js","redux/actions/Common.js","redux/actions/Auth.js","services/auth/index.js","services/auth/Basic/index.js","@coremat/CmtLayouts/LayoutContext.js","@coremat/CmtLayouts/Vertical/LayoutContextProvider/index.js","@coremat/CmtLayouts/Vertical/MainContainer.style.js","@coremat/CmtLayouts/Vertical/MainContainer.js","@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext.js","@coremat/CmtHelpers/JssHelper.js","@coremat/CmtLayouts/SidebarThemeContext/sidebarThemeColors.js","@coremat/CmtLayouts/SidebarThemeContext/index.js","@coremat/CmtLayouts/Vertical/index.js","@coremat/CmtLayouts/Vertical/Header.js","@coremat/CmtLayouts/Vertical/SidebarToggleHandler.js","@coremat/CmtImage/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/data.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/LanguageItem.js","@coremat/CmtCard/index.js","@coremat/CmtTypography/CmtTitle/index.js","@coremat/CmtTypography/CmtSubTitle/index.js","@coremat/CmtTypography/CmtContentHead/index.js","@coremat/CmtDropdownMenu/index.js","@coremat/CmtCard/CmtCardHeader.style.js","@coremat/CmtCard/CmtCardHeader.js","@coremat/CmtList/ListFooter.js","@coremat/CmtList/ListView.js","@coremat/CmtList/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/index.js","@coremat/CmtCard/CmtCardContent.js","@coremat/CmtGridView/GridView.js","@coremat/CmtGridView/GridFooter.js","@coremat/CmtGridView/index.js","@coremat/CmtAvatar/index.style.js","@coremat/CmtAvatar/index.js","@jumbo/components/AppLayout/partials/Header/AppsMenu.js","@coremat/CmtMediaObject/index.style.js","@coremat/CmtMediaObject/index.js","@jumbo/utils/dateHelper.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/NotificationItem.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/index.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/MessageItem.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/index.js","@jumbo/components/AppLayout/partials/Logo.js","@coremat/CmtSearch/index.style.js","@coremat/CmtSearch/index.js","@jumbo/components/AppLayout/partials/SearchPopover.js","@jumbo/components/AppLayout/partials/Header/index.js","@coremat/CmtLayouts/Vertical/Sidebar.style.js","@coremat/CmtDrawer/index.js","@coremat/CmtLayouts/Vertical/Sidebar.js","@jumbo/components/AppLayout/partials/SidebarHeader.js","@coremat/CmtNavigation/Vertical/NavMenuItem.js","@coremat/CmtNavigation/Vertical/NavCollapse.js","@coremat/CmtNavigation/Vertical/NavSection.js","@coremat/CmtNavigation/Vertical/index.js","@jumbo/utils/IntlMessages.js","@jumbo/components/AppLayout/partials/menus.js","@jumbo/components/AppLayout/partials/SideBar/index.js","@coremat/CmtLayouts/Vertical/Content.js","@jumbo/components/PageComponents/PageLoader.js","@jumbo/components/ContentLoader/index.js","@coremat/CmtLayouts/Vertical/Footer.js","@jumbo/components/AppLayout/partials/FooterLogo.js","@jumbo/components/AppLayout/partials/Footer.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalDefault/index.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalMinimal/index.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/Alerts.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/ActionBarDrawer.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/index.js","@coremat/CmtLayouts/Horizontal/LayoutContextProvider/index.js","@coremat/CmtLayouts/Horizontal/MainContainer.style.js","@coremat/CmtLayouts/Horizontal/MainContainer.js","@coremat/CmtLayouts/Horizontal/index.js","@coremat/CmtLayouts/Horizontal/Header/HeaderNav.js","@coremat/CmtLayouts/Horizontal/Header/HeaderTop.js","@coremat/CmtLayouts/Horizontal/Header/HeaderMain.js","@jumbo/components/AppLayout/partials/Header/HeaderLogin/index.js","@coremat/CmtLayouts/Horizontal/SidebarToggleHandler.js","@jumbo/components/AppLayout/partials/UserDropDown.js","@jumbo/components/AppLayout/partials/GlobalSearchForm.js","@jumbo/components/AppLayout/partials/Header/HeaderTop/index.js","@coremat/CmtLayouts/Horizontal/Header/index.js","@coremat/CmtLayouts/Horizontal/Sidebar.js","@coremat/CmtLayouts/Horizontal/Content.js","@coremat/CmtLayouts/Horizontal/Footer.js","@coremat/CmtNavigation/Horizontal/NavMenuItem.js","@coremat/CmtNavigation/Horizontal/NavCollapse.style.js","@coremat/CmtNavigation/Horizontal/NavCollapse.js","@coremat/CmtNavigation/Horizontal/NavMega.style.js","@coremat/CmtNavigation/Horizontal/NavMega.js","@coremat/CmtNavigation/Horizontal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDefault/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/MainHeader.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderTopMenus.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.js","@jumbo/components/AppLayout/index.js","@jumbo/components/AppWrapper/index.js","@jumbo/utils/secureData.js","theme/themeColors.js","api/api.js","@jumbo/components/contextProvider/AppContextProvider/index.js","@jumbo/components/GridContainer/index.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@coremat/CmtCard/CmtCardFooter.js","@coremat/CmtAdvCard/index.style.js","@coremat/CmtAdvCard/index.js","@coremat/CmtAdvCard/CmtAdvCardContent.style.js","@coremat/CmtAdvCard/CmtAdvCardContent.js","@jumbo/components/Common/CryptoCard/CryptoCard.style.js","@jumbo/components/Common/DownloadApps/index.js","@jumbo/components/Common/CryptoCard/index.js","@jumbo/components/Common/CurrenyCalculator/index.js","@jumbo/components/Common/CodeViewerCard/MarkdownElement.js","@jumbo/components/Common/CodeViewerCard/HighlightedCode.js","@jumbo/utils/prism.js","@coremat/CmtCard/CmtCardActions.js","@jumbo/components/Common/CodeViewerCard/index.js","@jumbo/components/Common/StatisticsCard/index.js","routes/Pages/Dashboard/MissedCalls/MissedCallGraph.js","routes/Pages/Dashboard/MissedCalls/index.js","routes/Pages/Dashboard/InboundRules/InboundStyle.js","routes/Pages/Dashboard/InboundRules/InboundGraph.js","routes/Pages/Dashboard/InboundRules/index.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChart.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChartItem.js","routes/Pages/Dashboard/HeaderChartComponent/index.js","routes/Pages/Dashboard/OutboundCall/OutboundGraph.js","routes/Pages/Dashboard/OutboundCall/index.js","@jumbo/components/Common/CounterCard/index.js","routes/Pages/Dashboard/Extensions/index.js","routes/Pages/Dashboard/TrunksUp/index.js","routes/Pages/Dashboard/ActiveCallCount/index.js","services/auth/logout/index.js","routes/Pages/Dashboard/Tops/DashboardTop5AnsweredCalls.js","routes/Pages/Dashboard/Tops/DashboardTop5Inbound.js","routes/Pages/Dashboard/Tops/DashboardTop5Outbound.js","routes/Pages/Dashboard/Tops/DashboardTop5TalkTime.js","routes/Pages/Dashboard/Tops/index.js","routes/Pages/Dashboard/index.js","routes/Pages/404/index.js","@jumbo/components/Common/authComponents/AuthWrapper.js","@jumbo/components/Common/authComponents/SignIn.js","@jumbo/constants/AppConstants.js","routes/Auth/Login.js","@jumbo/utils/DataGridLocales.js","routes/Pages/AgentStatus/Table/index.js","@jumbo/components/Common/authComponents/SignUp.js","routes/Auth/Register.js","routes/Pages/CallListeningReport/Filter/DateFilter/index.js","routes/Pages/CallListeningReport/Filter/Filters/index.js","routes/Pages/CallListeningReport/Filter/index.js","routes/Pages/CallListeningReport/SendAudioRecords/index.js","@jumbo/utils/AudioWaveForm.js","routes/Pages/CallListeningReport/Table/index.js","@jumbo/utils/FavoriteReports.js","routes/Pages/CallManagement/Filter/DateFilter/index.js","routes/Pages/CallManagement/Filter/Filters/index.js","routes/Pages/CallManagement/Filter/index.js","routes/Pages/CallManagement/CallDetails/index.js","routes/Pages/CallManagement/CallSurvey/SurveyQuestions.js","routes/Pages/CallManagement/CallSurvey/MailBodySurvey.js","routes/Pages/CallManagement/CallSurvey/index.js","routes/Pages/CallManagement/Table/Tag.js","routes/Pages/CallManagement/Table/Score.js","routes/Pages/CallManagement/Table/SurveyScore.js","routes/Pages/CallManagement/Table/index.js","routes/Pages/DroppedCall/Filter/DateFilter/index.js","routes/Pages/DroppedCall/Filter/index.js","routes/Pages/DroppedCall/Table/index.js","routes/Pages/DroppedCall/index.js","routes/Pages/DIDReport/Filter/DateFilter/index.js","routes/Pages/DIDReport/Filter/index.js","routes/Pages/DIDReport/Modals/TotalCallModal.js","routes/Pages/DIDReport/Modals/AnsweredCallModal.js","routes/Pages/DIDReport/Modals/NonAnsweredCallModal.js","routes/Pages/DIDReport/Table/index.js","routes/Pages/DIDReport/index.js","@jumbo/components/Common/authComponents/ForgotPassword.js","routes/Auth/ForgotPassword.js","routes/Private/PrivateRouteLogin.js","routes/Private/NotPrivateRoute.js","routes/Pages/ServiceLevel/Filter/DateFilter/index.js","routes/Pages/ServiceLevel/Filter/index.js","routes/Pages/ServiceLevel/Table/index.js","routes/Pages/ServiceLevel/index.js","routes/Pages/AbandonedQueues/Filter/DateFilter/index.js","routes/Pages/AbandonedQueues/Filter/index.js","routes/Pages/AbandonedQueues/Table/index.js","routes/Pages/RepetetiveCalls/Filter/DateFilter/index.js","routes/Pages/RepetetiveCalls/Filter/index.js","routes/Pages/RepetetiveCalls/AllCalls/index.js","routes/Pages/RepetetiveCalls/Model/index.js","routes/Pages/RepetetiveCalls/AnsweredCalls/index.js","routes/Pages/RepetetiveCalls/index.js","routes/Pages/WallBoard/QueueList/index.js","routes/Pages/WallBoard/AgentConnection/index.js","routes/Pages/WallBoard/AgentStatus/AgentStatus.js","routes/Pages/WallBoard/CallDetail/index.js","routes/Pages/WallBoard/AgentDetail/index.js","routes/Pages/WallBoard/index.js","routes/Pages/DailyLog/Filter/index.js","routes/Pages/DailyLog/Table/index.js","routes/Pages/DailyLog/Chart/index.js","routes/Pages/DailyLog/index.js","routes/Pages/DailyAcc/Filter/index.js","routes/Pages/DailyAcc/Chart/index.js","routes/Pages/DailyAcc/index.js","routes/Pages/CallComparison/Table/index.js","routes/Pages/CallComparison/Graph/index.js","routes/Pages/CallComparison/Filter/index.js","routes/Pages/CallComparison/index.js","routes/Pages/MonthlyLog/Filter/index.js","routes/Pages/MonthlyLog/Graph/graph.js","routes/Pages/MonthlyLog/Graph/index.js","routes/Pages/MonthlyLog/Table/index.js","routes/Pages/MonthlyLog/index.js","routes/Pages/AgentSessionReport/Filter/DateFilter/index.js","routes/Pages/AgentSessionReport/Filter/index.js","routes/Pages/AgentSessionReport/Table/index.js","routes/Pages/AgentSessionReport/Model/index.js","routes/Pages/AgentSessionReport/index.js","routes/Pages/IYS/Filter/index.js","routes/Pages/IYS/Table/index.js","routes/Pages/IYS/index.js","routes/Pages/MonthlyDetails/Filter/index.js","routes/Pages/MonthlyDetails/Table/index.js","routes/Pages/MonthlyDetails/Detail/index.js","routes/Pages/MonthlyDetails/index.js","routes/Pages/QueueAnswerReport/Filter/DateFilter/index.js","routes/Pages/QueueAnswerReport/Filter/index.js","routes/Pages/QueueAnswerReport/Table/index.js","routes/Pages/AbondenedCalls/Filter/DateFilter/index.js","routes/Pages/AbondenedCalls/Filter/index.js","routes/Pages/AbondenedCalls/Table/index.js","routes/Pages/CallTerminationReport/Filter/DateFilter/index.js","routes/Pages/CallTerminationReport/Filter/Filters/index.js","routes/Pages/CallTerminationReport/Filter/index.js","routes/Pages/CallTerminationReport/Table/index.js","routes/Pages/DailySummaryReport/Filter/DateFilter/index.js","routes/Pages/DailySummaryReport/Filter/index.js","routes/Pages/DailySummaryReport/Modals/TotalCallModal.js","routes/Pages/DailySummaryReport/Modals/AnsweredCallModal.js","routes/Pages/DailySummaryReport/Modals/AbondenedCallModal.js","routes/Pages/DailySummaryReport/Modals/TransferCallModal.js","routes/Pages/DailySummaryReport/Modals/OutOfTimeModal.js","routes/Pages/DailySummaryReport/Modals/RonaCallModla.js","routes/Pages/DailySummaryReport/Modals/OutCallModal.js","routes/Pages/DailySummaryReport/Table/index.js","routes/Pages/InternalsSummaryReport/Filter/DateFilter/index.js","routes/Pages/InternalsSummaryReport/Filter/index.js","routes/Pages/InternalsSummaryReport/Table/index.js","routes/Pages/CallLog/Filter/DateFilter/index.js","routes/Pages/CallLog/Filter/Filters/index.js","routes/Pages/CallLog/Filter/index.js","routes/Pages/CallLog/CallDetails/index.js","routes/Pages/CallLog/Table/index.js","routes/Pages/QualityReport/Filter/DateFilter/index.js","routes/Pages/QualityReport/Filter/Filters/index.js","routes/Pages/QualityReport/Filter/index.js","routes/Pages/QualityReport/Table/index.js","routes/Pages/CallTransferReport/Filter/DateFilter/index.js","routes/Pages/CallTransferReport/Filter/index.js","routes/Pages/CallTransferReport/Table/index.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakNameModal.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakTimeModal.js","routes/Pages/UserSettings/UserDepartmans/UserDepartmans.js","routes/Pages/UserSettings/UserTable/AddUserModal.js","routes/Pages/UserSettings/UserTable/UpdateUserModal.js","routes/Pages/UserSettings/UserTable/UserTable.js","routes/Pages/RoleSettings/RoleTable/AddRoleModal.js","routes/Pages/RoleSettings/RoleTable/UpdateRoleModal.js","routes/Pages/RoleSettings/RoleTable/index.js","routes/Pages/DepartmansSettingns/TagTable/AddTagModal.js","routes/Pages/DepartmansSettingns/TagTable/UpdateTagModal.js","routes/Pages/DepartmansSettingns/TagTable/TagTable.js","routes/Pages/DepartmansSettingns/DepartmentQueues/DepartmentQueues.js","routes/Pages/DepartmansSettingns/DeportmentTable/AddDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/UpdateDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/DepartmantTable.js","routes/Pages/Account/index.js","routes/Pages/AuditLog/Filter/DateFilter/index.js","routes/Pages/AuditLog/Filter/Filters/index.js","routes/Pages/AuditLog/Filter/index.js","routes/Pages/AuditLog/Table/index.js","routes/Pages/AuditLog/index.js","routes/index.js","routes/Pages/AgentStatus/index.js","routes/Pages/Campaigns/index.js","routes/Pages/CallLog/index.js","routes/Pages/CallListeningReport/index.js","routes/Pages/CallManagement/index.js","routes/Pages/CallTransferReport/index.js","routes/Pages/InternalsSummaryReport/index.js","routes/Pages/DailySummaryReport/index.js","routes/Pages/QueueAnswerReport/index.js","routes/Pages/AbandonedQueues/index.js","routes/Pages/AbondenedCalls/index.js","routes/Pages/CallTerminationReport/index.js","routes/Pages/QualityReport/index.js","routes/Pages/EditBreaks/index.js","routes/Pages/DepartmansSettingns/DepartmansSettigns.js","routes/Pages/UserSettings/UserSettings.js","routes/Pages/RoleSettings/index.js","routes/Pages/MicrosoftTeams/Users/index.js","App.js","serviceWorker.js","index.js","assets/Chrome_Logo.svg","assets/Firefox_Logo.svg"],"names":["INIT_STATE","initialURL","error","message","loading","state","action","type","payload","authUser","loadUser","send_forget_password_email","history","combineReducers","router","connectRouter","common","Common","auth","Auth","createBrowserHistory","routeMiddleware","routerMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","store","createStore","reducers","thunk","HEADER_TYPE","SIDEBAR_TYPE","THEME_TYPES","LAYOUT_TYPES","breakpoints","createBreakpoints","values","xs","sm","md","lg","xl","theme","spacing","direction","palette","black","white","dark","primary","indigo","secondary","pink","sidebar","bgColor","textColor","textDarkColor","textActiveColor","navHoverBgColor","navActiveBgColor","borderColor","horizontalNav","navigationColor","navigationActiveColor","menuHoverBgColor","menuActiveBgColor","background","paper","default","text","disabled","hint","btn","hover","lightBtn","main","popupColor","status","danger","typography","fontFamily","fontWeightExtraLight","fontWeightLight","fontWeightRegular","fontWeightBold","fontWeightExtraBold","overrides","MuiTypography","h1","fontSize","fontWeight","up","h2","h3","h4","h5","h6","letterSpacing","subtitle1","subtitle2","body1","body2","MuiButton","root","MuiToggleButton","borderRadius","MuiCardLg","MuiCard","boxShadow","MuiTab","textColorPrimary","color","MuiPopover","backgroundColor","MuiDialog","defaultLng","localStorage","getItem","navigator","language","languageId","locale","name","icon","getLang","layout","layoutType","themeType","drawerBreakPoint","headerType","sidebarType","isSidebarFixed","sidebarWidth","showFooter","AppContext","React","createContext","defaultContext","setLocale","enLang","messages","enMessages","saLang","saMessages","nlLang","nlMessages","AppLocale","en","tr","trLang","de","deMessages","nl","paddingClasses","marginClasses","count","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","marginRight","marginTop","marginBottom","globalStyles","makeStyles","boxSizing","margin","padding","a","textDecoration","pointerEvents","cursor","down","img","maxWidth","minHeight","overflowX","width","overflowY","border","whiteSpace","flex","display","flexDirection","alignItems","outline","transition","zIndex","flexWrap","darken","alpha","backgroundImage","fetchSuccess","dispatch","fetchError","setAuthUser","user","updateLoadUser","setForgetPassMailSent","AuhMethods","basic","onLogin","email","password","setTimeout","onLogout","removeItem","getAuthUser","loaded","JSON","parse","onForgotPassword","getSocialMediaIcons","Fragment","LayoutContext","LAYOUT_STYLES","SIDEBAR_TYPES","HEADER_TYPES","sidebarFixed","headerFixed","LayoutContextProvider","props","location","useLocation","useState","layoutStyle","setLayoutStyle","setSidebarType","isSidebarOpen","setSidebarOpen","setHeaderType","showHeader","setShowHeader","setShowFooter","setSidebarWidth","setSidebarFixed","miniSidebarWidth","setMiniSidebarWidth","actionSidebarWidth","setActionSidebarWidth","useEffect","params","URLSearchParams","search","get","layoutContextValue","useMemo","showTourOpt","document","body","classList","remove","add","Provider","value","children","useStyles","appRoot","height","position","top","right","left","bottom","borderTopLeftRadius","appMain","appInnerRoot","appMainContainer","overflow","MainContainer","header","footer","className","rest","useContext","footerType","useTheme","isDrawer","useMediaQuery","headerClasses","setHeaderClasses","footerClasses","setFooterClasses","sidebarClasses","setSidebarClasses","classes","newClasses","push","clsx","Box","cloneElement","SidebarThemeContext","getBackgroundStyle","gradientDirection","backgroundRepeat","backgroundPosition","backgroundSize","Array","isArray","length","toString","split","join","getOverLayStyle","overlay","colors","opacity","getSeparatorStyle","separator","topBorder","borderWidth","borderStyle","borderTop","borderBottom","hexToRgba","input","replace","test","Error","first","second","last","toUpperCase","parseInt","isUrlInChildren","parent","url","i","link","includes","themeSidebarColor","light","darkThemeSetting","SidebarThemeProvider","activeTheme","setActiveTheme","sidebarContextValue","backgroundStyle","overlayStyle","sidebarTheme","setSidebarTheme","CmtVerticalLayout","layoutOptions","prototype","PropTypes","object","defaultProps","appHeader","CmtHeader","AppBar","SidebarToggleHandler","restProps","IconButton","onClick","CmtImage","alt","altValue","languageData","flags","LanguageItem","src","ml","cardOverlay","CmtCard","cardProps","backgroundStyles","overlayStyles","headerRef","useRef","childrenWithProps","Children","map","child","isValidElement","render","ref","Card","onMouseEnter","current","onHeaderMouseEntered","onMouseLeave","onHeaderMouseLeft","style","CmtTitle","content","titleProps","Typography","variant","component","CmtSubTitle","subTitleProps","gutterBottom","headRoot","avatar","headerContent","CmtContentHead","title","subTitle","titleStyle","subTitleStyle","memo","CmtDropdownMenu","TriggerComponent","items","onItemClick","anchorEl","setAnchorEl","menuItems","setMenuItems","open","Boolean","closeMenu","event","stopPropagation","currentTarget","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","item","index","MenuItem","key","selectedIndex","updatedItem","hasChange","newMenuItems","handleMenuItemClick","label","headerRoot","separatorStyles","headerAlignCenter","contentWidth","justifyContent","animationTimingFunction","transform","actionMenu","minWidth","actionMenuDefault","actionMenuAbsolute","textAlign","actionMenuHover","showActionMenu","animationName","animationDuration","hideActionMenu","showActionDefaultMenu","hideActionDefaultMenu","contentRef","createRef","ActionsMenu","actions","actionHandler","size","CmtCardHeader","forwardRef","actionMenuClassName","actionHandleIcon","actionsPos","actionsShowOnHover","alignCenter","showActions","setActionsVisibility","setContentWidth","contentHeadProps","showHideActionClass","headerRootClasses","menuRootClasses","menuRootActionsClasses","useImperativeHandle","clientWidth","listFooterRoot","listFooterLoaderRoot","ListFooter","footerText","CircularProgress","bool","string","ListView","renderRow","onEndReached","data","ListFooterComponent","ListEmptyComponent","useBottomScrollListener","getEmptyContainer","getFooterContainer","CmtList","footerProps","cardRoot","perfectScrollbarLanguage","menuItemRoot","popoverRoot","LanguageSwitcher","handleClose","id","undefined","switchLanguage","window","setItem","data-tut","Popover","CmtCardContent","CardContent","gridContainer","columnRow","itemPadding","columnCount","flexGrow","displayColumn","flexBasis","GridView","column","responsive","setDisplayColumn","getColumnCount","withWidth","footerWrapper","GridFooter","CmtGridView","getContrastText","amber","brown","red","green","blue","yellow","grey","orange","deepOrange","purple","customSize","small","medium","large","colorOptions","CmtAvatar","phCharLength","colorClass","Math","floor","random","sizeClass","classNames","placeHolderChar","substr","Avatar","iconRoot","applications","path","AppsMenu","useHistory","onClosePopOver","onClickApp","Tooltip","py","mt","appItem","mediaObject","mediaImageTop","alignSelf","mediaImageCenter","mediaImageBottom","rootAvatar","mediaBody","mediaHeader","mediaHeaderContent","mediaActions","mediaFooter","CmtMediaObject","avatarPos","avatarProps","onBodyClick","actionsComponent","contentProps","footerComponent","footerComponentProps","mr","clone","oneOfType","element","oneOf","func","getTotalSec","talkTime","hours","slice","minutes","seconds","getNewDate","date_","date","Date","year","getFullYear","month","getMonth","dt","getDate","getDateElements","dateSections","moment","format","day","time","datePart","trim","dateString","feedItemRoot","fade","titleRoot","icons","POSTING","SHARED_POST","INVITATION","BIRTHDAY","NotificationItem","profile_pic","metaData","post","getPostContent","owner","getSharedContent","group","getInvitationContent","getBirthdayContent","getTitle","counterRoot","warning","scrollbarRoot","headerNotifications","HeaderNotifications","counter","setCounter","pr","active","Badge","badgeContent","badge","p","subTitleRoot","textOverflow","MessageItem","HeaderMessages","Logo","Hidden","xsDown","to","smUp","menuButton","shape","align","searchIcon","inputRoot","inputInput","transitions","create","searchIconBox","CmtSearch","placeholder","iconPosition","onlyIcon","containerStyle","inputStyle","iconStyle","inputBaseStyle","inputBaseClasses","InputBase","inputProps","SearchPopover","iconClassName","popoverClassName","searchRoot","langRoot","borderLeft","iconBtn","Header","Toolbar","edge","aria-label","smDown","mdUp","appSidebar","appSidebarContent","actionSidebarWrapper","overlayRoot","drawerContainer","drawerContent","CmtDrawer","Drawer","CmtSidebarContent","CmtDrawerContent","CmtSidebar","actionBar","matches","hasDrawer","userInfo","userTitle","userSubTitle","SidebarHeader","useDispatch","handlePopoverClose","container","Paper","elevation","MenuList","navMenuItem","navMenuLink","borderTopRightRadius","borderBottomRightRadius","navText","NavMenuItem","allowedUrls","List","navCollapseBtn","navCollapse","navCollapseBtnInner","navArrow","navCollapseItem","visibility","NavCollapse","filteredChildrens","filter","e","isExpandable","setOpen","pathname","renderIcon","useCallback","MenuCollapse","ListItem","button","MenuItemChildren","Collapse","in","timeout","disablePadding","navHeader","textTransform","navSection","NavSection","OptionalPages","sideNavMenu","CmtVertical","menus","setMenus","setAllowedUrls","reportsArr","checkLS","storage","favorites","filtered","temp","addEventListener","removeEventListener","rolePages","allowedPagesArr","allowedUrlsArr","injectIntl","withRef","sidebarNavs","IntlMessages","Dashboard","StarRounded","Phone","ArrowForward","Assignment","Receipt","process","horizontalDefaultNavs","minimalHorizontalMenus","perfectScrollbarSidebar","SideBar","appMainContent","CmtContent","bgcolor","circularProgressRoot","PageLoader","SlideTransition","Slide","ContentLoader","useSelector","Snackbar","TransitionComponent","Alert","severity","appFooter","appFooterWrapper","CmtFooter","FooterLogo","logoUrl","btnRoot","Footer","showFooterOpt","VerticalDefault","VerticalMinimal","borderBottomLeftRadius","Alerts","iconMapping","success","minimalNoHeader","MinimalNoHeader","lgUp","actionSidebar","borderRight","divider","contentArea","ActionBarDrawer","activeOption","onIconClick","onDrawerClose","anchor","actionsList","initSidebarWidth","isDrawerOpen","setDrawerStatus","setActiveOption","setRolePages","Link","href","download","option","sidebarHeader","ModernSideBar","mdDown","CmtHorizontalLayout","headerNav","CmtHeaderNav","headerTop","CmtHeaderTop","headerMain","CmtHeaderMain","loginSection","HeaderLogin","Button","Divider","orientation","isOpen","profileRoot","UserDropDown","inputGroup","inputGroupAppend","GlobalSearchForm","showCategories","setShowCategories","onHideCategories","inputText","endIcon","HeaderTop","appMainContentWrapper","handleClick","from","subCollapse","removeHistoryListening","listen","disableGutters","navMega","navMegaBtn","navMegaBtnInner","navMegaColumnsWrapper","navMegaColumn","navMegaColumnInner","navMegaColumnLabel","RenderIcon","NavMegaColumn","navMegaColumnItems","NavMega","totalItems","MenuItemColumns","horizontalNavMenu","CmtHorizontal","HorizontalDefault","appHeaderDark","borderLeftColor","HeaderMain","HorizontalDark","MainHeader","HorizontalMinimal","HeaderTopMenus","HorizontalTopMenu","AppLayout","showLayoutLoader","setLayoutLoader","jss","plugins","jssPreset","rtl","AppWrapper","muiTheme","createTheme","ThemeProvider","utils","MomentUtils","StylesProvider","CssBaseline","decryptData","ciphertext","salt","bytes","CryptoJS","AES","decrypt","enc","Utf8","err","semiDarkTheme","darkTheme","lightTheme","validationUrl","appsettings","appUrl","port","appPort","addZero","val","getOffset","axios","timeOffset","getInboundCalls","param","query","token","getDidData","getDidDataCount","getDidNumbers","getMonthlyDetails","getMonthlyTotal","getAgentList","getMissedCalls","getOutboundCalls","getQueue","getRepetetiveAll","limit","allCallOffset","queue","didNumber","paramStart","paramFinish","getRepetetiveAllCount","getRepetetiveCallerDetails","callerNumber","getMontlyLog","paramMonth","paramBack","getCallComparison","paramDate","getCallComparisonDaily","getDailyLog","getDailyLogTable","getRepetetiveAnswered","answeredCallsOffset","getRepetetiveAnsweredCount","getAbondenedCalls","agent","startDate","endDate","getAbondenedCallDetails","from_userpart","newfromuserpart","getAbandonedQueueCalls","getServiceLevel","getDropCall","offset","getDropCallSummary","getDropCallCount","sendMail","emailAddress","mailSubject","mailBody","isHtml","directory","dirs","tempPath","tempAttch","attachment","toMail","subjact","getRecordingBytes","dir","filename","encodeURIComponent","fetch","getPath","getQueueList","getAgentConnection","getAgentStatus","pass","getAgentNumber","getAgentDigitCount","getQueueNumber","getDailyCallDetails","mydate","getTotalCall","startTime","endTime","getTotalCallByDate","dst_dn","getBreakTime","getBreakName","digits","min","max","setBreakName","breakName","breakId","setBreakTime","breakTime","breakNumber","getAgentDetails","agentNum","getAgentSession","agNum","qNum","getAgentSessionClicked","getInternalBreakTime","getAgentNumberV16","encrypt","response","getIYSReport","startdate","enddate","getTeamsUsers","getCsOnlineVoiceRoutingPolicy","getCsTenantDialplan","getCsTeamsCallingPolicy","changeCsTeamsCallingPolicy","changeCsVoiceRoutingPolicy","changeCsTenantDiaplan","getUserDetailsByUserId","getQueueAnswerReport","queueNum","order","getQueueAnswerReportCount","getQueueAnswerReportSummary","getQueueAnswerReportSummaryTotal","getDailySummary","getDailySummaryTotal","getInternalsSummary","getInternalsSummaryLongestCalled","getInternalsSummaryLongestCaller","getInternalsSummaryLongestCalledAmount","getInternalsSummaryLongestCallerAmount","getAgentTotalCall","cte","getWallBoardVoiceMail","getWallBoardLongTime","getVersion","getWallBoardWaitingTime","getCallLog","getCallLogTotal","getCallLogTotalSummary","getCallLogCount","getDashboardTops","getCallDetail","callid","getDidReportTotalCall","didNo","getDidReportAnsweredCall","getDidReportNonAnsweredCall","getDailySummaryModalTotalCall","getDailySummaryModalAnsweredCall","getDailySummaryModalOutOfTime","getDailySummaryModalAbondenedCall","getDailySummaryModalTransferCall","getDailySummaryModalRonaCall","getCallTransferReport","selectedStartTime","selectedEndTime","getDailySummaryModalOutCall","getUsers","getUsersRoleByName","addUser","userName","updateUser","deleteUserByUserId","userId","getRoles","getPagesOfRole","rolename","getRolenames","addRole","roleName","allowedPages","updateRole","oldrolename","deleteRoleByRolename","getDepartmants","addDepartmant","updateDepartmant","getQueues","getDepOwnedQueues","depId","addDepOwnedQueues","queueId","deleteDepOwnedQueues","deleteDepOwnedAllQueues","deleteUserAllDepsWithDepId","deleteDepWithDepId","getUserOwndedDeps","addUserOwndedDeps","deleteUserOwndedDeps","deleteUserOwndedDepsByUserId","getAgentsRecordListenAuth","setAgentsRecordListenAuthByAgentId","agentId","changeAgentStatus","agentDn","getTagsByCallId","callId","getTagtextByCallId","TagByID","tag","headers","getCallScoresByCallId","getSurveyScoresByCallId","ScoreByID","rating","SubmitSurveyByID","score","answersStr","getTagTypes","addTagTypes","depName","tagMessage","setTagTypes","deleteTag","getQualityReport","startTimeApi","endTimeApi","agentNo","agentName","agentNameFilter","getQualityReportCount","changeSessionStatus","stringify","qstatus","getBreakNums","getDailyActiveCalls","getTerminatedCallsByAgent","start_time","end_time","callTerminator","getTerminatedCallsByAgentCount","getAuditLog","username","getAuditLogCount","setAuditLog","activity","cryptedData","toISOString","getExpireDate","initialThemeValue","otherThemes","AppContextProvider","setTheme","setThemeType","setLayout","cardRadius","setCardRadius","setDirection","showTourGuide","setTourGuideStatus","recordLoading","setRecordLoading","contextValue","prevState","setAttribute","then","resp","dn","company","charAt","newTitle","role","accessablepages","GridContainer","Grid","pageHeaderRoot","PageHeader","heading","breadcrumbComponent","mb","textSm","linkBlock","PageBreadcrumbs","Breadcrumbs","isActive","pxToRem","contentSidebar","flexShrink","pageFull","PageContainer","breadcrumbs","mountOnEnter","unmountOnExit","footerRoot","CmtCardFooter","advCardRoot","deepPurple","CmtAdvCard","advCardContent","gridOrder1","gridOrder2","CmtAdvCardContent","extraContent","columnSizes","reverseDir","alignCenterClass","blockClasses","blockFirst","blockSecond","extraContentRender","cardHeaderRoot","CryptoCard","amount","progress","headerSubTitle","textPrimary","mbSpace","wordBreak","WebkitOverflowScrolling","lineHeight","WebkitFontSmoothing","fill","borderCollapse","borderSpacing","fontWeightMedium","font","verticalAlign","maxHeight","flip","MarkdownElement","renderedMarkdown","other","more","dangerouslySetInnerHTML","__html","code","renderedCode","prismLanguage","prism","languages","tsx","jsx","diff","deleted","highlight","card","cardContent","cardContentInner","actionButtons","collapseStyle","cardHeader","cardBody","chartTitle","chartSubTitle","tooltip","MissedCallGraph","labelStyle","x1","y1","x2","y2","stopColor","stopOpacity","dataKey","strokeWidth","stackId","stroke","fillOpacity","MissedCall","handleChange","getDay","setParam","start","calculateYearOfTheDay","aria-controls","aria-haspopup","aria-expanded","Dehaze","MenuListProps","DateRange","total","InboundGraph","InboundRules","HeaderChart","canvas","ctx","getContext","_stroke","countInbound","countOutbound","countMissed","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","inbound","outbound","missed","labels","datasets","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","options","legend","scales","yAxes","ticks","beginAtZero","HeaderChartItem","searchAction","searchActionBar","cardContentRoot","badgeRoot","optionList","SiteTraffic","list","PhoneForwarded","OutboundGraph","OutboundCall","containerRoot","containerRootCenter","contentRoot","contentRootCenter","CounterCard","number","numberProps","labelProps","counterProps","end","useEasing","TasksCounterCard","extensions","setExtensions","api","activeExtension","totalExtension","GroupOutlined","String","Trunks","paramtotal","paramTrunksUp","totalTrunks","setTotalTrunks","trunksUp","setTrunksUp","ActiveCallCount","setactiveCount","Logout","DashboardTop5AnsweredCalls","convertTimeToApiString","timeString","setDate","toLocaleDateString","setStartTime","setEndTime","setData","selectedTime","setSelectedTime","selectTimeString","display_name","LinearProgress","ButtonGroup","DashboardTop5Inbound","DashboardTop5Outbound","DashboardTop5TalkTime","totalseconds","sum","checkDots","QueryBuilder","DashboardTops","orderLg1","SamplePage","totalInbound","totalOutbound","totalMissed","inboundcalls","setInbound","outboundcalls","setOutbound","missedcalls","setMissedCalls","convertToLocalTime","catch","inboundObject","outboundObject","missedObject","times","d","some","fetchData","array","arr","sort","b","MissedCalls","Extensions","HeaderChartComponent","errorNumber","textShadow","Error404","authWrap","authCard","AuthWrapper","expdate","setExpDate","diffTime","expiredate","diffDays","ceil","AlertTitle","authThumb","authContent","textFieldRoot","formcontrolLabelRoot","SignIn","method","wrapperVariant","loginState","setLoginState","myDate","onSubmit","encryptedData","encryptData","tomorrow","getTime","NotificationManager","addNotification","setVersion","browser","regexp","userAgent","chrome","version","preventDefault","TextField","fullWidth","onChange","target","defaultValue","underline","protocol","hostname","GoogleChrome","sx","Firefox","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Login","localeText","toolbarExport","toolbarExportPrint","toolbarExportCSV","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnMenuFilter","columnMenuHideColumn","columnMenuShowColumns","noRowsLabel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","AgentTable","rows","setReloadValues","setValue","setAgentId","curentLanguage","useIntl","field","headerName","renderCell","Switch","checked","res","handleChangeStatus","handleChangeRecordAuth","CloudDownload","columns","pageSize","rowsPerPageOptions","componentsProps","pagination","labelRowsPerPage","textCapital","textAcc","alrTextRoot","SignUp","setName","setEmail","setPassword","onRegister","Register","CallLogDateFilter","setStartTimeApi","setEndTimeApi","dateFilterOpen","setDateFilterOpen","timeFilterValue","setTimeFilterValue","setHours","setStartDate","setEndDate","dateFormat","setMonth","setFullYear","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","labelId","dateAdapter","AdapterDateFns","enLocale","nlLocale","trLocale","deLocale","DatePicker","newValue","renderInput","inputVariant","maxDate","minDate","CallLogtherFilters","setDirectionApi","setSourceFilterText","setDestinationFilterText","setQueueDn","setAnswerStatus","que","setQueues","queues","filtersOpen","setFiltersOpen","directionSelect","setDirectionSelect","sourceFilterSelect","setSourceFilterSelect","sourceFilterTextValue","setSourceFilterTextValue","targetFilterSelect","setTargetFilterSelect","targetFilterTextValue","setTargetFilterTextValue","stateSelect","setStateSelect","advancedFilter","setAdvancedFilter","queueSelect","setQueueSelect","helperText","multiple","renderValue","Checkbox","indexOf","CallListeningFilter","setCount","directionApi","directionSql","setDirectionSql","sourceFilterText","sourceFilterNumber","setSourceNumber","destinationFilterNumber","setDestinationFilterNumber","destinationFilterText","setDidNumber","queueDn","sourceDnMin","setSourceDnMin","sourceDnMax","setSourceDnMax","destinationDnMin","setDestinationDnMin","destinationDnMax","setDestinationDnMax","sourceDnLike","setSourceDnLike","destinationDnLike","setDestinationDnLike","answerStatus","answerStatusSql","setAnswerStatusSql","stringCount","startsWith","setLoading","result","SendAudioRecords","my","records","required","LoadingButton","loadingPosition","AudioWaveForm","buffer","waveformRef","wavesurfer","playing","setPlay","volume","setVolume","duration","setDuration","currentTime","setCurrentTime","waveColor","progressColor","cursorColor","barWidth","barRadius","barHeight","barGap","WaveSurfer","loadBlob","Blob","wav","WaveFile","Uint8Array","fromIMAADPCM","newBuf","toBuffer","on","formatDuration","round","getDuration","getCurrentTime","isPlaying","destroy","minute","secondLeft","TinyText","styled","Stack","playPause","htmlColor","Slider","newVolume","step","CallListeningTable","setLimit","setOffset","page","setPage","listenedRecords","setListenedRecords","setPath","record","setRecord","openAudioModal","setOpenAudioModal","getCorrectFilesHour","copyarr","hour","hourIndex","lastIndexOf","newtime","splice","num","row","arrayBuffer","prev","PlayArrow","blob","createElement","URL","createObjectURL","click","GetApp","AccessTime","find","q","Check","PhoneDisabled","tabledata","recording_url","srcDid","src_did","caller","src_display_name","src_dn","called","dst_display_name","salable","statusofcall","mode","allDirs","setAllDirs","mailMenu","setMailMenu","Modal","lighten","getHoverBackgroundColor","disableSelectionOnClick","getRowClassName","rowHeight","hideFooter","checkboxSelection","onSelectionModelChange","ids","selectedIDs","Set","selectedRecords","reduce","has","TablePagination","backIconButtonProps","nextIconButtonProps","rowsPerPage","backIconButtonText","onPageChange","newPage","onRowsPerPageChange","FavoriteReports","reportId","favorite","setFavorite","placement","arrow","enterDelay","leaveDelay","Rating","tempArr","dispatchEvent","Event","setScore","setTagFilter","setTagsList","tagsList","scoreSelect","setScoreSelect","tagSelect","setTagSelect","tagmassage","CallManagementFilter","CallManagementCallDetail","tags","setTags","setRating","tagtext","Chip","questions","question","point","MailBodySurvey","rawdata","Object","entries","answer","CallSurvey","startSurvey","setStartSurvey","survey","setSurvey","btnLoading","setBtnLoading","questionsArray","questionsObjFormik","supervisorId","AnswersToObject","note","html","renderToStaticMarkup","initialValues","answers","v","replaceAll","handleSubmit","flexItem","RadioGroup","FormControlLabel","control","Radio","startIcon","str","Tag","call_id","tagValue","setTagValue","Score","reloadValues","callScore","setCallScore","GetScoreName","SurveyScore","surveyScore","setSurveyScore","CallManagementTable","scoreFilter","tagFilter","rightMenu","setRightMenu","callIdEye","setCallIdEye","byteLength","tableData","setTableData","allRequests","forEach","Promise","resolve","reject","all","isTaggable","nonTaggableCallTypes","callType","DropCallLogDateFilter","Filter","setResponse","setResponseSummary","formatDate","getHours","getMinutes","dateDifference","today","setParams","queueList","q_num","totalcalls","summary","summarydetails","DataTable","datalist","responseSummary","time_start","time_end","ringing_time","ring_time","handleDowlandButtonClick","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","total_call","toFixed","DroppedCall","DidReportDateFilter","setSelectedStartTime","setSelectedEndTime","bullet","pos","didNumbers","setDidNumbers","FormControl","InputLabel","Select","did","conditiondata","TotalCallModal","handleTotalCallClose","datas","answer_time","talk_time","lang","AnsweredCallModal","handleAnsweredCallClose","NonAnsweredCallModal","handleOutCallClose","startEndDate","table","total_did_number","total_did","did_not_answered","did_answered","answered","hourToSecond","secondToTime","currentLanguage","dataGridRows","did_number","act","handleTotalCallClick","handleNonAnsweredCallClick","handleAnsweredCallClick","PhoneInTalk","totalCallStyle","totalCallModalOpen","setTotalCallOpen","setDidNo","didno","answeredCallModalOpen","setAnsweredCallOpen","nonAnsweredCallModalOpen","setNonAnsweredCallOpen","handleNonAnsweredCallClose","DIDReport","queryCount","alertRoot","ForgotPassword","timeOutStopper","clearTimeout","ForgotPasswordPage","PrivateRouteLogin","Component","NotPrivateRoute","exptime","now","ServiceLevelDateFilter","yesterday","queuelist","setQueueList","setQueue","handleChangeQueue","queueCheck","cnt","level","createData","ring","parseFloat","percent","csvData","ServiceLevel","AbondenedQueuesDateFilter","setResponseCount","responseCount","waiting","RepadativeCallsDateFilter","setallcalls","answeredLimit","setAnsweredCalls","setResponseCaller","setAllCallCount","setAnsweredCallCount","didList","setDidList","AllCalls","allcalls","setCallerNumber","allCallCount","exportAllOpen","setExpotAllOpen","tabIndex","Model","responseCaller","AnsweredCalls","answeredcalls","setAnsweredLimit","answeredCallCount","RepetetiveCalls","setAllCallOffset","setAnsweredCallOffset","pageAnswered","setPageAnswered","answeredCalls","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","QueueList","setQueueAmaunt","queAmaunt","waitingNumber","intervalId","setInterval","clearInterval","waitingTime","substring","queuName","queueNumber","AgentConnection","setCallAmaunt","setAgentAmaunt","setAgentNum","setAgentName","callAmount","connectionNumber","setAgentNumFunction","agentNumber","connectionTime","AgentStatus","setBreakeAgentAmount","setLoginAgentAmount","breakStates","breakeAgenAmaunt","loginAgentAmaunt","states","onClickUptateValuesFunction","statustime","CallDetail","queueAmaunt","callAmaunt","agentAmaunt","breakeAgentAmaunt","dateFilter","setDateFilter","setCallType","convertTime","convertReadableTime","agent_to_agent_totaltime","inbound_totaltime","outbound_totaltime","queue_totaltime","totaltime","inbound_calls","outbound_calls","agent_to_agent_calls","queue_calls","answered_inbound_calls","getAverageTime","average","temptime","totalSec","AgentDetail","totalcall","answered_call","inbound_call_to_agent","outbound_call_to_agent","inboundtotaltime","outboundtotaltime","inboundaverage","outboundaverage","agentDetail","setAgentDetail","voiceMail","setVoiceMail","longTime","setLongTime","setWaitingTime","longestCalleds","setLongestCalleds","longestCallers","setLongestCallers","longestCalledAmount","setLongestAmount","longestCallerAmount","setLongestCallerAmount","Tabs","Tab","a11yProps","TabPanel","en_cok_aranan_numara","en_cok_arayan_numara","en_uzun_aranan_süre","en_uzun_aranan_numara","en_uzun_arayan_numara","hidden","WallBoard","callDetailVisible","setCallDetailVisible","setResponseTable","responseTable","totalCall","hour_log","totalMin","Chart","maximum","o","useScreenshot","quality","takeScreenShot","image","extension","createFileName","domain","angle","strokeDasharray","itemStyle","DailyLog","CustomTooltip","timezone","acc","allowDecimals","dot","DailyAcc","day_log","unit","totalTime","averageTime","timeToSecond","scope","Graph","setGraphData","setResponseDaily","showTime","select","setSelect","choice","tempResponse","respdata","DayLog","Count","TotalHour","TotalMinutes","TotalSeconds","Hour","Act","labelArray","reverse","daylog","totalDataArray","totalMins","totalSeconds","el","j","CallComparison","responseDaily","graphData","selectedMonth","setSelectedMonth","setSum","months","selectboxdata","resultArray","tempArray","date_trunc","customTooltip","ApplicationsGraph","pieData","toplam","nameKey","cx","cy","isAnimationActive","outerRadius","entry","aylar","formatDateExcel","toInteger","MonthlyLog","AgentSessionReportDateFilter","setAgentSession","qnum","setQnum","setAgent","setClickedResponse","clickedAgent","responseBreak","setResponseBreak","break","agentSelect","setAgentSelect","breakSelect","setBreakSelect","handleChangeQueueSelect","handleChangeAgentSelect","handleBreakChange","agentSession","setClickedAgent","z","ag_num","state_time","escapetime","last_state_date","lastlogout","lastlogin","clickedResponse","keys","logout","m8072","m8073","m8074","m8075","m8076","m8077","m8078","m8079","AgentCDR","ampm","disableFuture","CardActions","getSeconds","issuetime","IYS","setTotalAgent","setTotalDid","selectedDate","views","setSelectedDate","setCsvData","returnedTime","param1","param2","Param1Array","Param2Array","calculateAverage","timeArray","averageSecond","totaloutbound","totalinbound","answeredinb","durationcalls","durationinbound","durationoutbound","averageTotal","averageInbound","averageOutbound","averageinbound","averageoutbound","inds","Detail","totalAgent","totalDid","calldid","agentcall","MonthlyDetails","responseTotal","queryTotal","lastDay","resps","QueueAnswerReportDateFilter","setSummary","setSummaryTotal","setQueueNum","setSrc","setOrder","summed","totalDetails","setRowsPerPage","summaryTotal","dataUnit","dst_start_time","waiting_time","talking","AbondenedCallsDateFilter","setColor","agents","setAgents","detail","setDetail","call","calls","detailPromises","userpart","from_displayname","details","timeofevent","Row","hasDetail","colSpan","deta","ins","dst_end_time","calltime","CallTerminationReportDateFilter","CallTerminationReportFilters","setCallTerminator","sourceSelect","setSourceSelect","CallTerminationReportFilter","setTotalCount","CallTerminationReportTable","totalCount","DailySummaryDateFilter","DailySummaryReportFilter","setDataTotal","AbondenedCallModal","handleAbondenedCallClose","TransferCallModal","handleTransferCallClose","transferer","trasfered","OutOfTimeModal","handleOutOfTimeClose","RonaCallModla","handleRonaCallClose","OutCallModal","DailySummaryReportTable","dataTotal","datetime","answeredRate","inboundtime","waitingtime","averageconnection","abondened","transfer","long_time","zdisi","average_abondened_waiting","rona","outbound_time","average_outbound_time","inboundTime","longestTime","outOfTime","averageAbondenedWaiting","outboundTotalTime","outboundAverageTime","totalCallDate","setTotalCallDate","answeredCallDate","setAnsweredCallDate","abondenedCallModalOpen","setAbondenedCallOpen","abondenedCallDate","setAbondenedCallDate","handleAbondenedCallClick","transferCallModalOpen","setTransferCallOpen","transferCallDate","setTransferCallDate","handleTransferCallClick","outOfTimeModalOpen","setOutOfTimeModalOpen","outOfTimeDate","setOutOfTimeDate","handleOutOfTimeClick","ronaCallModalOpen","setRonaCallOpen","ronaCallDate","setRonaCallDate","handleRonaCallClick","outCallModalOpen","setOutCallOpen","outCallDate","setOutCallDate","handleOutCallClick","answeringSpeed","waitingTotal","totalwaiting","padStart","InternalSummaryDateFilter","InternalsSummaryReportFilter","seletAgent","setSelectAgent","total_inbound","total_outbound","marginBlock","InternalsSummaryReportTable","selectedAgent","setSelectedAgent","modalOpen","setModalOpen","handleOpenModal","handleCloseModal","longestBreakTime","setLongestBreakTime","answered_inbound","unanswered_inbound","answered_outbound","unanswered_outbound","hide","ArrowBack","components","GridToolbarFilterButton","to_char","durationSelect","setDurationSelect","durationMin","durationMax","durationMinMax","setDurationMinMax","handleDurationChange","InputProps","endAdornment","InputAdornment","CallLogFilter","setTotalData","setResponseTotalSummary","durationSql","setDurationSql","totalString","stringTotalSummary","CallLogCallDetail","detailContainerStyle","setTotalTime","ms","totalRingTime","setTotalRingTime","totalTalkTime","setTotalTalkTime","tempRingTime","tempTalkTime","callers","calleds","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","px","CallLogTable","totalData","responseTotalSummary","coalesce","Clear","not_answered","transfered","totalduration","averageduration","QualityReportDateFilter","disableMaskedInput","maxDateTime","minDateTime","QualityReportFilters","setAgentNo","MenuProps","selected","gap","QualityFilters","QualityTable","nonRepeatingArr","copyArr","ani","timeofinsertion","voters","averageScores","setAverageScores","totalScoreByAgent","totalVotesByAgent","totalVote","averageScore","setVoters","float","CallTransferReportDateFilter","setTotal","totalring","totalTalk","convertSec","sec","BreaksChangeBreakNameModal","selectedBreakName","handleBreakNameModalClose","newName","setNewName","rep","BreaksChangeBreakTimeModal","logouttype","period","handleBreakTimeModalClose","newTime","setNewTime","UserDepartmans","users","setUsers","deps","setDeps","userOwnedDeps","setUserOwnedDeps","selectedUserId","setSelectedUserId","resArr","department_id","dep","handleCheckboxClick","AddUserModal","addHandleClose","roles","setRoles","setUserName","showPassword","setShowPassword","userType","setUserType","m","htmlFor","OutlinedInput","VisibilityOff","UpdateUserModal","updateHandleClose","selectedUser","UserTable","addModal","setAddModal","updateModal","setUpdateModal","setSelectedUser","handleClickEdit","res1","res2","AddRoleModal","setRoleName","setAllowedPages","labelPlacement","handleChecked","UpdateRoleModal","selectedRole","RoleTable","setSelectedRole","AddTagModal","setReloadTags","departments","setDepartments","setDepId","setDepName","tagName","setTagName","departmentName","UpdateTagModal","selectedTag","department","tagtypes_id","TagTable","reloadTags","setSelectedTag","DepartmentQueues","depOwnedQueues","setDepOwnedQueues","selectedDepId","setSelectedDepId","queue_id","AddDepartmanModal","UpdateDepartmanModal","selectedDep","DepartmantTable","setSelectedDep","res3","Account","setCompany","setUser","flexbox","newNotifications","currentNotifications","delayedNotifications","AuditLogDateFilter","AuditLogFilters","setUsername","AuditLogFiter","AuditLogTable","actiontime","pageuser","AuditLog","responseStatus","recordAuths","agent_num","recordAuth","record_listen","dataValue","displayname","agentState","Input","scheduleBtnLoading","setScheduleBtnLoading","queuesList","setQueuesList","formik","useFormik","campaignName","csvfile","wavfile","ringtime","setMinutes","channelCount","anons","ivrMenu","repeatCallsCount","console","log","schedule","unsuccess","sended","notSended","callAgain","unanswered","LocalizationProvider","adapterLocale","DateTimePicker","inputFormat","setFieldValue","accept","files","TimePicker","mask","DidReport","setTotalCall","totalCallRate","setTotalCallRate","totalanswered","waiting_act","count1","breaks","setBreaks","breakNameModalopen","setBreakNameModalOpen","selectedBreakId","setSelectedBreakId","setSelectedBreakName","handleClickName","breakTimeModalopen","setBreakTimeModalOpen","selectedLogoutType","setSelectedLogoutType","selectedBreakTime","setSelectedBreakTime","handleClickTime","logoutType","nameobj","iddn","selecetedUser","onlineVoiceRoutingPolicy","tenantDialPlan","teamsCallingPolicy","userPrincibleName","selectedUserDetails","setSelectedUserDetails","voiceRoutingPolicys","setVoiceRoutingPolicys","selectedvoiceRoutingPolicy","setSelectedvoiceRoutingPolicy","tenantDiaplans","setTenantDiaplan","selectedTenantDiaplans","setSelectedTenantDiaplans","teamsCallingPolicys","setTeamsCallingPolicy","selectedTeamsCallingPolicy","setSelectedTeamsCallingPolicy","handleChangeUserEmail","callingPolicy","AccordionActions","policyName","voiceRoutingPolicy","tenantDiaplan","teanantDiaPlan","Routes","filteredPages","setFilteredPages","App","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fc033269.chunk.js","sourcesContent":["import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  initialURL: '/',\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return { ...state, error: '', message: '', loading: true };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return { ...state, error: '', loading: false, message: action.payload };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return { ...state, loading: false, message: '', error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SHOW_MESSAGE = 'show_message';\r\nexport const HIDE_MESSAGE = 'hide_message';\r\nexport const FETCH_START = 'fetch_start';\r\nexport const FETCH_SUCCESS = 'fetch_success';\r\nexport const FETCH_ERROR = 'fetch_error';\r\n\r\nexport const UPDATE_AUTH_USER = 'update_auth_user';\r\nexport const UPDATE_LOAD_USER = 'update_load_user';\r\nexport const SEND_FORGET_PASSWORD_EMAIL = 'send_forget_password_email';\r\nexport const SIGNIN_GOOGLE_USER_SUCCESS = 'signin_google_user_success';\r\nexport const SIGNIN_FACEBOOK_USER_SUCCESS = 'signin_facebook_user_success';\r\nexport const SIGNIN_TWITTER_USER_SUCCESS = 'signin_twitter_user_success';\r\nexport const SIGNIN_GITHUB_USER_SUCCESS = 'signin_github_user_SUCCESS';\r\nexport const SIGNIN_USER_SUCCESS = 'signin_user_success';\r\nexport const SIGNOUT_USER_SUCCESS = 'signout_user_success';\r\n\r\nexport const SET_DASHBOARD_DATA = 'set_dashboard_data';\r\n\r\nexport const SET_TASK_CURRENT_USER = 'set_task_current_user';\r\nexport const SET_TASKS_DATA = 'set_tasks_data';\r\nexport const SET_TASK_LIST_DATA = 'set_task_list_data';\r\nexport const ADD_TASK = 'add_task';\r\nexport const DELETE_TASK = 'delete_task';\r\nexport const UPDATE_TASK = 'update_task';\r\nexport const SET_FILTER_DATA = 'set_filter_data';\r\nexport const ADD_TASK_LIST = 'add_task_list';\r\nexport const UPDATE_TASK_LIST = 'update_task_list';\r\nexport const DELETE_TASK_LIST = 'delete_task_list';\r\nexport const SET_TASK_DETAIL = 'set_task_detail';\r\nexport const SEND_MESSAGE = 'send_message';\r\nexport const TOGGLE_SIDEBAR_COLLAPSED = 'toggle_sidebar_collapsed';\r\nexport const GET_TASKS_COUNTS = 'get_tasks_counts';\r\n\r\nexport const GET_LABELS_LIST = 'get_labels_list';\r\nexport const GET_CONNECTIONS_LIST = 'get_connections_list';\r\nexport const GET_MAILS_LIST = 'get_mails_list';\r\nexport const UPDATE_MAIL_FOLDER = 'update_mail_folder';\r\nexport const UPDATE_MAIL_LABEL = 'upade_mail_label';\r\nexport const UPDATE_FAVORITE_STATUS = 'update_favorite_status';\r\nexport const UPDATE_READ_STATUS = 'update_read_status';\r\nexport const UPDATE_IMPORTANT_STATUS = 'update_important_status';\r\nexport const COMPOSE_MAIL = 'compose_mail';\r\nexport const SET_FILTER_TYPE = 'set_filter_type';\r\nexport const GET_SELECTED_MAIL = 'GET_SELECTED_MAIL';\r\nexport const UPDATE_SELECTED_MAIL = 'update_selected_mail';\r\nexport const NULLIFY_SELECTED_MAIL = 'nullify_selected_mail';\r\nexport const REPLY_TO_MAIL = 'reply_to_mail';\r\nexport const GET_MAIL_COUNTS = 'get_mail_count';\r\nexport const ADD_LABEL = 'add_label';\r\nexport const ADD_CONNECTION = 'add_connection';\r\nexport const REMOVE_CONNECTION = 'remove_connection';\r\n\r\nexport const SET_CHAT_USERS = 'set_chat_users';\r\nexport const SET_CONTACT_USERS = 'set_contact_users';\r\nexport const SET_CURRENT_USER = 'set_current_user';\r\nexport const SET_CONVERSATION_DATA = 'set_conversation_data';\r\nexport const SEND_NEW_CHAT_MESSAGE = 'send_new_chat_message';\r\nexport const SEND_NEW_MEDIA_MESSAGE = 'send_new_media_message';\r\n\r\nexport const GET_CONTACTS_LIST = 'get_contacts_list';\r\nexport const SET_CURRENT_CONTACT = 'set_current_contact';\r\nexport const CREATE_CONTACT = 'create_contact';\r\nexport const UPDATE_STARRED_STATUS = 'update_starred_status';\r\nexport const DELETE_CONTACT = 'delete_contact';\r\nexport const UPDATE_CONTACT_LABEL = 'update_contact_label';\r\nexport const UPDATE_CONTACT = 'update_contact';\r\nexport const GET_CONTACT_COUNTS = 'get_contact_counts';\r\nexport const UPDATE_LABEL_ITEM = 'update_label_item';\r\nexport const DELETE_LABEL_ITEM = 'delete_label_item';\r\n\r\nexport const GET_USER_DETAIL = 'get_user_detail';\r\nexport const GET_FEED_POSTS = 'get_feed_posts';\r\nexport const CREATE_POST = 'create_post';\r\nexport const UPDATE_POST = 'update_post';\r\n\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const DELETE_BULK_USERS = 'DELETE_BULK_USERS';\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  authUser: null,\r\n  loadUser: false,\r\n  send_forget_password_email: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loadUser: true,\r\n      };\r\n    }\r\n    case UPDATE_LOAD_USER: {\r\n      return {\r\n        ...state,\r\n        loadUser: action.payload,\r\n      };\r\n    }\r\n    case SEND_FORGET_PASSWORD_EMAIL: {\r\n      return {\r\n        ...state,\r\n        send_forget_password_email: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport Common from './Common';\r\nimport Auth from './Auth';\r\n\r\nexport default history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    common: Common,\r\n    auth: Auth,\r\n  });\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport reducers from '../reducers';\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const store = createStore(reducers(history), initialState, bindMiddleware([routeMiddleware, thunk]));\r\n  return store;\r\n}\r\nexport default configureStore;\r\nexport { history };\r\n","import { alpha, makeStyles, darken } from '@material-ui/core/styles';\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nlet paddingClasses = {};\r\nlet marginClasses = {};\r\nfor (let count = 1; count <= 8; count++) {\r\n  paddingClasses['.pt-' + count] = { paddingTop: count * 4 + 'px !important' };\r\n  paddingClasses['.pb-' + count] = { paddingBottom: count * 4 + 'px !important' };\r\n  paddingClasses['.pl-' + count] = { paddingLeft: count * 4 + 'px !important' };\r\n  paddingClasses['.pr-' + count] = { paddingRight: count * 4 + 'px !important' };\r\n  marginClasses[`.ml-${count}`] = { marginLeft: `${count * 4}px !important` };\r\n  marginClasses[`.mr-${count}`] = { marginRight: `${count * 4}px !important` };\r\n  marginClasses[`.mt-${count}`] = { marginTop: `${count * 4}px !important` };\r\n  marginClasses[`.mb-${count}`] = { marginBottom: `${count * 4}px !important` };\r\n}\r\n\r\nconst globalStyles = makeStyles(theme => ({\r\n  breakpoints,\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      '&:hover,&:focus': {\r\n        textDecoration: 'none',\r\n      },\r\n      '&.disable-link': {\r\n        pointerEvents: 'none',\r\n        cursor: 'default',\r\n        [theme.breakpoints.down('xs')]: {\r\n          pointerEvents: 'inherit',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n    },\r\n    '.pointer': {\r\n      cursor: 'pointer',\r\n    },\r\n    '.rounded': {\r\n      borderRadius: '50%',\r\n    },\r\n    '.Cmt-table-responsive': {\r\n      minHeight: '.01%',\r\n      overflowX: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n        marginBottom: 15,\r\n        overflowY: 'hidden',\r\n        border: `1px solid ${theme.palette.borderColor.main}`,\r\n        '& > table': {\r\n          marginBottom: 0,\r\n          '& > thead > tr > th': {\r\n            paddingTop: 8,\r\n          },\r\n          '& > thead > tr > th, > tbody > tr > th, > tfoot > tr > th, thead > tr > td, tbody > tr > td, tfoot > tr > td': {\r\n            whiteSpace: 'nowrap',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '.dropzone': {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(10, 5),\r\n      border: `2px dashed ${theme.palette.borderColor.main}`,\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default,\r\n      outline: 'none',\r\n      transition: 'border .24s ease-in-out',\r\n    },\r\n    '.swal2-shown .swal2-container': {\r\n      zIndex: 1104,\r\n    },\r\n    '.swal2-container .swal2-popup, .swal2-container .swal2-popup.swal2-toast': {\r\n      backgroundColor: theme.palette.popupColor.main,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-content, .swal2-container .swal2-title': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-footer a': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '.swal2-container .swal2-close:focus': {\r\n      outline: 'none',\r\n    },\r\n    '.rbc-calendar': {\r\n      flex: 1,\r\n      minHeight: 'calc(100vh - 200px)',\r\n      [theme.breakpoints.down('xs')]: {\r\n        minHeight: 400,\r\n      },\r\n      [theme.breakpoints.down(710)]: {\r\n        '& .rbc-toolbar': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexWrap: 'nowrap',\r\n          alignItems: 'flex-start',\r\n          '& .rbc-toolbar-label': {\r\n            margin: '8px 0',\r\n            padding: 0,\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down(500)]: {\r\n        '& .rbc-toolbar': {\r\n          fontSize: 12,\r\n          '& button': {\r\n            padding: '5px 10px',\r\n          },\r\n        },\r\n      },\r\n      '& .rbc-event': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        minHeight: 50,\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      '& .rbc-event.rbc-selected': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.3),\r\n      },\r\n      '& .rbc-slot-selection': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.7),\r\n      },\r\n      '& .rbc-toolbar button:active, & .rbc-toolbar button.rbc-active': {\r\n        color: theme.palette.common.white,\r\n        backgroundImage: 'none',\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button:active:hover, & .rbc-toolbar button.rbc-active:hover, & .rbc-toolbar button:active:focus, & .rbc-toolbar button.rbc-active:focus': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n      '& .rbc-toolbar button:focus, & .rbc-toolbar button:hover': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-month-row': {\r\n        minHeight: 100,\r\n      },\r\n      '& .rbc-off-range-bg': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      },\r\n    },\r\n    ...paddingClasses,\r\n    ...marginClasses,\r\n  },\r\n}));\r\n\r\nexport default globalStyles;\r\n","export const DRAWER_BREAK_POINT = {\r\n  SX: 'sx',\r\n  SM: 'sm',\r\n  MD: 'md',\r\n};\r\n\r\nexport const HEADER_TYPE = {\r\n  FIXED: 'fixed',\r\n  STATIC: 'static',\r\n};\r\n\r\nexport const SIDEBAR_TYPE = {\r\n  FULL: 'full',\r\n  MINI: 'mini',\r\n  DRAWER: 'drawer',\r\n};\r\nexport const Fonts = {\r\n  PRIMARY: 'Normal',\r\n};\r\n\r\nexport const THEME_TYPES = {\r\n  DARK: 'dark',\r\n  SEMI_DARK: 'semi-dark',\r\n  LIGHT: 'light',\r\n};\r\n\r\nexport const LAYOUT_STYLES = {\r\n  BOXED: 'boxed',\r\n  FULL_WIDTH: 'full-width',\r\n  FRAMED: 'framed',\r\n};\r\n\r\nexport const LAYOUT_TYPES = {\r\n  VERTICAL_DEFAULT: 'vertical-default',\r\n  VERTICAL_MINIMAL: 'vertical-minimal',\r\n  VERTICAL_MINIMAL_NO_HEADER: 'vertical-minimal-no-header',\r\n  VERTICAL_MODERN_SIDEBAR: 'vertical-modern-sidebar',\r\n  HORIZONTAL_DEFAULT: 'horizontal-default',\r\n  HORIZONTAL_DARK: 'horizontal-dark',\r\n  HORIZONTAL_MINIMAL: 'horizontal-minimal',\r\n  HORIZONTAL_TOP_MENU: 'horizontal-top-menu',\r\n};\r\n\r\nexport const SIDEBAR_WIDTH = {\r\n  SMALL: 280,\r\n  DEFAULT: 304,\r\n  WIDE: 330,\r\n};\r\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\nimport { Fonts } from '../@jumbo/constants/ThemeOptions';\r\nimport { indigo, pink } from '@material-ui/core/colors';\r\n\r\nconst breakpoints = createBreakpoints({\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920,\r\n  },\r\n});\r\n\r\nconst defaultTheme = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  spacing: 4,\r\n  direction: 'ltr',\r\n  palette: {\r\n    type: 'light',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n      dark: '#020202',\r\n    },\r\n    primary: indigo,\r\n    secondary: pink,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    btn: {\r\n      hover: 'rgba(0, 0, 0, 0.08)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n  typography: {\r\n    fontFamily: Fonts.PRIMARY,\r\n    fontWeightExtraLight: 200,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightBold: 'bold',\r\n    fontWeightExtraBold: 800,\r\n  },\r\n  overrides: {\r\n    MuiTypography: {\r\n      h1: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 22,\r\n        },\r\n      },\r\n      h2: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n      h3: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 18,\r\n        },\r\n      },\r\n      h4: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n      },\r\n      h5: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n      },\r\n      h6: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.5,\r\n      },\r\n      subtitle1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.15,\r\n      },\r\n      subtitle2: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.1,\r\n      },\r\n      body1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.5,\r\n      },\r\n      body2: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.25,\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1.25,\r\n        fontSize: 13,\r\n      },\r\n    },\r\n    MuiToggleButton: {\r\n      root: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiCardLg: {\r\n      root: {\r\n        borderRadius: 10,\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: 4,\r\n        boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n      },\r\n    },\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default defaultTheme;\r\n","import defaultTheme from '../../../../theme/defaultTheme';\r\nimport {\r\n  DRAWER_BREAK_POINT,\r\n  HEADER_TYPE,\r\n  LAYOUT_STYLES,\r\n  LAYOUT_TYPES,\r\n  SIDEBAR_TYPE,\r\n  SIDEBAR_WIDTH,\r\n  THEME_TYPES,\r\n} from '../../../constants/ThemeOptions';\r\nconst getLang = () => {\r\n  var defaultLanguage = localStorage.getItem('language') || navigator.language;\r\n  switch (defaultLanguage) {\r\n    case 'tr-TR':\r\n    case 'tr':\r\n    case 'turkish':\r\n      return {\r\n        languageId: 'turkish',\r\n        locale: 'tr',\r\n        name: 'Türkçe',\r\n        icon: 'tr',\r\n      };\r\n    case 'en-US':\r\n    case 'en':\r\n    case 'en-GB':\r\n    case 'english':\r\n      return {\r\n        languageId: 'english',\r\n        locale: 'en',\r\n        name: 'English',\r\n        icon: 'en',\r\n      };\r\n    case 'de-DE':\r\n    case 'de':\r\n    case 'de-AT':\r\n    case 'de-CH':\r\n    case 'de-LI':\r\n    case 'deutsche':\r\n      return {\r\n        languageId: 'deutsche',\r\n        locale: 'de',\r\n        name: 'Deutsche',\r\n        icon: 'de',\r\n      };\r\n    case 'nl':\r\n    case 'dutch':\r\n      return {\r\n        languageId: 'dutch',\r\n        locale: 'nl',\r\n        name: 'Dutch',\r\n        icon: 'nl',\r\n      };\r\n    default:\r\n      return {\r\n        languageId: 'turkish',\r\n        locale: 'tr',\r\n        name: 'Turkish',\r\n        icon: 'tr',\r\n      };\r\n  }\r\n};\r\nvar defaultLng = getLang();\r\nexport default {\r\n  theme: defaultTheme,\r\n  defaultLng,\r\n  layout: LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR,\r\n  layoutType: LAYOUT_STYLES.FULL_WIDTH,\r\n  themeType: THEME_TYPES.LIGHT,\r\n  drawerBreakPoint: DRAWER_BREAK_POINT.MD,\r\n  headerType: HEADER_TYPE.FIXED,\r\n  sidebarType: SIDEBAR_TYPE.FULL,\r\n  isSidebarFixed: true,\r\n  sidebarWidth: SIDEBAR_WIDTH.DEFAULT,\r\n  showFooter: false,\r\n};\r\n","import React from 'react';\r\nimport defaultContext from './defaultContext';\r\n\r\nconst AppContext = React.createContext({\r\n  locale: defaultContext.defaultLng,\r\n  setLocale: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import enMessages from '../locales/en_EN.json';\r\n\r\nconst enLang = {\r\n  messages: {\r\n    ...enMessages,\r\n  },\r\n  locale: 'en-EN',\r\n};\r\nexport default enLang;\r\n","import saMessages from '../locales/tr_TR.json';\r\n\r\nconst saLang = {\r\n  messages: {\r\n    ...saMessages,\r\n  },\r\n  locale: 'tr-TR',\r\n};\r\nexport default saLang;\r\n","import nlMessages from '../locales/nl_NL.json';\r\n\r\nconst nlLang = {\r\n  messages: {\r\n    ...nlMessages,\r\n  },\r\n  locale: 'nl-NL',\r\n};\r\nexport default nlLang;\r\n","import enLang from './entries/en_EN';\r\nimport trLang from './entries/tr_TR';\r\nimport nlLang from './entries/nl_NL';\r\nimport deLang from './entries/de_DE';\r\nconst AppLocale = {\r\n  en: enLang,\r\n  tr: trLang,\r\n  de: deLang,\r\n  nl: nlLang,\r\n};\r\n\r\nexport default AppLocale;","import deMessages from '../locales/de_DE.json';\r\n\r\nconst deLang = {\r\n  messages: {\r\n    ...deMessages,\r\n  },\r\n  locale: 'de-DE',\r\n};\r\nexport default deLang;\r\n","import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const fetchSuccess = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_SUCCESS,\r\n      payload: message || '',\r\n    });\r\n  };\r\n};\r\nexport const fetchError = error => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_ERROR,\r\n      payload: error,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStart = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_START,\r\n    });\r\n  };\r\n};\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const setAuthUser = user => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_AUTH_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLoadUser = loading => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_LOAD_USER,\r\n      payload: loading,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setForgetPassMailSent = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SEND_FORGET_PASSWORD_EMAIL,\r\n      payload: status,\r\n    });\r\n  };\r\n};\r\n","import BasicAuth from './Basic';\r\n\r\nexport const AuhMethods = {\r\n  basic: BasicAuth,\r\n};\r\n","import { fetchError, fetchStart, fetchSuccess } from '../../../redux/actions';\r\nimport { setAuthUser, setForgetPassMailSent, updateLoadUser } from '../../../redux/actions/Auth';\r\nimport React from 'react';\r\n\r\nexport const BasicAuth = {\r\n  onLogin: ({ email, password }) => {\r\n    return dispatch => {\r\n      try {\r\n        dispatch(fetchStart());\r\n\r\n        setTimeout(() => {\r\n          const user = { name: 'Admin', email: email, password: password };\r\n          dispatch(fetchSuccess());\r\n          dispatch(setAuthUser(user));\r\n        }, 300);\r\n      } catch (error) {\r\n        dispatch(fetchError(error.message));\r\n      }\r\n    };\r\n  },\r\n  onLogout: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      dispatch(fetchSuccess());\r\n      localStorage.removeItem('login');\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('username');\r\n      localStorage.removeItem('company');\r\n      localStorage.removeItem('digits');\r\n      localStorage.removeItem('exptime');\r\n      dispatch(setAuthUser(null));\r\n    };\r\n  },\r\n\r\n  getAuthUser: (loaded = false) => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n      dispatch(updateLoadUser(loaded));\r\n\r\n      setTimeout(() => {\r\n        dispatch(fetchSuccess());\r\n        dispatch(setAuthUser(JSON.parse(localStorage.getItem('user'))));\r\n      }, 300);\r\n    };\r\n  },\r\n\r\n  onForgotPassword: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(true));\r\n        dispatch(fetchSuccess());\r\n      }, 300);\r\n    };\r\n  },\r\n  getSocialMediaIcons: () => {\r\n    return <React.Fragment> </React.Fragment>;\r\n  },\r\n};\r\n\r\nexport default BasicAuth;\r\n","import React from 'react';\r\nconst LayoutContext = React.createContext();\r\nexport default LayoutContext;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const location = useLocation();\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false);\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  const [miniSidebarWidth, setMiniSidebarWidth] = useState(props.miniSidebarWidth ? props.miniSidebarWidth : 0);\r\n  const [actionSidebarWidth, setActionSidebarWidth] = useState(props.actionSidebarWidth ? props.actionSidebarWidth : 0);\r\n\r\n  useEffect(() => {\r\n    sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n    headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setLayoutStyle(params.get('layout-style'));\r\n    }\r\n  }, [location.search, props.headerType, props.isSidebarFixed]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      miniSidebarWidth,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n      setMiniSidebarWidth,\r\n      actionSidebarWidth,\r\n      setActionSidebarWidth,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      miniSidebarWidth,\r\n      actionSidebarWidth,\r\n      props.drawerBreakPoint,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.01s ease',\r\n    '&.Cmt-fixedHeaderLayout': {\r\n      '& $appMain': {\r\n        position: 'relative',\r\n        paddingTop: 72,\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingTop: '64px !important',\r\n        },\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: props.sidebarWidth,\r\n        zIndex: 9,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          left: 0,\r\n        },\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-fullFixedHeaderLayout': {\r\n      marginTop: 72,\r\n      height: 'calc(100vh - 72px)',\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: 64,\r\n        height: 'calc(100vh - 64px)',\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        width: '100%',\r\n      },\r\n    },\r\n    '&.Cmt-sidebar-fixed': {\r\n      '& .Cmt-sidebar': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 999,\r\n      },\r\n      '&.Cmt-drawer-sidebar': {\r\n        '& .Cmt-sidebar': {\r\n          position: 'relative',\r\n        },\r\n      },\r\n      '& .Cmt-actionSidebarWrapper': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 1103,\r\n        '& .Cmt-sidebar': {\r\n          position: 'static',\r\n        },\r\n      },\r\n    },\r\n    '& .Cmt-header .Cmt-toggle-menu': {\r\n      display: 'none',\r\n    },\r\n    '&.Cmt-miniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.miniSidebarWidth,\r\n        width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n        transition: 'all 0.01s ease',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.miniSidebarWidth + 20,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.miniSidebarWidth + 50,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-miniLayout': {\r\n      '& .Cmt-sidebar': {\r\n        width: props.miniSidebarWidth,\r\n      },\r\n    },\r\n    '&.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.sidebarWidth,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-drawerLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: 0,\r\n        width: '100%',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: 20,\r\n            width: 'calc(100% - 57px)',\r\n            right: 37,\r\n            top: 20,\r\n            borderTopLeftRadius: 12,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: 50,\r\n            width: 'calc(100% - 117px)',\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      '& .Cmt-header .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }),\r\n  appMain: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: `calc(100% - ${props.sidebarWidth}px)`,\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth,\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.miniSidebarWidth,\r\n    },\r\n    '.Cmt-drawerLayout &': {\r\n      width: '100%',\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-drawerLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: 0,\r\n    },\r\n    '.Cmt-fullMiniLayout &': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      width: `calc(100% - ${props.sidebarWidth + props.actionSidebarWidth}px)`,\r\n    },\r\n    '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth + props.actionSidebarWidth,\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      width: '100%',\r\n      '.Cmt-miniLayout &': {\r\n        width: '100%',\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: 0,\r\n      },\r\n      '.Cmt-drawerLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-fullMiniLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-modernLayout &': {\r\n        width: `100% !important`,\r\n      },\r\n      '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: '0 !important',\r\n      },\r\n    },\r\n  }),\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '.Cmt-sidebar-fixed &': {\r\n      flexDirection: 'column',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            position: 'sticky',\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout $appMain': {\r\n            paddingTop: 0,\r\n          },\r\n          '&.Cmt-miniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-drawerLayout.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, useContext, useEffect, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport useStyles from './MainContainer.style';\r\nimport { HEADER_TYPE } from '../../../@jumbo/constants/ThemeOptions';\r\n\r\nconst MainContainer = ({ header, sidebar, footer, children, className, ...rest }) => {\r\n  const {\r\n    headerType,\r\n    footerType,\r\n    sidebarType,\r\n    isSidebarOpen,\r\n    isSidebarFixed,\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  } = useContext(LayoutContext);\r\n\r\n  const theme = useTheme();\r\n  const isDrawer = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const [headerClasses, setHeaderClasses] = useState('');\r\n  const [footerClasses, setFooterClasses] = useState('');\r\n  const [sidebarClasses, setSidebarClasses] = useState('');\r\n\r\n  const classes = useStyles({\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!header) setHeaderClasses('');\r\n    else if (headerType === HEADER_TYPE.FIXED) setHeaderClasses('Cmt-fixedHeaderLayout');\r\n    else setHeaderClasses('');\r\n  }, [header, headerType]);\r\n\r\n  useEffect(() => {\r\n    if (!footer) setFooterClasses('');\r\n    else if (footerType === 'fixed') setFooterClasses('Cmt-FixedFooterLayout');\r\n    else setFooterClasses('');\r\n  }, [footer, footerType]);\r\n\r\n  useEffect(() => {\r\n    const newClasses = [];\r\n    if (!sidebar) newClasses.push('');\r\n    else if (sidebarType === 'drawer' || isDrawer) newClasses.push('Cmt-drawerLayout');\r\n    else if (sidebarType === 'mini') newClasses.push(isSidebarOpen ? 'Cmt-fullMiniLayout' : 'Cmt-miniLayout');\r\n\r\n    if (isSidebarFixed) newClasses.push('Cmt-sidebar-fixed');\r\n\r\n    setSidebarClasses(clsx(newClasses));\r\n  }, [sidebarType, isSidebarOpen, isDrawer, isSidebarFixed, sidebar]);\r\n\r\n  return (\r\n    <Box className={clsx(classes.appRoot, headerClasses, sidebarClasses, footerClasses, className)} {...rest}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {header && cloneElement(header, { type: headerType })}\r\n            {children}\r\n            {footer && cloneElement(footer, { type: footerType })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\nconst SidebarThemeContext = React.createContext();\r\n\r\nexport default SidebarThemeContext;\r\n","const pxToRem = (target, context = '10px') => {\r\n  return (target / context) * '1rem';\r\n};\r\n\r\nconst componentColors = [\r\n  'amber',\r\n  'brown',\r\n  'orange',\r\n  'purple',\r\n  'primary',\r\n  'red',\r\n  'green',\r\n  'blue',\r\n  'grey',\r\n  'yellow',\r\n  'secondary',\r\n];\r\n\r\nconst getBackgroundStyle = (backgroundColor, backgroundImage, gradientDirection) => {\r\n  if (backgroundImage)\r\n    return {\r\n      backgroundImage: `url(${backgroundImage})`,\r\n      backgroundRepeat: `no-repeat`,\r\n      backgroundPosition: `center center`,\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n  if (typeof backgroundColor === 'string' || (Array.isArray(backgroundColor) && backgroundColor.length === 1)) {\r\n    return { backgroundColor: backgroundColor.toString() };\r\n  }\r\n\r\n  if (Array.isArray(backgroundColor) && backgroundColor.length > 1) {\r\n    const [firstColor] = backgroundColor[0].split(' ');\r\n    return {\r\n      backgroundColor: firstColor,\r\n      backgroundImage: gradientDirection\r\n        ? `linear-gradient(${gradientDirection}, ${backgroundColor.join(', ')})`\r\n        : `linear-gradient(${backgroundColor.join(', ')})`,\r\n    };\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getOverLayStyle = overlay => {\r\n  if (overlay.colors) {\r\n    if (typeof overlay.colors === 'string' || (Array.isArray(overlay.colors) && overlay.colors.length === 1)) {\r\n      return {\r\n        backgroundColor: overlay.colors.toString(),\r\n        opacity: overlay.opacity,\r\n      };\r\n    } else if (Array.isArray(overlay.colors) && overlay.colors.length > 1) {\r\n      const [firstColor] = overlay.colors[0].split(' ');\r\n      return {\r\n        backgroundColor: firstColor,\r\n        backgroundImage: overlay.direction\r\n          ? `linear-gradient(${overlay.direction}, ${overlay.colors.join(', ')})`\r\n          : `linear-gradient(${overlay.colors.join(', ')})`,\r\n        opacity: overlay.opacity,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getSeparatorStyle = (separator, topBorder = false) => {\r\n  if (separator.color) {\r\n    const borderWidth = separator.borderWidth ? separator.borderWidth : 1;\r\n    const borderStyle = separator.borderStyle ? separator.borderStyle : 'solid';\r\n\r\n    if (topBorder) {\r\n      return {\r\n        borderTop: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n      };\r\n    }\r\n\r\n    return {\r\n      borderBottom: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst hexToRgba = input => {\r\n  input = input + '';\r\n  input = input.replace('#', '');\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error('input is not a valid hex color.');\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return parseInt(first, 16) + ', ' + parseInt(second, 16) + ', ' + parseInt(last, 16);\r\n};\r\n\r\nconst isUrlInChildren = (parent, url) => {\r\n  if (!parent.children) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < parent.children.length; i++) {\r\n    if (parent.children[i].children) {\r\n      if (isUrlInChildren(parent.children[i], url)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (parent.children[i].link === url || url.includes(parent.children[i].link)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { hexToRgba, pxToRem, componentColors, getBackgroundStyle, getOverLayStyle, getSeparatorStyle, isUrlInChildren };\r\n","export const sidebarLightTheme = {\r\n  bgColor: '#fff',\r\n  textColor: 'rgba(0, 0, 0, 0.6)',\r\n  textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n  textActiveColor: '#3f51b5',\r\n  navHoverBgColor: 'rgb(229, 229, 229)',\r\n  navActiveBgColor: 'rgb(239, 229, 253)',\r\n  borderColor: 'rgba(33, 33, 33, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarSemiDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nconst themeSidebarColor = {\r\n  light: sidebarLightTheme,\r\n  'semi-dark': sidebarSemiDarkTheme,\r\n  dark: sidebarDarkTheme,\r\n};\r\n\r\nexport default themeSidebarColor;\r\n","import React, { useState, useMemo, useEffect, useContext } from 'react';\r\n\r\nimport SidebarThemeContext from './SidebarThemeContext';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../../CmtHelpers/JssHelper';\r\nimport AppContext from '../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport themeSidebarColor from './sidebarThemeColors';\r\n\r\nconst darkThemeSetting = {\r\n  textColor: 'rgba(255, 255, 255, 0.7)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.3)',\r\n  navActiveBgColor: 'green',\r\n  borderColor: 'rgba(255, 255, 255, 0.2)',\r\n};\r\n\r\nconst SidebarThemeProvider = ({ children }) => {\r\n  const { themeType } = useContext(AppContext);\r\n  const [activeTheme, setActiveTheme] = useState({\r\n    ...themeSidebarColor[themeType],\r\n    backgroundColor: '',\r\n    backgroundImage: '',\r\n    gradientDirection: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activeTheme.backgroundImage) {\r\n      if (!activeTheme.backgroundColor) {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...darkThemeSetting,\r\n          backgroundColor: '#000',\r\n        });\r\n      }\r\n    } else {\r\n      if (activeTheme.backgroundColor === '#000') {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...themeSidebarColor[themeType],\r\n          backgroundColor: '',\r\n        });\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTheme.backgroundImage]);\r\n\r\n  useEffect(() => {\r\n    if (!activeTheme.backgroundColor && !activeTheme.backgroundImage) {\r\n      setActiveTheme({\r\n        ...themeSidebarColor[themeType],\r\n      });\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [themeType]);\r\n\r\n  const sidebarContextValue = useMemo(() => {\r\n    const backgroundStyle = getBackgroundStyle(\r\n      activeTheme.backgroundColor,\r\n      activeTheme.backgroundImage,\r\n      activeTheme.gradientDirection,\r\n    );\r\n    const overlayStyle = getOverLayStyle({\r\n      colors: activeTheme.backgroundColor,\r\n      opacity: 0.6,\r\n      direction: '180deg',\r\n    });\r\n\r\n    return {\r\n      sidebarTheme: activeTheme,\r\n      backgroundStyle: backgroundStyle,\r\n      overlayStyle: overlayStyle,\r\n      setSidebarTheme: setActiveTheme,\r\n    };\r\n  }, [activeTheme]);\r\n\r\n  return <SidebarThemeContext.Provider value={sidebarContextValue}>{children}</SidebarThemeContext.Provider>;\r\n};\r\n\r\nexport default SidebarThemeProvider;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtVerticalLayout = ({ layoutOptions, children, header, sidebar, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} sidebar={sidebar} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nCmtVerticalLayout.prototype = {\r\n  layoutOptions: PropTypes.object,\r\n};\r\n\r\nCmtVerticalLayout.defaultProps = {\r\n  layoutOptions: {},\r\n};\r\n\r\nexport default CmtVerticalLayout;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { className, children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={clsx(classes.appHeader, className, 'Cmt-header')}>\r\n      {children}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'LayoutHeader',\r\n};\r\nCmtHeader.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n  fullHeader: PropTypes.bool,\r\n};\r\n\r\nexport default CmtHeader;\r\n","import React, { useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst SidebarToggleHandler = ({ children, ...restProps }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" onClick={() => setSidebarOpen(!isSidebarOpen)} {...restProps}>\r\n      {children || <MenuIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\n\r\nconst CmtImage = ({ alt, ...restProps }) => {\r\n  const altValue = alt ? alt : '';\r\n  return <img alt={altValue} {...restProps} />;\r\n};\r\n\r\nexport default CmtImage;\r\n","export const languageData = [\r\n  {\r\n    languageId: 'turkish',\r\n    locale: 'tr',\r\n    name: 'Türkçe',\r\n    icon: 'tr',\r\n  },\r\n  {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'en',\r\n  },\r\n  {\r\n    languageId: 'dutch',\r\n    locale: 'nl',\r\n    name: 'Dutch',\r\n    icon: 'nl',\r\n  },\r\n  {\r\n    languageId: 'deutsche',\r\n    locale: 'de',\r\n    name: 'Deutsche',\r\n    icon: 'de',\r\n  },\r\n];\r\n\r\nexport const flags = {\r\n  tr: '/images/flag/icons8-tr.png',\r\n  en: '/images/flag/icons8-en.png',\r\n  nl: '/images/flag/icons8-nl.png',\r\n  de: '/images/flag/icons8-de.png',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '12px 24px',\r\n    '& .flag': {\r\n      fontSize: 30,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageItem = ({ language, onClick }) => {\r\n  const { locale, name } = language;\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.root, 'pointer')} onClick={() => onClick(language)}>\r\n      <CmtImage src={flags[locale]} />\r\n      <Box ml={3}>{name}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LanguageItem;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    height:'100%',\r\n    '& .Cmt-card-content': {\r\n      position: 'relative',\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtCard = ({ backgroundColor, backgroundImage, gradientDirection, overlay, className, children, ...cardProps }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={backgroundStyles}\r\n      {...cardProps}>\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtCard.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default CmtCard;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtTitle = ({ content, ...titleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...titleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'h2',\r\n  component: 'div',\r\n  className: null,\r\n};\r\n\r\nexport default CmtTitle;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtSubTitle = ({ content, ...subTitleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...subTitleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtSubTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtSubTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'subtitle1',\r\n  gutterBottom: true,\r\n};\r\n\r\nexport default CmtSubTitle;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headRoot: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 15,\r\n  },\r\n  headerContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction CmtContentHead({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  titleStyle,\r\n  subTitleStyle,\r\n  ...restProps\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.headRoot, 'Cmt-content-head')} {...restProps}>\r\n      {avatar && isValidElement(avatar) ? (\r\n        <div className={clsx(classes.avatar, 'Cmt-avatar')}>{avatar}</div>\r\n      ) : (\r\n        icon && <div className={clsx(classes.avatar, 'Cmt-avatar')}>{icon}</div>\r\n      )}\r\n      <div className={clsx(classes.headerContent, 'Cmt-header-content')}>\r\n        {title && <CmtTitle className={clsx(titleStyle, 'Cmt-title')} content={title} {...titleProps} />}\r\n\r\n        {subTitle && <CmtSubTitle className={clsx(subTitleStyle, 'Cmt-sub-title')} content={subTitle} {...subTitleProps} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCmtContentHead.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n  titleStyle: PropTypes.string,\r\n  subTitleStyle: PropTypes.string,\r\n};\r\n\r\nCmtContentHead.defaultProps = {\r\n  icon: null,\r\n  avatar: null,\r\n  title: null,\r\n  subTitle: null,\r\n  titleStyle: null,\r\n  subTitleStyle: null,\r\n  titleProps: { variant: 'h4', component: 'div' },\r\n  subTitleProps: { variant: 'subtitle2', component: 'p', gutterBottom: false },\r\n};\r\n\r\nexport default React.memo(CmtContentHead);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst CmtDropdownMenu = ({ TriggerComponent, items, onItemClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    setMenuItems(items);\r\n  }, [items]);\r\n\r\n  const openMenu = event => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (item, selectedIndex, event) => {\r\n    event.stopPropagation();\r\n    let updatedItem = { ...item };\r\n\r\n    if (item.onClick && typeof item.onClick === 'function') {\r\n      updatedItem = item.onClick(item);\r\n    } else if (onItemClick && typeof onItemClick === 'function') {\r\n      updatedItem = onItemClick(item);\r\n    }\r\n\r\n    if (updatedItem) {\r\n      let hasChange = false;\r\n      const newMenuItems = menuItems.map((item, index) => {\r\n        if (selectedIndex === index) {\r\n          hasChange = true;\r\n          item = updatedItem;\r\n        }\r\n        return item;\r\n      });\r\n\r\n      if (hasChange) setMenuItems(newMenuItems);\r\n    }\r\n\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pointer\">\r\n        <TriggerComponent.type {...TriggerComponent.props} onClick={openMenu} />\r\n      </div>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n        {menuItems.map((item, index) => {\r\n          return (\r\n            <MenuItem key={index} disabled={item.disabled} onClick={event => handleMenuItemClick({ ...item }, index, event)}>\r\n              {item.icon}\r\n              <div className=\"ml-2\">{item.label}</div>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCmtDropdownMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  TriggerComponent: PropTypes.element.isRequired,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nexport default CmtDropdownMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: 24,\r\n    '&.Cmt-separator': {\r\n      ...props.separatorStyles,\r\n      '& + .Cmt-card-content': {\r\n        paddingTop: 24,\r\n      },\r\n    },\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  }),\r\n  headerAlignCenter: props => ({\r\n    paddingLeft: props.contentWidth + 12,\r\n    '& .Cmt-content-head': {\r\n      justifyContent: 'center',\r\n      '& .Cmt-header-content': {\r\n        flex: '0 0 auto',\r\n      },\r\n    },\r\n  }),\r\n  titleStyle: {\r\n    position: 'relative',\r\n  },\r\n  subTitleStyle: {\r\n    marginBottom: 0,\r\n    marginTop: 4,\r\n    fontSize: 12,\r\n    color: theme.palette.text.disabled,\r\n    letterSpacing: 0.4,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  '@keyframes showHide': {\r\n    '0%': {\r\n      animationTimingFunction: 'ease-in',\r\n      opacity: 0,\r\n      transform: 'scale(0)',\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      transform: 'scale(1)',\r\n    },\r\n  },\r\n  actionMenu: {\r\n    '& button': {\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n    },\r\n  },\r\n  actionMenuDefault: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 10,\r\n    '& .Cmt-action-menu-hover': {\r\n      top: '50%',\r\n    },\r\n  },\r\n  actionMenuAbsolute: {\r\n    position: 'relative',\r\n    paddingTop: 40,\r\n    '& .Cmt-action-menu': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      textAlign: 'center',\r\n      transition: 'all 0.25s ease',\r\n    },\r\n  },\r\n  actionMenuHover: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    transition: 'all 0.25s ease',\r\n  },\r\n  showActionMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -20%)',\r\n  },\r\n  hideActionMenu: {\r\n    transform: 'translate(100% , -100%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n  showActionDefaultMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -50%)',\r\n  },\r\n  hideActionDefaultMenu: {\r\n    transform: 'translate(100% , -50%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useImperativeHandle, useState, useEffect } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nimport useStyles from './CmtCardHeader.style';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst ActionsMenu = ({ actions, actionHandler, icon }) => {\r\n  return (\r\n    <CmtDropdownMenu\r\n      TriggerComponent={<IconButton size=\"small\">{icon || <MoreVertIcon />}</IconButton>}\r\n      items={actions}\r\n      onItemClick={actionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nconst CmtCardHeader = React.forwardRef(function CmtCardHeader(props, ref) {\r\n  const {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n    actions,\r\n    actionMenuClassName,\r\n    actionHandleIcon,\r\n    actionHandler,\r\n    actionsPos,\r\n    actionsShowOnHover,\r\n    backgroundColor,\r\n    gradientDirection,\r\n    separator,\r\n    alignCenter,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [showActions, setActionsVisibility] = useState(false);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const contentHeadProps = {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n  };\r\n\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator);\r\n\r\n  const classes = useStyles({ separatorStyles, contentWidth });\r\n\r\n  let showHideActionClass = showActions ? classes.showActionMenu : classes.hideActionMenu;\r\n  if (actionsPos === 'default') {\r\n    showHideActionClass = showActions ? classes.showActionDefaultMenu : classes.hideActionDefaultMenu;\r\n  }\r\n\r\n  const headerRootClasses = alignCenter\r\n    ? clsx(className, classes.headerRoot, classes.headerAlignCenter, separator.color ? 'Cmt-separator' : '')\r\n    : clsx(className, classes.headerRoot, separator.color ? 'Cmt-separator' : '');\r\n\r\n  const menuRootClasses = actionsShowOnHover\r\n    ? clsx(classes.actionMenu, classes.actionMenuHover, 'Cmt-action-menu-hover', showHideActionClass, actionMenuClassName)\r\n    : clsx(classes.actionMenu, 'Cmt-action-menu', actionMenuClassName);\r\n\r\n  const menuRootActionsClasses = actionsShowOnHover\r\n    ? actionsPos === 'default'\r\n      ? classes.actionMenuDefault\r\n      : ''\r\n    : classes.actionMenuDefault;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onHeaderMouseEntered: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(true);\r\n    },\r\n    onHeaderMouseLeft: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(false);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setContentWidth(contentRef.current ? contentRef.current.clientWidth : 0);\r\n  }, [actionsPos, actionsShowOnHover]);\r\n\r\n  return (\r\n    <div className={clsx(headerRootClasses, 'Cmt-header-root')} style={backgroundStyles} {...rest}>\r\n      {(icon || avatar || title || subTitle) && (\r\n        <CmtContentHead titleStyle={classes.titleStyle} subTitleStyle={classes.subTitleStyle} {...contentHeadProps} />\r\n      )}\r\n\r\n      {(actions.length > 0 || children) && (\r\n        <div ref={contentRef} className={clsx(menuRootActionsClasses, 'Cmt-action-default-menu')}>\r\n          {children}\r\n          {actions.length > 0 && (\r\n            <div style={{ marginLeft: '8px' }} className={menuRootClasses}>\r\n              <ActionsMenu actions={actions} actionHandler={actionHandler} icon={actionHandleIcon} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nCmtCardHeader.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actions: PropTypes.array,\r\n  actionMenuClassName: PropTypes.string,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionsPos: PropTypes.oneOf(['default', 'top-corner']),\r\n  actionsShowOnHover: PropTypes.bool,\r\n  actionHandler: PropTypes.func,\r\n  alignCenter: PropTypes.bool,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtCardHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  actions: [],\r\n  actionsPos: 'default',\r\n  actionsShowOnHover: false,\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n  alignCenter: false,\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n  className: '',\r\n};\r\n\r\nexport default CmtCardHeader;\r\n","import React, { useContext } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CircularProgress, makeStyles } from '@material-ui/core';\r\nimport SidebarThemeContext from '../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  listFooterLoaderRoot: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: 'center',\r\n    padding: 8,\r\n    borderTop: props => `1px solid ${props.sidebarTheme.borderColor}`,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst ListFooter = ({ loading, footerText }) => {\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  return loading ? (\r\n    <div className={classes.listFooterLoaderRoot}>\r\n      <CircularProgress size={16} />\r\n      <span className=\"ml-2\">Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nListFooter.prototype = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n\r\nexport default ListFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  return null;\r\n};\r\n\r\nconst ListView = ({ renderRow, onEndReached, data, ListFooterComponent, ListEmptyComponent, ...rest }) => {\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <Box {...rest}>\r\n      {data.length > 0 ? data.map((item, index) => renderRow(item, index)) : getEmptyContainer(ListEmptyComponent)}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n\r\nListView.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\n\r\nListView.defaultProps = {\r\n  data: [],\r\n  onEndReached: () => {},\r\n};\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListFooter from './ListFooter';\r\nimport ListView from './ListView';\r\n\r\nconst CmtList = ({ footerProps, ...props }) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={footerProps && <ListFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CmtList;\r\n\r\nCmtList.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\nCmtList.defaultProps = {\r\n  data: [],\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { IconButton, Popover, useTheme } from '@material-ui/core';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport LanguageItem from './LanguageItem';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags, languageData } from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 14,\r\n      paddingBottom: 14,\r\n    },\r\n  },\r\n  perfectScrollbarLanguage: {\r\n    height: 324,\r\n  },\r\n  menuItemRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 205,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageSwitcher = () => {\r\n  const classes = useStyles();\r\n  const { locale, setLocale } = useContext(AppContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'language' : undefined;\r\n\r\n  const switchLanguage = item => {\r\n    window.localStorage.setItem('language', item.languageId);\r\n    setLocale(item);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem('language') !== null) {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === window.localStorage.getItem('language')) {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === 'english') {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    }\r\n  }, [setLocale]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton size=\"small\" onClick={handleClick} data-tut=\"reactour__localization\">\r\n        <CmtImage src={flags[locale.locale]} />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Language\"\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <PerfectScrollbar className={classes.perfectScrollbarLanguage}>\r\n            <CmtList\r\n              data={languageData}\r\n              renderRow={(item, index) => <LanguageItem key={index} language={item} onClick={switchLanguage} />}\r\n            />\r\n          </PerfectScrollbar>\r\n        </CmtCard>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React from 'react';\r\nimport { CardContent, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: () => ({\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardContent = ({ children, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardContent className={clsx(classes.root, 'Cmt-card-content', className)} {...rest}>\r\n      {children}\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default CmtCardContent;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, makeStyles, withWidth } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridContainer: {\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  columnRow: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: `-${props.itemPadding / 2}px`,\r\n  }),\r\n  columnCount: props => ({\r\n    flexGrow: 0,\r\n    maxWidth: `${100 / props.displayColumn}%`,\r\n    flexBasis: `${100 / props.displayColumn}%`,\r\n    padding: `${props.itemPadding / 2}px`,\r\n    boxSizing: 'border-box',\r\n  }),\r\n}));\r\n\r\nconst getColumnCount = (responsive, width, column) => {\r\n  if (responsive) {\r\n    if (width === 'xs') {\r\n      return responsive.xs || column;\r\n    } else if (width === 'sm') {\r\n      return responsive.sm || responsive.xs || column;\r\n    } else if (width === 'md') {\r\n      return responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'lg') {\r\n      return responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'xl') {\r\n      return responsive.xl || responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    }\r\n  } else {\r\n    return column;\r\n  }\r\n};\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) {\r\n    return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) {\r\n    return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GridView = ({\r\n  width,\r\n  column,\r\n  responsive,\r\n  itemPadding,\r\n  renderRow,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  ...rest\r\n}) => {\r\n  const [displayColumn, setDisplayColumn] = useState(column);\r\n  const classes = useStyles({ displayColumn, itemPadding });\r\n\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisplayColumn(getColumnCount(responsive, width, column));\r\n  }, [width, column, responsive]);\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <div className={classes.gridContainer}>\r\n      <Box className={clsx(classes.columnRow, 'Cmt-column-row')} {...rest}>\r\n        {data.length > 0\r\n          ? data.map((item, index) => (\r\n              <div key={index} className={clsx(classes.columnCount, 'Cmt-column-count')}>\r\n                {renderRow(item, index)}\r\n              </div>\r\n            ))\r\n          : null}\r\n      </Box>\r\n      {data.length === 0 ? getEmptyContainer(ListEmptyComponent) : null}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(GridView);\r\nGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  responsive: PropTypes.object,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\nGridView.defaultProps = {\r\n  data: [],\r\n  itemPadding: 0,\r\n  column: 3,\r\n};\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  footerWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '8px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GridFooter = ({ loading, footerText }) => {\r\n  const classes = useStyles();\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.footerWrapper}>\r\n        <CircularProgress size={16} />\r\n        <span className=\"ml-2\">Loading...</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n        <p>{footerText}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nGridFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nGridFooter.defaultProps = {\r\n  loading: false,\r\n  footerText: '',\r\n};\r\n\r\nexport default GridFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GridView from './GridView';\r\nimport GridFooter from './GridFooter';\r\n\r\nconst CmtGridView = ({ column, itemPadding, ListEmptyComponent, data, onEndReached, renderRow, footerProps, ...rest }) => {\r\n  return (\r\n    <GridView\r\n      {...{\r\n        column,\r\n        itemPadding,\r\n        ListEmptyComponent,\r\n        data,\r\n        onEndReached,\r\n        renderRow,\r\n      }}\r\n      {...rest}\r\n      ListFooterComponent={footerProps && <GridFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nCmtGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\n\r\nCmtGridView.defaultProps = {\r\n  itemPadding: 0,\r\n  column: 3,\r\n  data: [],\r\n};\r\n\r\nexport default CmtGridView;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { amber, blue, brown, deepOrange, green, grey, purple, red, yellow } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n  primary: {\r\n    color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  secondary: {\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  amber: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: amber[500],\r\n  },\r\n  brown: {\r\n    color: '#ffffff',\r\n    backgroundColor: brown[500],\r\n  },\r\n  red: {\r\n    color: '#ffffff',\r\n    backgroundColor: red[500],\r\n  },\r\n  green: {\r\n    color: '#ffffff',\r\n    backgroundColor: green[500],\r\n  },\r\n  blue: {\r\n    color: '#ffffff',\r\n    backgroundColor: blue[500],\r\n  },\r\n  yellow: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: yellow[500],\r\n  },\r\n  grey: {\r\n    color: '#ffffff',\r\n    backgroundColor: grey[400],\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n  },\r\n  customSize: props => ({\r\n    height: props.size,\r\n    width: props.size,\r\n  }),\r\n  small: {\r\n    height: 40,\r\n    width: 40,\r\n  },\r\n  medium: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n  large: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { componentColors } from '../CmtHelpers/JssHelper';\r\nimport useStyles from './index.style';\r\n\r\nconst colorOptions = [...componentColors, 'random'];\r\n\r\nconst getRandomColor = () => {\r\n  return colorOptions[Math.floor(Math.random() * 11)];\r\n};\r\n\r\nconst CmtAvatar = React.forwardRef(({ src, alt, className, color, size, phCharLength, children, ...rest }, ref) => {\r\n  const classes = useStyles({ size: typeof size === 'number' ? size : 0 });\r\n  const colorClass = color === 'random' ? classes[getRandomColor()] : classes[color];\r\n  const sizeClass = typeof size === 'number' ? classes.customSize : classes[size];\r\n\r\n  const classNames = clsx(classes.root, colorClass, 'Cmt-avatar-size', sizeClass, className && className);\r\n\r\n  const placeHolderChar = alt && phCharLength > 0 ? alt.substr(0, phCharLength).toUpperCase() : null;\r\n\r\n  return (\r\n    <Avatar ref={ref} className={classNames} src={src} alt={alt} {...rest}>\r\n      {!src && !children && alt ? placeHolderChar : children}\r\n    </Avatar>\r\n  );\r\n});\r\n\r\nCmtAvatar.propTypes = {\r\n  color: PropTypes.oneOf(colorOptions),\r\n  phCharLength: PropTypes.number,\r\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n};\r\n\r\nCmtAvatar.defaultProps = {\r\n  color: 'grey',\r\n  phCharLength: 1,\r\n  size: 'medium',\r\n};\r\n\r\nexport default CmtAvatar;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CmtGridView from '../../../../../@coremat/CmtGridView';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst applications = [\r\n  {\r\n    name: 'Email',\r\n    icon: <EmailIcon style={{ color: '#0795F4' }} />,\r\n    bgColor: '#CDEAFD',\r\n    path: '/apps/mail',\r\n  },\r\n  {\r\n    name: 'Task',\r\n    icon: <CheckCircleIcon style={{ color: '#FF8C00' }} />,\r\n    bgColor: '#FFE8CC',\r\n    path: '/apps/to-do',\r\n  },\r\n  {\r\n    name: 'Contacts',\r\n    icon: <ContactMailIcon style={{ color: '#8DCD03' }} />,\r\n    bgColor: '#E8F5CD',\r\n    path: '/apps/contact',\r\n  },\r\n  {\r\n    name: 'Chating',\r\n    icon: <ChatIcon style={{ color: '#6200EE' }} />,\r\n    bgColor: '#E0CCFC',\r\n    path: '/apps/chat',\r\n  },\r\n];\r\n\r\nconst appItem = (item, index, onClick) => {\r\n  return (\r\n    <Box\r\n      key={index}\r\n      py={2}\r\n      className=\"pointer\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      onClick={() => onClick(item.path)}>\r\n      <CmtAvatar style={{ backgroundColor: item.bgColor }} size={62}>\r\n        {item.icon}\r\n      </CmtAvatar>\r\n      <Box mt={5} fontSize={16} fontWeight=\"bold\" color=\"#666666\">\r\n        {item.name}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst AppsMenu = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const onClickApp = path => {\r\n    history.push(path);\r\n    onClosePopOver();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Applications\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <AppsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Applications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {applications.length > 0 ? (\r\n              <CmtGridView\r\n                itemPadding={24}\r\n                column={2}\r\n                data={applications}\r\n                renderRow={(item, index) => appItem(item, index, onClickApp)}\r\n              />\r\n            ) : (\r\n              <Typography variant=\"body2\">No applications found</Typography>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mediaObject: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n  },\r\n  mediaImageTop: {\r\n    alignSelf: 'flex-start',\r\n    marginTop: 12,\r\n  },\r\n  mediaImageCenter: {\r\n    alignSelf: 'center',\r\n  },\r\n  mediaImageBottom: {\r\n    marginBottom: 12,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rootAvatar: {\r\n    height: 60,\r\n    width: 60,\r\n  },\r\n  mediaBody: {\r\n    flex: '1 1 0%',\r\n  },\r\n  mediaHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  mediaHeaderContent: {\r\n    flex: 1,\r\n  },\r\n  mediaActions: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  mediaFooter: {\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../CmtTypography';\r\nimport useStyles from './index.style';\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst CmtMediaObject = ({\r\n  avatar,\r\n  avatarPos,\r\n  avatarProps,\r\n  onBodyClick,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  actionsComponent,\r\n  content,\r\n  contentProps,\r\n  footerComponent,\r\n  footerComponentProps,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.mediaObject, className, 'Cmt-media-object')} {...rest}>\r\n      {avatar && (\r\n        <div\r\n          className={clsx(\r\n            {\r\n              [classes.mediaImageTop]: avatarPos === 'top',\r\n              [classes.mediaImageCenter]: avatarPos === 'center',\r\n              [classes.mediaImageBottom]: avatarPos === 'bottom',\r\n            },\r\n            'Cmt-media-image',\r\n          )}>\r\n          <Box mr={3} clone>\r\n            {isValidElement(avatar) ? (\r\n              avatar\r\n            ) : (\r\n              <CmtAvatar className={clsx(classes.rootAvatar, 'Cmt-avatar')} src={avatar} {...avatarProps} />\r\n            )}\r\n          </Box>\r\n        </div>\r\n      )}\r\n      <div className={clsx(classes.mediaBody, 'Cmt-media-body')} onClick={onBodyClick}>\r\n        <div className={clsx(classes.mediaHeader, 'Cmt-media-header')}>\r\n          <div className={clsx(classes.mediaHeaderContent, 'Cmt-media-header-content')}>\r\n            {title && <CmtTitle content={title} {...titleProps} />}\r\n            {subTitle && <CmtSubTitle content={subTitle} {...subTitleProps} />}\r\n          </div>\r\n          {actionsComponent && (\r\n            <div className={clsx(classes.mediaActions, 'Cmt-media-actions', 'ml-3')}>{actionsComponent}</div>\r\n          )}\r\n        </div>\r\n        {content && (\r\n          <div className=\"mb-3\">\r\n            {typeof content === 'string' ? <Typography {...contentProps}>{content}</Typography> : content}\r\n          </div>\r\n        )}\r\n        {children}\r\n      </div>\r\n      {footerComponent && (\r\n        <Box ml={3} className={clsx(classes.mediaFooter, 'Cmt-media-footer')} {...footerComponentProps}>\r\n          {footerComponent}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtMediaObject.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarPos: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n  avatarProps: PropTypes.object,\r\n  onBodyClick: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actionsComponent: PropTypes.element,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  contentProps: PropTypes.object,\r\n  footerComponent: PropTypes.element,\r\n  footerComponentProps: PropTypes.object,\r\n  className: PropTypes.func,\r\n};\r\n\r\nCmtMediaObject.defaultProps = {\r\n  avatar: '',\r\n  avatarPos: 'top',\r\n  title: '',\r\n  titleProps: {\r\n    variant: 'h3',\r\n    component: 'div',\r\n  },\r\n  subTitle: '',\r\n  subTitleProps: {\r\n    component: 'span',\r\n  },\r\n  content: '',\r\n  contentProps: {\r\n    component: 'div',\r\n    variant: 'body2',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtMediaObject);\r\n","import moment from 'moment';\r\n\r\nexport const getTodayDate = (format = 'DD.MM.YYYY') => {\r\n  return moment().format(format);\r\n};\r\n\r\nexport const getYesterdayDate = () => {\r\n  return moment()\r\n    .subtract(1, 'day')\r\n    .format('DD.MM.YYYY');\r\n};\r\n\r\nexport const getTotalSec = talkTime => {\r\n  let hours = talkTime.slice(0, 2);\r\n  let minutes = talkTime.slice(4, 6);\r\n  let seconds = talkTime.slice(8, 10);\r\n  let totalSec = parseInt(seconds) + parseInt(minutes) * 60 + parseInt(hours) * 3600;\r\n  return totalSec;\r\n};\r\n\r\nexport const timeFromNow = date => {\r\n  const timestamp = moment(date).format('X');\r\n  const newDate = moment.unix(timestamp);\r\n  return moment(newDate).fromNow();\r\n};\r\n\r\nexport const isToday = date => {\r\n  return moment().isSame(date, 'day');\r\n};\r\n\r\nexport const getNewDate = date_ => {\r\n  var date = new Date(date_);\r\n  var year = date.getFullYear();\r\n  var month = date.getMonth() + 1;\r\n  var dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return dt + '-' + month + '-' + year;\r\n};\r\n\r\nexport const getDateElements = date => {\r\n  const dateString = moment(date).format('dddd, MMMM DD YYYY, hh:mm A');\r\n  const dateSections = dateString.split(',');\r\n  const day = dateSections[0];\r\n  const time = dateSections[2];\r\n  const datePart = dateSections[1].trim().split(' ');\r\n  return {\r\n    day,\r\n    time,\r\n    date: {\r\n      dateString: dateSections[1],\r\n      month: datePart[0],\r\n      date: datePart[1],\r\n      year: datePart[2],\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTime = date => {\r\n  const dateObj = moment(date, 'dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(dateObj).format('LT');\r\n};\r\n\r\nexport const isDatesSame = (dateA, dateB) => {\r\n  return moment(dateA).isSame(dateB, 'day');\r\n};\r\n\r\nexport const isDateAfter = date => {\r\n  const todayDate = getTodayDate('dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(todayDate).isAfter(date);\r\n};\r\n\r\nexport const getDateinDesiredFormat = (date, format) => {\r\n  return moment(date).format(format);\r\n};\r\n\r\nexport const makeJSDateObject = date => {\r\n  if (date) {\r\n    return new Date(date.getTime());\r\n  }\r\n  return date;\r\n};\r\n\r\nexport const getFormattedDate = (date, format = 'YYYY-MM-DD') => {\r\n  if (moment(date, 'YYYY-MM-DD').isValid()) {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\nexport const isTomorrow = inputDateTime => {\r\n  const tomorrow = moment()\r\n    .add(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(tomorrow, 'day');\r\n};\r\n\r\nexport const isYesterday = inputDateTime => {\r\n  const yesterday = moment()\r\n    .subtract(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(yesterday, 'day');\r\n};\r\n\r\nexport const getCustomDateTime = (value = 0, unit = 'days', format = 'YYYY-MM-DD') => {\r\n  if (value === 0) {\r\n    return moment().format(format);\r\n  } else {\r\n    return moment()\r\n      .add(value, unit)\r\n      .format(format);\r\n  }\r\n};\r\n\r\nexport const getCustomDateObject = (value = 0, unit = 'days') => {\r\n  if (value === 0) {\r\n    return moment();\r\n  } else {\r\n    return moment().add(value, unit);\r\n  }\r\n};\r\n\r\nexport const getDateText = date => {\r\n  if (isToday(date)) {\r\n    return 'Today';\r\n  } else if (isYesterday(date)) {\r\n    return 'Yesterday';\r\n  } else if (isTomorrow(date)) {\r\n    return 'Tomorrow';\r\n  } else {\r\n    return date;\r\n  }\r\n};\r\n\r\nexport const getTimeDiffString = (date, format = 'DD MMM, YYYY', suffix = '') => {\r\n  const postDate = moment(date, 'ddd MMM DD YYYY kk:mm:ss Z');\r\n  const currentDate = moment();\r\n  const duration = moment.duration(currentDate.diff(postDate));\r\n  const minutes = duration.asMinutes() | 0;\r\n  const hours = duration.asHours() | 0;\r\n\r\n  switch (true) {\r\n    case minutes === 0:\r\n      return 'Just now';\r\n    case minutes < 60:\r\n      return `${minutes} min ${suffix}`;\r\n    case hours < 24:\r\n      return `${hours} hours ${suffix}`;\r\n    default:\r\n      return postDate.format(format);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { fade } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    marginBottom: 6,\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst icons = {\r\n  POSTING: <MessageIcon style={{ color: '#836AFF' }} />,\r\n  SHARED_POST: <ShareIcon style={{ color: '#0795F4' }} />,\r\n  INVITATION: <EmailIcon style={{ color: '#00C4B4' }} />,\r\n  BIRTHDAY: <CakeIcon style={{ color: '#EF933C' }} />,\r\n};\r\n\r\nconst getPostContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has recently posted an\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      {item.metaData.post.type}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getSharedContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has shared\r\n    </Box>\r\n    <Box component=\"span\" ml={1} color=\"primary.main\">\r\n      {`${item.metaData.post.owner.name}'s`}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      post.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getBirthdayContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has birthday today.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getInvitationContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.metaData.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has sent you a group invitation for\r\n    </Box>\r\n    <Box component=\"span\" color=\"blue\" ml={1}>\r\n      {item.metaData.group.name}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst NotificationItem = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const getTitle = (item, classes) => {\r\n    switch (item.type) {\r\n      case 'POSTING':\r\n        return getPostContent(item, classes);\r\n      case 'SHARED_POST':\r\n        return getSharedContent(item, classes);\r\n      case 'INVITATION':\r\n        return getInvitationContent(item, classes);\r\n      case 'BIRTHDAY':\r\n        return getBirthdayContent(item, classes);\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getSubTitle = () => (\r\n    <Box display=\"flex\" alignItems=\"center\" fontSize={12} color=\"text.disabled\">\r\n      <Box fontSize={16} clone>\r\n        {icons[item.type]}\r\n      </Box>\r\n      <Box ml={2}>{getDateElements(item.date).time}</Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={getTitle(item, classes)}\r\n        subTitle={getSubTitle()}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, makeStyles, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\n\r\nimport NotificationItem from './NotificationItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &.active': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst headerNotifications = [];\r\n\r\nconst HeaderNotifications = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCounter(0);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Box pr={2}>\r\n      <Tooltip title=\"Notifications\">\r\n        <IconButton\r\n          onClick={onOpenPopOver}\r\n          className={clsx(classes.iconRoot, 'Cmt-appIcon', {\r\n            active: counter > 0,\r\n          })}>\r\n          <Badge badgeContent={counter} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Notifications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {headerNotifications.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList\r\n                  data={headerNotifications}\r\n                  renderRow={(item, index) => <NotificationItem key={index} item={item} />}\r\n                />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No notifications found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderNotifications;\r\n","import React from 'react';\r\nimport { Box, fade } from '@material-ui/core';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-header-content': {\r\n      width: 'calc(100% - 75px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-actions': {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    fontSize: 14,\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer',\r\n  },\r\n  subTitleRoot: {\r\n    letterSpacing: 0.4,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst MessageItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={item.user.name}\r\n        titleProps={{ className: classes.titleRoot }}\r\n        subTitle={item.message}\r\n        subTitleProps={{ className: classes.subTitleRoot }}\r\n        actionsComponent={\r\n          <Box fontSize={12} color=\"text.disabled\">\r\n            {getDateElements(item.date).time}\r\n          </Box>\r\n        }>\r\n        <Box display=\"flex\" alignItems=\"center\" mt={2} fontSize={12} color=\"text.secondary\">\r\n          <Box display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <ReplyIcon />\r\n            </Box>\r\n            <Box ml={2}>Reply</Box>\r\n          </Box>\r\n          <Box ml={4} display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <CheckCircleOutlineIcon />\r\n            </Box>\r\n            <Box ml={2}>Read</Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtMediaObject>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport MessageItem from './MessageItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst messages = [];\r\nconst HeaderMessages = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Messages\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Messages\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {messages.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList data={messages} renderRow={(item, index) => <MessageItem key={index} item={item} />} />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No messages found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderMessages;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst Logo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n  const logoSymbolUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <Hidden xsDown>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoSymbolUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: props => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    marginLeft: props.align === 'right' ? 'auto' : 0,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }),\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&.right': {\r\n      left: 'auto',\r\n      right: 0,\r\n      '& + $inputRoot $inputInput': {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(2, 2, 2, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: 162,\r\n    height: 35,\r\n    borderRadius: 4,\r\n    boxSizing: 'border-box',\r\n    '&:focus': {\r\n      backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n      width: 235,\r\n    },\r\n  },\r\n  searchIconBox: {\r\n    position: 'relative',\r\n    '& $inputInput': {\r\n      width: 35,\r\n      borderRadius: 4,\r\n      paddingLeft: 27,\r\n      '&:focus': {\r\n        width: 150,\r\n        borderRadius: 4,\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 235,\r\n        },\r\n      },\r\n    },\r\n    '& $searchIcon': {\r\n      paddingLeft: 6,\r\n      paddingRight: 6,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useStyles from './index.style';\r\n\r\nconst CmtSearch = ({\r\n  border,\r\n  placeholder,\r\n  iconPosition,\r\n  align,\r\n  onlyIcon,\r\n  containerStyle,\r\n  inputStyle,\r\n  iconStyle,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ align });\r\n  const inputBaseStyle = {\r\n    border: border ? '1px solid' : '0 none',\r\n    ...inputStyle,\r\n  };\r\n  const inputBaseClasses = {\r\n    root: clsx(classes.inputRoot, 'CmtSearch-input-root'),\r\n    input: clsx(classes.inputInput, 'CmtSearch-input'),\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'CmtSearch-root', className)} style={containerStyle}>\r\n      <div className={clsx(classes.search, onlyIcon ? classes.searchIconBox : null)}>\r\n        <div\r\n          className={clsx(classes.searchIcon, 'CmtSearch-icon-wrapper', {\r\n            right: iconPosition === 'right',\r\n          })}\r\n          style={iconStyle}>\r\n          <SearchIcon style={iconStyle} />\r\n        </div>\r\n        <InputBase\r\n          placeholder={placeholder || 'Search…'}\r\n          style={inputBaseStyle}\r\n          classes={inputBaseClasses}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmtSearch;\r\n\r\nCmtSearch.prototype = {\r\n  border: PropTypes.bool,\r\n  iconPosition: PropTypes.string,\r\n  align: PropTypes.string,\r\n  onlyIcon: PropTypes.bool,\r\n  containerStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  iconStyle: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtSearch.defaultProps = {\r\n  border: true,\r\n  containerStyle: {},\r\n  inputStyle: {\r\n    backgroundColor: 'transparent',\r\n    borderColor: 'grey',\r\n    color: 'grey',\r\n    borderRadius: 4,\r\n  },\r\n  iconPosition: 'left',\r\n  onlyIcon: false,\r\n  align: 'left',\r\n  iconStyle: {\r\n    color: 'grey',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Popover } from '@material-ui/core';\r\nimport CmtSearch from '../../../../@coremat/CmtSearch';\r\n\r\nconst SearchPopover = ({ iconClassName, popoverClassName }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenSearchBar = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSearchBar = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={iconClassName} onClick={handleOpenSearchBar}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Popover\r\n        className={popoverClassName}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleCloseSearchBar}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtSearch />\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPopover;\r\n","import React from 'react';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Box, InputBase } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport LanguageSwitcher from '../LanguageSwitcher';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppsMenu from './AppsMenu';\r\nimport HeaderNotifications from './HeaderNotifications';\r\nimport HeaderMessages from './HeaderMessages';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Logo from '../Logo';\r\nimport SearchPopover from '../SearchPopover';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      minHeight: 72,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 30,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n      color: alpha(theme.palette.common.white, 0.7),\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.58),\r\n        color: alpha(theme.palette.common.white, 0.7),\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    borderLeft: `solid 1px ${alpha(theme.palette.common.dark, 0.15)}`,\r\n    minHeight: 72,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minHeight: 64,\r\n    },\r\n  },\r\n  iconBtn: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo ml={2} color=\"white\" />\r\n      <Box flex={1} />\r\n      <Hidden smDown>\r\n        <Box pr={3} className={classes.searchRoot}>\r\n          <InputBase placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n          <SearchIcon />\r\n        </Box>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <SearchPopover iconClassName={classes.iconBtn} />\r\n      </Hidden>\r\n      <AppsMenu />\r\n      <HeaderMessages />\r\n      <HeaderNotifications />\r\n      <Box className={classes.langRoot}>\r\n        <LanguageSwitcher />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    zIndex: 1103,\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '.Cmt-miniLayout &': {\r\n      width: props => props.miniSidebarWidth,\r\n      '&:hover': {\r\n        width: props => props.sidebarWidth,\r\n      },\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  actionSidebarWrapper: {\r\n    display: 'flex',\r\n    width: props => props.sidebarWidth + props.actionSidebarWidth,\r\n    transition: 'all 0.3s ease',\r\n\r\n    '& .actionSidebar': {\r\n      width: props => props.actionSidebarWidth,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Drawer, makeStyles } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  drawerContent: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtDrawer = ({ backgroundColor, backgroundImage, gradientDirection, children, overlay, ...rest }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer {...rest}>\r\n      <div className={clsx(classes.drawerContainer, 'Cmt-Drawer-container')} style={backgroundStyles}>\r\n        <div className={clsx(classes.drawerContent, 'Cmt-Drawer-content')}>{children}</div>\r\n        {overlay.colors && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyles} />}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nCmtDrawer.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtDrawer.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default React.memo(CmtDrawer);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport useStyles from './Sidebar.style';\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst CmtSidebarContent = ({ children, classes }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtDrawerContent = ({ children, classes }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n  return (\r\n    <CmtDrawer\r\n      variant=\"temporary\"\r\n      open={isSidebarOpen}\r\n      onClose={() => setSidebarOpen(false)}\r\n      classes={{\r\n        paper: 'Cmt-drawer-sidebar',\r\n      }}>\r\n      <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = ({ children, actionBar }) => {\r\n  const { drawerBreakPoint, sidebarWidth, miniSidebarWidth, actionSidebarWidth, sidebarType } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const hasDrawer = sidebarType === 'drawer' || matches;\r\n\r\n  const classes = useStyles({\r\n    sidebarWidth,\r\n    miniSidebarWidth,\r\n    actionSidebarWidth,\r\n    sidebarTheme,\r\n  });\r\n\r\n  if (hasDrawer) {\r\n    return (\r\n      <React.Fragment>\r\n        {actionBar}\r\n        <CmtDrawerContent classes={classes}>{children}</CmtDrawerContent>\r\n      </React.Fragment>\r\n    );\r\n  } else if (actionBar) {\r\n    return (\r\n      <div className={clsx(classes.actionSidebarWrapper, 'Cmt-actionSidebarWrapper')}>\r\n        {actionBar}\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useContext } from 'react';\r\nimport { MenuItem, MenuList, Paper, Popover, Typography } from '@material-ui/core';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarThemeContext from '../../../../@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '25px 24px 24px 24px',\r\n    borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n  },\r\n  userInfo: {\r\n    paddingTop: 56,\r\n    transition: 'all 0.1s ease',\r\n    height: 75,\r\n    opacity: 1,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      height: 0,\r\n      paddingTop: 0,\r\n      opacity: 0,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n  },\r\n  userTitle: {\r\n    color: props => props.sidebarTheme.textDarkColor,\r\n    marginBottom: 8,\r\n  },\r\n  userSubTitle: {\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst SidebarHeader = () => {\r\n  let history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n  const dispatch = useDispatch();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const onLogoutClick = () => {\r\n    handlePopoverClose();\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    history.push('/signin');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ paddingTop: '50px' }}>\r\n      <CmtAvatar src={'https://via.placeholder.com/150'} alt=\"User Avatar\" />\r\n      <div className={classes.userInfo} onClick={handlePopoverOpen}>\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-end',\r\n          }}>\r\n          <div className=\"mr-2\">\r\n            <Typography className={classes.userTitle} component=\"h3\" variant=\"h6\">\r\n              Robert Johnson\r\n            </Typography>\r\n            <Typography className={classes.userSubTitle}>robert.johnson@gmail.com</Typography>\r\n          </div>\r\n          <ArrowDropDownIcon />\r\n        </div>\r\n      </div>\r\n\r\n      {open && (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          container={anchorEl}\r\n          onClose={handlePopoverClose}\r\n          anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}>\r\n          <Paper elevation={8}>\r\n            <MenuList>\r\n              <MenuItem onClick={handlePopoverClose}>\r\n                <PersonIcon />\r\n                <div className=\"ml-2\">Profile</div>\r\n              </MenuItem>\r\n              <MenuItem onClick={onLogoutClick}>\r\n                <ExitToAppIcon />\r\n                <div className=\"ml-2\">Logout</div>\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Paper>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import React, { cloneElement, isValidElement, useContext } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuItem: {\r\n    padding: '0 16px 0 0',\r\n    position: 'relative',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: props => props.sidebarTheme.textColor,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: props => props.sidebarTheme.textActiveColor,\r\n      backgroundColor: props => props.sidebarTheme.navActiveBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-nav-text, & .Cmt-icon-root': {\r\n          color: props => props.sidebarTheme.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      justifyContent: 'center',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: '50%',\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link, allowedUrls } = props;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {allowedUrls.includes(link) && (\r\n        <List component=\"div\" className={clsx(classes.navMenuItem, 'Cmt-nav-menu-item')}>\r\n          <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n            {renderIcon()}\r\n            <span className={clsx(classes.navText, 'Cmt-nav-text')}>{name}</span>\r\n          </NavLink>\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import React, { cloneElement, isValidElement, useEffect, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { Collapse, List, ListItem } from '@material-ui/core';\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess';\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavSection from './NavSection';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '0 16px 0 0',\r\n    '& .MuiTouchRipple-root': {\r\n      display: 'none',\r\n    },\r\n    '&:hover, &:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n    '&.open': {\r\n      '& .Cmt-navCollapseBtn': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n      '& .Cmt-iconRoot': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    '& .Cmt-navHeader': {\r\n      paddingLeft: 36,\r\n    },\r\n  },\r\n\r\n  navCollapseBtnInner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-iconRoot': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      paddingRight: 13,\r\n      paddingLeft: 13,\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      paddingRight: 16,\r\n      paddingLeft: 32,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    whiteSpace: 'nowrap',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navArrow: {\r\n    position: 'absolute',\r\n    left: 8,\r\n    top: '50%',\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    fontSize: 16,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'relative',\r\n    '& .Cmt-icon-root': {\r\n      transition: 'all 0.3s ease',\r\n      transform: 'translateX(-100%)',\r\n      opacity: 0,\r\n      visibility: 'hidden',\r\n      marginRight: 0,\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      transition: 'all 0.35s ease',\r\n      marginLeft: -20,\r\n    },\r\n    '& .Cmt-nav-menu-link': {\r\n      padding: '9px 16px 9px 70px',\r\n      transition: 'all 0.3s ease',\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '&.active': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '.Cmt-miniLayout &': {\r\n        paddingRight: 13,\r\n        paddingLeft: 13,\r\n      },\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n        paddingRight: 16,\r\n        paddingLeft: 70,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const { name, icon, children = [], allowedUrls } = props;\r\n  const filteredChildrens = children.filter(e => allowedUrls.includes(e.link));\r\n  const isExpandable = filteredChildrens.length > 0;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const renderIcon = useCallback(() => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: classes.iconRoot,\r\n      });\r\n    }\r\n    return null;\r\n  }, [icon, classes]);\r\n\r\n  const MenuCollapse = isExpandable && (\r\n    <ListItem className={clsx(classes.navCollapseBtn, 'Cmt-navCollapseBtn')} button onClick={handleClick}>\r\n      <span className={classes.navCollapseBtnInner}>\r\n        {!open && <IconExpandMore className={classes.navArrow} />}\r\n        {open && <IconExpandLess className={classes.navArrow} />}\r\n        {renderIcon()}\r\n        <span className={classes.navText}>{name}</span>\r\n      </span>\r\n    </ListItem>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable && (\r\n    <Collapse className={classes.navCollapseItem} in={open} timeout=\"auto\">\r\n      <List component=\"div\" disablePadding>\r\n        {filteredChildrens.map((item, index) => {\r\n          switch (item.type) {\r\n            case 'section':\r\n              return <NavSection {...item} key={index} />;\r\n            case 'collapse':\r\n              return <NavCollapse {...item} key={index} />;\r\n            case 'item':\r\n              return <NavMenuItem {...item} key={index} allowedUrls={allowedUrls} />;\r\n            default:\r\n              return null;\r\n          }\r\n        })}\r\n      </List>\r\n    </Collapse>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.navCollapse, `${open ? 'open' : ''}`)}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import React, { useContext } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navHeader: {\r\n    position: 'relative',\r\n    padding: '24px 16px 20px 16px',\r\n    textTransform: 'uppercase',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navSection: {\r\n    position: 'relative',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:not(:first-child) .Cmt-navHeader': {\r\n      borderTop: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n      marginTop: 10,\r\n    },\r\n    '&:not(:last-child)': {\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n        borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavSection = props => {\r\n  const { name, children = [], allowedUrls } = props;\r\n  const isExpandable = children && children.length > 0;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const MenuCollapse = (\r\n    <List component=\"div\" className={clsx(classes.navHeader, 'Cmt-navHeader')}>\r\n      {name}\r\n    </List>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} allowedUrls={allowedUrls} />;\r\n          default:\r\n            return <NavMenuItem {...item} key={index} allowedUrls={allowedUrls} />;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={classes.navSection}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSection;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavSection from './NavSection';\r\nimport NavCollapse from './NavCollapse';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst OptionalPages = [\r\n  { id: '0', path: '/dashboard' },\r\n  { id: '1', path: '/wallboard' },\r\n  { id: '2', path: '/reports/agentstatus' },\r\n  { id: '3', path: '/reports/campaigns' },\r\n  { id: '4', path: '/reports/callLog' },\r\n  { id: '5', path: '/reports/calllistening' },\r\n  { id: '6', path: '/reports/callmanagement' },\r\n  { id: '7', path: '/reports/calltransferreport' },\r\n  { id: '8', path: '/reports/internalssummary' },\r\n  { id: '9', path: '/reports/didreport' },\r\n  { id: '10', path: '/reports/dailysummaryreport' },\r\n  { id: '11', path: '/reports/queueanswerreport' },\r\n  { id: '12', path: '/reports/abandoned-queues' },\r\n  { id: '13', path: '/reports/droppedcall' },\r\n  { id: '14', path: '/reports/abondenedcalls' },\r\n  { id: '15', path: '/reports/calltermination' },\r\n  { id: '16', path: '/reports/repetetive-calls' },\r\n  { id: '17', path: '/reports/agentcdr' },\r\n  { id: '18', path: '/reports/servicelevel' },\r\n  { id: '19', path: '/reports/dailylog' },\r\n  { id: '20', path: '/reports/dailyacc' },\r\n  { id: '21', path: '/reports/callcomparison' },\r\n  { id: '22', path: '/reports/monthlylog' },\r\n  { id: '23', path: '/reports/monthlyDetails' },\r\n  { id: '24', path: '/reports/quality-report' },\r\n  { id: '25', path: '/settings/editbreaks' },\r\n  { id: '26', path: '/settings/departmentsettings' },\r\n  { id: '27', path: '/settings/usersettings' },\r\n  { id: '28', path: '/settings/rolesettings' },\r\n  { id: '29', path: '/iys/called-number' },\r\n  { id: '30', path: '/teams/users' },\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  sideNavMenu: {\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst CmtVertical = ({ menuItems }) => {\r\n  const classes = useStyles();\r\n\r\n  const [menus, setMenus] = useState([...menuItems]);\r\n  const [allowedUrls, setAllowedUrls] = useState(OptionalPages.map(e => e.path));\r\n  useEffect(() => {\r\n    let reportsArr = menuItems[1].children[1].children;\r\n    function checkLS() {\r\n      let storage = localStorage.getItem('favs') || '';\r\n      if (storage !== '') {\r\n        let favorites = storage.split(',');\r\n        let filtered = reportsArr.filter(item => favorites.includes(item.id));\r\n        if (filtered.length > 0) {\r\n          let temp = [...menuItems];\r\n          temp[0].children[2].children = filtered;\r\n          setMenus(temp);\r\n        }\r\n      } else {\r\n        let temp = [...menuItems];\r\n        temp[0].children[2].children = [];\r\n        setMenus(temp);\r\n      }\r\n    }\r\n    checkLS();\r\n    window.addEventListener('storage', checkLS);\r\n    return () => {\r\n      window.removeEventListener('storage', checkLS);\r\n    };\r\n  }, [menuItems]);\r\n\r\n  const { rolePages } = useContext(AppContext);\r\n  useEffect(() => {\r\n    let allowedPagesArr = rolePages.split(',');\r\n    let allowedUrlsArr = OptionalPages.filter(e => allowedPagesArr.includes(e.id)).map(item => item.path);\r\n    setAllowedUrls(allowedUrlsArr);\r\n  }, [rolePages]);\r\n  return (\r\n    <List component=\"nav\" disablePadding className={classes.sideNavMenu}>\r\n      {menus.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} allowedUrls={allowedUrls} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtVertical;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Dashboard, Phone, ArrowForward, Assignment, Receipt, StarRounded } from '@material-ui/icons';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { Badge } from '@material-ui/core';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nexport const sidebarNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n      {\r\n        name: <IntlMessages id={'wallboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/wallboard',\r\n      },\r\n      {\r\n        name: <IntlMessages id={'favoriteReports'} />,\r\n        type: 'collapse',\r\n        icon: <StarRounded />,\r\n        children: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: <IntlMessages id={'reports'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'reports.callcenter'} />,\r\n        type: 'collapse',\r\n        icon: <Phone />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'agent.status'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentstatus',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'campaigns'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/campaigns',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'main.reports'} />,\r\n        type: 'collapse',\r\n        icon: <Assignment />,\r\n        children: [\r\n          {\r\n            id: '1',\r\n            name: <IntlMessages id={'calllog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callLog',\r\n          },\r\n          {\r\n            id: '2',\r\n            name: <IntlMessages id={'calllistening'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calllistening',\r\n          },\r\n          {\r\n            id: '3',\r\n            name: <IntlMessages id={'callmanagement'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callmanagement',\r\n          },\r\n          {\r\n            id: '4',\r\n            name: <IntlMessages id={'calltransferreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltransferreport',\r\n          },\r\n          {\r\n            id: '5',\r\n            name: <IntlMessages id={'internalssummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/internalssummary',\r\n          },\r\n          {\r\n            id: '6',\r\n            name: <IntlMessages id={'did.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/didreport',\r\n          },\r\n          {\r\n            id: '7',\r\n            name: <IntlMessages id={'dailysummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailysummaryreport',\r\n          },\r\n          {\r\n            id: '8',\r\n            name: <IntlMessages id={'queue.answer.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/queueanswerreport',\r\n          },\r\n          {\r\n            id: '9',\r\n            name: <IntlMessages id={'abandoned.queues'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abandoned-queues',\r\n          },\r\n          {\r\n            id: '10',\r\n            name: <IntlMessages id={'droppedcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/droppedcall',\r\n          },\r\n          {\r\n            id: '11',\r\n            name: <IntlMessages id={'abondenedcalls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abondenedcalls',\r\n          },\r\n          {\r\n            id: '12',\r\n            name: <IntlMessages id={'callterminationreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltermination',\r\n          },\r\n          // {\r\n          //   id:'13',\r\n          //   name: <IntlMessages id={'returneddropcall'} />,\r\n          //   type: 'item',\r\n          //   icon: <ArrowForward />,\r\n          //   link: '/reports/returned-dropcall',\r\n          // },\r\n          {\r\n            id: '14',\r\n            name: <IntlMessages id={'repetetive.calls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/repetetive-calls',\r\n          },\r\n          {\r\n            id: '15',\r\n            name: <IntlMessages id={'agent.session.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentcdr',\r\n          },\r\n          {\r\n            id: '16',\r\n            name: <IntlMessages id={'service.level'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/servicelevel',\r\n          },\r\n          {\r\n            id: '17',\r\n            name: <IntlMessages id={'dailylog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailylog',\r\n          },\r\n          {\r\n            id: '18',\r\n            name: <IntlMessages id={'dailyacc'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailyacc',\r\n          },\r\n          {\r\n            id: '19',\r\n            name: <IntlMessages id={'call.comparison'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callcomparison',\r\n          },\r\n          {\r\n            id: '20',\r\n            name: <IntlMessages id={'monthly.log'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlylog',\r\n          },\r\n          {\r\n            id: '21',\r\n            name: <IntlMessages id={'monthlydetails'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlyDetails',\r\n          },\r\n          {\r\n            id: '22',\r\n            name: <IntlMessages id={'survey.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/quality-report',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'settings'} />,\r\n        type: 'collapse',\r\n        icon: <SettingsIcon />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'edit.breaks'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/editbreaks',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'departmentsettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/departmentsettings',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'usersettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/usersettings',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'rolesettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/rolesettings',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: 'IYS',\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: (\r\n          <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n            <IntlMessages id={'Called.Numbers'} />\r\n          </Badge>\r\n        ),\r\n        type: 'item',\r\n        icon: <Receipt />,\r\n        link: '/iys/called-number',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: 'Teams',\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: (\r\n          <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n            <IntlMessages id={'microsoft.teams.users'} />\r\n          </Badge>\r\n        ),\r\n        type: 'item',\r\n        icon: <Receipt />,\r\n        link: '/teams/users',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: `V${process.env.REACT_APP_VERSION}`,\r\n    type: 'section',\r\n  },\r\n];\r\n\r\nexport const horizontalDefaultNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const minimalHorizontalMenus = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'pages.samplePage'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVertical from '../../../../../@coremat/CmtNavigation/Vertical';\r\nimport { sidebarNavs } from '../menus';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  perfectScrollbarSidebar: {\r\n    height: '100%',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &, .Cmt-Drawer-container &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      height: 'calc(100% - 72px)',\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      height: 'calc(100% - 91px)',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.perfectScrollbarSidebar}>\r\n      <CmtVertical menuItems={sidebarNavs} />\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '30px 15px',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appMainContent, 'Cmt-appMainContent')} bgcolor=\"background.main\">\r\n      {children}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999999,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst PageLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.circularProgressRoot}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { Slide, Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageLoader from '../PageComponents/PageLoader';\r\nimport { fetchError } from '../../../redux/actions';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst ContentLoader = () => {\r\n  const { error, loading, message } = useSelector(({ common }) => common);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(fetchError(''));\r\n    }, 3000);\r\n  }, [dispatch, error, message]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <PageLoader />}\r\n      {\r\n        <Snackbar\r\n          open={Boolean(error)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n      {\r\n        <Snackbar\r\n          open={Boolean(message)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentLoader;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 30px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function LayoutFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')}>\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\n\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst FooterLogo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo-white-symbol.png' : '/images/footer-logo.png';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <NavLink to=\"/\">\r\n        <CmtImage src={logoUrl} alt=\"logo\" />\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterLogo;\r\n","import React, { useContext } from 'react';\r\nimport FooterLogo from './FooterLogo';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppContext from '../../contextProvider/AppContextProvider/AppContext';\r\nimport { THEME_TYPES } from '../../../constants/ThemeOptions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  btnRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '6px 12px',\r\n      fontSize: 11,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = props => {\r\n  const classes = useStyles();\r\n  const { themeType } = useContext(AppContext);\r\n  const date = new Date();\r\n\r\n  return (\r\n    <Box className={classes.root} {...props}>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Hidden xsDown>\r\n          <FooterLogo mr={5} color={themeType === THEME_TYPES.DARK ? 'white' : ''} />\r\n        </Hidden>\r\n        <Box fontSize={{ xs: 12, sm: 14 }} component=\"p\" color=\"text.disabled\">\r\n          Copyright Company Name © {date.getFullYear()}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport Header from '../../partials/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  showTourOpt: true,\r\n  showFooterOpt: true,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n  drawerBreakPoint: defaultContext.drawerBreakPoint,\r\n  sidebarWidth: defaultContext.sidebarWidth,\r\n};\r\n\r\nconst VerticalDefault = ({ children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      className=\"verticalDefaultLayout\"\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter>\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalDefault;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport Header from '../../partials/Header';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport { SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst VerticalMinimal = ({ className, children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalMinimal;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { darken, makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '32px 10px 5px',\r\n    width: '100%',\r\n    '& .MuiAlert-root': {\r\n      padding: '0 20px 0 0',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      '& .MuiAlert-icon': {\r\n        padding: '16px 12px',\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Alerts = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          variant=\"filled\"\r\n          iconMapping={{ success: <CachedIcon fontSize=\"inherit\" /> }}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}>\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }>\r\n          A new version has been arrived, Click here to update jumbo 5.0\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { Hidden } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\n\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport Alerts from './Alerts';\r\nimport { HEADER_TYPE, SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  minimalNoHeader: {\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '& .Cmt-toggle-menu': {\r\n      color: theme.palette.text.primary,\r\n      marginLeft: 15,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  headerType: HEADER_TYPE.STATIC,\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst MinimalNoHeader = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalNoHeaderLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.minimalNoHeader}>\r\n          <Hidden lgUp>\r\n            <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n          </Hidden>\r\n          <Alerts />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        <LanguageSwitcher />\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default MinimalNoHeader;\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtDrawer from '../../../../../../@coremat/CmtDrawer';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  actionSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '24px 5px',\r\n    width: 65,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  contentArea: {\r\n    width: 300,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 557,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: '100vh',\r\n    padding: 30,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.dark, 0.38),\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst ActionBarDrawer = ({ activeOption, onIconClick, onDrawerClose, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtDrawer variant=\"temporary\" anchor=\"left\" onClose={onDrawerClose} {...rest}>\r\n      <Box className={clsx(classes.root)}>\r\n        <Box className={classes.actionSidebar}>\r\n          <IconButton className={classes.iconBtn} onClick={onDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box className={classes.contentArea}>\r\n          <PerfectScrollbar className={classes.scrollbarRoot}> </PerfectScrollbar>\r\n        </Box>\r\n      </Box>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nexport default ActionBarDrawer;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Hidden, IconButton, withWidth } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtDropdownMenu from '../../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport LayoutContext from '../../../../../../@coremat/CmtLayouts/LayoutContext';\r\n\r\nimport { AuhMethods } from '../../../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../../../constants/AppConstants';\r\nimport Logo from '../../../partials/Logo';\r\nimport ActionBarDrawer from './ActionBarDrawer';\r\nimport { useHistory } from 'react-router';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Link from '@mui/material/Link';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '10px 24px 10px 15px',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'column',\r\n      padding: '16px 5px',\r\n    },\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.9),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: <IntlMessages id={'account'} />,\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: <IntlMessages id={'logout'} />,\r\n  },\r\n];\r\n\r\nlet initSidebarWidth = 0;\r\nconst ActionSideBar = ({ width }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [isDrawerOpen, setDrawerStatus] = useState(false);\r\n  const [activeOption, setActiveOption] = useState(null);\r\n  const { isSidebarOpen, setSidebarOpen, sidebarWidth, setSidebarWidth } = useContext(LayoutContext);\r\n  const { setRolePages } = useContext(AppContext);\r\n  useEffect(() => {\r\n    initSidebarWidth = sidebarWidth;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSidebarOpen && (width === 'lg' || width === 'xl')) {\r\n      setSidebarWidth(0);\r\n    } else {\r\n      setSidebarWidth(initSidebarWidth);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSidebarOpen, width]);\r\n\r\n  useEffect(() => {\r\n    if (activeOption && !isDrawerOpen) {\r\n      setDrawerStatus(true);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeOption]);\r\n\r\n  const onItemClick = item => {\r\n    if (item.label.props.id === 'logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      setRolePages('0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30');\r\n      history.push('/signin');\r\n    }\r\n    if (item.label.props.id === 'account') {\r\n      history.push('/account');\r\n    }\r\n  };\r\n\r\n  const onIconClick = option => {\r\n    setActiveOption(option);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    setDrawerStatus(false);\r\n    setActiveOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'actionSidebar')}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <SidebarToggleHandler className={classes.iconBtn}>\r\n          {isSidebarOpen && (width === 'lg' || width === 'xl') && <CloseIcon />}\r\n        </SidebarToggleHandler>\r\n        <Hidden lgUp>\r\n          <Logo color=\"white\" ml={{ xs: 3, sm: 6 }} />\r\n        </Hidden>\r\n      </div>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} ml={{ xs: 'auto', lg: 'unset' }}>\r\n        <Box className={classes.iconBtn}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection={{ xs: 'row', lg: 'column' }}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          ml={{ xs: 'auto', lg: 'unset' }}>\r\n          <Link\r\n            href={`${process.env.PUBLIC_URL}KULLANIM-KILAVUZU-V1.1.pdf`}\r\n            download\r\n            mt={{ xs: '0', lg: '1rem' }}\r\n            style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n            <HelpIcon style={{ color: 'white' }} />\r\n          </Link>\r\n        </Box>\r\n        {isSidebarOpen && (width === 'lg' || width === 'xl') && (\r\n          <IconButton className={classes.iconBtn} onClick={() => setSidebarOpen(!isSidebarOpen)}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} mt={{ xs: 'unset', lg: 'auto' }}>\r\n        <CmtDropdownMenu\r\n          onItemClick={onItemClick}\r\n          TriggerComponent={<CmtAvatar src={'https://via.placeholder.com/150'} />}\r\n          items={actionsList}\r\n        />\r\n      </Box>\r\n\r\n      <ActionBarDrawer\r\n        activeOption={activeOption}\r\n        open={isDrawerOpen}\r\n        onDrawerClose={onDrawerClose}\r\n        onIconClick={onIconClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(ActionSideBar);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport ActionSideBar from './ActionSideBar';\r\nimport Logo from '../../partials/Logo';\r\nimport { THEME_TYPES } from '../../../../constants/ThemeOptions';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sidebarHeader: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: '60px',\r\n      marginBottom: '35px',\r\n      padding: '10px 20px 20px 20px',\r\n      height: 60,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  actionSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst ModernSideBar = ({ children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  const { themeType } = useContext(AppContext);\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      className={clsx('Cmt-modernLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      sidebar={\r\n        <CmtSidebar actionBar={<ActionSideBar />}>\r\n          <Hidden mdDown>\r\n            <Logo color={themeType !== THEME_TYPES.LIGHT ? 'white' : 'dark'} className={classes.sidebarHeader} />\r\n          </Hidden>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default ModernSideBar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false);\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n  headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      showFooterOpt: props.showFooterOpt ? props.showFooterOpt : true,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      props.drawerBreakPoint,\r\n      props.showFooterOpt,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-header': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'none',\r\n        marginRight: 10,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'block !important',\r\n        },\r\n      },\r\n      '& .Cmt-header-nav': {\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  appMain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-customizerBtn': {\r\n      top: 220,\r\n    },\r\n  },\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './MainContainer.style';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst MainContainer = ({ header, footer, sidebar, className, children }) => {\r\n  const { drawerBreakPoint, showFooter, showHeader } = useContext(LayoutContext);\r\n\r\n  const classes = useStyles({ drawerBreakPoint });\r\n\r\n  return (\r\n    <div className={clsx(classes.appRoot, className)}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {showHeader && header}\r\n            {children}\r\n            {showFooter && footer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtHorizontalLayout = ({ layoutOptions, children, header, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontalLayout;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headerNav: {\r\n    width: '100%',\r\n    minHeight: 46,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtHeaderNav = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.headerNav, 'Cmt-header-nav')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderNav;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerTop: {\r\n    width: '100%',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    fontSize: 14,\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderTop = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.headerTop} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderTop;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerMain: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderMain = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.headerMain, 'Cmt-headerMain')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderMain;\r\n","import React from 'react';\r\nimport { Box, Button, Divider } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  loginSection: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > .MuiDivider-root': {\r\n      height: 14,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      backgroundColor: theme.palette.text.secondary,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderLogin = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display=\"flex\" alignItems=\"center\" color=\"warning.main\">\r\n        <CachedIcon fontSize=\"small\" />\r\n        <div className=\"ml-3\">This is primary alert-check it out!</div>\r\n      </Box>\r\n      <div className={classes.loginSection}>\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Login\r\n        </Button>\r\n        <Divider className=\"Cmt-divider\" orientation=\"vertical\" />\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderLogin;\r\n","import React, { useContext, useImperativeHandle } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst SidebarToggleHandler = React.forwardRef(function SidebarToggleHandler(props, ref) {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isOpen: isSidebarOpen,\r\n  }));\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" ref={contentRef} onClick={() => setSidebarOpen(!isSidebarOpen)} {...props}>\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n});\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CmtDropdownMenu from '../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 10,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: 'Account',\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: 'Logout',\r\n  },\r\n];\r\n\r\nconst UserDropDown = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onItemClick = item => {\r\n    if (item.label === 'Logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(classes.profileRoot, 'Cmt-profile-pic')}>\r\n      <CmtDropdownMenu\r\n        onItemClick={onItemClick}\r\n        TriggerComponent={<CmtAvatar size=\"small\" src={'https://via.placeholder.com/150'} />}\r\n        items={actionsList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserDropDown;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, InputBase } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 450,\r\n    },\r\n    '& .Cmt-icon': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      position: 'relative',\r\n      flex: '1 1 auto',\r\n      width: '1%',\r\n      minWidth: 0,\r\n      height: 48,\r\n      borderRadius: '30px 0 0  30px',\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.08),\r\n      color: theme.palette.text.secondary,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n\r\n      '&:not(:last-child) .MuiOutlinedInput-root': {\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n      },\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.12),\r\n      },\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: '0 30px 30px 0',\r\n    height: '100%',\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nconst GlobalSearchForm = () => {\r\n  const classes = useStyles();\r\n  const [showCategories, setShowCategories] = React.useState(null);\r\n\r\n  const onShowCategories = event => {\r\n    setShowCategories(event.currentTarget);\r\n  };\r\n\r\n  const onHideCategories = () => {\r\n    setShowCategories(null);\r\n  };\r\n\r\n  return (\r\n    <Box pr={3} className={clsx(classes.searchRoot, 'Cmt-search')}>\r\n      <Box className={classes.inputGroup}>\r\n        <InputBase className={classes.inputText} placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <SearchIcon className={clsx('Cmt-icon')} />\r\n        <Box className={clsx(classes.inputGroupAppend, 'Cmt-inputGroupAppend')}>\r\n          <Button variant=\"outlined\" className={classes.button} endIcon={<ArrowDropDownIcon />} onClick={onShowCategories}>\r\n            Categories\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={showCategories}\r\n            keepMounted\r\n            open={Boolean(showCategories)}\r\n            onClose={onHideCategories}>\r\n            <MenuItem onClick={onHideCategories}>Option 1</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 2</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 3</MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GlobalSearchForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { alpha, darken, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport AppsMenu from '../AppsMenu';\r\nimport HeaderMessages from '../HeaderMessages';\r\nimport HeaderNotifications from '../HeaderNotifications';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport Logo from '../../Logo';\r\nimport SearchPopover from '../../SearchPopover';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport UserDropDown from '../../UserDropDown';\r\nimport GlobalSearchForm from '../../GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderTop = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderTop;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    boxShadow: '0 1px 8px -1px rgba(0,0,0,.2)',\r\n    position: 'relative',\r\n    zIndex: 99,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { children, className } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return <div className={clsx(classes.appHeader, className, 'Cmt-header')}>{children}</div>;\r\n};\r\n\r\nexport default CmtHeader;\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'Header',\r\n};\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    zIndex: 999,\r\n    '.Cmt-drawer-sidebar &': {\r\n      position: 'relative',\r\n    },\r\n    '& .scrollbar-container': {\r\n      height: '100vh',\r\n      width: '100%',\r\n    },\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtSidebarContent = ({ classes, children }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = props => {\r\n  const { children } = props;\r\n  const { isSidebarOpen, setSidebarOpen, drawerBreakPoint, sidebarWidth } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const classes = useStyles({ sidebarWidth, sidebarTheme });\r\n\r\n  if (matches) {\r\n    return (\r\n      <CmtDrawer\r\n        variant=\"temporary\"\r\n        open={isSidebarOpen}\r\n        onClose={() => setSidebarOpen(false)}\r\n        classes={{\r\n          paper: 'Cmt-drawer-sidebar',\r\n        }}>\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </CmtDrawer>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContentWrapper: {\r\n    position: 'relative',\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.appMainContentWrapper} bgcolor=\"background.main\">\r\n      <Box ref={contentRef} className={classes.appMainContent}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function CmtFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')} bgcolor=\"primary.main\">\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React, { cloneElement, isValidElement } from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link, handleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" disablePadding onClick={handleClick}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={clsx(classes.navText, 'Cmt-nav-text')}>\r\n          {name}\r\n        </Box>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n\r\n    '&.active > .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&.active > .Cmt-navCollapseBtn $subCollapse .Cmt-navCollapseBtn.active': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      '& $navCollapseBtnInner  .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& $navCollapseBtnInner > .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'absolute',\r\n    display: 'none',\r\n    top: 80,\r\n    left: 0,\r\n    zIndex: 2,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 200,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n\r\n    '& $navCollapseItem': {\r\n      top: 50,\r\n      left: '100%',\r\n      right: 'auto',\r\n    },\r\n  },\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n\r\n    '& > $navCollapseItem $navCollapseBtn:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: 0,\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navCollapseBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  subCollapse: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '& .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.textColor,\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n    '&.active .Cmt-nav-menu-link.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavCollapse.style';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const { name, icon, className, children = [] } = props;\r\n  const isExpandable = useMemo(() => children.length, [children]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding className={classes.navCollapseItem}>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} className={classes.subCollapse} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navCollapseBtn, `${open ? 'active' : ''}`, 'Cmt-navCollapseBtn')}>\r\n      <Box component=\"span\" className={classes.navCollapseBtnInner}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={classes.navText}>\r\n          {name}\r\n        </Box>\r\n        {isExpandable && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {isExpandable && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n      </Box>\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Box className={clsx(classes.navCollapse, 'Cmt-navCollapse', className, `${open ? 'active' : ''}`)}>{MenuCollapse}</Box>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navMega: {\r\n    position: 'static',\r\n    '&.Cmt-navMega-5': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 5)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-4': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 4)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-3': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 530,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 3)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-2': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 460,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 2)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navMegaBtn: {\r\n    position: 'static',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navMegaColumnsWrapper': {\r\n      display: 'flex',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navMegaBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navMegaColumnsWrapper: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 600,\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 80,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    margin: '0 auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  navMegaColumn: {\r\n    width: 'calc(100% / 3)',\r\n  },\r\n  navMegaColumnInner: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'unset',\r\n  },\r\n  navMegaColumnLabel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.text.primary,\r\n\r\n    '& .Cmt-icon-root': {\r\n      marginRight: 16,\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavMega.style';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst RenderIcon = ({ icon }) => {\r\n  const classes = useStyles();\r\n\r\n  if (icon && isValidElement(icon)) {\r\n    return cloneElement(icon, {\r\n      className: clsx(classes.iconRoot, '.Cmt-iconRoot', '.Cmt-icon-root'),\r\n    });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst NavMegaColumn = props => {\r\n  const classes = useStyles();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = useMemo(() => children.length, [children]);\r\n\r\n  const MenuItemChildren = totalItems ? (\r\n    <List component=\"div\" disablePadding className={classes.navMegaColumnItems}>\r\n      {children.map((item, index) => (\r\n        <NavMenuItem {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem component=\"div\" disableGutters className={clsx(classes.navMegaColumnInner, 'Cmt-navMegaColumnInner')}>\r\n      {name && (\r\n        <span className={classes.navMegaColumnLabel}>\r\n          <RenderIcon icon={icon} />\r\n          <span className={classes.navText}>{name}</span>\r\n        </span>\r\n      )}\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return <div className={clsx(classes.navMegaColumn, 'Cmt-navMega-column')}>{MenuCollapse}</div>;\r\n};\r\n\r\nconst NavMega = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const MenuItemColumns = totalItems ? (\r\n    <List component=\"div\" disablePadding className={clsx(classes.navMegaColumnsWrapper, 'Cmt-navMegaColumnsWrapper')}>\r\n      {children.map((item, index) => (\r\n        <NavMegaColumn {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navMegaBtn, 'Cmt-navMegaBtn', `${open ? 'active' : ''}`)}>\r\n      <span className={classes.navMegaBtnInner}>\r\n        <RenderIcon icon={icon} />\r\n        <span className={classes.navText}>{name}</span>\r\n        {totalItems > 0 && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {totalItems > 0 && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n      </span>\r\n      {MenuItemColumns}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.navMega, 'Cmt-navMega', `Cmt-navMega-${totalItems}`, `${open ? 'active' : ''}`)}>\r\n      {MenuCollapse}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMega;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport NavMega from './NavMega';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  horizontalNavMenu: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    marginLeft: -14,\r\n    marginRight: -14,\r\n  },\r\n}));\r\n\r\nconst CmtHorizontal = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={clsx(classes.horizontalNavMenu, 'Cmt-horizontalNavMenu')}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'mega':\r\n            return <NavMega {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport HeaderTop from '../../partials/Header/HeaderTop';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\n\r\nconst layoutOptions = {\r\n  showFooter: false,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalDefault = ({ className, children }) => {\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalDefaultLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderTop />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain bgcolor=\"primary.main\" color=\"white\">\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDefault;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-search': {\r\n      position: 'relative',\r\n      '& .MuiInputBase-input': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-inputGroupAppend': {\r\n      '& .MuiButton-root': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n        borderLeftColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box, alpha } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport GlobalSearchForm from '../../partials/GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport useStyles from './index.style';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport HeaderMain from './HeaderMain';\r\nimport clsx from 'clsx';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst HorizontalDark = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      className={clsx('Cmt-horizontalDarkLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDark;\r\n","import React from 'react';\r\nimport { Box, darken, Hidden, Toolbar } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Logo from '../../partials/Logo';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { minimalHorizontalMenus } from '../../partials/menus';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    minHeight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n    '& .Cmt-horizontalNavMenu': {\r\n      position: 'static',\r\n      '& .Cmt-navMegaBtn, & > .Cmt-navCollapse > .Cmt-navCollapseBtn': {\r\n        minHeight: 64,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainHeader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden mdDown>\r\n        <CmtHorizontal menuItems={minimalHorizontalMenus} />\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport MainHeader from './MainHeader';\r\nimport useStyles from './index.style';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalMinimal = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderMain>\r\n            <MainHeader />\r\n          </CmtHeaderMain>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalMinimal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { darken, Hidden } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <Hidden lgUp>\r\n          <AppsMenu />\r\n          <HeaderMessages />\r\n          <HeaderNotifications />\r\n        </Hidden>\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst HeaderTopMenus = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderTopMenus;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& > .Cmt-headerMain': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: 4,\r\n\r\n      '& .Cmt-navCollapseBtn': {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n      '& .Cmt-navCollapseBtn, & .Cmt-appIcon': {\r\n        color: theme.palette.horizontalNav.textColor,\r\n        '&:hover, &:focus': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n        '&.active': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '& > .Cmt-header-nav': {\r\n      minHeight: 54,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport HeaderMain from './HeaderMain';\r\nimport HeaderTopMenus from './HeaderTopMenus';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport useStyles from './index.style';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalTopMenu = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalTopMenuLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <HeaderTopMenus />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalTopMenu;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport globalStyles from '../../../theme/GlobalCss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuhMethods } from '../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../constants/AppConstants';\r\nimport { LAYOUT_TYPES } from '../../constants/ThemeOptions';\r\nimport VerticalDefault from './VerticalLayouts/VerticalDefault';\r\nimport VerticalMinimal from './VerticalLayouts/VerticalMinimal';\r\nimport MinimalNoHeader from './VerticalLayouts/MinimalNoHeader';\r\nimport ModernSideBar from './VerticalLayouts/ModernSidebar';\r\nimport HorizontalDefault from './HorizontalLayouts/HorizontalDefault';\r\nimport HorizontalDark from './HorizontalLayouts/HorizontalDark';\r\nimport HorizontalMinimal from './HorizontalLayouts/HorizontalMinimal';\r\nimport HorizontalTopMenu from './HorizontalLayouts/HorizontalTopMenu';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [showLayoutLoader, setLayoutLoader] = useState(true);\r\n  const { layout } = useContext(AppContext);\r\n  const { loadUser } = useSelector(({ auth }) => auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  globalStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(AuhMethods[CurrentAuthMethod].getAuthUser());\r\n    setLayoutLoader(false);\r\n  }, [dispatch]);\r\n\r\n  if (showLayoutLoader || !loadUser) {\r\n    return (\r\n      <div className={classes.circularProgressRoot}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (['/signin', '/signup', '/forgot-password'].includes(location.pathname)) {\r\n    return <div style={{ minHeight: '100vh', width: '100%' }}>{children}</div>;\r\n  }\r\n\r\n  switch (layout) {\r\n    case LAYOUT_TYPES.VERTICAL_DEFAULT: {\r\n      return <VerticalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL: {\r\n      return <VerticalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL_NO_HEADER: {\r\n      return <MinimalNoHeader children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR: {\r\n      return <ModernSideBar children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DEFAULT: {\r\n      return <HorizontalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DARK: {\r\n      return <HorizontalDark children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_MINIMAL: {\r\n      return <HorizontalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_TOP_MENU: {\r\n      return <HorizontalTopMenu children={children} />;\r\n    }\r\n    default:\r\n      return <VerticalDefault children={children} />;\r\n  }\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useContext, useMemo } from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { createTheme, jssPreset, StylesProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport AppLocale from '../../../i18n';\r\nimport AppLayout from '../AppLayout';\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst AppWrapper = ({ children }) => {\r\n  const { locale, theme } = useContext(AppContext);\r\n\r\n  const muiTheme = useMemo(() => {\r\n    return createTheme(theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <IntlProvider locale={AppLocale[locale.locale].locale} messages={AppLocale[locale.locale].messages}>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <StylesProvider jss={jss}>\r\n            <CssBaseline />\r\n            <AppLayout>{children}</AppLayout>\r\n          </StylesProvider>\r\n        </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import CryptoJS from 'crypto-js';\r\n\r\nexport const encryptData = (data, salt) => CryptoJS.AES.encrypt(JSON.stringify(data), salt).toString();\r\n\r\nexport const decryptData = (ciphertext, salt) => {\r\n  const bytes = CryptoJS.AES.decrypt(ciphertext, salt);\r\n  try {\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n","import { THEME_TYPES } from '../@jumbo/constants/ThemeOptions';\r\n\r\nexport const semiDarkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const darkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.DARK,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(0, 0, 0, 0.8)',\r\n      menuActiveBgColor: 'rgb(0, 0, 0, 0.5)',\r\n    },\r\n    common: {\r\n      dark: '#fff',\r\n    },\r\n    background: {\r\n      paper: '#121212',\r\n      default: '#2e2e2e',\r\n    },\r\n    text: {\r\n      primary: 'rgba(255, 255, 255, 0.87)',\r\n      secondary: 'rgba(255, 255, 255, 0.6)',\r\n      disabled: 'rgba(255, 255, 255, 0.38)',\r\n      hint: 'rgba(255, 255, 255, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(255, 255, 255, 0.06)',\r\n      dark: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#535151',\r\n      textColor: 'rgba(255, 255, 255, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#363636',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#535050',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#2e2e2e',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const lightTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nimport { decryptData } from '@jumbo/utils/secureData';\r\nconst validationUrl = window.appsettings.validationUrl || process.env.REACT_APP_VALIDATION_URL;\r\nconst url = window.appsettings.appUrl || process.env.REACT_APP_URL;\r\nconst port = window.appsettings.appPort || process.env.REACT_APP_PORT;\r\n\r\nconst date = new Date();\r\nconst day = date.getDate();\r\nconst month = date.getMonth() + 1;\r\nconst year = date.getFullYear();\r\n\r\nconst addZero = val => {\r\n  if (val < 0) {\r\n    return '0' + val;\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\nconst param = year + '-' + addZero(month) + '-' + addZero(day);\r\nexport const getOffset = async () => {\r\n  return await axios.get(`http://${url}:${port}/zone`);\r\n};\r\nconst timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\nexport const getInboundCalls = async param => {\r\n  let query = `SELECT count (distinct(call_id)),\r\n  to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time\r\n  FROM cl_segments_view_new\r\n  where  (date_trunc('day', NOW() - INTERVAL '${param} day') <= start_time) \r\n  and act != 1 \r\n  and dst_dn_type = 0\r\n  and src_dn_type = 1\r\n  group by start_time::timestamp::date\r\n  order by start_time::timestamp::date asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getDidData = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const sendCampaigns = async formData => {\r\n  return await axios.post(\r\n    `http://${url}:${port}/BIRENDPOINT`,\r\n    {\r\n      token: localStorage.getItem('token'),\r\n      data: formData,\r\n    },\r\n    {\r\n      headers: {\r\n        'content-type': 'multipart/form-data',\r\n      },\r\n    },\r\n  );\r\n};\r\nexport const getDidDataCount = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidNumbers = async () => {\r\n  let query = `\r\n  select \r\n  substring(conditiondata from '[0-9]+')  as conditiondata\r\n  from inboundrule\r\n  where conditiondata != '' \r\n  and substring(conditiondata from '[0-9]+') is not null\r\n  order by substring(conditiondata from '[0-9]+') asc`;\r\n\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getMonthlyDetails = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getMonthlyTotal = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getAgentList = async values => {\r\n  return await axios.post(`http://${url}:${port}/agentstatus`, values);\r\n};\r\n\r\nexport const getTrunksUp = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getTotalTrunks = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getExtensions = param => {\r\n  return axios.post(`http://${url}:${port}/extension`, param);\r\n};\r\n\r\nexport const getMissedCalls = async param => {\r\n  let query =\r\n    \"select to_char(date_trunc('day',t1.time_start), 'yyyy-mm-dd' ) as times, count(distinct(call_history_id)) from callcent_queuecalls_view t1 where t1.from_userpart != '' and (date_trunc('day', NOW() + INTERVAL '1 day') >=  t1.time_start) and  (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= t1.time_start) and is_answered = false group by times order by times\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getActiveCallCount = param => {\r\n  return axios.post(`http://${url}:${port}/activecallcount`, param);\r\n};\r\n\r\nexport const getOutboundCalls = async param => {\r\n  let query =\r\n    \"SELECT count (start_time::timestamp::date), to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time FROM cl_segments_view where dst_end_time - dst_answer_time != interval '00:00:00' and dst_caller_number like '%' and dst_answer_time is not null  and (date_trunc('day', NOW() + INTERVAL '1 day') >=  start_time) and (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= start_time) and dst_dn_type = 1 and src_dn_type = 0 and act != 0 group by start_time::timestamp::date order by start_time::timestamp::date asc\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getQueue = async () => {\r\n  const query = 'SELECT * FROM queue_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getRepetetiveAll = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(src_display_name) as cnt,\r\n\t  src_display_name \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'\r\n\t  group by src_display_name order by cnt desc\r\n\t  limit ${limit} offset ${allCallOffset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveAllCount = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(distinct(src_display_name)) as cnt \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveCallerDetails = async (param, callerNumber) => {\r\n  const query = `SELECT \r\n  src_display_name,\r\n  src_did,\r\n  dst_display_name,\r\n  to_char(dst_end_time-dst_answer_time ,'HH24h MIm SSs')as talkingtime,\r\n  to_char(dst_answer_time-dst_start_time,'HH24h MIm SSs') as waitingtime\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and src_dn_type = 1\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n  and src_display_name = '${callerNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getReturnedDropCall = async (limit, offset, agNum, qNum) => {\r\n  const string = `with recursive dropped as (\r\n    select \r\n    *\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() + INTERVAL '1 day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '0 day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false  \r\n  )\r\n  select\r\n  cl_segments_view_new.src_dn,\r\n  cl_segments_view_new.src_display_name,\r\n  to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_start_time,\r\n  to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_end_time,\r\n  cl_segments_view_new.dst_dn,\r\n  dropped.q_num,\r\n  to_char(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_start_time,'HH24:MI:SS') as duration\r\n  from dropped\r\n  left outer join cl_segments_view_new on (dropped.from_userpart = cl_segments_view_new.dst_dn)\r\n  where cl_segments_view_new.dst_start_time > dropped.time_start\r\n  and cl_segments_view_new.src_dn like '%${agNum}'\r\n  and dropped.q_num like '%${qNum}'\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getCdr = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMontlyLog = async (paramMonth, paramBack) => {\r\n  const query = `SELECT \r\n    DATE_TRUNC('month',start_time),\r\n    COUNT (distinct(call_id)) as toplam\r\n    FROM cl_segments_view_new\r\n    where (date_trunc('month', NOW() - INTERVAL '${paramBack + paramMonth - 1} month') <= start_time) \r\n    and  date_trunc('month',now() - interval '${paramMonth - 2} month') >= start_time\r\n    GROUP BY DATE_TRUNC('month',start_time)\r\n    ORDER BY DATE_TRUNC('month',start_time) desc`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getCallComparison = async (paramDate, paramBack) => {\r\n  const string =\r\n    \"select count (distinct(call_id)) , cast(sum(end_time-start_time) as text) as total, to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\" +\r\n    timeOffset +\r\n    \"') , 'yyyy-mm-dd HH24:MI:ss') as day_log,date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"') + '- \" +\r\n    paramBack +\r\n    \" day' <= start_time) and (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"')  + '1 day' >= start_time)  and act != 1 and start_time < end_time group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\" +\r\n    timeOffset +\r\n    \"') order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\" +\r\n    timeOffset +\r\n    \"') desc\";\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallComparisonDaily = async (paramDate, paramBack) => {\r\n  const string = `select count (distinct(call_id)),\r\n   sum(end_time-start_time) as total,\r\n   to_char(date_trunc('day',  start_time) , 'yyyy-mm-dd') as day_log,\r\n   date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act\r\n   from cl_segments_view_new\r\n   where (date_trunc('day',  TIMESTAMP '${paramDate}') + '-${paramBack} day' <= start_time) \r\n   and (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)  \r\n   and act != 1 \r\n   and start_time < end_time\r\n   group by date_trunc('day',  start_time) \r\n   order by date_trunc('day',  start_time) desc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLog = async paramDate => {\r\n  let string = `select \r\n  count (distinct(call_id)) ,\r\n  cast(sum(end_time-start_time) as text) as total,\r\n  to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new \r\n  where \r\n  (date_trunc('day',  TIMESTAMP '${paramDate} 00:00:00' ) <= start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate} 23:59:59' )  + '1 day' >= start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  and act != 1\r\n  and\r\n  end_time> start_time\r\n  group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n  order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') desc`;\r\n  // const str = `select\r\n  // count (distinct(call_id)) ,\r\n  // cast(sum(end_time-start_time) as text) as total,\r\n  // to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  // date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id)))\r\n  // as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  // and\r\n  // (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  // and act != 1\r\n  // and\r\n  // end_time> start_time\r\n  // group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  // order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLogTable = async paramDate => {\r\n  const string = ` select \r\n  to_char(date_trunc('day',  start_time),'dd-mm-yyyy HH24:MI:SS') as hour_log,\r\n  count (distinct(call_id)) , sum(end_time-start_time) as total,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new\r\n  where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  start_time<end_time\r\n  group by date_trunc('day',  start_time) \r\n  order by date_trunc('day',  start_time) desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getRepetetiveAnswered = async (param, limit, answeredCallsOffset) => {\r\n  const query =\r\n    \"SELECT count( src_display_name) as cnt,src_display_name FROM  cl_segments_view_new as t where dst_end_time - dst_answer_time != interval '00:00:00' and dst_answer_time is not null and src_display_name like '0%' and (date_trunc('day', timestamp '\" +\r\n    param.paramStart +\r\n    \"' - INTERVAL '0 day') <= start_time) and (date_trunc('day', timestamp '\" +\r\n    param.paramFinish +\r\n    \"' + INTERVAL '1 day') >=  start_time) and dst_dn_type = '0' group by src_display_name order by cnt desc limit \" +\r\n    limit +\r\n    ' offset ' +\r\n    answeredCallsOffset;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getRepetetiveAnsweredCount = async param => {\r\n  const string = `SELECT \r\n  count(distinct( src_display_name)) as cnt\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and dst_answer_time is not null\r\n  and src_display_name like '0%'\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time)\r\n  and dst_dn_type = '0'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetails = async (params, queue) => {\r\n  const query = `SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tto_char(sum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*),'HH24:MI:SS') as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >=  timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n\torder by (date_trunc('day' , callcent_ag_dropped_calls.time_start)) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetailsTotal = async (params, queue) => {\r\n  const query = `with recursive cte1 as (\r\n    SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*) as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >= timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n)\r\nselect\r\ncount(cte1.day_abandoned) as day_count,\r\nsum(cte1.cnt) as totalcount,\r\nsum(cte1.total_waiting) as totalwaiting,\r\nto_char(sum(cte1.act)/count(cte1.day_abandoned),'HH24:MI:SS') as act\r\nfrom cte1`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCalls = async (params, queue, agent) => {\r\n  // const query = `SELECT\r\n  // t1.from_userpart,\r\n  // to_char(date_trunc('second',t1.time_start + interval '3 hour'), 'yyyy-mm-dd HH24:MI:SS') as timeofevent,\r\n  // count(t1.is_answered),\r\n  // queue_view.display_name\r\n  // from callcent_queuecalls_view t1\r\n  // inner join queue_view on queue_view.dn = t1.q_num\r\n  // where\r\n  // t1.from_userpart != ''\r\n  // and\r\n  // queue_view.display_name like '%${queue}'\r\n  // and\r\n  // (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >=  t1.time_start)\r\n  // and\r\n  // (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start)\r\n  // and\r\n  // is_answered = false\r\n  // and\r\n  // reason_noanswercode != 2\r\n  // and\r\n  // reason_failcode = 1\r\n  // group by t1.from_userpart , timeofevent,queue_view.display_name\r\n  // order by timeofevent`;\r\n\r\n  const query = `SELECT\r\n  callcent_ag_dropped_calls.q_num,\r\n  callcent_ag_dropped_calls.ag_num,\r\n  callcent_queuecalls.from_displayname,\r\n  to_char(min(callcent_ag_dropped_calls.time_start at time zone 'utc${timeOffset}'),'yyyy-mm-dd HH24:MI:SS') as time_start,\r\n  to_char(max(callcent_ag_dropped_calls.time_end at time zone 'utc${timeOffset}'),'yyyy-mm-dd HH24:MI:SS') as time_end,\r\n  count(*)\r\n  from callcent_ag_dropped_calls\r\n  inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id\r\n  where\r\n  callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.time_start >= '${params.startDate}' \r\n  and callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n  and callcent_ag_dropped_calls.ag_num like '%${agent}'\r\n  ${queue === '' ? '' : \"and callcent_ag_dropped_calls.q_num like '%\" + queue + \"'\"}\r\n  group by callcent_ag_dropped_calls.q_num, callcent_ag_dropped_calls.ag_num, from_displayname\r\n  order by time_start`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCallDetails = async (params, from_userpart) => {\r\n  let newfromuserpart = from_userpart;\r\n  if (from_userpart.includes(':')) {\r\n    newfromuserpart = from_userpart.split(':')[0];\r\n  }\r\n  const query = `SELECT '<--' as direction,src_dn,to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') AS dst_start_time,to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_end_time,dst_end_time - dst_start_time as calltime from cl_segments_view_new where dst_dn like '%${newfromuserpart}%'\r\n  and (date_trunc('second', timestamp '${params}') <=  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n    union \r\n    SELECT  '-->' as direction, \r\n    from_userpart,\r\n    to_char(time_start at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    time_end - time_start as calltime \r\n    from callcent_queuecalls_view where from_userpart like '%${newfromuserpart}%'\r\n    and \r\n    is_answered = true \r\n    and (date_trunc('second', timestamp '${params}') <=  time_start at time zone 'Etc/GMT${timeOffset}') \r\n`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCalls = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getServiceLevel = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDropCall = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    q_num,\r\n    to_char(time_start at time zone 'utc${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'utc${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    ring_time,\r\n    from_userpart \r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day' ) >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n    order by time_start asc \r\n    LIMIT ${limit} OFFSET ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallSummary = async (paramStart, paramFinish) => {\r\n  const string = `    select\r\n\tto_char(date_trunc('day',time_start) , 'dd-mm-yyyy') as date,\r\n\tcount(distinct(call_history_id)),\r\n\tto_char(date_trunc('second',sum(ring_time)/count(distinct(call_history_id))),'HH24:MI:SS') as ring_time\r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n\tgroup by date_trunc('day',time_start)\t\r\n\torder by date_trunc('day',time_start) asc\r\n`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallCount = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    count(*)\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - INTERVAL '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day' ) <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getRecording = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return await axios.get(`http://${url}:${port}/downloadrecord/` + query);\r\n};\r\nexport const sendMail = async (emailAddress, mailSubject, mailBody, isHtml, directory = '', dirs = []) => {\r\n  let tempPath = [];\r\n  let tempAttch = [];\r\n  for (var i = 0; i < dirs.length; i++) {\r\n    let path = directory + '/' + dirs[i].split('/')[0];\r\n    let attachment = dirs[i].split('/')[1];\r\n    tempPath.push(path);\r\n    tempAttch.push(attachment);\r\n  }\r\n  return await axios.post(`http://${url}:${port}/mail`, {\r\n    toMail: emailAddress,\r\n    path: tempPath.join(',') || '',\r\n    attachment: tempAttch.join(',') || '',\r\n    subjact: mailSubject,\r\n    body: mailBody,\r\n    isHtml,\r\n  });\r\n};\r\n\r\nexport const getRecordingBytes = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return await fetch(`http://${url}:${port}/downloadrecord/${query}`);\r\n};\r\nexport const getPath = async () => {\r\n  return axios.get(`http://${url}:${port}/getRecordingPath`);\r\n};\r\n\r\nexport const getValidation = async (param, type) => {\r\n  const response = await axios.get(`http://${validationUrl}:${port}/api/validation/?string=${param}&type=${type}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserAuth = async (username, password) => {\r\n  const response = await axios.get(`http://${url}:${port}/password/${username}/${password}`, {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const getUserPass = async pass => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(`http://${url}:5600/api/userPass/?pass=` + encodeURIComponent(pass), config);\r\n  return response.data;\r\n};\r\n\r\nexport const getQueueList = async () => {\r\n  return axios.post(`http://${url}:${port}/queuewaiting`, {\r\n    token: localStorage.getItem('token'),\r\n  });\r\n};\r\n\r\nexport const getAgentConnection = async () => {\r\n  return axios.post(`http://${url}:${port}/detailconn`, { token: localStorage.getItem('token') });\r\n};\r\n\r\nexport const getActiveCalls = async () => {\r\n  return axios.get(`http://${url}:${port}/acd`);\r\n};\r\n\r\nexport const getAgentStatus = async pass => {\r\n  let query = `WITH RECURSIVE cte1 as (\r\n    select \r\n    dn.value,\r\n    ivr.name \r\n    from \r\n    dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    ) , \r\n    cte2 as (\r\n    select\r\n    * from callcent_ag_qstatus\r\n    where timeofupdate > date_trunc('day', timestamp '${pass}')\r\n    )\r\n  select\r\n  dn,\r\n  display_name,\r\n  coalesce((\r\n  select \r\n  case \r\n  when cte2.is_loggedin_in_queue = 0 then 'Login' \r\n  when cte2.is_loggedin_in_queue = 1 then 'Logout'\r\n  else cte1.name\r\n  end as status\r\n  from cte2\r\n  left outer join cte1 on cte1.value = cast(cte2.is_loggedin_in_queue as character varying)\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1  \r\n  ),'State') as states,\r\n  date_trunc('second',coalesce(now()- (\r\n  select \r\n  timeofupdate\r\n  from cte2\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1\r\n  ),'10000 hours')) as statusTime\r\n  from users_view t\r\n  order by dn asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getBlock = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:5600/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\nexport const getAgentNumber = async () => {\r\n  let string = 'SELECT * FROM users_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAgentDigitCount = async () => {\r\n  let string = 'SELECT dn FROM users_view order by dn asc limit 1';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueueNumber = async () => {\r\n  let string = 'SELECT * FROM public.queue_view order by dn asc';\r\n\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailyCallDetails = async mydate => {\r\n  let query = `WITH RECURSIVE cte1 AS (\r\n    select \r\n    * \r\n    from cl_segments_view_new\r\n    where \r\n    start_time > date_trunc('day', timestamp '${mydate}')\r\n    and\r\n\t  start_time<end_time\r\n    order by start_time desc\r\n    ), cte2 as (\r\n    select \r\n    (select count (distinct call_id) from cte1) as total_call,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 1 and dst_dn_type = 0) as inbound_calls,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 0 and dst_dn_type = 1) as outbound_calls,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 0 and dst_dn_type = 0) as agent_to_agent_calls,\r\n    (select count (distinct call_id) from cte1 inner join cte3 on cte1.dst_dn = cte3.dn where src_dn_type = 1 and dst_dn_type != 0) as queue_calls,\r\n    (select count (distinct call_id) from cte1 where src_dn_type = 1 and dst_dn_type = 0 and (act = 5 or act = 6)) as answered_inbound_calls,\r\n    (select sum(end_time-start_time) as totaltime from cte1),\r\n    (select sum(end_time-start_time) as inbound_totaltime from cte1 where src_dn_type = 1 and dst_dn_type = 0),\r\n    (select sum(end_time-start_time) as outbound_totaltime from cte1 where src_dn_type = 0 and dst_dn_type = 1),\r\n    (select sum(end_time-start_time) as agent_to_agent_totaltime from cte1 where src_dn_type = 0 and dst_dn_type = 0),\r\n    (select sum(end_time-start_time) as queue_totaltime from cte1 where src_dn_type = 0 and dst_dn_type != 0),\r\n    (select (date_trunc('second',(date_trunc('second', sum(end_time-start_time))/( select count (distinct cte1.call_id) from cte1 ))))as average from cte1)\r\n\t), cte3 as (SELECT * FROM public.queue_view order by dn asc)\r\n\tselect * from cte2`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getTotalCall = async (startTime, endTime) => {\r\n  let query = `\r\n    select \r\n    to_char(date_trunc('day',start_time) , 'dd-mm-yyyy') as date,\r\n    count (distinct call_id) as total_call\r\n    from cl_segments_view_new\r\n    where seg_type = 1 \r\n    and\r\n    dst_dn_type = 4 \r\n    and\r\n    (date_trunc('day', NOW() - interval '${endTime} day') >=  start_time)\r\n    and (date_trunc('day', NOW() - INTERVAL '${startTime} day') <= start_time)\r\n    group by date_trunc('day',start_time)\t\r\n\torder by date_trunc('day',start_time) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getTotalCallByDate = async (startDate, endDate, dst_dn) => {\r\n  let query = `\r\n    select \r\n    to_char(date_trunc('day',start_time) , 'dd-mm-yyyy') as date,\r\n    count (distinct call_id) as total_call\r\n    from cl_segments_view_new\r\n    where \r\n    seg_type = 1 \r\n    and\r\n    dst_dn_type = 4 \r\n    and\r\n    dst_dn like '%${dst_dn}' \r\n    and\r\n    start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    start_time<= date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    group by date_trunc('day',start_time)\t\r\n\torder by date_trunc('day',start_time) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getBreakTime = async () => {\r\n  let query = `select * from logouts`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakName = async () => {\r\n  let digits = (localStorage.getItem('digits') || 4).toString();\r\n  let min = '8072';\r\n  let max = '8079';\r\n  switch (digits) {\r\n    case '4':\r\n      min = '8072';\r\n      max = '8079';\r\n      break;\r\n    case '3':\r\n      min = '072';\r\n      max = '079';\r\n      break;\r\n    case '2':\r\n      min = '72';\r\n      max = '79';\r\n      break;\r\n    default:\r\n      min = '8072';\r\n      max = '8079';\r\n      break;\r\n  }\r\n  let query = `select \r\n  dn.value,\r\n  ivr.name,\r\n  dn.iddn \r\n  from dn \r\n  inner join ivr on dn.iddn = ivr.fkiddn\r\n  where cast(substring(dn.value from '[0-9]+') as bigint) >= ${min} \r\n  and cast(substring(dn.value from '[0-9]+') as bigint) <= ${max}\r\n  order by dn.value asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakName = async (breakName, breakId) => {\r\n  let query = `update ivr set name = '${breakName}'\r\n  where ivr.fkiddn = ${breakId}`;\r\n  return axios.post(`http://${url}:${port}/insertsingle`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakTime = async (breakTime, breakNumber) => {\r\n  let query = `update logouts set period = ${breakTime}\r\n  where logouttype = '${breakNumber}'`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentDetails = async (agentNum, date) => {\r\n  let query = `\r\n  with recursive cte1 as \r\n\t( \r\n\tselect\r\n\tdst_dn,\r\n\tdst_display_name,\t\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time) as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom \r\n\tcl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\t((dst_dn_type = 0))\r\n\tand\r\n\tdst_dn = '${agentNum}'\t\r\n\tand \r\n\tact != 1\r\n\tgroup by dst_dn,dst_display_name),\r\n  cte2 as (\r\n\tselect\r\n\tsrc_dn,\r\n\tsrc_display_name,\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time)as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom cl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\tsrc_dn = '${agentNum}'\t\r\n\tand\r\n\t((src_dn_type =0) and (dst_dn_type=1))\r\n\t\r\n\tand \r\n\tact != 1\r\n\tgroup by src_dn,src_display_name\r\n) \t\r\n\tselect dst_dn,\r\n\tdst_display_name,\r\n  coalesce(cte1.totalcall,0) as inboundtotalcall,\r\n\tcoalesce(cte2.totalcall,0) as outboundtotalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') as inboundtotaltime,\r\n\tcoalesce(cte2.totaltime ,'0 second') as outboundtotaltime,\r\n\tcoalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0) as totalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second') as totaltime,\r\n\tdate_trunc('second',((coalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second'))/(coalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0)))) as average,\r\n  date_trunc('second',((coalesce(cte1.totaltime,'0 second') /(coalesce(cte1.totalcall,1))))) as inboundaverage,\t\r\n\tdate_trunc('second',((coalesce(cte2.totaltime,'0 second')/(coalesce(cte2.totalcall,1))))) as outboundaverage,\r\n\tcoalesce(cte1.totalcall,0) as inbound_call_to_agent,\r\n\tcoalesce(cte2.totalcall,0) as outbound_call_to_agent,\r\n\t(select count(distinct(call_id)) from cl_segments_view_new \r\n\t where dst_answer_time is not null \r\n\t and dst_dn = cte1.dst_dn\r\n\t and start_time > date_trunc('day',timestamp '${date}')) as answered_call\r\n\tfrom cte1\r\n\tleft outer join cte2 on cte1.dst_dn = cte2.src_dn\r\n  \r\n\r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\n//agent cdr session\r\nexport const getAgentSession = async (agNum, qNum, breakName, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%${qNum}'\r\n    and\r\n    ag_num like '%${agNum}'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )\r\n    \r\n    select \r\n    cte2.ag_num,\r\n    cte2.q_num,\r\n    case\r\n    when cte2.mainreason = 0 then 'Login'\r\n    when cte2.mainreason = 1 then 'Logout'\r\n    else cte1.name\r\n    end as status,\r\n    to_char(cte2.escapetime , 'dd.HH24:MI:SS') AS escapetime,\r\n    (select timeofupdate from callcent_ag_qstatus where callcent_ag_qstatus.q_num = cte2.q_num and callcent_ag_qstatus.ag_num = cte2.ag_num and is_loggedin_in_queue = 1 order by timeofupdate limit 1 ) as lastlogin,\r\n    (select timeofupdate from callcent_ag_qstatus where callcent_ag_qstatus.q_num = cte2.q_num and callcent_ag_qstatus.ag_num = cte2.ag_num and is_loggedin_in_queue = 0 order by timeofupdate limit 1 ) as lastlogout\r\n   from cte2\t\r\n   left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n   where cast(cte2.mainreason as text) like '%${breakName}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSessionClicked = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte2.ag_num as Agent,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 1),'0 second')),'DDg HH24h MIm SSs') as Logout,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8072),'0 second')),'DDg HH24h MIm SSs') as \"m8072\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8073),'0 second')),'DDg HH24h MIm SSs') as \"m8073\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8074),'0 second')),'DDg HH24h MIm SSs') as \"m8074\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8075),'0 second')),'DDg HH24h MIm SSs') as \"m8075\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8076),'0 second')),'DDg HH24h MIm SSs') as \"m8076\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8077),'0 second')),'DDg HH24h MIm SSs') as \"m8077\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8078),'0 second')),'DDg HH24h MIm SSs') as \"m8078\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8079),'0 second')),'DDg HH24h MIm SSs') as \"m8079\" \r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n\t  where cte2.ag_num like '%${agNum}'\r\n    group by cte2.ag_num`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getInternalBreakTime = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num \r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte1.name,\r\n\t  to_char(sum(cte2.escapetime),'DDg HH24h MIm SSs')\r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n    where cte2.ag_num = '${agNum}'\r\n\t  and cte1.name is not null\r\n    group by cte1.name\r\n\t  order by sum(cte2.escapetime) desc\r\n\t  limit 5\r\n    `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentNumberV16 = async () => {\r\n  let string = 'SELECT dn,display_name FROM users_view order by dn asc';\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response.data;\r\n};\r\nexport const getIYSReport = async param => {\r\n  let string = '';\r\n  if (param.agent === 'All') {\r\n    string += `Select * from iysagents where issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  } else {\r\n    string += `Select * from iysagents where agent='${param.agent}' and issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  }\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/postgres/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getTeamsUsers = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamsusers`, values);\r\n};\r\n\r\nexport const getCsOnlineVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getcsonlinevoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const getCsTenantDialplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/gettenantdiaplan`, values);\r\n};\r\n\r\nexport const getCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamscallingpolicys`, values);\r\n};\r\n\r\nexport const changeCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changecallingpolicy`, values);\r\n};\r\n\r\nexport const changeCsVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changeteamsvoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const changeCsTenantDiaplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changetenantdiaplan`, values);\r\n};\r\n\r\nexport const getUserDetailsByUserId = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getuserbyid`, values);\r\n};\r\n\r\nexport const getQueueAnswerReport = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    inner join cte2 on cl_segments_view_new.dst_dn = cte2.dn\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  ), cte2 as (SELECT * FROM public.queue_view order by dn asc)\r\n  select \r\n  to_char(cte1.dst_start_time,'yyyy-mm-dd') as dst_start_time,\r\n  sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)) as waiting_time,\r\n  sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time) as talking,\r\n  cte1.src_display_name,\r\n  cte1.dst_dn\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n  ORDER BY cte1.dst_start_time ${order}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportCount = async (startDate, endDate, queueNum, src) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n/*with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '$12-17-2021' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view\r\n  left outer join cte1 on cl_segments_view.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view.dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n  and\r\n  cl_segments_view.dst_start_time<=date_trunc('day', timestamp '12-17-2021' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2\r\n  \r\n*/\r\n\r\nexport const getQueueAnswerReportSummary = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `    \r\n    with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name,\r\n\t  src_did\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n\tand\r\n\tsrc_did != ''\r\n\tand\r\n\tdst_dn_type != 6\r\n  )\r\n  select\r\n  'Total' as total,\r\n  to_char(date_trunc('day' , cte1.dst_start_time), 'dd-mm-yyyy') as date,\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  group by date_trunc('day' , cte1.dst_start_time)\r\n  ORDER BY date_trunc('day' , cte1.dst_start_time)  ASC\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportSummaryTotal = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n    and\r\n    src_did != ''\r\n    and\r\n    dst_dn_type != 6\r\n  )\r\n  select\r\n  count(distinct(date_trunc('day' , cte1.dst_start_time))),\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act  \r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummary = async (startTime, endTime) => {\r\n  let string = `select * from cl_daily_summary_proc('${startTime}','${endTime}')`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryTotal = async (startTime, endTime) => {\r\n  let string = `\r\n  with recursive cte1 as (\r\n  select * from cl_daily_summary_proc('${startTime}','${endTime}')  \r\n  )\r\n  select\r\n'Total' as datetime,\r\nsum(cte1.totalcall) as totalcall,\r\nsum(cte1.answered) as answered,\r\nto_char(sum(cast(cte1.inboundtime as interval)), 'HH24:MI:ss') as inboundtime,\r\nto_char(sum(cast(cte1.waitingtime as interval)), 'HH24:MI:ss') as waitingtime,\r\nto_char(sum(cast(cte1.averageconnection as interval))/count(cte1.averageconnection), 'HH24:MI:ss') as averageconnection,\r\nsum(cte1.abondened) as abondened,\r\nsum(cte1.transfer) as transfer,\r\nto_char(sum(cast(cte1.long_time as interval)), 'HH24:MI:ss') as long_time,\r\nsum(cte1.zdisi) as zdisi,\r\nto_char(sum(cast(cte1.average_abondened_waiting as interval))/count(cte1.average_abondened_waiting), 'HH24:MI:ss') as average_abondened_waiting,\r\nsum(cte1.rona) as rona,\r\nsum(cte1.outbound) as outbound,\r\nto_char(sum(cast(cte1.outbound_time as interval)), 'HH24:MI:ss')as outbound_time,\r\nto_char(sum(cast(cte1.average_outbound_time as interval))/count(cte1.average_outbound_time), 'HH24:MI:ss') as average_outbound_time\r\nfrom cte1\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummary = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by src_dn\r\n  ), answerInb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as ansInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by dst_dn\t\r\n  ), answerOutb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as ansOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n  \r\n  select\r\n    age.dn as id,\r\n    age.display_name,\r\n    coalesce(inb.cntInbound,0) as total_inbound,\r\n    coalesce(outb.cntOutbound,0) as total_outbound,\r\n    coalesce(answerInb.ansInbound,0) as answered_inbound,\r\n    coalesce(answerOutb.ansOutbound,0) as answered_outbound\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn \r\n    left outer join answerInb on answerInb.dst_dn = age.dn\r\n    left outer join answerOutb on answerOutb.src_dn = age.dn\r\n    where age.dn like '%${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalled = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn like '%${agentNum}'\r\n    and dst_dn_type = 1\r\n    and act != 1\r\n  )\r\n  select \r\n  dst_display_name as en_uzun_aranan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n   dst_answer_time is not null\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCaller = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and act!= 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_uzun_arayan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  and\r\n  dst_answer_time is not null\r\n\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalledAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn ='${agentNum}' \r\n    and act != 1\r\n    and dst_dn_type = 1\r\n    order by dst_start_time desc\r\n  )\r\n  select \r\n  dst_display_name as en_cok_aranan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1  \r\n  group by dst_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCallerAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_cok_arayan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  group by src_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAgentTotalCall = (startTime, cte) => {\r\n  let string = `with recursive cte1 as(select * from cl_segments_daily_statics('${startTime}','${startTime}')),cte2 as (select src_did,count(distinct(call_id)) as callDid from cte1 where src_did != '' group by src_did order by count(distinct(call_id)) desc limit 5),cte3 as (select dst_display_name,count(distinct(call_id)) as agentCall from cte1 where dst_dn_type = 0 group by dst_display_name order by count(distinct(call_id)) desc limit 5) select * from ${cte}`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getWallBoardVoiceMail = async agentNum => {\r\n  let string = `SELECT count(distinct(call_id)) \r\n  FROM public.cl_segments_view_new where dst_caller_number = 'Ext.9999' \r\n  and dst_start_time > date_trunc('day',Now()) \r\n  and act != 1\r\n  and src_dn_type = 1 and \r\n  dst_dn = '${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getWallBoardLongTime = async agentNum => {\r\n  let string = `select\r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(dst_end_time - dst_start_time as text) as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  dst_dn = '${agentNum}' --parameter\r\n  and\r\n  dst_answer_time is not null\r\n  order by duration desc\r\n  limit 1`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getVersion = async () => {\r\n  return axios.get(`http://${url}:${port}/version`);\r\n};\r\n\r\nexport const getWallBoardWaitingTime = async agentNum => {\r\n  let string = `select \r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(sum(dst_answer_time - dst_start_time) as text)  as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  dst_answer_time is not null\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn = '${agentNum}'\r\n  group by dst_dn , dst_display_name`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getLogin = param => {\r\n  return axios.post(`http://${url}:${port}/login`, param);\r\n};\r\n\r\nexport const getCallLog = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogDetails = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogTotal = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogTotalSummary = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLogCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDashboardTops = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallDetail = async callid => {\r\n  /* OLD\r\nwith recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    )\r\n    select\r\n  */\r\n  let string = `with recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    coalesce(dst_answer_time,dst_end_time) as dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    order by seg_order\r\n    )\r\n    select\r\n    to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','yyyy-mm-dd HH24:MI:SS') as start_time,\r\n    to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'-dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','HH24h MIm SSs') as ring_time,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'-dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','HH24h MIm SSs') as duration,\r\n    src_display_name as callers,\r\n    dst_display_name as calleds,\r\n    case when act = 12 then 'Transfer' when act = 10 and act_dn_type != 0 then 'Karşılama' when act = 10 and act_dn_type = 0 then 'Yönlendirme' when act_dn_type = 4 then 'Açılış ' else '-' end as states,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','yyyy-mm-dd HH24:MI:SS') as end_time\r\n    from cte1\r\n    order by dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}' asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDidReportTotalCall = async (date, didNo) => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date[0]}'\r\n  and dst_start_time <= timestamp '${date[1]}'\r\n  and act != 1\r\n  and src_did like '%${didNo}'\r\n  order by call_id,start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDidReportAnsweredCall = async (date, didNo) => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date[0]}'\r\n  and dst_start_time <= timestamp '${date[1]}'\r\n  and act != 1\r\n  and src_did like '%${didNo}'\r\n  and dst_dn_type =0 \r\n  and dst_answer_time is not null\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDidReportNonAnsweredCall = async (date, didNo) => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date[0]}'\r\n  and dst_start_time <= timestamp '${date[1]}'\r\n  and act != 1\r\n  and src_did like '%${didNo}'\r\n  and dst_dn_type = 1\r\n  order by call_id,dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTotalCall = async date => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  order by call_id,start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalAnsweredCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and\r\n  dst_dn_type =0 \r\n  and\r\n  dst_answer_time is not null\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutOfTime = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act=13\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalAbondenedCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 0 and act=15\r\n  order by call_id,dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTransferCall = async date => {\r\n  let string = `with recursive cte1 as ( \r\n    select\r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    dst_dn_type =0\r\n    and dst_start_time >= timestamp '${date}'\r\n    and dst_end_time <= timestamp '${date}' + interval '1 day'\r\n    and act = 12 and dst_dn_type = 0 \r\n    )\r\n    select\r\n    cl_segments_view_new.call_id,\r\n    cl_segments_view_new.src_display_name as caller,\r\n    cte1.src_display_name as transferer,\r\n    cte1.dst_display_name as trasfered,\r\n    to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    inner join cte1 on cte1.call_id = cl_segments_view_new.call_id\r\n    where cl_segments_view_new.dst_start_time >= timestamp '${date}'\r\n    and cl_segments_view_new.dst_start_time <= timestamp '${date}' + interval '1 day'\r\n    and cl_segments_view_new.act != 1\r\n    and cl_segments_view_new.act != 12\r\n    order by cl_segments_view_new.call_id,cl_segments_view_new.dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalRonaCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_end_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and dst_dn_type = 0 and dst_answer_time is null\r\n  order by call_id,dst_end_time asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallTransferReport = async (agent, selectedStartTime, selectedEndTime) => {\r\n  let string = `select\r\n\tdst_display_name as transferer,\r\n\tact_display_name as trasfered,\r\n\tsrc_display_name as caller,\r\n\tto_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    src_dn_type = 1\r\n    and \r\n\tdst_start_time >= timestamp '${selectedStartTime}'\r\n    and \r\n\tdst_end_time <= timestamp '${selectedEndTime}' + interval '1 day' \r\n    and \r\n\tdst_dn_type = 0 \r\n\tand \r\n\tdst_answer_time is not null\r\n\tand\r\n\tact = 10 -- transfer\r\n\tand\r\n\tact_dn_type != 8 -- not parked\r\n\tand\r\n\tstart_time != end_time\r\n\tand\r\n\tdst_display_name like '%${agent}%'\r\n\torder by call_id,seg_order`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutCall = async date => {\r\n  let string = `select\r\n  call_id,\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 1\r\n  order by call_id,dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n//user CRUD\r\nexport const getUsers = async () => {\r\n  let string = `SELECT * FROM public.users ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getUsersRoleByName = async (name, token = localStorage.getItem('token')) => {\r\n  let string = `SELECT type FROM users where name = '${name}'`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token,\r\n    query: string,\r\n  });\r\n};\r\nexport const addUser = async (userName, pass, type) => {\r\n  let string = `INSERT INTO public.users(name, pass, type) VALUES ('${userName}', '${pass}', '${type}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateUser = async (id, userName, pass, type) => {\r\n  let string = `UPDATE public.users\tSET name='${userName}', pass='${pass}', type='${type}' WHERE id = ${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserByUserId = async userId => {\r\n  let string = `DELETE FROM public.users WHERE id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n//end user CRUD\r\n//role CRUD\r\nexport const getRoles = async () => {\r\n  let string = `SELECT * FROM roles`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getPagesOfRole = async rolename => {\r\n  let string = `SELECT accessablepages FROM roles where rolename = '${rolename}'`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getRolenames = async () => {\r\n  let string = `SELECT rolename FROM roles`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addRole = async (roleName, allowedPages) => {\r\n  let string = `INSERT INTO roles(rolename, accessablepages) VALUES ('${roleName}', '${allowedPages}')`;\r\n  return await axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateRole = async (roleName, allowedPages, oldrolename) => {\r\n  let string = `UPDATE roles SET rolename='${roleName}', accessablepages='${allowedPages}' WHERE rolename = '${oldrolename}'`;\r\n  return await axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteRoleByRolename = async roleName => {\r\n  let string = `DELETE FROM roles WHERE rolename = '${roleName}'`;\r\n  return await axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n//end role CRUD\r\nexport const getDepartmants = async () => {\r\n  let string = `SELECT * FROM public.departments ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepartmant = async name => {\r\n  let string = `INSERT INTO public.departments(name)VALUES ('${name}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateDepartmant = async (id, name) => {\r\n  let string = `UPDATE public.departments SET name='${name}' WHERE id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueues = async () => {\r\n  let string = `SELECT * FROM public.queue_view`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepOwnedQueues = async depId => {\r\n  let string = `SELECT * FROM public.department_queues where department_id = ${depId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `INSERT INTO public.department_queues(department_id, queue_id) VALUES (${depId}, ${queueId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId} and queue_id = ${queueId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedAllQueues = async depId => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserAllDepsWithDepId = async depId => {\r\n  let string = `DELETE FROM public.user_departments WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepWithDepId = async depId => {\r\n  let string = `DELETE FROM public.departments WHERE id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getUserOwndedDeps = async userId => {\r\n  let string = `SELECT * FROM public.user_departments where user_id = ${userId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUserOwndedDeps = async (userId, depId) => {\r\n  let string = `INSERT INTO public.user_departments(user_id, department_id) VALUES (${userId}, ${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDeps = async (userId, depId) => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId} and department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDepsByUserId = async userId => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAgentsRecordListenAuth = async () => {\r\n  let string = `SELECT * FROM public.agent_auth ORDER BY agent_num ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setAgentsRecordListenAuthByAgentId = async (agentId, auth) => {\r\n  let string = `UPDATE public.agent_auth SET record_listen=${auth} WHERE agent_num = '${agentId}';`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const changeAgentStatus = async agentId => {\r\n  return axios.post(`http://${url}:${port}/changestatus`, {\r\n    token: localStorage.getItem('token'),\r\n    agentDn: `${agentId}`,\r\n  });\r\n};\r\n\r\nexport const getTagsByCallId = async callId => {\r\n  let string = `SELECT * from tag WHERE call_id='${callId}';`;\r\n\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTagtextByCallId = async callId => {\r\n  let string = `SELECT tagtext from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const TagByID = async (tag, id) => {\r\n  const query = `UPDATE tag SET tagtext='${tag}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, tagtext)\r\n         SELECT ${id}, '${tag}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const getCallScoresByCallId = async callId => {\r\n  let string = `SELECT rating from tag WHERE call_id='${callId}';`;\r\n\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getSurveyScoresByCallId = async callId => {\r\n  let string = `SELECT \"supervisorId\" from tag WHERE call_id='${callId}';`;\r\n\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const ScoreByID = async (rating, id) => {\r\n  const query = `UPDATE tag SET rating='${rating}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, rating)\r\n         SELECT ${id}, '${rating}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const SubmitSurveyByID = async (callId, score, answersStr) => {\r\n  const query = `UPDATE tag SET note='${answersStr}',\"supervisorId\"='${score}' WHERE call_id=${callId};\r\n  INSERT INTO tag (call_id, note, \"supervisorId\")\r\n         SELECT ${callId}, '${answersStr}', '${score}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${callId});`;\r\n\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const getTagTypes = async () => {\r\n  let string = `SELECT * from public.tagtypes;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const addTagTypes = async (depName, tagMessage, depId) => {\r\n  let string = `INSERT INTO public.tagtypes(department, tagmassage,department_id) VALUES ('${depName}', '${tagMessage}',${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setTagTypes = async (depName, tagMessage, depId, id) => {\r\n  let string = `UPDATE public.tagtypes SET \r\n  tagmassage='${tagMessage}',\r\n  department='${depName}', \r\n  department_id=${depId} \r\n  WHERE \r\n  tagtypes_id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteTag = async id => {\r\n  let string = `DELETE FROM public.tagtypes WHERE tagtypes_id=${id}`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQualityReport = async (startTimeApi, endTimeApi, agentNo, agentName, score, limit, offset) => {\r\n  let agentNameFilter = agentName.length > 0 ? `and agent=ANY('{${agentName.join(',')}}')` : '';\r\n  let string = `SELECT ani, agent, score, status, \r\n  to_char(timeofinsertion at time zone 'utc${timeOffset}','yyyy-mm-dd HH24:MI:SS') as timeofinsertion \r\n  from csat where \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}') >=  timeofinsertion at time zone 'utc${timeOffset}') and\r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= timeofinsertion at time zone 'utc${timeOffset}') and\r\n  score like '%${score}' and\r\n  ani like '%${agentNo}%' ${agentNameFilter} limit ${limit} offset ${offset}`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQualityReportCount = async (startTimeApi, endTimeApi, agentNo, agentName, score) => {\r\n  let agentNameFilter = agentName.length > 0 ? `and agent=ANY('{${agentName.join(',')}}')` : '';\r\n  let string = `SELECT count(*) from csat where \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}') >=  timeofinsertion at time zone 'utc${timeOffset}') and\r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= timeofinsertion at time zone 'utc${timeOffset}') and\r\n  score like '%${score}' and\r\n  ani like '%${agentNo}%'\r\n  ${agentNameFilter}`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueuesByAgent = async param => {\r\n  const query = `SELECT queue_dn,queue_display_name FROM public.extensions_by_queues_view where extension_dn='${param}'`;\r\n\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const showBreaks = async agent => {\r\n  const query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n  ), cte2 as (SELECT to_char(\r\n        sum(timeofupdate - (select\r\n                  timeofupdate\r\n                  from\r\n                  callcent_ag_qstatus\r\n                  where\r\n                  ag_num = qs.ag_num\r\n                  and\r\n                  q_num = qs.q_num\r\n                  and\r\n                  qs.timeofupdate > timeofupdate\r\n                  order by timeofupdate desc\r\n                  limit 1)) , 'dd - HH24:MI:ss') as escapetime,\r\n        (select\r\n         is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) as mainreason,\r\n        ag_num,\r\n        q_num\r\n        FROM\r\n        callcent_ag_qstatus qs\r\n        where\r\n        ag_num like '${agent}'\r\n        and\r\n        is_loggedin_in_queue = 0\r\n        and\r\n        (select\r\n              is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) is not null\r\n        and\r\n       timeofupdate <= timestamp '${param} 23:59:59'\r\n        and\r\n        timeofupdate >= timestamp '${param} 00:00:00'\r\n        group by mainreason,ag_num,q_num\r\n        order by mainreason asc )\r\n        \r\n        select \r\n        cte2.ag_num,\r\n        cte2.q_num,\r\n        case\r\n        when cte2.mainreason = 0 then 'Login'\r\n        when cte2.mainreason = 1 then 'Logout'\r\n        else cte1.name\r\n        end as status,\r\n        cte2.escapetime\r\n        from cte2\r\n        left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const changeSessionStatus = async agent => {\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/changestatus`,\r\n    JSON.stringify({ token: localStorage.getItem('token'), agentDn: agent }),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const qstatus = async param => {\r\n  const response = await axios.post(`http://${url}:${port}/agentqueues`, JSON.stringify(param), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\nexport const getBreakNums = async () => {\r\n  const query = `select dn.value,ivr.name from dn full join ivr on dn.iddn=ivr.fkiddn  where value in ('8072','8073','8074','8075','8076','8077','8078','8079') order by value asc`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getDailyActiveCalls = async paramDate => {\r\n  //  acc.action  at time zone 'Etc/GMT${timeOffset}' ,\r\n  //doğrusu yukarıdaki gibi ama 3 saat ilerde getiriyor. nedenine daha sonra bakılacaktır\r\n  let string = `select \r\n  acc.action  at time zone 'utc',\r\n  acc.acc\r\n  from acc \r\n  where \r\n  acc.action  > timestamp '${paramDate} 00:00:00' at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'\r\n  and\r\n  acc.action  < timestamp '${paramDate} 23:59:59'  at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'\r\n  order by acc.action asc`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getTerminatedCallsByAgent = async (start_time, end_time, limit, offset, callTerminator) => {\r\n  let query = `SELECT * FROM public.cl_segments_view_new\r\n  where\r\n  start_time > '${start_time}'\r\n  and\r\n  end_time < '${end_time}'\r\n  and\r\n  (\r\n  (\r\n  act = 6\r\n  and\r\n  cast(dst_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  or\r\n  (\r\n  act = 5\r\n  and\r\n  cast(src_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  )\r\n  order by call_id, seg_order\r\n  limit ${limit} offset ${offset}`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query,\r\n  });\r\n};\r\nexport const getTerminatedCallsByAgentCount = async (start_time, end_time, callTerminator) => {\r\n  let query = `SELECT count(*) FROM public.cl_segments_view_new\r\n  where\r\n  start_time > '${start_time}'\r\n  and\r\n  end_time < '${end_time}'\r\n  and\r\n  (\r\n  (\r\n  act = 6\r\n  and\r\n  cast(dst_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  or\r\n  (\r\n  act = 5\r\n  and\r\n  cast(src_dn_type as text) like '%${callTerminator}'\r\n  )\r\n  )`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query,\r\n  });\r\n};\r\n\r\nexport const getAuditLog = async (startTime, endTime, limit, offset, username) => {\r\n  let string = `select to_char(actiontime at time zone 'utc${timeOffset}','yyyy-mm-dd HH24:MI:SS') as actiontime, pageuser, page \r\n  from audit where\r\n  actiontime >= '${startTime}' at time zone 'utc${timeOffset}'\r\n  and\r\n  actiontime < '${endTime}' at time zone 'utc${timeOffset}'\r\n  and\r\n  pageuser like '${username}%'\r\n  order by actiontime desc\r\n  limit ${limit} offset ${offset}`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAuditLogCount = async (startTime, endTime, username) => {\r\n  let string = `select count(*) from audit where\r\n  actiontime >= timestamp '${startTime}' at time zone 'utc${timeOffset}'\r\n  and\r\n  actiontime < timestamp '${endTime}' at time zone 'utc${timeOffset}'\r\n  and\r\n  pageuser like '${username}%'`;\r\n  return await axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setAuditLog = async activity => {\r\n  let cryptedData = localStorage.getItem('username');\r\n  let username = '-';\r\n  if (cryptedData) {\r\n    const salt = process.env.REACT_APP_CRYPTO_SECRET || 'DvSDbYSnkWzCbWpo3ivELWZY8wqF1Znc6Ts6oIs9lsC39sdh0L';\r\n    username = decryptData(cryptedData, salt);\r\n  }\r\n  let string = `INSERT INTO audit(actiontime, pageuser, page) VALUES \r\n  ('${new Date().toISOString()}', '${username}','${activity}')`;\r\n  return await axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getExpireDate = async () => {\r\n  return await axios.get(`http://${validationUrl}:5600/api/validation/?string=${url}&type=console`);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { decryptData } from '@jumbo/utils/secureData';\r\nimport AppContext from './AppContext';\r\nimport defaultContext from './defaultContext';\r\nimport { darkTheme, lightTheme, semiDarkTheme } from '../../../../theme/themeColors';\r\nimport { getOffset, getAgentDigitCount, getUsersRoleByName, getPagesOfRole } from 'api/api';\r\nconst initialThemeValue = defaultContext.theme;\r\nconst otherThemes = {\r\n  light: lightTheme,\r\n  'semi-dark': semiDarkTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  const [locale, setLocale] = useState(defaultContext.defaultLng);\r\n  const [theme, setTheme] = useState(initialThemeValue);\r\n  const [themeType, setThemeType] = useState(defaultContext.themeType);\r\n  const [layout, setLayout] = useState(defaultContext.layout);\r\n  const [cardRadius, setCardRadius] = useState(defaultContext.theme.overrides.MuiCard.root.borderRadius);\r\n  const [direction, setDirection] = useState(initialThemeValue.direction || 'rtl');\r\n  const [showTourGuide, setTourGuideStatus] = useState(false);\r\n  const [recordLoading, setRecordLoading] = useState(false);\r\n  const [rolePages, setRolePages] = useState(\r\n    '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30',\r\n  );\r\n  const contextValue = React.useMemo(() => {\r\n    return {\r\n      locale,\r\n      setLocale,\r\n      theme,\r\n      setTheme,\r\n      layout,\r\n      setLayout,\r\n      themeType,\r\n      setThemeType,\r\n      cardRadius,\r\n      setCardRadius,\r\n      direction,\r\n      setDirection,\r\n      showTourGuide,\r\n      setTourGuideStatus,\r\n      recordLoading,\r\n      setRecordLoading,\r\n      rolePages,\r\n      setRolePages,\r\n    };\r\n  }, [locale, theme, themeType, layout, direction, showTourGuide, cardRadius, recordLoading, rolePages]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      palette: {\r\n        ...prevState.palette,\r\n        ...otherThemes[themeType].palette,\r\n      },\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        ...otherThemes[themeType].overrides,\r\n      },\r\n    }));\r\n  }, [themeType]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        MuiCard: {\r\n          ...prevState.overrides.MuiCard,\r\n          root: {\r\n            ...prevState.overrides.MuiCard.root,\r\n            borderRadius: cardRadius,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  }, [cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      direction: direction,\r\n    }));\r\n    document.body.setAttribute('dir', direction);\r\n  }, [direction]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setThemeType(params.get('theme-type'));\r\n    }\r\n\r\n    if (params.get('layout')) {\r\n      setLayout(params.get('layout'));\r\n    }\r\n  }, [location.search]);\r\n  useEffect(() => {\r\n    getOffset().then(resp => {\r\n      if (parseInt(resp.data) > 0 || parseInt(resp.data) === 0) {\r\n        localStorage.setItem('timeoffset', `+${resp.data}`);\r\n      } else {\r\n        localStorage.setItem('timeoffset', resp.data);\r\n      }\r\n    });\r\n    getAgentDigitCount().then(resp => {\r\n      let digits = JSON.parse(resp.data.data)[0].dn.toString().length;\r\n      localStorage.setItem('digits', digits);\r\n    });\r\n    let company = localStorage.getItem('company') || '';\r\n    if (company !== null && company !== 'undefined' && company !== '') {\r\n      if (document.title.charAt(7) === '-') {\r\n        document.title = document.title.replace('-', `${company} -`);\r\n      } else {\r\n        var newTitle = `ESNEKS ${company} - V${process.env.REACT_APP_VERSION} - Admin Dashboard`;\r\n        document.title = newTitle;\r\n      }\r\n    }\r\n    let cryptedData = localStorage.getItem('username') || '';\r\n    const salt = process.env.REACT_APP_CRYPTO_SECRET || 'DvSDbYSnkWzCbWpo3ivELWZY8wqF1Znc6Ts6oIs9lsC39sdh0L';\r\n    if (cryptedData !== '') {\r\n      const username = decryptData(cryptedData, salt);\r\n      getUsersRoleByName(username).then(resp => {\r\n        let role = JSON.parse(resp.data.data)[0]?.type;\r\n        if (role !== 'Admin' && role !== undefined) {\r\n          getPagesOfRole(role).then(response => {\r\n            setRolePages(JSON.parse(response.data.data)[0].accessablepages);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst GridContainer = ({ children, ...rest }) => {\r\n  return (\r\n    <Grid container spacing={6} {...rest}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GridContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\n\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footerRoot: props => ({\r\n    ...props.separatorStyles,\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardFooter = ({ backgroundColor, gradientDirection, separator, children }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator, true);\r\n\r\n  const classes = useStyles({ separatorStyles });\r\n\r\n  return (\r\n    <Box className={clsx(classes.footerRoot, 'Cmtfooter-root')} style={backgroundStyles}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtCardFooter.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n};\r\n\r\nCmtCardFooter.defaultProps = {\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n};\r\n\r\nexport default CmtCardFooter;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { hexToRgba } from '../CmtHelpers/JssHelper';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  advCardRoot: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    height: '100%',\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  actionMenu: {\r\n    position: 'absolute',\r\n    top: 15,\r\n    right: 15,\r\n    zIndex: 4,\r\n    '& button': {\r\n      backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.5)',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.7)',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\nimport { Box, Card } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport useStyles from './index.style';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CmtAdvCard = ({\r\n  className,\r\n  actions,\r\n  actionHandleIcon,\r\n  actionHandler,\r\n  actionMenuClassName,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  children,\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.advCardRoot, className)}\r\n      style={backgroundStyles}>\r\n      {actions.length > 0 && (\r\n        <Box ml={2} className={clsx(classes.actionMenu, actionMenuClassName)}>\r\n          <CmtDropdownMenu\r\n            TriggerComponent={<IconButton size=\"small\">{actionHandleIcon || <MoreVertIcon fontSize=\"small\" />}</IconButton>}\r\n            items={actions}\r\n            onItemClick={actionHandler}\r\n          />\r\n        </Box>\r\n      )}\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtAdvCard.propTypes = {\r\n  actions: PropTypes.array,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionHandler: PropTypes.func,\r\n  actionMenuClassName: PropTypes.string,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtAdvCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  actions: [],\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n};\r\n\r\nexport default CmtAdvCard;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  advCardContent: props => ({\r\n    ...props.backgroundStyles,\r\n    padding: 24,\r\n    position: 'relative',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '&:before': props.overlayStyles\r\n      ? {\r\n          ...props.overlayStyles,\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0,\r\n          zIndex: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n        }\r\n      : {},\r\n  }),\r\n  alignCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    '& .Cmt-content-head': {\r\n      flexDirection: 'column',\r\n    },\r\n    '& .Cmt-avatar': {\r\n      marginRight: 0,\r\n      marginBottom: 15,\r\n    },\r\n  },\r\n  gridOrder1: {\r\n    order: 1,\r\n  },\r\n  gridOrder2: {\r\n    order: 2,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport useStyles from './CmtAdvCardContent.style';\r\nimport clsx from 'clsx';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst CmtAdvCardContent = ({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  extraContent,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  columnSizes,\r\n  alignCenter,\r\n  reverseDir,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles({ overlayStyles, backgroundStyles, alignCenter });\r\n  const alignCenterClass = alignCenter ? classes.alignCenter : {};\r\n  const blockClasses = reverseDir ? [classes.gridOrder1, classes.gridOrder2] : [classes.gridOrder2, classes.gridOrder1];\r\n  const [blockFirst, blockSecond] = blockClasses;\r\n\r\n  let extraContentRender = null;\r\n  if (extraContent) {\r\n    extraContentRender = typeof extraContent === 'function' ? extraContent() : extraContent;\r\n  }\r\n\r\n  return (\r\n    <Box className={clsx(classes.advCardContent, 'Cmt-card-content', 'CmtAdvCard-Content', className)} {...rest}>\r\n      {extraContentRender || icon || avatar || title || subTitle ? (\r\n        <Grid container spacing={6}>\r\n          <Grid\r\n            item\r\n            xs={alignCenter ? 12 : 12}\r\n            sm={alignCenter ? 12 : columnSizes[0] === 12 ? 12 : 6}\r\n            md={alignCenter ? 12 : columnSizes[0]}\r\n            className={clsx(blockFirst, alignCenterClass)}>\r\n            <Box>\r\n              <CmtContentHead\r\n                icon={icon}\r\n                avatar={avatar}\r\n                title={title}\r\n                titleProps={titleProps}\r\n                subTitle={subTitle}\r\n                subTitleProps={subTitleProps}\r\n              />\r\n            </Box>\r\n            {extraContentRender && <Box>{extraContentRender}</Box>}\r\n          </Grid>\r\n          {children && (\r\n            <Grid\r\n              item\r\n              xs={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 12}\r\n              sm={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 6}\r\n              md={alignCenter ? 12 : columnSizes[1]}\r\n              className={blockSecond}>\r\n              <Box width={1}>{children}</Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} md={12}>\r\n            <Box width={1}>{children}</Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtAdvCardContent.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  extraContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n  reverseDir: PropTypes.bool,\r\n  columnSizes: PropTypes.array,\r\n  alignCenter: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtAdvCardContent.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  reverseDir: false,\r\n  columnSizes: [6, 6],\r\n  alignCenter: false,\r\n  className: '',\r\n};\r\n\r\nexport default CmtAdvCardContent;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeaderRoot: {\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 12,\r\n    marginBottom: 2,\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  iconRoot: {\r\n    fontSize: 14,\r\n    display: 'block',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst apps = [\r\n  {\r\n    label: 'Andrioid App',\r\n    imageURL: '/images/dashboard/google_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n  {\r\n    label: 'IOS App',\r\n    imageURL: '/images/dashboard/apple_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    color: theme.palette.common.white,\r\n    padding: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    marginBottom: 7,\r\n    textTransform: 'uppercase',\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst DownloadApps = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard\r\n      className={classes.cardRoot}\r\n      backgroundColor={['#03DAC5 -18.96%', '#6200EE 108.17%']}\r\n      gradientDirection=\"180deg\">\r\n      <CmtAdvCardContent\r\n        title=\"Download Mobile Apps\"\r\n        titleProps={{\r\n          variant: 'body1',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Now, your account is on your fingers\"\r\n        subTitleProps={{\r\n          variant: 'h1',\r\n          component: 'div',\r\n          className: classes.subTitleRoot,\r\n        }}\r\n        extraContent={\r\n          <Box mt={5} mx={-2} display=\"flex\" alignItems=\"center\">\r\n            {apps.map((app, index) => (\r\n              <Box px={2} key={index}>\r\n                <Link href={app.link}>\r\n                  <CmtImage src={app.imageURL} />\r\n                </Link>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default DownloadApps;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport useStyles from './CryptoCard.style';\r\n\r\nconst CryptoCard = ({ title, amount, progress, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const headerSubTitle = (\r\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n      <div style={{ fontWeight: 'fontWeightBold', fontSize: 20 }}>{amount}</div>\r\n      <Box ml={2} fontSize={16} color={progress.color} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n        {progress.icon}\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CmtCard>\r\n      <CmtCardHeader\r\n        className={classes.cardHeaderRoot}\r\n        titleProps={{\r\n          variant: 'h6',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        title={title}\r\n        subTitle={headerSubTitle}\r\n      />\r\n      {children}\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\n\r\nimport GridContainer from '../../GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mbSpace: {\r\n    marginBottom: 16,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    name: 'USD',\r\n    code: 'usd',\r\n  },\r\n  {\r\n    name: 'INR',\r\n    code: 'inr',\r\n  },\r\n  {\r\n    name: 'EURO',\r\n    code: 'euro',\r\n  },\r\n];\r\n\r\nconst currencyRates = {\r\n  'usd-inr': 74,\r\n  'inr-usd': 0.0135,\r\n  'usd-euro': 0.89,\r\n  'euro-usd': 1.13,\r\n  'inr-euro': 0.0117,\r\n  'euro-inr': 85,\r\n  'inr-inr': 1,\r\n  'usd-usd': 1,\r\n  'euro-euro': 1,\r\n};\r\n\r\nconst ConversionResult = ({ fromCurrency, toCurrency, amount, convertedValue, currencyRate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box component=\"p\" mb={4} fontSize={12} color=\"text.primary\">\r\n        {`${amount} ${fromCurrency.name} equals`}\r\n      </Box>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.textPrimary, classes.mbSpace)}>\r\n        {convertedValue + ' ' + toCurrency.name}\r\n      </Typography>\r\n      <Box component=\"p\" fontSize={12} display=\"flex\" alignItems=\"center\" color=\"text.secondary\" mb={6}>\r\n        <span className=\"mr-2\">\r\n          {`@ 1 ${fromCurrency.name}`} = <span className={classes.textPrimary}>{`${currencyRate} ${toCurrency.name}`}</span>\r\n        </span>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConversionControls = ({ amount, setAmount, fromCurrency, setFromCurrency, toCurrency, setToCurrency }) => {\r\n  return (\r\n    <Box pb={{ xs: 6, md: 10, xl: 16 }}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>From</InputLabel>\r\n            <Select\r\n              label=\"From\"\r\n              value={fromCurrency}\r\n              onChange={event => setFromCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'from',\r\n                id: 'demo-controlled-open-select',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>To</InputLabel>\r\n            <Select\r\n              label=\"To\"\r\n              value={toCurrency}\r\n              onChange={event => setToCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'to',\r\n                id: 'demo-controlled-open-select-to',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Amount\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            fullWidth\r\n            style={{\r\n              marginTop: 0,\r\n              marginBottom: 0,\r\n            }}\r\n            value={amount}\r\n            onChange={e => setAmount(parseFloat(e.target.value))}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CurrencyCalculator = ({ title, titleProps, className }) => {\r\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\r\n  const [toCurrency, setToCurrency] = useState(currencies[1]);\r\n  const [amount, setAmount] = useState(0);\r\n  const [convertedValue, setConvertedValue] = useState(0);\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setCurrencyRate(currencyRates[`${fromCurrency.code}-${toCurrency.code}`]);\r\n    setConvertedValue(amount * currencyRate);\r\n  }, [fromCurrency, toCurrency, amount, currencyRate]);\r\n\r\n  const resetCalculator = () => {\r\n    setFromCurrency(currencies[0]);\r\n    setToCurrency(currencies[1]);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <CmtCard className={className}>\r\n      {title && <CmtCardHeader title={title} titleProps={titleProps} />}\r\n      <CmtCardContent>\r\n        <div>\r\n          <ConversionResult\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              amount,\r\n              convertedValue,\r\n              currencyRate,\r\n            }}\r\n          />\r\n          <ConversionControls\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              setFromCurrency,\r\n              setToCurrency,\r\n              amount,\r\n              setAmount,\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Button variant=\"outlined\" size={'large'} onClick={resetCalculator}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CurrencyCalculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.typography.body1,\r\n    color: theme.palette.text.primary,\r\n    wordBreak: 'break-word',\r\n    '& .anchor-link': {\r\n      marginTop: -96,\r\n      position: 'absolute',\r\n    },\r\n    '& pre, pre.language-jsx': {\r\n      margin: theme.spacing(0, 'auto'),\r\n      padding: theme.spacing(4),\r\n      backgroundColor: '#272c34',\r\n      direction: 'ltr',\r\n      borderRadius: 0,\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      maxWidth: 'calc(100vw - 32px)',\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: 'calc(100vw - 32px - 16px)',\r\n      },\r\n    },\r\n    '& code': {\r\n      direction: 'ltr',\r\n      lineHeight: 1.4,\r\n      display: 'inline-block',\r\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n      WebkitFontSmoothing: 'subpixel-antialiased',\r\n      padding: '0 3px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 229, 100, 0.2)' : 'rgba(255, 229, 100, 0.2)',\r\n      fontSize: '.85em',\r\n      borderRadius: 2,\r\n    },\r\n    '& code[class*=\"language-\"]': {\r\n      backgroundColor: '#272c34',\r\n      color: '#fff',\r\n      lineHeight: 1.5,\r\n    },\r\n    '& pre code': {\r\n      fontSize: '.9em',\r\n    },\r\n    '& .token.operator': {\r\n      background: 'transparent',\r\n    },\r\n    '& h1': {\r\n      ...theme.typography.h3,\r\n      fontSize: 40,\r\n      margin: '16px 0',\r\n    },\r\n    '& .description': {\r\n      ...theme.typography.h5,\r\n      margin: '0 0 40px',\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h4,\r\n      fontSize: 30,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h5,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h6,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.subtitle2,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& p, & ul, & ol': {\r\n      marginTop: 0,\r\n      marginBottom: 16,\r\n    },\r\n    '& ul': {\r\n      paddingLeft: 30,\r\n    },\r\n    '& h1, & h2, & h3, & h4': {\r\n      '& code': {\r\n        fontSize: 'inherit',\r\n        lineHeight: 'inherit',\r\n        wordBreak: 'break-all',\r\n      },\r\n      '& .anchor-link-style': {\r\n        display: 'none',\r\n      },\r\n      '&:hover .anchor-link-style': {\r\n        display: 'inline-block',\r\n        padding: '0 8px',\r\n        color: theme.palette.text.secondary,\r\n        '&:hover': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n        '& svg': {\r\n          width: '0.7em',\r\n          height: '0.7em',\r\n          fill: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n    '& table': {\r\n      display: 'block',\r\n      wordBreak: 'normal',\r\n      width: '100%',\r\n      overflowX: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderCollapse: 'collapse',\r\n      marginBottom: '16px',\r\n      borderSpacing: 0,\r\n      overflow: 'hidden',\r\n      '& .prop-name': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n      },\r\n      '& .required': {\r\n        color: theme.palette.type === 'light' ? '#006500' : '#a5ffa5',\r\n      },\r\n      '& .prop-type': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        color: theme.palette.type === 'light' ? '#932981' : '#ffb6ec',\r\n      },\r\n      '& .prop-default': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        borderBottom: `1px dotted ${theme.palette.divider}`,\r\n      },\r\n    },\r\n    '& td': {\r\n      ...theme.typography.body2,\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& td code': {\r\n      lineHeight: 1.6,\r\n    },\r\n    '& th': {\r\n      lineHeight: theme.typography.pxToRem(24),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      color: theme.palette.text.primary,\r\n      whiteSpace: 'pre',\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n    },\r\n    '& blockquote': {\r\n      borderLeft: '5px solid #ffe564',\r\n      backgroundColor: 'rgba(255,229,100,0.2)',\r\n      padding: '4px 24px',\r\n      margin: '24px 0',\r\n      '& p': {\r\n        marginTop: '16px',\r\n      },\r\n    },\r\n    '& a, & a code': {\r\n      color: theme.palette.secondary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n    '& img, video': {\r\n      maxWidth: '100%',\r\n    },\r\n    '& img': {\r\n      display: 'inline-block',\r\n    },\r\n    '& hr': {\r\n      height: 1,\r\n      margin: theme.spacing(6, 0),\r\n      border: 'none',\r\n      flexShrink: 0,\r\n      backgroundColor: theme.palette.divider,\r\n    },\r\n    '& kbd': {\r\n      padding: '2px 5px',\r\n      font: '11px Consolas,Liberation Mono,Menlo,monospace',\r\n      lineHeight: '10px',\r\n      color: '#444d56',\r\n      verticalAlign: 'middle',\r\n      backgroundColor: '#fafbfc',\r\n      border: '1px solid #d1d5da',\r\n      borderRadius: 3,\r\n      boxShadow: 'inset 0 -1px 0 #d1d5da',\r\n    },\r\n    '& .token.property, .token.tag, .token.constant, .token.symbol, .token.deleted': {\r\n      color: 'rgb(252, 146, 158)',\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    maxHeight: 'min(68vh, 1000px)',\r\n  },\r\n});\r\nconst useStyles = makeStyles(styles, { name: 'MarkdownElement', flip: false });\r\n\r\nconst MarkdownElement = React.forwardRef(function MarkdownElement(props, ref) {\r\n  const { className, renderedMarkdown, ...other } = props;\r\n  const classes = useStyles();\r\n  const more = {};\r\n\r\n  if (typeof renderedMarkdown === 'string') {\r\n    more.dangerouslySetInnerHTML = { __html: renderedMarkdown };\r\n  }\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.scrollbarRoot}>\r\n      <div className={clsx(classes.root, 'markdown-body', className)} {...more} {...other} ref={ref} />\r\n    </PerfectScrollbar>\r\n  );\r\n});\r\n\r\nMarkdownElement.propTypes = {\r\n  className: PropTypes.string,\r\n  renderedMarkdown: PropTypes.string,\r\n};\r\n\r\nexport default MarkdownElement;\r\n","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport MarkdownElement from './MarkdownElement';\r\nimport prism from '../../../utils/prism';\r\n\r\nconst HighlightedCode = React.forwardRef(function HighlightedCode(props, ref) {\r\n  const { code, language, ...other } = props;\r\n  const renderedCode = React.useMemo(() => {\r\n    return prism(code.trim(), language);\r\n  }, [code, language]);\r\n\r\n  return (\r\n    <MarkdownElement ref={ref} {...other}>\r\n      <pre>\r\n        <code\r\n          className={`language-${language}`}\r\n          // eslint-disable-next-line react/no-danger\r\n          dangerouslySetInnerHTML={{ __html: renderedCode }}\r\n        />\r\n      </pre>\r\n    </MarkdownElement>\r\n  );\r\n});\r\n\r\nHighlightedCode.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  language: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HighlightedCode;\r\n","import prism from 'prismjs';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-diff';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\n\r\nexport default function highlight(code, language) {\r\n  let prismLanguage;\r\n  switch (language) {\r\n    case 'ts':\r\n      prismLanguage = prism.languages.tsx;\r\n      break;\r\n\r\n    case 'js':\r\n    case 'sh':\r\n      prismLanguage = prism.languages.jsx;\r\n      break;\r\n\r\n    case 'diff':\r\n      prismLanguage = { ...prism.languages.diff };\r\n      prismLanguage.deleted = /^[-].*$/m;\r\n      break;\r\n\r\n    default:\r\n      prismLanguage = prism.languages[language];\r\n      break;\r\n  }\r\n\r\n  if (!prismLanguage) {\r\n    if (language) {\r\n      throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\r\n    } else {\r\n      prismLanguage = prism.languages.jsx;\r\n    }\r\n  }\r\n\r\n  return prism.highlight(code, prismLanguage);\r\n}\r\n","import React from 'react';\r\n\r\nimport { CardActions, makeStyles } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: '8px 24px',\r\n  },\r\n}));\r\n\r\nconst CmtCardActions = ({ className, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardActions className={clsx(classes.root, className, 'CmtCard-Actions')} {...rest}>\r\n      {children}\r\n    </CardActions>\r\n  );\r\n};\r\n\r\nCmtCardActions.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CmtCardActions;\r\n","import React, { useState } from 'react';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport HighlightedCode from './HighlightedCode';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Collapse, IconButton, Snackbar, Tooltip } from '@material-ui/core';\r\nimport CmtCardActions from '../../../../@coremat/CmtCard/CmtCardActions';\r\nimport copy from 'clipboard-copy';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    overflow: 'unset',\r\n  },\r\n  cardContent: {\r\n    position: 'relative',\r\n    paddingBottom: 0,\r\n  },\r\n  cardContentInner: {\r\n    position: 'relative',\r\n    paddingBottom: 40,\r\n  },\r\n  actionButtons: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  collapseStyle: {\r\n    borderBottomRightRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottomLeftRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottom: `4px solid ${theme.palette.primary.main}`,\r\n    overflow: 'hidden',\r\n  },\r\n}));\r\n\r\nconst CodeViewerCard = ({ code, language, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(undefined);\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleCopyClick = async () => {\r\n    await copy(code);\r\n    setSnackbarMessage('The source code has been copied.');\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const showCodeLabel = collapsed ? 'Hide the source' : 'Show the source';\r\n\r\n  return (\r\n    <CmtCard {...rest} className={classes.card}>\r\n      <CmtCardContent className={classes.cardContent}>\r\n        <Box className={classes.cardContentInner}>\r\n          {children}\r\n          {code && (\r\n            <CmtCardActions className={classes.actionButtons}>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={showCodeLabel} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={() => setCollapsed(!collapsed)}>\r\n                  <CodeIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={'Copy the source'} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={handleCopyClick}>\r\n                  <FileCopyOutlinedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </CmtCardActions>\r\n          )}\r\n        </Box>\r\n      </CmtCardContent>\r\n\r\n      <Collapse className={classes.collapseStyle} in={collapsed}>\r\n        <HighlightedCode code={code} language={language} />\r\n      </Collapse>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={handleSnackbarClose} message={snackbarMessage} />\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CodeViewerCard;\r\n","import React from 'react';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeader: {\r\n    padding: 16,\r\n  },\r\n  cardBody: {\r\n    position: 'relative',\r\n  },\r\n  cardContent: {\r\n    padding: 16,\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    zIndex: 1,\r\n  },\r\n  chartTitle: {\r\n    marginBottom: 6,\r\n  },\r\n  chartSubTitle: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nconst StatisticsCard = ({ backgroundColor, title, titleProps, amount, description, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard backgroundColor={backgroundColor} {...rest}>\r\n      <CmtCardHeader className={classes.cardHeader} title={title} titleProps={titleProps} />\r\n      <Box className={classes.cardBody}>\r\n        <CmtAdvCardContent\r\n          className={classes.cardContent}\r\n          title={amount}\r\n          titleProps={{\r\n            variant: 'h1',\r\n            component: 'div',\r\n            className: classes.chartTitle,\r\n          }}\r\n          subTitle={description}\r\n          subTitleProps={{\r\n            className: classes.chartSubTitle,\r\n          }}\r\n          columnSizes={[12, 0]}\r\n        />\r\n        {children}\r\n      </Box>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default StatisticsCard;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#FA744F',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst MissedCallGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"card-img-bottom overflow-hidden\" width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time}({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color5\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#F79071\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#FA744F\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={0}\r\n          stackId=\"2\"\r\n          stroke=\"#FA744F\"\r\n          fill=\"url(#color5)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MissedCallGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneMissed';\r\nimport MissedGraph from './MissedCallGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst MissedCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.missed'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#8DCD03' }}>\r\n        <MissedGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissedCall;\r\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#8d46ef',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport useStyles from './InboundStyle';\r\n\r\nconst InboundGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className={classes.root} width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time} ({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#6166B3\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#544179\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#6200EE\"\r\n          fill=\"url(#color3)\"\r\n          fillOpacity={1}\r\n          type={'monotone'}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default InboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneCallBackIcon from '@material-ui/icons/PhoneCallback';\r\nimport InboundGraph from './InboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst InboundRules = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.inbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ color: '#ffc107', icon: <PhoneCallBackIcon /> }}>\r\n        <InboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboundRules;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst HeaderChart = props => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const _stroke = ctx.stroke;\r\n    let label = [];\r\n    let countInbound = [];\r\n    let countOutbound = [];\r\n    let countMissed = [];\r\n    ctx.stroke = function() {\r\n      ctx.save();\r\n      ctx.shadowColor = '#4C4C4C';\r\n      ctx.shadowBlur = 10;\r\n      ctx.shadowOffsetX = 2;\r\n      ctx.shadowOffsetY = 2;\r\n      _stroke.apply(this, arguments);\r\n      ctx.restore();\r\n    };\r\n    const inbound = props.inbound;\r\n    const outbound = props.outbound;\r\n    const missed = props.missed;\r\n    for (var i = 0; i < inbound.length; i++) {\r\n      label[i] = inbound[i].start_time;\r\n      countInbound[i] = inbound[i].count;\r\n      countOutbound[i] = outbound[i] !== undefined ? outbound[i].count : 0;\r\n      countMissed[i] = missed[i] !== undefined ? missed[i].count : 0;\r\n    }\r\n\r\n    return {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: 'Inbound Calls',\r\n          data: countInbound,\r\n          borderColor: '#7F39FB',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#7F39FB',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#7F39FB',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Outbound Calls',\r\n          data: countOutbound,\r\n          borderColor: '#FF8C00',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#FF8C00',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#FF8C00',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Missed Calls',\r\n          data: countMissed,\r\n          borderColor: '#0795F4',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#0795F4',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#0795F4',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <Line data={data} height={100} options={options} />;\r\n};\r\n\r\nexport default HeaderChart;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    marginRight: 15,\r\n  },\r\n});\r\n\r\nconst HeaderChartItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box bgcolor={item.bgColor} color={item.color} className={classes.avatar}>\r\n        {item.icon}\r\n      </Box>\r\n      <Box fontSize={16} fontWeight={700} color=\"text.primary\">\r\n        {item.label}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default HeaderChartItem;\r\n","import React from 'react';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport SiteTrafficGraph from './HeaderChart';\r\nimport { PhoneCallback, PhoneMissed, PhoneForwarded } from '@material-ui/icons';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Item from './HeaderChartItem';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles(theme => ({\r\n  scrollbarRoot: {\r\n    maxHeight: 350,\r\n  },\r\n  searchAction: {\r\n    position: 'relative',\r\n    width: 38,\r\n    height: 38,\r\n  },\r\n  searchActionBar: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 2,\r\n    zIndex: 1,\r\n  },\r\n  cardContentRoot: {\r\n    '& .MuiGrid-container': {\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.15),\r\n    color: theme.palette.success.main,\r\n    padding: '2px 10px',\r\n    borderRadius: 30,\r\n  },\r\n  optionList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 24,\r\n\r\n    '& > *:not(:last-child)': {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up('md')]: {\r\n        marginRight: 40,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SiteTraffic = props => {\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n  const actions = [\r\n    {\r\n      label: <IntlMessages id={'select.menu.weekly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('weekly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.monthly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('monthly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.yearly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('yearly');\r\n      },\r\n    },\r\n  ];\r\n  const list = [\r\n    {\r\n      icon: <PhoneCallback />,\r\n      label: <IntlMessages id={'dashboard.inbound'} />,\r\n      bgColor: '#C8BDFA',\r\n      color: '#7F39FB',\r\n    },\r\n    {\r\n      icon: <PhoneMissed />,\r\n      label: <IntlMessages id={'dashboard.missed'} />,\r\n      bgColor: '#ADD8E6',\r\n      color: '#0795F4',\r\n    },\r\n    {\r\n      icon: <PhoneForwarded />,\r\n      label: <IntlMessages id={'dashboard.outbound'} />,\r\n      bgColor: '#FBF3D2',\r\n      color: '#FF8C00',\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CmtAdvCard>\r\n        <CmtCardHeader\r\n          className={clsx(classes.headerRoot, 'pt-4')}\r\n          title={<IntlMessages id={'dashboard.statistics'} />}\r\n          actionsPos=\"top-corner\"\r\n          actions={actions}\r\n          style={{ height: '10px' }}></CmtCardHeader>\r\n        <CmtAdvCardContent className={classes.cardContentRoot}>\r\n          <CmtList\r\n            className={classes.optionList}\r\n            data={list}\r\n            style={{ height: '25px' }}\r\n            renderRow={(item, index) => <Item key={index} item={item} />}\r\n          />\r\n          <Box>\r\n            <SiteTrafficGraph inbound={props.inbound} outbound={props.outbound} missed={props.missed} />\r\n          </Box>\r\n        </CmtAdvCardContent>\r\n      </CmtAdvCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteTraffic;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#4E8D7C',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst OutboundGraph = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <Box className={classes.tooltip}>\r\n                {(data.payload[0].payload.start_time)} ({data.payload[0].payload.count})\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color12\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#ADCE74\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#4E8D7C\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#4E8D7C\"\r\n          fill=\"url(#color12)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default OutboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneForwarded';\r\nimport OutboundGraph from './OutboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst OutboundCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.outbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#E00930' }}>\r\n        <OutboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboundCall;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport clsx from 'clsx';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  containerRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  containerRootCenter: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  contentRoot: {\r\n    position: 'relative',\r\n  },\r\n  contentRootCenter: {\r\n    marginLeft: 0,\r\n    marginTop: 13,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n  },\r\n}));\r\n\r\nconst CounterCard = ({\r\n  icon,\r\n  number,\r\n  numberProps,\r\n  label,\r\n  labelProps,\r\n  counterProps,\r\n  color,\r\n  gradientDirection,\r\n  alignCenter,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtCard gradientDirection={gradientDirection} {...rest}>\r\n      <CmtCardContent>\r\n        <Box\r\n          className={clsx(classes.containerRoot, 'container', {\r\n            [classes.containerRootCenter]: alignCenter,\r\n          })}\r\n          color={color}>\r\n          {typeof icon === 'string' ? <CmtImage src={icon} alt={label} /> : icon}\r\n          <Box\r\n            ml={{ xs: 3, xl: 5 }}\r\n            className={clsx(classes.contentRoot, 'content-wrapper', {\r\n              [classes.contentRootCenter]: alignCenter,\r\n            })}>\r\n            <Box component=\"h3\" fontSize={{ xs: 20, xl: 24 }} className={clsx(classes.titleRoot, 'title')} {...numberProps}>\r\n              {typeof number === 'string' ? (\r\n                number\r\n              ) : (\r\n                <CountUp start={0} end={number || 0} useEasing={false} separator={','} {...counterProps} />\r\n              )}\r\n            </Box>\r\n            <Box component=\"p\" {...labelProps}>\r\n              {label}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCounterCard.prototype = {\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  numberProps: PropTypes.object,\r\n  label: PropTypes.string,\r\n  labelProps: PropTypes.object,\r\n  counterProps: PropTypes.object,\r\n  color: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  alignCenter: PropTypes.bool,\r\n};\r\n\r\nCounterCard.defaultProps = {\r\n  color: 'common.white',\r\n  gradientDirection: '180deg',\r\n  alignCenter: false,\r\n};\r\n\r\nexport default CounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport { GroupOutlined } from '@material-ui/icons';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst TasksCounterCard = () => {\r\n  const [extensions, setExtensions] = useState('');\r\n  const [param] = useState({ token: localStorage.getItem('token') });\r\n  useEffect(() => {\r\n    api\r\n      .getExtensions(param)\r\n      .then(resp => setExtensions(resp.data.data.activeExtension + '/' + resp.data.data.totalExtension));\r\n  }, [param]);\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<GroupOutlined />}\r\n        number={String(extensions)}\r\n        label={<IntlMessages id={'dashboard.extensions'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksCounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cable from '@material-ui/icons/Link';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst Trunks = () => {\r\n  let totalquery = 'select * from public.externalline order by fkiddn ASC';\r\n  let trunksUpQuery = 'SELECT count(ipincontactreg) FROM gateway';\r\n\r\n  const [paramtotal] = useState({ token: localStorage.getItem('token'), query: totalquery });\r\n  const [paramTrunksUp] = useState({ token: localStorage.getItem('token'), query: trunksUpQuery });\r\n  const [totalTrunks, setTotalTrunks] = useState('');\r\n\r\n  const [trunksUp, setTrunksUp] = useState([{ count: 0 }]);\r\n  useEffect(() => {\r\n    api.getTotalTrunks(paramtotal).then(resp => setTotalTrunks(JSON.parse(resp.data.data)));\r\n    api.getTrunksUp(paramTrunksUp).then(resp => setTrunksUp(JSON.parse(resp.data.data)));\r\n  }, [paramtotal, paramTrunksUp]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<Cable />}\r\n        number={String(trunksUp[0].count) + '/' + String(totalTrunks.length)}\r\n        label={<IntlMessages id={'dashboard.trunks'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trunks;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport PhoneIcon from '@material-ui/icons/PhoneOutlined';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nconst ActiveCallCount = () => {\r\n  const [response, setactiveCount] = useState();\r\n  const [param] = useState({\r\n    token: localStorage.getItem('token'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.getActiveCallCount(param).then(resp => setactiveCount(resp.data.data.count));\r\n  }, [param]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<PhoneIcon />}\r\n        number={String(response)}\r\n        label={<IntlMessages id={'dashboard.active'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#EA4C4C -18.96%', '#C14545 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveCallCount;\r\n","export function Logout() {\r\n  localStorage.removeItem('login');\r\n  localStorage.removeItem('token');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5AnsweredCalls() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n        select\r\n        dn,\r\n        display_name\r\n        from\r\n        users_view\r\n      ), inb as (\r\n        select \r\n        dst_dn,\r\n        count(distinct(call_id)) as cntInbound\r\n        from\r\n        cl_segments_view\r\n        where start_time >= date_trunc('day',timestamp '${startTime}')\r\n        and dst_dn_type = 0\r\n        and dst_answer_time is not null\r\n        and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n        group by dst_dn\r\n      )\r\n      \r\n      select\r\n        age.display_name,\r\n        sum(coalesce(inb.cntInbound,0)) as total,\r\n        age.dn\r\n        from age\r\n        left outer join inb on inb.dst_dn = age.dn\r\n        where age.dn like '%'\r\n        group by age.display_name,age.dn\r\n        order by sum(coalesce(inb.cntInbound,0)) desc\r\n        limit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5answercalls'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && parseInt(data[1]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && parseInt(data[2]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && parseInt(data[3]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && parseInt(data[4]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Inbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5inbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name.split(':')[0]} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name.split(':')[0]} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name.split(':')[0]} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name.split(':')[0]} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name.split(':')[0]} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Outbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5outbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%', textTransform: 'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { QueryBuilder } from '@material-ui/icons';\r\n\r\nexport default function DashboardTop5TalkTime() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n\tsum(dst_end_time-dst_answer_time) as durationInb,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n\tsum(dst_end_time - dst_answer_time) as duration,  \r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n    select\r\n    age.display_name,\r\n\tage.dn,\r\n\tsum(outb.duration+inb.durationInb)\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn\r\n\twhere outb.duration+inb.durationInb is not null\r\n\tgroup by age.display_name,age.dn\r\n\torder by sum(outb.duration+inb.durationInb) desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  const totalseconds = items => {\r\n    let total = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i]?.sum.includes('.')) {\r\n        total += parseInt(items[i]?.sum.split('.')[0]) * 24 * 60 * 60;\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      } else {\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const checkDots = timeString => {\r\n    if (timeString === undefined) {\r\n      return '';\r\n    }\r\n    if (timeString?.includes('.')) {\r\n      let tempHour = parseInt(timeString.split('.')[0]) * 24 + parseInt(timeString.split('.')[1].split(':')[0]);\r\n      return tempHour + 'h ' + timeString.split(':')[1] + 'm ' + timeString.split(':')[2] + 's';\r\n    } else {\r\n      return timeString?.split(':')[0] + 'h ' + timeString?.split(':')[1] + 'm ' + timeString?.split(':')[2] + 's';\r\n    }\r\n  };\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5talktime'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[0]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[0]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[1]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[1]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[2]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[2]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[3]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[3]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[4]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[4]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DashboardTop5AnsweredCalls from './DashboardTop5AnsweredCalls';\r\nimport DashboardTop5Inbound from './DashboardTop5Inbound';\r\nimport DashboardTop5Outbound from './DashboardTop5Outbound';\r\nimport DashboardTop5TalkTime from './DashboardTop5TalkTime';\r\n\r\nexport default function DashboardTops() {\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <Grid item md={3}>\r\n          <DashboardTop5TalkTime />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5AnsweredCalls />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Inbound />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Outbound />\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MissedCalls from './MissedCalls';\r\nimport InboundRules from './InboundRules';\r\nimport HeaderChartComponent from './HeaderChartComponent';\r\nimport OutboundCall from './OutboundCall';\r\nimport Extensions from './Extensions';\r\nimport * as api from '../../../api/api';\r\nimport Trunks from './TrunksUp';\r\nimport ActiveCallCount from './ActiveCallCount';\r\nimport { useHistory } from 'react-router';\r\nimport { Logout } from 'services/auth/logout';\r\nimport DashboardTops from './Tops';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nconst breadcrumbs = [\r\n  { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n  { label: <IntlMessages id={'sidebar.dashboard'} />, isActive: true },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  orderLg1: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SamplePage = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  let date = new Date();\r\n\r\n  let totalInbound = 0;\r\n  let totalOutbound = 0;\r\n  let totalMissed = 0;\r\n  const [param, setParam] = useState(date.getDate());\r\n  const [inboundcalls, setInbound] = useState([]);\r\n  const [outboundcalls, setOutbound] = useState([]);\r\n  const [missedcalls, setMissedCalls] = useState([]);\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n  const sort = array => {\r\n    return array.sort((a, b) => {\r\n      let da = new Date(a.start_time.split('-')[1] + '/' + a.start_time.split('-')[0] + '/' + a.start_time.split('-')[2]);\r\n      let db = new Date(b.start_time.split('-')[1] + '/' + b.start_time.split('-')[0] + '/' + b.start_time.split('-')[2]);\r\n      return da - db;\r\n    });\r\n  };\r\n  if (missedcalls.length > 0) {\r\n    for (let i = 0; i < missedcalls.length; i++) {\r\n      totalMissed += parseInt(missedcalls[i].count);\r\n    }\r\n  }\r\n\r\n  if (outboundcalls.length > 0) {\r\n    for (let i = 0; i < outboundcalls.length; i++) {\r\n      totalOutbound += parseInt(outboundcalls[i].count);\r\n    }\r\n  }\r\n\r\n  if (inboundcalls.length > 0) {\r\n    for (let i = 0; i < inboundcalls.length; i++) {\r\n      totalInbound += parseInt(inboundcalls[i].count);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMissedCalls(param - 1)\r\n      .then(resp => setMissedCalls(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getOutboundCalls(param - 1)\r\n      .then(resp => setOutbound(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getInboundCalls(param - 1)\r\n      .then(resp => {\r\n        setInbound(JSON.parse(resp.data.data));\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [param, history]);\r\n\r\n  const inboundObject = inboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const outboundObject = outboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const missedObject = missedcalls.map(data => ({\r\n    start_time: data.times,\r\n    count: data.count,\r\n  }));\r\n\r\n  for (let d = new Date(date.getFullYear(), date.getMonth(), 1); d <= date; d.setDate(d.getDate() + 1)) {\r\n    if (!inboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      inboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!outboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      outboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!missedObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      missedObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n  }\r\n\r\n  const fetchData = array => {\r\n    const arr = sort(array);\r\n    if (param <= 7) {\r\n      return arr.slice(Math.max(arr.length - param, 0));\r\n    } else {\r\n      return arr;\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < inboundObject.length; i++) {\r\n    inboundObject[i].start_time = getNewDate(inboundObject[i].start_time);\r\n  }\r\n\r\n  for (let i = 0; i < outboundObject.length; i++) {\r\n    outboundObject[i].start_time = getNewDate(outboundObject[i].start_time);\r\n  }\r\n  for (let i = 0; i < missedObject.length; i++) {\r\n    missedObject[i].start_time = getNewDate(missedObject[i].start_time);\r\n  }\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"sidebar.dashboard\" />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <InboundRules setParam={setParam} date={date} data={fetchData(inboundObject)} total={totalInbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <OutboundCall setParam={setParam} date={date} data={fetchData(outboundObject)} total={totalOutbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <MissedCalls setParam={setParam} date={date} data={fetchData(missedObject)} total={totalMissed} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Grid item xs={12} xl={12} className={classes.orderLg1}>\r\n        <GridContainer>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <ActiveCallCount />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Extensions />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Trunks />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DashboardTops />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <HeaderChartComponent\r\n              date={date}\r\n              setParam={setParam}\r\n              inbound={fetchData(inboundObject)}\r\n              missed={fetchData(missedObject)}\r\n              outbound={fetchData(outboundObject)}\r\n            />\r\n          </Grid>\r\n        </GridContainer>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SamplePage;\r\n","import React from 'react';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, IconButton, InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  },\r\n  errorNumber: {\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 800,\r\n    lineHeight: 1,\r\n    marginBottom: 30,\r\n    textShadow: '10px 6px 8px hsla(0,0%,45.9%,.8)',\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .searchBtn': {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 50px 5px 15px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      '&:focus': {\r\n        boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Error404 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box fontSize={{ xs: 100, sm: 160 }} className={classes.errorNumber}>\r\n        404\r\n      </Box>\r\n      <Box fontSize={{ xs: 16, sm: 24 }} mb={8} color=\"grey.500\">\r\n        <IntlMessages id=\"extraPages.404Msg\" />\r\n      </Box>\r\n      <Box className={classes.searchRoot}>\r\n        <InputBase placeholder={'Search...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <IconButton className=\"searchBtn\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <IntlMessages id=\"extraPages.goHome\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@mui/material';\r\nimport { getExpireDate } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nconst bgImage = '/images/auth/auth-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authWrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: props => (props.variant === 'bgColor' ? `URL(${bgImage})` : ''),\r\n    backgroundPosition: props => (props.variant === 'bgColor' ? 'center center' : ''),\r\n    backgroundRepeat: props => (props.variant === 'bgColor' ? 'no-repeat' : ''),\r\n    backgroundSize: props => (props.variant === 'bgColor' ? 'cover' : ''),\r\n    position: 'relative',\r\n    padding: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: props => (props.variant === 'bgColor' ? alpha(theme.palette.primary.main, 0.5) : ''),\r\n    },\r\n  },\r\n  authCard: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    maxWidth: props => (props.variant === 'default' ? '850px' : '550px'),\r\n    width: '100%',\r\n    boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.14), 0px 3px 1px rgba(0, 0, 0, 0.12), 0px 1px 5px rgba(0, 0, 0, 0.2)',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: props => (props.variant === 'default' ? '1050px' : '750px'),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AuthWrapper = ({ children, variant }) => {\r\n  const classes = useStyles({ variant });\r\n  const [expdate, setExpDate] = useState('');\r\n  useEffect(() => {\r\n    getExpireDate().then(resp => {\r\n      const diffTime = new Date(resp.data[0].expiredate) - new Date();\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      setExpDate(diffDays);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {expdate !== '' && (\r\n        <Alert severity=\"warning\">\r\n          <AlertTitle>\r\n            <IntlMessages id={'license.expires.title'} />\r\n          </AlertTitle>\r\n          <IntlMessages id={'license.expires.body'} values={{ expdate }} />\r\n        </Alert>\r\n      )}\r\n      <Box className={classes.authWrap}>\r\n        <Box className={classes.authCard}>{children}</Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState, useContext } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Button, Link } from '@mui/material';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport GoogleChrome from '../../../../assets/Chrome_Logo.svg';\r\nimport Firefox from '../../../../assets/Firefox_Logo.svg';\r\nimport { encryptData } from '@jumbo/utils/secureData';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n\r\n  authContent: {\r\n    padding: 30,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  formcontrolLabelRoot: {\r\n    '& .MuiFormControlLabel-label': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst SignIn = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  let history = useHistory();\r\n  const [param, setParam] = useState({\r\n    name: '',\r\n    password: '',\r\n    type: 'console',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [loginState, setLoginState] = useState();\r\n  let data = [];\r\n  var myDate = new Date();\r\n  myDate.setDate(myDate.getDate() + 1);\r\n  data.push(myDate);\r\n\r\n  const classes = useStyles({ variant });\r\n  const { setRolePages } = useContext(AppContext);\r\n\r\n  const onSubmit = () => {\r\n    api\r\n      .getLogin(param)\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          setLoginState(resp.status);\r\n          localStorage.setItem('company', resp.data.data?.company || '');\r\n          const salt = process.env.REACT_APP_CRYPTO_SECRET || 'DvSDbYSnkWzCbWpo3ivELWZY8wqF1Znc6Ts6oIs9lsC39sdh0L';\r\n          const originalData = param.name;\r\n          const encryptedData = encryptData(originalData, salt);\r\n          localStorage.setItem('username', encryptedData);\r\n          localStorage.setItem('token', resp.data.data.token);\r\n          api.getUsersRoleByName(param.name, resp.data.data.token).then(resp => {\r\n            let role = JSON.parse(resp.data.data)[0]?.type;\r\n            if (role !== 'Admin' && role !== undefined) {\r\n              api.getPagesOfRole(role).then(response => {\r\n                setRolePages(JSON.parse(response.data.data)[0].accessablepages);\r\n              });\r\n            }\r\n          });\r\n          var tomorrow = new Date();\r\n          tomorrow.setDate(tomorrow.getDate() + 1);\r\n          localStorage.setItem('exptime', tomorrow.getTime());\r\n          if (resp.data.data?.company) {\r\n            if (document.title.charAt(7) === '-') {\r\n              document.title = document.title.replace('-', `${resp.data.data?.company} -`);\r\n            } else {\r\n              var newTitle = `ESNEKS ${resp.data.data?.company} - V${process.env.REACT_APP_VERSION} - Admin Dashboard`;\r\n              document.title = newTitle;\r\n            }\r\n          }\r\n          history.push('/dashboard');\r\n        }\r\n      })\r\n      .catch(response => {\r\n        NotificationManager.error(<IntlMessages id={'wrongpassword'} />, '', 3000);\r\n      });\r\n  };\r\n\r\n  function addNotification() {\r\n    onSubmit();\r\n  }\r\n\r\n  if (loginState === 200) {\r\n    localStorage.setItem('login', loginState);\r\n  }\r\n\r\n  let [, setVersion] = useState('0.0.0');\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const browser = (function() {\r\n    const test = function(regexp) {\r\n      return regexp.test(window.navigator.userAgent);\r\n    };\r\n    switch (true) {\r\n      case test(/edg/i):\r\n        return 'Edge';\r\n      case test(/opr/i) || test(/opera/i):\r\n        return 'Opera';\r\n      case test(/chrome/i) && !!window.chrome:\r\n        return 'Chrome';\r\n      case test(/MSIE/i):\r\n        return 'Internet Explorer 10-';\r\n      case test(/trident/i):\r\n        return 'Internet Explorer 11';\r\n      case test(/firefox/i):\r\n        return 'Firefox';\r\n      case test(/safari/i):\r\n        return 'Safari';\r\n      default:\r\n        return 'Other';\r\n    }\r\n  })();\r\n\r\n  useEffect(() => {\r\n    if (browser === 'Chrome' || browser === 'Firefox') {\r\n      handleClose();\r\n    }\r\n    api.getVersion().then(response => {\r\n      setVersion(response.data.version);\r\n    });\r\n  }, [browser]);\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      <NotificationContainer />\r\n\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/login-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={1}>\r\n          <CmtImage src={'/images/favicon.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot} style={{ fontFamily: 'Roboto' }}>\r\n          <IntlMessages id={'login'} />\r\n        </Typography>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addNotification(e);\r\n          }}>\r\n          <Box mb={1}>\r\n            <TextField\r\n              label={<IntlMessages id={'username'} />}\r\n              fullWidth\r\n              onChange={event => {\r\n                setParam({\r\n                  name: event.target.value,\r\n                  password: param.password,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id={'password'} />}\r\n              fullWidth\r\n              id=\"pass\"\r\n              onChange={event => {\r\n                setParam({\r\n                  name: param.name,\r\n                  password: event.target.value,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <IntlMessages id={'language'} />:\r\n            <LanguageSwitcher />\r\n          </div>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              <IntlMessages id={'login'} />\r\n            </Button>\r\n            <Link underline=\"none\" href={`${window.location.protocol}//${window.location.hostname}:3005`}>\r\n              <IntlMessages id={'userNagentLogin'} />\r\n            </Link>\r\n          </Box>\r\n        </form>\r\n        <p style={{ textAlign: 'center' }}>V{process.env.REACT_APP_VERSION}</p>\r\n        <Box>\r\n          <Typography style={{ textAlign: 'center', marginBottom: '1rem' }} component=\"div\" variant=\"h5\">\r\n            <IntlMessages id={'chooseBrowser'} />\r\n          </Typography>\r\n          <GridContainer>\r\n            <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              <Avatar alt=\"Google Chrome\" src={GoogleChrome} sx={{ mr: 1 }} /> <b>Google Chrome</b>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              <Avatar alt=\"Mozilla Firefox\" src={Firefox} sx={{ mr: 1 }} /> <b>Mozilla Firefox</b>\r\n            </Grid>\r\n          </GridContainer>\r\n        </Box>\r\n        {dispatch(AuhMethods[method].getSocialMediaIcons())}\r\n\r\n        <ContentLoader />\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\" style={{ textAlign: 'center' }}>\r\n          <IntlMessages id={'changeBrowser'} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\" component=\"div\">\r\n            <Typography style={{ textAlign: 'justify', marginBottom: '1rem' }} component=\"div\" variant=\"h5\">\r\n              <IntlMessages id={'chooseBrowser'} />\r\n            </Typography>\r\n            <GridContainer>\r\n              <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <Avatar alt=\"Google Chrome\" src={GoogleChrome} sx={{ mr: 1 }} /> <b>Google Chrome</b>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <Avatar alt=\"Mozilla Firefox\" src={Firefox} sx={{ mr: 1 }} /> <b>Mozilla Firefox</b>\r\n              </Grid>\r\n            </GridContainer>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>\r\n            <IntlMessages id={'close'} />\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const AppHeaderHeight = 72;\r\nexport const AppHeaderHeightSm = 64;\r\nexport const AppFooterHeight = 72;\r\nexport const AppFooterHeightSm = 64;\r\nexport const AppMainContentPadding = 60;\r\nexport const InBuildAppHeaderHeight = 70;\r\n\r\nexport const InBuildAppSidebarHeaderHeight = 86;\r\nexport const MailAppContentHeaderHeight = 78;\r\n\r\nexport const TaskDetailHeaderHeight = 72;\r\nexport const TaskDetailAddCommentHeight = 72;\r\n\r\nexport const ChatSidebarHeaderHeight = 124;\r\nexport const ChatSidebarTabContainerHeight = 49;\r\nexport const ChatFooterHeight = 70;\r\nexport const CurrentAuthMethod = 'basic'; //jwtAuth,firebase,basic\r\n\r\nexport const getAppSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppHeaderHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getMailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getContactContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskDetailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getWallHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport SignIn from '../../@jumbo/components/Common/authComponents/SignIn';\r\n\r\nconst Login = () => <SignIn variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport const localeText ={\r\n    toolbarExport: <IntlMessages id={'export'} />,\r\n    toolbarExportPrint: <IntlMessages id={'print'} />,\r\n    toolbarExportCSV: <IntlMessages id={'downloadasCSV'} />,\r\n    columnMenuUnsort: <IntlMessages id={'unsort'} />,\r\n    columnMenuSortAsc: <IntlMessages id={'sortbyASC'} />,\r\n    columnMenuSortDesc: <IntlMessages id={'sortbyDESC'} />,\r\n    columnMenuFilter: <IntlMessages id={'filter'} />,\r\n    columnMenuHideColumn: <IntlMessages id={'hide'} />,\r\n    columnMenuShowColumns: <IntlMessages id={'showcolumns'} />,\r\n    noRowsLabel: <IntlMessages id={'norows'} />,\r\n    columnsPanelTextFieldLabel: <IntlMessages id={'findColumn'} />,\r\n    columnsPanelTextFieldPlaceholder: <IntlMessages id={'columnTitle'} />,\r\n    columnsPanelDragIconLabel: <IntlMessages id={'reorderColumn'} />,\r\n    columnsPanelShowAllButton: <IntlMessages id={'showAll'} />,\r\n    columnsPanelHideAllButton: <IntlMessages id={'hideAll'} />\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { Switch, Menu, MenuItem } from '@mui/material';\r\nimport * as api from 'api/api';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function AgentTable({ rows, setReloadValues }) {\r\n  const [value, setValue] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [agentId, setAgentId] = useState('');\r\n  useEffect(() => {\r\n    api.getBreakNums().then(resp => setValue([...JSON.parse(resp.data)]));\r\n  }, []);\r\n\r\n  const handleChangeRecordAuth = (event, agentId) => {\r\n    api.setAgentsRecordListenAuthByAgentId(agentId, event.target.checked).then(res => {\r\n      setReloadValues(agentId + event + new Date().getTime());\r\n    });\r\n  };\r\n  const handleChangeQueueAuth = (event, agentId) => {};\r\n  const handleChangeStatus = (event, agentId) => {\r\n    if (!event.target.checked) {\r\n      setAgentId(agentId);\r\n      setAnchorEl(event.currentTarget);\r\n    } else {\r\n      api.changeAgentStatus(agentId).then(res => {\r\n        setReloadValues(agentId + event + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n  const handleClose = value => {\r\n    setAnchorEl(null);\r\n    const reg = /^\\d+$/;\r\n    if (reg.test(value)) {\r\n      api.changeSessionStatus(agentId).then(resp => {\r\n        setReloadValues(agentId + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n  const handleEndOfShift = () => {\r\n    setAnchorEl(null);\r\n    api.changeSessionStatus(agentId).then(() => {\r\n      api.qstatus({ agentDn: agentId, token: localStorage.getItem('token') });\r\n      setReloadValues(agentId + new Date().getTime());\r\n    });\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  const column = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    { field: 'id', headerName: <IntlMessages id={'agentnumber'} />, width: 300 },\r\n    { field: 'displayname', headerName: <IntlMessages id={'agentname'} />, width: 500 },\r\n    {\r\n      field: 'status',\r\n      headerName: <IntlMessages id={'stateRow'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch\r\n            checked={params.value === 'Active' ? true : false}\r\n            onChange={event => handleChangeStatus(event, params.id)}\r\n          />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'recordAuth',\r\n      headerName: <IntlMessages id={'reacordlistenauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeRecordAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'queueAuth',\r\n      headerName: <IntlMessages id={'agentqueueauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeQueueAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Agent Status'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Agent Durum'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Agentstatus'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Agentenstatus'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"rows\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam Agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Name des Agenten'\r\n                    : ''\r\n                }\r\n                value=\"displayname\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Status'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Statusagent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenstatus'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper>\r\n        <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n          <MenuItem onClick={() => handleEndOfShift()}>\r\n            <IntlMessages id={'shift.end'} />\r\n          </MenuItem>\r\n          {value.map((item, index) => (\r\n            <MenuItem key={index} onClick={() => handleClose(item.value)}>\r\n              {item.value} {item.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <div style={{ height: 700, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={column}\r\n            pageSize={100}\r\n            rowsPerPageOptions={[10, 25, 50, 100]}\r\n            localeText={localeText}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  textCapital: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  textAcc: {\r\n    textAlign: 'center',\r\n    '& a': {\r\n      marginLeft: 4,\r\n    },\r\n  },\r\n  alrTextRoot: {\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('sm')]: {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignUp = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const [name, setName] = useState('Demo User');\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const [password, setPassword] = useState('demo#123');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onRegister({ name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/sign-up-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={7}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          Create an account\r\n        </Typography>\r\n        <form>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.name\" />}\r\n              fullWidth\r\n              onChange={event => setName(event.target.value)}\r\n              defaultValue={name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id=\"appModule.password\" />}\r\n              fullWidth\r\n              onChange={event => setPassword(event.target.value)}\r\n              defaultValue={password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection={{ xs: 'column', sm: 'row' }}\r\n            alignItems={{ sm: 'center' }}\r\n            justifyContent={{ sm: 'space-between' }}\r\n            mb={3}>\r\n            <Box mb={{ xs: 2, sm: 0 }}>\r\n              <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n                <IntlMessages id=\"appModule.regsiter\" />\r\n              </Button>\r\n            </Box>\r\n\r\n            <Typography className={classes.alrTextRoot}>\r\n              <NavLink to=\"/signin\">\r\n                <IntlMessages id=\"signUp.alreadyMember\" />\r\n              </NavLink>\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n\r\n        <Box mb={3}>{dispatch(AuhMethods[method].getSocialMediaIcons())}</Box>\r\n\r\n        <Typography className={classes.textAcc}>\r\n          Have an account?\r\n          <NavLink to=\"/signin\">Sign In</NavLink>\r\n        </Typography>\r\n        <ContentLoader />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignUp from '../../@jumbo/components/Common/authComponents/SignUp';\r\n\r\nconst Register = () => <SignUp variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Register;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport { getQueueNumber } from 'api/api';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nexport default function CallLogtherFilters({\r\n  setDirectionApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setQueueDn,\r\n  setAnswerStatus,\r\n}) {\r\n  useEffect(() => {\r\n    getQueueNumber().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  let [queues, setQueues] = useState([]);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  let [directionSelect, setDirectionSelect] = useState('');\r\n  const handleDirectionSelect = event => {\r\n    setDirectionSelect(event.target.value);\r\n    setDirectionApi(event.target.value);\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [stateSelect, setStateSelect] = useState('');\r\n  const handleChangeStateSelect = event => {\r\n    setStateSelect(event.target.value);\r\n    setAnswerStatus(event.target.value);\r\n  };\r\n  let [advancedFilter, setAdvancedFilter] = useState([]);\r\n  const handleChangeAdvancedFilterSelect = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setAdvancedFilter(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  const handleChangeQueueSelect = event => {\r\n    if (event.target.value === 'all') {\r\n      setQueueSelect('');\r\n      setQueueDn('');\r\n    } else {\r\n      setQueueSelect(event.target.value);\r\n      setQueueDn(event.target.value);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!advancedFilter.includes('Queue')) {\r\n      setQueueDn('');\r\n      setQueueSelect('');\r\n    }\r\n  }, [advancedFilter, setQueueDn]);\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CompareArrowsIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'directionfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={directionSelect}\r\n                  label={<IntlMessages id={'direction'} />}\r\n                  onChange={handleDirectionSelect}>\r\n                  <MenuItem value=\"all\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' ||\r\n                sourceFilterSelect === 'numberfilter' ||\r\n                sourceFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : sourceFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' ||\r\n                targetFilterSelect === 'numberfilter' ||\r\n                targetFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : targetFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <QuestionAnswerIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={stateSelect}\r\n                  label={<IntlMessages id={'stateFilter'} />}\r\n                  onChange={handleChangeStateSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'CallLog.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'nonanswered'}>\r\n                    <IntlMessages id={'CallLog.filter.unanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'missed'}>\r\n                    <IntlMessages id={'missedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'transfered'}>\r\n                    <IntlMessages id={'dailysummary.transfer'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={advancedFilter}\r\n                  label={<IntlMessages id={'CallLog.filter.filter3'} />}\r\n                  onChange={handleChangeAdvancedFilterSelect}\r\n                  renderValue={() => \"\"}>\r\n                  <MenuItem value={'Queue'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Queue') > -1} />\r\n                    <ContactPhoneIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {advancedFilter.includes('Queue') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"queue-label\">\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"queue-label\"\r\n                    value={queueSelect}\r\n                    label={<IntlMessages id={'queueFilter'} />}\r\n                    onChange={handleChangeQueueSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {queues.map(que => (\r\n                      <MenuItem key={que.id} value={que.dn}>\r\n                        {que.dn} - {que.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog, getCallLogCount } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLogDateFilter from './DateFilter';\r\nimport CallLogtherFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallListeningFilter({ setData, limit, offset, setCount }) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [directionApi, setDirectionApi] = useState('');\r\n  let [directionSql, setDirectionSql] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n  let [didNumber, setDidNumber] = useState('');\r\n  let [queueDn, setQueueDn] = useState('');\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [answerStatusSql, setAnswerStatusSql] = useState('');\r\n\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  useEffect(() => {\r\n    if (directionApi === 'all') {\r\n      setDirectionSql('');\r\n    } else if (directionApi === 'inb') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'out') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%1' and\");\r\n    } else if (directionApi === 'agent') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'ques') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) not like '%0' and\");\r\n    }\r\n  }, [directionApi]);\r\n\r\n  useEffect(() => {\r\n    if (answerStatus === 'all') {\r\n      setAnswerStatusSql('');\r\n    } else if (answerStatus === 'answered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'answered'\");\r\n    } else if (answerStatus === 'nonanswered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'nonanswered'\");\r\n    } else if (answerStatus === 'transfered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'transfered'\");\r\n    } else if (answerStatus === 'missed') {\r\n      setAnswerStatusSql(\r\n        \"where statusofcall != 'transfered' and statusofcall != 'answered' and statusofcall != 'nonanswered'\",\r\n      );\r\n    }\r\n  }, [answerStatus]);\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as(  \r\n  SELECT\r\n  call_id, \r\n  src_did,\r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording') as recording_url,  \r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  when (act >= 400 and dst_dn_type = 13) then 'dışarı'\r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%'\r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time desc, seg_order desc\r\n  )\r\n  select \r\n  * \r\n  from cte2 \r\n  ${answerStatusSql} \r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as(  \r\n  SELECT\r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%' \r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax} \r\n  )\r\n  )select \r\n  count(*)\r\n  from cte2 ${answerStatusSql}`;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n        setDidNumber('');\r\n      }\r\n    } else if (sourceFilterText.startsWith('didno====')) {\r\n      setDidNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnLike('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceNumber('');\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n        setDidNumber('');\r\n      }\r\n    } else if (destinationFilterText.startsWith('didno====')) {\r\n      setDidNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogCount(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].count));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n  return (\r\n    <div>\r\n      <CallLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLogtherFilters\r\n        setDirectionApi={setDirectionApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setQueueDn={setQueueDn}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Typography, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { sendMail } from 'api/api';\r\nimport { Box } from '@mui/system';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function SendAudioRecords({ path, dirs }) {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  let curentLanguage = useIntl();\r\n  const handleSendClick = () => {\r\n    setLoading(true);\r\n    if (/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      let mailSubject =\r\n        curentLanguage.locale === 'en-EN'\r\n          ? 'Recording(s)'\r\n          : curentLanguage.locale === 'tr-TR'\r\n          ? 'Kayıt(lar)'\r\n          : curentLanguage.locale === 'nl-NL'\r\n          ? 'Opname(s)'\r\n          : curentLanguage.locale === 'de-DE'\r\n          ? 'Aufnahme(n)'\r\n          : 'Recording(s)';\r\n      let mailBody =\r\n        curentLanguage.locale === 'en-EN'\r\n          ? 'Recording(s) was/were attached.'\r\n          : curentLanguage.locale === 'tr-TR'\r\n          ? 'Kayıt(lar) ektedir.'\r\n          : curentLanguage.locale === 'nl-NL'\r\n          ? 'Opname(s) was/waren bijgevoegd.'\r\n          : curentLanguage.locale === 'de-DE'\r\n          ? 'Aufzeichnung(en) war/waren angehängt.'\r\n          : 'Recording(s) was/were attached.';\r\n      sendMail(email, mailSubject, mailBody, false, path, dirs)\r\n        .then(resp => {\r\n          if (resp.status === 200) {\r\n            if (resp.data.message === 'Send') {\r\n              NotificationManager.success(<IntlMessages id={'sendingSuccess'} />, '', 3000);\r\n              setEmail('');\r\n              setLoading(false);\r\n            }\r\n          } else {\r\n            NotificationManager.error(resp.data.message, '', 3000);\r\n            setLoading(false);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          NotificationManager.error(err.message, '', 3000);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      NotificationManager.warning(<IntlMessages id={'invalidemail'} />, '', 3000);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '& .MuiTextField-root': {\r\n          my: 1,\r\n        },\r\n        '&': {\r\n          p: 1,\r\n        },\r\n      }}>\r\n      <Typography variant=\"h5\" sx={{ textAlign: 'center' }}>\r\n        <IntlMessages id={'sendrecordtoemail'} />\r\n      </Typography>\r\n      <Typography variant=\"h6\" sx={{ textAlign: 'center' }}>\r\n        <IntlMessages id={'totalRecord'} values={{ records: dirs.length }} />\r\n      </Typography>\r\n      <TextField\r\n        required\r\n        fullWidth\r\n        label={<IntlMessages id={'email'} />}\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n        variant=\"standard\"\r\n      />\r\n      <LoadingButton\r\n        size=\"large\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={handleSendClick}\r\n        endIcon={<SendIcon />}\r\n        loading={loading}\r\n        loadingPosition=\"end\"\r\n        sx={{ mt: 1 }}>\r\n        <IntlMessages id={'send'} />\r\n      </LoadingButton>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport VolumeDown from '@mui/icons-material/VolumeDown';\r\nimport VolumeUp from '@mui/icons-material/VolumeUp';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport PauseRounded from '@mui/icons-material/PauseRounded';\r\nimport PlayArrowRounded from '@mui/icons-material/PlayArrowRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport { WaveFile } from 'wavefile';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst formWaveSurferOptions = ref => ({\r\n  container: ref,\r\n  waveColor: '#9cceff',\r\n  progressColor: '#1976d2',\r\n  cursorColor: '#1976d2',\r\n  barWidth: 2,\r\n  barRadius: 3,\r\n  barHeight: 1,\r\n  barGap: 2,\r\n  responsive: true,\r\n});\r\n\r\nexport default function AudioWaveForm({ buffer }) {\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [duration, setDuration] = useState('0:00');\r\n  const [currentTime, setCurrentTime] = useState('0:00');\r\n\r\n  const { setRecordLoading } = useContext(AppContext);\r\n  useEffect(() => {\r\n    setPlay(false);\r\n\r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n\r\n    if (window.appsettings.appUrl === '78.47.177.25' || window.appsettings.appUrl ==='34.141.197.193' || window.appsettings.appUrl === '185.141.110.253') {\r\n      wavesurfer.current.loadBlob(new Blob([buffer], { type: 'audio/wav' }));\r\n    } else {\r\n      let wav = new WaveFile(new Uint8Array(buffer));\r\n      wav.fromIMAADPCM();\r\n      let newBuf = wav.toBuffer();\r\n      wavesurfer.current.loadBlob(new Blob([newBuf], { type: 'audio/wav' }));\r\n    }\r\n    wavesurfer.current.on('ready', function() {\r\n      setRecordLoading(false);\r\n      setLoading(false);\r\n      document.body.style.cursor = 'default';\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(0.5);\r\n        setDuration(formatDuration(Math.round(wavesurfer.current.getDuration())));\r\n        setCurrentTime(formatDuration(Math.round(wavesurfer.current.getCurrentTime())));\r\n      }\r\n    });\r\n    wavesurfer.current.on('audioprocess', function() {\r\n      if (wavesurfer.current.isPlaying()) {\r\n        setDuration(formatDuration(Math.round(wavesurfer.current.getDuration())));\r\n        setCurrentTime(formatDuration(Math.round(wavesurfer.current.getCurrentTime())));\r\n      }\r\n    });\r\n    return () => wavesurfer.current.destroy();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [buffer]);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n  const onVolumeChange = e => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n  function formatDuration(value) {\r\n    const minute = Math.floor(value / 60);\r\n    const secondLeft = value - minute * 60;\r\n    return `${minute}:${secondLeft <= 9 ? `0${secondLeft}` : secondLeft}`;\r\n  }\r\n  const TinyText = styled(Typography)({\r\n    fontSize: '1rem',\r\n    opacity: 0.6,\r\n    fontWeight: 500,\r\n    letterSpacing: 0.2,\r\n  });\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n      <div id=\"waveform\" ref={waveformRef} />\r\n      <Stack spacing={2} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <TinyText>\r\n          {currentTime}/{duration}\r\n        </TinyText>\r\n        <IconButton aria-label={!playing ? 'play' : 'pause'} onClick={handlePlayPause} disabled={loading}>\r\n          {!playing ? (\r\n            <PlayArrowRounded sx={{ fontSize: '3rem' }} htmlColor=\"#000\" />\r\n          ) : (\r\n            <PauseRounded sx={{ fontSize: '3rem' }} htmlColor=\"#000\" />\r\n          )}\r\n        </IconButton>\r\n        <Stack width={300} spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <VolumeDown />\r\n          <Slider\r\n            disabled={loading}\r\n            id=\"volume\"\r\n            name=\"volume\"\r\n            aria-label=\"Volume\"\r\n            value={volume}\r\n            onChange={onVolumeChange}\r\n            min={0.01}\r\n            max={1}\r\n            step={0.025}\r\n          />\r\n          <VolumeUp />\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, IconButton, Paper, TablePagination } from '@material-ui/core';\r\nimport {\r\n  AccessTime,\r\n  Check,\r\n  CloudDownload,\r\n  DateRange,\r\n  Person,\r\n  PhoneDisabled,\r\n  PlayArrow,\r\n  GetApp,\r\n  PhoneMissed,\r\n} from '@material-ui/icons';\r\nimport { getPath, getRecordingBytes, getQueues, setAuditLog } from 'api/api';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport SendAudioRecords from '../SendAudioRecords';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport SendToMobileIcon from '@mui/icons-material/SendToMobile';\r\nimport TtyIcon from '@mui/icons-material/Tty';\r\nimport { darken, lighten } from '@mui/material/styles';\r\n\r\nexport default function CallListeningTable({ data, limit, setLimit, setOffset, page, setPage, count, offset }) {\r\n  const [listenedRecords, setListenedRecords] = useState([]);\r\n  const getBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6));\r\n\r\n  const getHoverBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5));\r\n\r\n  let [path, setPath] = useState('');\r\n  const [queues, setQueues] = useState([]);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  const { recordLoading, setRecordLoading } = useContext(AppContext);\r\n  const [record, setRecord] = useState('');\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = (dir, num) => {\r\n    setRecordLoading(true);\r\n    document.body.style.cursor = 'wait';\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer !== null) {\r\n          setRecord(buffer);\r\n          setListenedRecords(prev => [...prev, num]);\r\n          setAuditLog(dir);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          setRecordLoading(false);\r\n          document.body.style.cursor = 'default';\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setRecordLoading(false);\r\n        document.body.style.cursor = 'default';\r\n        NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n      });\r\n  };\r\n  const downloadRecord = dir => {\r\n    setAuditLog(dir);\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = getCorrectFilesHour(dir);\r\n        link.click();\r\n        link.remove();\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  const getCorrectFilesHour = dir => {\r\n    var timeOffset = localStorage.getItem('timeoffset');\r\n    var copyarr = [...dir.split('')];\r\n    var hour = dir.split('_')[2].slice(8, 10);\r\n    var hourIndex = dir.lastIndexOf('_') + 9;\r\n    var newtime = 0;\r\n    if (timeOffset[0] === '+') {\r\n      newtime = parseInt(hour) + parseInt(timeOffset.slice(1));\r\n    } else {\r\n      newtime = parseInt(hour) - parseInt(timeOffset.slice(1));\r\n    }\r\n    if (newtime < 10) {\r\n      newtime = `0${newtime}`;\r\n    } else {\r\n      newtime.toString();\r\n    }\r\n    copyarr.splice(hourIndex, 2, newtime);\r\n    return copyarr.join('');\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n      width: 40,\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value, params.row.num)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'download',\r\n      headerName: <IntlMessages id={'download'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => downloadRecord(params.value)}\r\n              style={{ backgroundColor: '#1769aa', color: '#fff' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <GetApp />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'srcDid',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#d6851a' }}>\r\n            <TtyIcon style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value || '-'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => (q.dn = params.value[1]))?.display_name || <IntlMessages id=\"queue\" />}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'answered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          ) : params.value === 'nonanswered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          ) : params.value === 'transfered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#bd88f7',\r\n                color: '#27034f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n              <IntlMessages id={'dailysummary.transfer'} />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#f3bbfc',\r\n                color: '#a402bd',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'missedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  let tabledata = data.map((item, index) => ({\r\n    num: index + 1 + offset,\r\n    listen: item.recording_url,\r\n    download: item.recording_url,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    srcDid: item.src_did,\r\n    caller:\r\n      item.src_display_name === item.src_dn || item.src_dn === '-'\r\n        ? item.src_display_name\r\n        : item.src_display_name + '(' + item.src_dn + ')',\r\n    called:\r\n      item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n        ? item.dst_display_name\r\n        : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    direction: [item.direction, item.dst_dn],\r\n    duration: item.duration,\r\n    salable: item.statusofcall,\r\n    id: index,\r\n  }));\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n\r\n  const [allDirs, setAllDirs] = useState([]);\r\n  const [mailMenu, setMailMenu] = useState(false);\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <Button\r\n            disabled={allDirs.length === 0}\r\n            endIcon={<SendIcon />}\r\n            style={{ margin: '0 1rem', textTransform: 'none' }}\r\n            variant=\"contained\"\r\n            onClick={() => setMailMenu(true)}>\r\n            <IntlMessages id={'sendrecordtoemail'} />\r\n          </Button>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Anrufliste'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"src_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Destination'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Hedef'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Bestemming'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ziel'\r\n                    : ''\r\n                }\r\n                value=\"dst_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Direction'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Yön'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Richting'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Genaamd'\r\n                    : ''\r\n                }\r\n                value=\"direction\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"duration\"\r\n              />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={mailMenu} onClose={() => setMailMenu(false)}>\r\n        <div style={{ width: '600px', padding: '2rem 1.5rem' }}>\r\n          <SendAudioRecords path={path} dirs={allDirs} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={openAudioModal}\r\n        onClose={() => setOpenAudioModal(false)}\r\n        aria-labelledby=\"Audio\"\r\n        aria-describedby=\"Audio Player Modal\">\r\n        <Box style={audioModalStyle}>\r\n          <Paper\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              borderRadius: 'inherit',\r\n              borderBottomLeftRadius: '0',\r\n              borderBottomRightRadius: '0',\r\n            }}>\r\n            <Button onClick={() => setOpenAudioModal(false)}>X</Button>\r\n          </Paper>\r\n          <Box style={{ padding: '12px 8px' }}>\r\n            <AudioWaveForm buffer={record} />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n      <Paper style={{ marginTop: '.5rem' }}>\r\n        {recordLoading && (\r\n          <div style={{ width: '100%', marginTop: '8px' }}>\r\n            <LinearProgress />\r\n          </div>\r\n        )}\r\n        <Box\r\n          style={{ height: '440px', width: '100%' }}\r\n          sx={{\r\n            '& .Calllog-Table-Listened': {\r\n              bgcolor: getBackgroundColor('#ffeb7a', 'light'),\r\n              '&:hover': {\r\n                bgcolor: getHoverBackgroundColor('#ffeb7a', 'light'),\r\n              },\r\n            },\r\n          }}>\r\n          <DataGrid\r\n            disableSelectionOnClick\r\n            getRowClassName={params => listenedRecords.includes(params.row.num) && `Calllog-Table-Listened`}\r\n            rows={tabledata}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n            checkboxSelection\r\n            onSelectionModelChange={ids => {\r\n              const selectedIDs = new Set(ids);\r\n              const selectedRecords = tabledata.reduce((filtered, item) => {\r\n                if (selectedIDs.has(item.id)) {\r\n                  filtered.push(item.listen);\r\n                }\r\n                return filtered;\r\n              }, []);\r\n              setAllDirs(selectedRecords);\r\n            }}\r\n          />\r\n        </Box>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tabledata.length < limit || tabledata.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tabledata.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Rating from '@mui/material/Rating';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function FavoriteReports({ reportId }) {\r\n  let [favorite, setFavorite] = useState(0);\r\n  useEffect(() => {\r\n    let storage = localStorage.getItem('favs') || '';\r\n    if (storage !== '' && storage.split(',').includes(reportId)) {\r\n      setFavorite(1);\r\n    }\r\n  }, [reportId]);\r\n  const handleFavoriteChange = (e, newValue) => {\r\n    let storage = localStorage.getItem('favs') || '';\r\n    let tempArr = [];\r\n    if (storage !== '') {\r\n      tempArr = storage.split(',');\r\n    }\r\n    if (newValue === 1) {\r\n      tempArr.push(reportId);\r\n      localStorage.setItem('favs', tempArr.join(','));\r\n      window.dispatchEvent(new Event('storage'));\r\n    } else {\r\n      tempArr.splice(tempArr.indexOf(reportId), 1);\r\n      localStorage.setItem('favs', tempArr.join(','));\r\n      window.dispatchEvent(new Event('storage'));\r\n    }\r\n    setFavorite(newValue);\r\n  };\r\n  return (\r\n    <Tooltip\r\n      title={favorite === 1 ? <IntlMessages id=\"removeFromFavorites\" /> : <IntlMessages id=\"addToFavorites\" />}\r\n      placement=\"right\"\r\n      arrow\r\n      enterDelay={500}\r\n      leaveDelay={200}>\r\n      <Rating sx={{ ml: 1 }} max={1} name=\"Add Report to Favorites\" value={favorite} onChange={handleFavoriteChange} />\r\n    </Tooltip>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport LocalOfferRoundedIcon from '@mui/icons-material/LocalOfferRounded';\r\nimport { getTagTypes, getQueueNumber } from 'api/api';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\n\r\nexport default function CallLogtherFilters({\r\n  setDirectionApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setQueueDn,\r\n  setAnswerStatus,\r\n  setScore,\r\n  setTagFilter,\r\n}) {\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)));\r\n    getQueueNumber().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  let [queues, setQueues] = useState([]);\r\n  let [tagsList, setTagsList] = useState([]);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [directionSelect, setDirectionSelect] = useState('');\r\n  const handleDirectionSelect = event => {\r\n    setDirectionSelect(event.target.value);\r\n    setDirectionApi(event.target.value);\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  const handleChangeQueueSelect = event => {\r\n    if (event.target.value === 'all') {\r\n      setQueueSelect('');\r\n      setQueueDn('');\r\n    } else {\r\n      setQueueSelect(event.target.value);\r\n      setQueueDn(event.target.value);\r\n    }\r\n  };\r\n  let [stateSelect, setStateSelect] = useState('');\r\n  const handleChangeStateSelect = event => {\r\n    setStateSelect(event.target.value);\r\n    setAnswerStatus(event.target.value);\r\n  };\r\n\r\n  let [advancedFilter, setAdvancedFilter] = useState([]);\r\n  const handleChangeAdvancedFilterSelect = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setAdvancedFilter(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n\r\n  let [scoreSelect, setScoreSelect] = useState('');\r\n  const handleScoreSelect = e => {\r\n    setScoreSelect(e.target.value);\r\n    setScore(e.target.value);\r\n  };\r\n  let [tagSelect, setTagSelect] = useState('');\r\n  const handleTagSelect = e => {\r\n    setTagSelect(e.target.value);\r\n    setTagFilter(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!advancedFilter.includes('Score')) {\r\n      setScoreSelect('');\r\n      setScore('');\r\n    }\r\n    if (!advancedFilter.includes('Tag')) {\r\n      setTagSelect('');\r\n      setTagFilter('');\r\n    }\r\n    if (!advancedFilter.includes('Queue')) {\r\n      setQueueDn('');\r\n      setQueueSelect('');\r\n    }\r\n  }, [advancedFilter, setScore, setTagFilter, setQueueDn]);\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CompareArrowsIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'directionfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={directionSelect}\r\n                  label={<IntlMessages id={'direction'} />}\r\n                  onChange={handleDirectionSelect}>\r\n                  <MenuItem value=\"all\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' ||\r\n                sourceFilterSelect === 'numberfilter' ||\r\n                sourceFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : sourceFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' ||\r\n                targetFilterSelect === 'numberfilter' ||\r\n                targetFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : targetFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <QuestionAnswerIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={stateSelect}\r\n                  label={<IntlMessages id={'stateFilter'} />}\r\n                  onChange={handleChangeStateSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'CallLog.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'nonanswered'}>\r\n                    <IntlMessages id={'CallLog.filter.unanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'missed'}>\r\n                    <IntlMessages id={'missedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'transfered'}>\r\n                    <IntlMessages id={'dailysummary.transfer'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={advancedFilter}\r\n                  label={<IntlMessages id={'CallLog.filter.filter3'} />}\r\n                  onChange={handleChangeAdvancedFilterSelect}\r\n                  renderValue={() => \"\"}>\r\n                  <MenuItem value={'Score'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Score') > -1} />\r\n                    <StarRoundedIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'score'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'Tag'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Tag') > -1} />\r\n                    <LocalOfferRoundedIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'tag'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'Queue'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Queue') > -1} />\r\n                    <ContactPhoneIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {advancedFilter.includes('Score') && (\r\n              <Grid item md={3}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <StarRoundedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'score'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"score\">\r\n                    <IntlMessages id={'score'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"score\"\r\n                    label={<IntlMessages id={'score'} />}\r\n                    value={scoreSelect}\r\n                    onChange={handleScoreSelect}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"5\">5</MenuItem>\r\n                    <MenuItem value=\"4\">4</MenuItem>\r\n                    <MenuItem value=\"3\">3</MenuItem>\r\n                    <MenuItem value=\"2\">2</MenuItem>\r\n                    <MenuItem value=\"1\">1</MenuItem>\r\n                    <MenuItem value=\"0\">0</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            {advancedFilter.includes('Tag') && (\r\n              <Grid item md={3}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <LocalOfferRoundedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'tag'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"tag\">\r\n                    <IntlMessages id={'tag'} />\r\n                  </InputLabel>\r\n                  <Select labelId=\"tag\" label={<IntlMessages id={'tag'} />} value={tagSelect} onChange={handleTagSelect}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {tagsList.map((item, index) => (\r\n                      <MenuItem key={index} value={item.tagmassage}>\r\n                        {item.tagmassage}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            {advancedFilter.includes('Queue') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"queue-label\">\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"queue-label\"\r\n                    value={queueSelect}\r\n                    label={<IntlMessages id={'queueFilter'} />}\r\n                    onChange={handleChangeQueueSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {queues.map(que => (\r\n                      <MenuItem key={que.id} value={que.dn}>\r\n                        {que.dn} - {que.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog, getCallLogCount } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLogDateFilter from './DateFilter';\r\nimport CallLogtherFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallManagementFilter({ setData, limit, offset, setCount, setScore, setTagFilter }) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [directionApi, setDirectionApi] = useState('');\r\n  let [directionSql, setDirectionSql] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n  let [didNumber, setDidNumber] = useState('');\r\n  let [queueDn, setQueueDn] = useState('');\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [answerStatusSql, setAnswerStatusSql] = useState('');\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  useEffect(() => {\r\n    if (directionApi === 'all') {\r\n      setDirectionSql('');\r\n    } else if (directionApi === 'inb') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'out') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%1' and\");\r\n    } else if (directionApi === 'agent') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'ques') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) not like '%0' and\");\r\n    }\r\n  }, [directionApi]);\r\n\r\n  useEffect(() => {\r\n    if (answerStatus === 'all') {\r\n      setAnswerStatusSql('');\r\n    } else if (answerStatus === 'answered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'answered'\");\r\n    } else if (answerStatus === 'nonanswered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'nonanswered'\");\r\n    } else if (answerStatus === 'transfered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'transfered'\");\r\n    } else if (answerStatus === 'missed') {\r\n      setAnswerStatusSql(\r\n        \"where statusofcall != 'transfered' and statusofcall != 'answered' and statusofcall != 'nonanswered'\",\r\n      );\r\n    }\r\n  }, [answerStatus]);\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as (  \r\n  SELECT\r\n  call_id, \r\n  src_did,\r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording') as recording_url,  \r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall, \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  when (act >= 400 and dst_dn_type = 13) then 'dışarı' \r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%'\r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time desc, seg_order desc\r\n  )\r\n  select \r\n  * \r\n  from cte2 \r\n  ${answerStatusSql} \r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  ), cte2 as( \r\n  SELECT\r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and\r\n  ${directionSql}  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  src_did like '%${didNumber}%'\r\n  and\r\n  dst_dn like '%${queueDn}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax} \r\n  )  \r\n  )select \r\n  count(*)\r\n  from cte2 ${answerStatusSql}\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n        setDidNumber('');\r\n      }\r\n    } else if (sourceFilterText.startsWith('didno====')) {\r\n      setDidNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnLike('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceNumber('');\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        setDidNumber('');\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n        setDidNumber('');\r\n      }\r\n    } else if (destinationFilterText.startsWith('didno====')) {\r\n      setDidNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogCount(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].count));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n  return (\r\n    <div>\r\n      <CallLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLogtherFilters\r\n        setDirectionApi={setDirectionApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setQueueDn={setQueueDn}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n        setScore={setScore}\r\n        setTagFilter={setTagFilter}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { InputLabel, MenuItem, Select, FormControl, Chip, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getTagsByCallId, ScoreByID } from 'api/api';\r\n\r\nexport default function CallManagementCallDetail({ callId, setReloadValues }) {\r\n  const [tags, setTags] = useState([]);\r\n  const [rating, setRating] = useState('-1');\r\n  useEffect(() => {\r\n    getTagsByCallId(callId).then(resp => {\r\n      setTags(JSON.parse(resp.data.data));\r\n      setRating(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n    });\r\n  }, [callId]);\r\n  const handleRating = event => {\r\n    ScoreByID(event.target.value, callId).then(() => setRating(event.target.value));\r\n    setReloadValues(new Date());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n        <IntlMessages id={'CallLog.detail.callinfo'} />\r\n      </Typography>\r\n\r\n      {tags.length > 0 && tags[0]?.tagtext !== '' && (\r\n        <Typography variant=\"h6\">\r\n          <IntlMessages id={'tag'} /> :\r\n          <Chip color=\"info\" label={tags[0]?.tagtext} />\r\n        </Typography>\r\n      )}\r\n      <FormControl variant=\"standard\" fullWidth>\r\n        <InputLabel id=\"score\">\r\n          <IntlMessages id={'score'} />\r\n        </InputLabel>\r\n        <Select labelId=\"score\" label={<IntlMessages id={'score'} />} value={rating} onChange={handleRating}>\r\n          <MenuItem value=\"-1\">\r\n            <br />\r\n          </MenuItem>\r\n          <MenuItem value=\"5\">\r\n            <IntlMessages id={'score.rating5'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"4\">\r\n            <IntlMessages id={'score.rating4'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"3\">\r\n            <IntlMessages id={'score.rating3'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"2\">\r\n            <IntlMessages id={'score.rating2'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"1\">\r\n            <IntlMessages id={'score.rating1'} />\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","const questions = [\r\n  {\r\n    title: 'SurveyTitle1',\r\n    question: 'SurveyQuestion1',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle1',\r\n    question: 'SurveyQuestion2',\r\n    point: 2,\r\n  },\r\n  {\r\n    title: 'SurveyTitle2',\r\n    question: 'SurveyQuestion3',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle3',\r\n    question: 'SurveyQuestion4',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle3',\r\n    question: 'SurveyQuestion5',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle4',\r\n    question: 'SurveyQuestion6',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle4',\r\n    question: 'SurveyQuestion7',\r\n    point: 2,\r\n  },\r\n  {\r\n    title: 'SurveyTitle5',\r\n    question: 'SurveyQuestion8',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle5',\r\n    question: 'SurveyQuestion9',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle5',\r\n    question: 'SurveyQuestion10',\r\n    point: 4,\r\n  },\r\n  {\r\n    title: 'SurveyTitle6',\r\n    question: 'SurveyQuestion11',\r\n    point: 15,\r\n  },\r\n  {\r\n    title: 'SurveyTitle7',\r\n    question: 'SurveyQuestion12',\r\n    point: 7,\r\n  },\r\n  {\r\n    title: 'SurveyTitle7',\r\n    question: 'SurveyQuestion13',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle8',\r\n    question: 'SurveyQuestion14',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle8',\r\n    question: 'SurveyQuestion15',\r\n    point: 2,\r\n  },\r\n  {\r\n    title: 'SurveyTitle9',\r\n    question: 'SurveyQuestion16',\r\n    point: 7,\r\n  },\r\n  {\r\n    title: 'SurveyTitle9',\r\n    question: 'SurveyQuestion17',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle10',\r\n    question: 'SurveyQuestion18',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle10',\r\n    question: 'SurveyQuestion19',\r\n    point: 3,\r\n  },\r\n  {\r\n    title: 'SurveyTitle10',\r\n    question: 'SurveyQuestion20',\r\n    point: 4,\r\n  },\r\n  {\r\n    title: 'SurveyTitle11',\r\n    question: 'SurveyQuestion21',\r\n    point: 5,\r\n  },\r\n  {\r\n    title: 'SurveyTitle12',\r\n    question: 'SurveyQuestion22',\r\n    point: 10,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion23',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion24',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion25',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion26',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion27',\r\n    point: 0,\r\n  },\r\n  {\r\n    title: 'SurveyTitle13',\r\n    question: 'SurveyQuestion28',\r\n    point: 0,\r\n  },\r\n];\r\n\r\nexport { questions };\r\n","import React, { useContext } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { questions } from './SurveyQuestions';\r\nimport { IntlProvider } from 'react-intl';\r\nimport AppLocale from '../../../../i18n';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nexport default function MailBodySurvey({ rawdata, score }) {\r\n  const { locale } = useContext(AppContext);\r\n  let arr = [];\r\n  for (const [key, value] of Object.entries(rawdata)) {\r\n    arr.push({\r\n      question: questions[key].question,\r\n      answer: value === '1' ? 'yes' : value === '0' ? 'no' : '-',\r\n    });\r\n  }\r\n  return (\r\n    <IntlProvider locale={AppLocale[locale.locale].locale} messages={AppLocale[locale.locale].messages}>\r\n      <div>\r\n        <h3><IntlMessages id={'survey'} /></h3>\r\n        <ol>\r\n          {arr.map((item, index) => (\r\n            <li key={index}>\r\n              <IntlMessages id={item.question} />\r\n              <br />\r\n              <strong>{item.answer !== '-' ? <IntlMessages id={item.answer} /> : '-'}</strong>\r\n              <hr />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n        <IntlMessages id={'surveyScore'} /> = <b>{score}</b>\r\n      </div>\r\n    </IntlProvider>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { questions } from './SurveyQuestions';\r\nimport { Stack, Divider, Typography, Radio, RadioGroup, FormControlLabel, Button, TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ChevronRightRoundedIcon from '@mui/icons-material/ChevronRightRounded';\r\nimport { getTagsByCallId, SubmitSurveyByID, sendMail } from 'api/api';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Box } from '@mui/system';\r\nimport { useIntl } from 'react-intl';\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport MailBodySurvey from './MailBodySurvey';\r\n\r\nexport default function CallSurvey({ callId }) {\r\n  const [startSurvey, setStartSurvey] = useState(false);\r\n  const [survey, setSurvey] = useState([]);\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  let curentLanguage = useIntl();\r\n\r\n  const handleSendClick = () => {\r\n    setBtnLoading(true);\r\n    if (/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      let mailSubject =\r\n        curentLanguage.locale === 'en-EN'\r\n          ? 'Survey Result'\r\n          : curentLanguage.locale === 'tr-TR'\r\n          ? 'Anket Sonucu'\r\n          : curentLanguage.locale === 'nl-NL'\r\n          ? 'Enquêteresultaat'\r\n          : curentLanguage.locale === 'de-DE'\r\n          ? 'Umfrageergebnis'\r\n          : 'Anket Sonucu';\r\n      let score = survey[0].supervisorId;\r\n      let rawdata = AnswersToObject(survey[0].note);\r\n      let html = renderToStaticMarkup(<MailBodySurvey rawdata={rawdata} score={score} />);\r\n      sendMail(email, mailSubject, html, true)\r\n        .then(resp => {\r\n          if (resp.status === 200) {\r\n            if (resp.data.message === 'Send') {\r\n              NotificationManager.success(<IntlMessages id={'sendingSuccess'} />, '', 3000);\r\n              setEmail('');\r\n              setBtnLoading(false);\r\n            }\r\n          } else {\r\n            NotificationManager.error(resp.data.message, '', 3000);\r\n            setBtnLoading(false);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          NotificationManager.error(err.message, '', 3000);\r\n          setBtnLoading(false);\r\n        });\r\n    } else {\r\n      NotificationManager.warning(<IntlMessages id={'invalidemail'} />, '', 3000);\r\n      setBtnLoading(false);\r\n    }\r\n  };\r\n  const handleUpdate = () => {\r\n    setSurvey([]);\r\n    setStartSurvey(true);\r\n  };\r\n  useEffect(() => {\r\n    getTagsByCallId(callId).then(resp => setSurvey(JSON.parse(resp.data.data)));\r\n  }, [callId, btnLoading]);\r\n  const questionsArray = questions.map(item => ({\r\n    title: item.title,\r\n    question: item.question,\r\n    point: item.point,\r\n    answer: '',\r\n  }));\r\n  const questionsObjFormik = questionsArray.reduce((a, value) => ({ ...a, [value.question]: '' }), {});\r\n  return (\r\n    <div style={{ marginTop: '1rem', textAlign: 'center' }}>\r\n      {survey.length > 0 && survey[0]?.supervisorId !== '' ? (\r\n        <Box\r\n          sx={{\r\n            '& .MuiTextField-root': {\r\n              my: 1,\r\n            },\r\n            '&': {\r\n              p: 1,\r\n            },\r\n          }}>\r\n          <Typography variant=\"h5\" sx={{ textAlign: 'center' }}>\r\n            <IntlMessages id={'sendsurveyresulttoemail'} />\r\n          </Typography>\r\n          <Typography variant=\"h6\" sx={{ textAlign: 'center' }}>\r\n            <IntlMessages id={'surveyScore'} />\r\n            {' = '}\r\n            <b>{survey[0].supervisorId}</b>\r\n          </Typography>\r\n          <Button size=\"small\" variant=\"text\" sx={{ '&': { textTransform: 'unset' } }} onClick={handleUpdate}>\r\n            <IntlMessages id={'restartsurvey'} />\r\n          </Button>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            label={<IntlMessages id={'email'} />}\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            variant=\"standard\"\r\n          />\r\n          <LoadingButton\r\n            size=\"large\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleSendClick}\r\n            endIcon={<SendIcon />}\r\n            loading={btnLoading}\r\n            loadingPosition=\"end\"\r\n            sx={{ mt: 1 }}>\r\n            <IntlMessages id={'send'} />\r\n          </LoadingButton>\r\n        </Box>\r\n      ) : !startSurvey ? (\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          onClick={() => setStartSurvey(true)}\r\n          endIcon={<ChevronRightRoundedIcon />}>\r\n          <IntlMessages id={'startSurvey'} />\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h4\" component=\"div\">\r\n            <IntlMessages id={'survey'} />\r\n          </Typography>\r\n          <Formik\r\n            initialValues={questionsObjFormik}\r\n            onSubmit={values => {\r\n              setBtnLoading(true);\r\n              let score = 0;\r\n              let answers = Object.values(values);\r\n              let answersStr = JSON.stringify(\r\n                answers.reduce((a, v, i) => ({ ...a, [i]: v === 'EVET' ? '1' : v === 'HAYIR' ? '0' : '-' }), {}),\r\n              )\r\n                .replaceAll('\"', '')\r\n                .replace('{', '')\r\n                .replace('}', '');\r\n\r\n              for (let i = 0; i < questionsArray.length; i++) {\r\n                questionsArray[i].answer = answers[i];\r\n                if (answers[i] === 'EVET') {\r\n                  if (questionsArray[i].title === 'SurveyTitle13') {\r\n                    score *= questionsArray[i].point;\r\n                  } else {\r\n                    score += questionsArray[i].point;\r\n                  }\r\n                }\r\n              }\r\n              SubmitSurveyByID(callId, score, answersStr)\r\n                .then(resp => resp.success && setBtnLoading(false))\r\n                .catch(err => {\r\n                  NotificationManager.error(err.message, '', 3000);\r\n                  setBtnLoading(false);\r\n                });\r\n            }}>\r\n            {({ handleSubmit, handleChange }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Stack spacing={2} divider={<Divider orientation=\"horizontal\" flexItem />}>\r\n                  {questionsArray.map((item, index) => (\r\n                    <div key={index}>\r\n                      <Typography variant=\"h5\" component=\"div\">\r\n                        <IntlMessages id={item.title} />\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        <b>{`${index + 1}) `}</b>\r\n                        <span>\r\n                          <IntlMessages id={item.question} />\r\n                        </span>\r\n                      </Typography>\r\n                      <RadioGroup style={{ justifyContent: 'center' }} row name={item.question} onChange={handleChange}>\r\n                        <FormControlLabel value=\"EVET\" control={<Radio />} label={<IntlMessages id={'yes'} />} />\r\n                        <FormControlLabel value=\"HAYIR\" control={<Radio />} label={<IntlMessages id={'no'} />} />\r\n                      </RadioGroup>\r\n                    </div>\r\n                  ))}\r\n                </Stack>\r\n                <LoadingButton\r\n                  size=\"large\"\r\n                  fullWidth\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  loading={btnLoading}\r\n                  loadingPosition=\"start\"\r\n                  startIcon={<SaveIcon />}\r\n                  sx={{ mt: 1 }}>\r\n                  <IntlMessages id={'save'} />\r\n                </LoadingButton>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//dbden gelen soru-cevap stringini tekrardan objecte dönüştürmek için kullanırız. doğrudan object dbye yollanmıyor.\r\n//JSON.parse ederken sorun oluşuyor çünkü o field string türünde ve object \"{  }\" şeklinde yazıldığından parse edemiyor\r\nconst AnswersToObject = str => {\r\n  let arr = str.split(',');\r\n  return arr.reduce((a, v) => ({ ...a, [v.split(':')[0]]: v.split(':')[1] }), {});\r\n};\r\n","import { FormControl, InputLabel, MenuItem, Select, Chip } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTagtextByCallId, TagByID } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Tag({call_id,tagsList}) {\r\n  const [tagValue, setTagValue] = useState('');\r\n\r\n  const handleChangeTag = event => {\r\n    TagByID(event.target.value,call_id).then(() =>{\r\n      setTagValue(event.target.value);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    if(call_id !== \"\"){\r\n      getTagtextByCallId(call_id).then(resp => {\r\n        setTagValue(JSON.parse(resp.data.data)[0]?.tagtext || '');\r\n    });\r\n    }\r\n\r\n  },[call_id]);\r\n\r\n  return (\r\n    <>\r\n    {\r\n      call_id === \"\"?(<div style={{textAlign:\"center\"}}><IntlMessages id={'nontaggable'} /></div>):(\r\n        <>\r\n        {\r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label11\"><IntlMessages id={'tag'} /></InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label11\"\r\n              id=\"demo-simple-select222\"\r\n              value={tagValue}\r\n              label={<IntlMessages id={'tag'} />}\r\n              style={{ width: '100%' }}\r\n              onChange={handleChangeTag}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n                {\r\n                  tagsList.map((item,index)=>(\r\n                  <MenuItem key={index} value={item.tagmassage}>\r\n                    <Chip color=\"info\" size=\"small\" label={item.tagmassage} />\r\n                  </MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        </> \r\n      )\r\n    }\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {getCallScoresByCallId } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Score({call_id, reloadValues}) {\r\n    const [callScore, setCallScore] = useState('-1');\r\n    useEffect(()=>{\r\n        getCallScoresByCallId(call_id).then(resp => {\r\n            setCallScore(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n        });\r\n        return () => {setCallScore('-1')}\r\n    },[call_id, reloadValues]);\r\n  return (\r\n      <>\r\n      {\r\n          callScore !== '-1' ? (\r\n            <div>\r\n            {\r\n                GetScoreName(callScore)\r\n            }\r\n            {` (${callScore})`}\r\n            </div>\r\n          ) : (\r\n            <small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'noscore'} /></small>\r\n          )\r\n      }\r\n      </>\r\n  );\r\n}\r\n\r\nfunction GetScoreName(rating){\r\n    switch (rating) {\r\n        case \"5\":\r\n            return <IntlMessages id={'score.rating5'} />\r\n        case \"4\":\r\n            return <IntlMessages id={'score.rating4'} />\r\n        case \"3\":\r\n            return <IntlMessages id={'score.rating3'} />\r\n        case \"2\":\r\n            return <IntlMessages id={'score.rating2'} />\r\n        case \"1\":\r\n            return <IntlMessages id={'score.rating1'} />\r\n        default:\r\n            return <IntlMessages id={'noscore'} /> \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { getSurveyScoresByCallId } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function SurveyScore({ call_id }) {\r\n  const [surveyScore, setSurveyScore] = useState('-1');\r\n  useEffect(() => {\r\n    getSurveyScoresByCallId(call_id).then(resp => {\r\n      setSurveyScore(JSON.parse(resp.data.data)[0]?.supervisorId || '-1');\r\n    });\r\n    return () => {\r\n      setSurveyScore('-1');\r\n    };\r\n  }, [call_id]);\r\n  return (\r\n    <>\r\n      {surveyScore !== '-1' ? (\r\n        <div>{surveyScore}</div>\r\n      ) : (\r\n        <small style={{ margin: '0 4px' }}>\r\n          <IntlMessages id={'nosurvey'} />\r\n        </small>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, IconButton, Paper, TablePagination } from '@material-ui/core';\r\nimport {\r\n  AccessTime,\r\n  Check,\r\n  CloudDownload,\r\n  DateRange,\r\n  Person,\r\n  PhoneDisabled,\r\n  PlayArrow,\r\n  GetApp,\r\n  PhoneMissed,\r\n} from '@material-ui/icons';\r\nimport { getPath, getTagTypes, getRecordingBytes, getQueues, getTagsByCallId, setAuditLog } from 'api/api';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallManagementCallDetail from '../CallDetails';\r\nimport CallSurvey from '../CallSurvey';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Tag from './Tag';\r\nimport Score from './Score';\r\nimport SurveyScore from './SurveyScore';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport SendToMobileIcon from '@mui/icons-material/SendToMobile';\r\nimport TtyIcon from '@mui/icons-material/Tty';\r\nimport { darken, lighten } from '@mui/material/styles';\r\n\r\nexport default function CallManagementTable({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  count,\r\n  setReloadValues,\r\n  reloadValues,\r\n  offset,\r\n  scoreFilter,\r\n  tagFilter,\r\n}) {\r\n  const [listenedRecords, setListenedRecords] = useState([]);\r\n  const getBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6));\r\n\r\n  const getHoverBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5));\r\n\r\n  let [path, setPath] = useState('');\r\n  const [queues, setQueues] = useState([]);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  const { recordLoading, setRecordLoading } = useContext(AppContext);\r\n  const [record, setRecord] = useState(null);\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = (dir, num) => {\r\n    setRecordLoading(true);\r\n    document.body.style.cursor = 'wait';\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer.byteLength > 0) {\r\n          setRecord(buffer);\r\n          setListenedRecords(prev => [...prev, num]);\r\n          setAuditLog(dir);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          setRecordLoading(false);\r\n          document.body.style.cursor = 'default';\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setRecordLoading(false);\r\n        document.body.style.cursor = 'default';\r\n        NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n      });\r\n  };\r\n  const downloadRecord = dir => {\r\n    setAuditLog(dir);\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = getCorrectFilesHour(dir);\r\n        link.click();\r\n        link.remove();\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  const getCorrectFilesHour = dir => {\r\n    var timeOffset = localStorage.getItem('timeoffset');\r\n    var copyarr = [...dir.split('')];\r\n    var hour = dir.split('_')[2].slice(8, 10);\r\n    var hourIndex = dir.lastIndexOf('_') + 9;\r\n    var newtime = 0;\r\n    if (timeOffset[0] === '+') {\r\n      newtime = parseInt(hour) + parseInt(timeOffset.slice(1));\r\n    } else {\r\n      newtime = parseInt(hour) - parseInt(timeOffset.slice(1));\r\n    }\r\n    if (newtime < 10) {\r\n      newtime = `0${newtime}`;\r\n    } else {\r\n      newtime.toString();\r\n    }\r\n    copyarr.splice(hourIndex, 2, newtime);\r\n    return copyarr.join('');\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n      width: 40,\r\n    },\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value, params.row.num)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'download',\r\n      headerName: <IntlMessages id={'download'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => downloadRecord(params.value)}\r\n              style={{ backgroundColor: '#1769aa', color: '#fff' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <GetApp />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'srcDid',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#d6851a' }}>\r\n            <TtyIcon style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value || '-'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => (q.dn = params.value[1]))?.display_name || <IntlMessages id=\"queue\" />}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'answered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          ) : params.value === 'nonanswered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          ) : params.value === 'transfered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#bd88f7',\r\n                color: '#27034f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n              <IntlMessages id={'dailysummary.transfer'} />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#f3bbfc',\r\n                color: '#a402bd',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'missedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'Tag',\r\n      headerName: <IntlMessages id={'tag'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Tag call_id={params.value} tagsList={params.value !== '' ? tagsList : []} />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: 'score',\r\n      headerName: <IntlMessages id={'score'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Score call_id={params.value} reloadValues={reloadValues} />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: 'surveyScore',\r\n      headerName: <IntlMessages id={'surveyScore'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <SurveyScore call_id={params.value} />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let canListable = id => {\r\n      return new Promise((resolve, reject) => {\r\n        getTagsByCallId(id).then(resp => {\r\n          let data = JSON.parse(resp.data.data)[0];\r\n          let result = false;\r\n          if (data) {\r\n            if (tagFilter !== '' && scoreFilter !== '') {\r\n              if (data.tagtext === tagFilter && data.rating === scoreFilter) {\r\n                result = true;\r\n              }\r\n            } else {\r\n              if (tagFilter !== '' && data.tagtext === tagFilter) {\r\n                result = true;\r\n              }\r\n              if (scoreFilter !== '' && data.rating === scoreFilter) {\r\n                result = true;\r\n              }\r\n            }\r\n          }\r\n          resolve(result ? id : '');\r\n        });\r\n      });\r\n    };\r\n    if (tagFilter !== '' || scoreFilter !== '') {\r\n      let allRequests = [];\r\n      data.forEach(item => allRequests.push(canListable(item.call_id)));\r\n      Promise.all(allRequests).then(ids => {\r\n        let tabledata = data.reduce((filtered, item, index) => {\r\n          if (ids.includes(item.call_id)) {\r\n            let value = {\r\n              num: index + 1 + offset,\r\n              callId: item.call_id,\r\n              listen: item.recording_url,\r\n              download: item.recording_url,\r\n              date: getNewDate(item.date),\r\n              startTime: item.hour,\r\n              srcDid: item.src_did,\r\n              caller:\r\n                item.src_display_name === item.src_dn || item.src_dn === '-'\r\n                  ? item.src_display_name\r\n                  : item.src_display_name + '(' + item.src_dn + ')',\r\n              called:\r\n                item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n                  ? item.dst_display_name\r\n                  : item.dst_display_name + '(' + item.dst_dn + ')',\r\n              direction: [item.direction, item.dst_dn],\r\n              duration: item.duration,\r\n              salable: item.statusofcall,\r\n              id: index,\r\n              Tag: isTaggable(item.direction, item.statusofcall) ? item.call_id : '',\r\n              score: item.call_id,\r\n              surveyScore: item.call_id,\r\n            };\r\n            filtered.push(value);\r\n          }\r\n          return filtered;\r\n        }, []);\r\n        setTableData(tabledata);\r\n      });\r\n    } else {\r\n      let tabledata = data.map((item, index) => ({\r\n        num: index + 1 + offset,\r\n        callId: item.call_id,\r\n        listen: item.recording_url,\r\n        download: item.recording_url,\r\n        date: getNewDate(item.date),\r\n        startTime: item.hour,\r\n        srcDid: item.src_did,\r\n        caller:\r\n          item.src_display_name === item.src_dn || item.src_dn === '-'\r\n            ? item.src_display_name\r\n            : item.src_display_name + '(' + item.src_dn + ')',\r\n        called:\r\n          item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n            ? item.dst_display_name\r\n            : item.dst_display_name + '(' + item.dst_dn + ')',\r\n        direction: [item.direction, item.dst_dn],\r\n        duration: item.duration,\r\n        salable: item.statusofcall,\r\n        id: index,\r\n        Tag: isTaggable(item.direction, item.statusofcall) ? item.call_id : '',\r\n        score: item.call_id,\r\n        surveyScore: item.call_id,\r\n      }));\r\n      setTableData(tabledata);\r\n    }\r\n  }, [tagFilter, scoreFilter, data, offset]);\r\n\r\n  const [tagsList, setTagsList] = useState([]);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)));\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Anrufliste'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"src_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Destination'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Hedef'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Bestemming'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ziel'\r\n                    : ''\r\n                }\r\n                value=\"dst_display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Direction'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Yön'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Richting'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Genaamd'\r\n                    : ''\r\n                }\r\n                value=\"direction\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"duration\"\r\n              />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px', padding: '2rem 1.5rem' }}>\r\n          <CallManagementCallDetail callId={callIdEye} setReloadValues={setReloadValues} />\r\n          <CallSurvey callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={openAudioModal}\r\n        onClose={() => setOpenAudioModal(false)}\r\n        aria-labelledby=\"Audio\"\r\n        aria-describedby=\"Audio Player Modal\">\r\n        <Box style={audioModalStyle}>\r\n          <Paper\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              borderRadius: 'inherit',\r\n              borderBottomLeftRadius: '0',\r\n              borderBottomRightRadius: '0',\r\n            }}>\r\n            <Button onClick={() => setOpenAudioModal(false)}>X</Button>\r\n          </Paper>\r\n          <Box style={{ padding: '12px 8px' }}>\r\n            <AudioWaveForm buffer={record} />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n      <Paper style={{ marginTop: '.5rem' }}>\r\n        {recordLoading && (\r\n          <div style={{ width: '100%', marginTop: '8px' }}>\r\n            <LinearProgress />\r\n          </div>\r\n        )}\r\n        <Box\r\n          style={{ height: '440px', width: '100%' }}\r\n          sx={{\r\n            '& .Calllog-Table-Listened': {\r\n              bgcolor: getBackgroundColor('#ffeb7a', 'light'),\r\n              '&:hover': {\r\n                bgcolor: getHoverBackgroundColor('#ffeb7a', 'light'),\r\n              },\r\n            },\r\n          }}>\r\n          <DataGrid\r\n            disableSelectionOnClick\r\n            getRowClassName={params => listenedRecords.includes(params.row.num) && `Calllog-Table-Listened`}\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </Box>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tableData.length < limit || tableData.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tableData.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nconst nonTaggableCallTypes = ['dahili', ''];\r\nconst isTaggable = (callType, status) => {\r\n  if (status === 'answered') {\r\n    if (!nonTaggableCallTypes.includes(callType)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DropCallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate());\r\n        end.setHours(0, 0, 0);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getDropCall, getDropCallCount, getDropCallSummary, getQueueNumber, getTotalCall } from 'api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport DropCallLogDateFilter from './DateFilter';\r\nfunction Filter({ setResponse, limit, offset, setCount, setResponseSummary }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: dateDifference(formatDate(today)),\r\n    paramFinish: dateDifference(formatDate(today)),\r\n  });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setParams({\r\n      paramStart: dateDifference(startDate),\r\n      paramFinish: dateDifference(endDate),\r\n    });\r\n  }, [startDate, endDate]);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDropCall(params.paramStart, params.paramFinish, limit, offset).then(resp => {\r\n      var list = JSON.parse(resp.data.data);\r\n      getQueueNumber().then(queueList => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          JSON.parse(queueList.data.data).map(queue => {\r\n            if (list[i].q_num === queue.dn) {\r\n              list[i].q_num = queue.dn + '-' + queue.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n      });\r\n      setLoading(false);\r\n    });\r\n    getTotalCall(params.paramStart, params.paramFinish).then(resp => {\r\n      let totalcalls = JSON.parse(resp.data.data);\r\n      getDropCallSummary(params.paramStart, params.paramFinish).then(response => {\r\n        let summary = JSON.parse(response.data.data);\r\n        let tabledata = totalcalls.reduce((filtered, item) => {\r\n          let summarydetails = summary.find(e => e.date === item.date) || {};\r\n          let value = {\r\n            ...item,\r\n            ...summarydetails,\r\n          };\r\n          filtered.push(value);\r\n\r\n          return filtered;\r\n        }, []);\r\n        setResponseSummary(tabledata);\r\n      });\r\n    });\r\n    getDropCallCount(params.paramStart, params.paramFinish).then(resp => {\r\n      setCount(JSON.parse(resp.data.data)[0]);\r\n    });\r\n  }, [params, offset, limit, setCount, setResponse, setResponseSummary]);\r\n\r\n  return (\r\n    <div>\r\n      <DropCallLogDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { Check, CloudDownload, DateRange } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport RingVolumeIcon from '@mui/icons-material/RingVolume';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, count, responseSummary }) {\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'filter.menu.enddate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#DE834D' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'from'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#5584AC' }} />{' '}\r\n          <b style={{ color: '#5584AC' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'q_num',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#064635' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'ringing_time',\r\n      headerName: <IntlMessages id={'ringingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <RingVolumeIcon style={{ verticalAlign: '-5px', color: '#A3423C' }} />{' '}\r\n          <b style={{ color: '#781D42' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(num, id, q_num, start_time, end_time, ringing_time, from_userpart) {\r\n    return { num, id, q_num, start_time, end_time, ringing_time, from_userpart };\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index + 1 + offset,\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.time_end,\r\n      data.ring_time\r\n        .split('.')[0]\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_userpart,\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(count.count);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Dropped_call'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kacan_cagri_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Afgebroken oproep'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Aufgelegter Anruf'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"q_num\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'End Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bitiş Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Eindtijd'\r\n                          : ''\r\n                      }\r\n                      value=\"end_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Ringing Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Çalma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Beltijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Klingelzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"ringing_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'From Userpart'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Van gebruikersgedeelte'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Vom Benutzerteil'\r\n                          : ''\r\n                      }\r\n                      value=\"from_userpart\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={rows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={parseInt(count.count)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'missedcallcount'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'average_ring_time'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'missedcallratio'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {responseSummary.map((total, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {total.date}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {total?.total_call || 0}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <b>{total?.count || 0}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        padding: '5px',\r\n                        borderRadius: '7px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      {total?.ring_time || '00:00:00'}\r\n                    </span>{' '}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <b>%{((parseInt(total?.count || 0) * 100) / parseInt(total?.total_call || 1)).toFixed(2)}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nfunction DroppedCall() {\r\n  const [responseSummary, setResponseSummary] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [count, setCount] = useState({ count: 0 });\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'droppedcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'droppedcall'} /> <FavoriteReports reportId=\"10\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            limit={limit}\r\n            offset={offset}\r\n            setCount={setCount}\r\n            setResponseSummary={setResponseSummary}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            count={count}\r\n            responseSummary={responseSummary}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default DroppedCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DidReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({\r\n  setSelectedStartTime,\r\n  setSelectedEndTime,\r\n  setDidNumber,\r\n  didNumber,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const [didNumbers, setDidNumbers] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    api.getDidNumbers().then(resp => {\r\n      setDidNumbers(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'mountlydetails.didnumber'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'mountlydetails.didnumber'} />}\r\n                  value={didNumber}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {didNumbers.map((did, index) => (\r\n                    <MenuItem key={index} value={did.conditiondata}>\r\n                      {did.conditiondata}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDidReportTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\nexport default function TotalCallModal({ date, didNo, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDidReportTotalCall(date, didNo).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date,didNo]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'callid'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.call_id}</TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDidReportAnsweredCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function AnsweredCallModal({ date, didNo, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDidReportAnsweredCall(date, didNo).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date, didNo]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDidReportNonAnsweredCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function NonAnsweredCallModal({ date, didNo, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDidReportNonAnsweredCall(date, didNo).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date, didNo]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button, TableBody } from '@material-ui/core';\r\nimport { AccessTime, CloudDownload, ContactPhone, Phone, PhoneInTalk, PhoneMissed } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport NonAnsweredCallModal from '../Modals/NonAnsweredCallModal';\r\n\r\nexport default function DataTable({\r\n  response,\r\n  setLimit,\r\n  limit,\r\n  setOffset,\r\n  setPage,\r\n  page,\r\n  count,\r\n  setResponse,\r\n  offset,\r\n  startEndDate,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const column = [\r\n    { id: 'did_number', headerName: <IntlMessages id={'did.number'} />, width: '60px' },\r\n    { id: 'total_did', headerName: <IntlMessages id={'wallboard.total.call'} />, width: '100px' },\r\n    { id: 'did_not_answered', headerName: <IntlMessages id={'wallboard.unanswered'} />, width: '30px' },\r\n    { id: 'did_answered', headerName: <IntlMessages id={'wallboard.answered'} />, width: '30px' },\r\n    { id: 'duration', headerName: <IntlMessages id={'Duration'} />, width: '30px' },\r\n    { id: 'act', headerName: <IntlMessages id={'average'} />, width: '30px' },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    total_did_number: 0,\r\n    total_did: 0,\r\n    did_not_answered: 0,\r\n    did_answered: 0,\r\n    duration: 0,\r\n  };\r\n\r\n  for (let i = 0; i < response.length; i++) {\r\n    total.total_did_number++;\r\n    total.total_did += parseInt(response[i].total_did);\r\n    total.did_not_answered += parseInt(response[i].did_not_answered);\r\n    total.did_answered += parseInt(response[i].answered);\r\n    total.duration += parseInt(hourToSecond(response[i].duration));\r\n  }\r\n  function hourToSecond(param) {\r\n    var second =\r\n      parseInt(param.split(' ')[0].slice(0, -1)) * 3600 +\r\n      parseInt(param.split(' ')[1].slice(0, -1)) * 60 +\r\n      parseInt(param.split(' ')[2].slice(0, -1));\r\n    return second;\r\n  }\r\n\r\n  function secondToTime(param) {\r\n    let time =\r\n      addZero(Math.floor(param / 60 / 60)) +\r\n      'h ' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      'm ' +\r\n      addZero(Math.floor((param % 3600) % 60)) +\r\n      's';\r\n    return time;\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = response.map((item, index) => ({\r\n    num: index + 1 + offset,\r\n    id: index,\r\n    did_number: item.did_number,\r\n    total_did: parseInt(item.total_did),\r\n    did_not_answered: parseInt(item.did_not_answered),\r\n    answered: parseInt(item.answered),\r\n    duration: item.duration,\r\n    act: item.act,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'did_number',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhone style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_did',\r\n      headerName: <IntlMessages id={'totalcallcount'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span onClick={() => handleTotalCallClick(params.row.did_number)} style={{ cursor: 'pointer' }}>\r\n          <Phone style={{ verticalAlign: '-5px', color: '#6998AB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#6998AB' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'did_not_answered',\r\n      headerName: <IntlMessages id={'unansweredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span onClick={() => handleNonAnsweredCallClick(params.row.did_number)} style={{ cursor: 'pointer' }}>\r\n          <PhoneMissed style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#F05454' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'answeredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span onClick={() => handleAnsweredCallClick(params.row.did_number)} style={{ cursor: 'pointer' }}>\r\n          <PhoneInTalk style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#D47AE8' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'act',\r\n      headerName: <IntlMessages id={'average'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#7267CB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(parseInt(count));\r\n    setPage(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const totalCallStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [didNo, setDidNo] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = didno => {\r\n    setDidNo(didno);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = didno => {\r\n    setDidNo(didno);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [nonAnsweredCallModalOpen, setNonAnsweredCallOpen] = useState(false);\r\n  const handleNonAnsweredCallOpen = () => setNonAnsweredCallOpen(true);\r\n  const handleNonAnsweredCallClose = () => setNonAnsweredCallOpen(false);\r\n  const handleNonAnsweredCallClick = didno => {\r\n    setDidNo(didno);\r\n    handleNonAnsweredCallOpen();\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {response.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {response.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {response.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {response.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'DID_report'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'DID_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'DID_rapport'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'DID_report'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={response} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'DID Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Did Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'DID-Nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'DID-Nummer'\r\n                          : ''\r\n                      }\r\n                      value=\"did_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Total Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Toplam Arama Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Totaal aantal gesprekken'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesamtzahl der Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"total_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Unanswered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmamış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal onbeantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anzahl unbeantworteter Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"did_not_answered\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Answered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal beantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Zählung angenommener Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"answered\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={dataGridRows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <TableContainer component={Paper} className={classes.root} style={{ fontFamily: 'Roboto' }}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map(column => (\r\n                <TableCell key={column.id} style={{ width: column.width }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {response.length > 0 && (\r\n              <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n                <TableCell>\r\n                  {count + ' '} <IntlMessages id={'did.number'} />\r\n                </TableCell>\r\n                <TableCell>{total.total_did}</TableCell>\r\n                <TableCell>{total.did_not_answered}</TableCell>\r\n                <TableCell>{total.did_answered}</TableCell>\r\n                <TableCell>{secondToTime(total.duration)}</TableCell>\r\n                <TableCell>{secondToTime(total.duration / total.total_did)}</TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={totalCallStyle}>\r\n          <TotalCallModal date={startEndDate} didNo={didNo} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={totalCallStyle}>\r\n          <AnsweredCallModal date={startEndDate} didNo={didNo} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={nonAnsweredCallModalOpen}\r\n        onClose={handleNonAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={totalCallStyle}>\r\n          <NonAnsweredCallModal date={startEndDate} didNo={didNo} handleNonAnsweredCallClose={handleNonAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst DIDReport = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'did.report'} />, isActive: true },\r\n  ];\r\n\r\n  let [selectedStartTime, setSelectedStartTime] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [selectedEndTime, setSelectedEndTime] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n\r\n  let query = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${selectedStartTime}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${selectedEndTime}') >= start_time)\r\n    and src_did != ''\r\n  \tand\r\n\t  dst_answer_time is not null\r\n    )\r\n\t,\r\n\tcte2 as (\r\n    select\r\n\t sum(dst_end_time-dst_answer_time) as duration,\r\n    src_did,\t\r\n    count(distinct(call_id)) as total_call\r\n    from cte1 \t\r\n    group by src_did\r\n    )\r\n\t,\t\r\n\tcte3 as (\r\n    select\r\n    src_did,\t\r\n    count(distinct(call_id)) as did_not_asnwered\r\n    from cte1 \t\r\n    where dst_answer_time is  null\t\r\n    and act!= 1\r\n    group by src_did\r\n    )\r\n    select\r\n    cte2.src_did as did_number,\r\n    cte2.total_call as total_did,\r\n    coalesce(cte3.did_not_asnwered,0) as did_not_answered,\r\n    cte2.total_call - coalesce(cte3.did_not_asnwered,0) as answered,\r\n\tto_char(coalesce(cte2.duration,'0 second'),'HH24h MIm SSs') as duration,\r\n\tto_char((coalesce(cte2.duration/cte2.total_call,'0 second')),'HH24h MIm SSs') as act\r\n    from\r\n    cte2\r\n    left outer join cte3 on cte2.src_did = cte3.src_did\r\n    where (cte2.src_did like '%${didNumber}' or cte2.src_did like '%${didNumber}')\r\n    limit ${limit} offset ${offset}\t\t\r\n`;\r\n\r\n  let queryCount = ` select \r\n    count(distinct(src_did))\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${selectedStartTime}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${selectedEndTime}') >= start_time)\r\n    and src_did != ''`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getDidData(query).then(resp => {\r\n      setResponse(JSON.parse(resp.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    api.getDidDataCount(queryCount).then(resp => {\r\n      setCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n    });\r\n  }, [query, didNumber, queryCount]);\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'did.report'} /> <FavoriteReports reportId=\"6\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            didNumber={didNumber}\r\n            setDidNumber={setDidNumber}\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            startEndDate={[selectedStartTime, selectedEndTime]}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            response={response}\r\n            count={count}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default DIDReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Collapse, IconButton, Link } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { setForgetPassMailSent } from '../../../../redux/actions/Auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      order: 1,\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  alertRoot: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const { send_forget_password_email } = useSelector(({ auth }) => auth);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let timeOutStopper = null;\r\n    if (send_forget_password_email) {\r\n      setOpen(true);\r\n\r\n      timeOutStopper = setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(false));\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n\r\n    return () => {\r\n      if (timeOutStopper) clearTimeout(timeOutStopper);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [send_forget_password_email]);\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onForgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <div className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/forgot-img.png'} />\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.authContent}>\r\n        <div className={'mb-7'}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </div>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          ForgotPassword\r\n        </Typography>\r\n        <Collapse in={open}>\r\n          <Alert\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n            className={classes.alertRoot}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}>\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }>\r\n            A mail has been sent on your email address with reset password link.\r\n          </Alert>\r\n        </Collapse>\r\n        <form>\r\n          <div className={'mb-5'}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </div>\r\n          <div className={'mb-5'}>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n              <IntlMessages id=\"appModule.resetPassword\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography>\r\n              Don't remember your email?\r\n              <span className={'ml-2'}>\r\n                <Link href=\"#\">\r\n                  <IntlMessages id=\"appModule.contactSupport\" />\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </form>\r\n        <ContentLoader />\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport ForgotPassword from '../../@jumbo/components/Common/authComponents/ForgotPassword';\r\n\r\nconst ForgotPasswordPage = () => <ForgotPassword variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouteLogin = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) !== 200 && localStorage.getItem('validation') !== true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuhMethods } from '../../services/auth';\r\nimport { CurrentAuthMethod } from '@jumbo/constants/AppConstants';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const NotPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const dispatch = useDispatch();\r\n  if(localStorage.getItem('token')){\r\n    var exptime = localStorage.getItem('exptime');\r\n    if(Date.now() >= exptime){\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    }\r\n  }\r\n  else{\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        parseInt(localStorage.getItem('login')) === 200 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: '/signin', state: { from: props.location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function ServiceLevelDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getQueue, getServiceLevel } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ServiceLevelDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [params, setParams] = useState({ startDate: formatDate(yesterday), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT '10' as ring,count(q_num) as cnt FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59'\r\n    and ring_time > interval '0 seconds' and ring_time < interval '10 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '20' as ring,count(q_num) FROM callcent_queuecalls_view where \r\n    time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '10 seconds' and ring_time < interval '20 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union\r\n    SELECT '30' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and\r\n    ring_time > interval '20 seconds' and ring_time < interval '30 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '40' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00'\r\n    and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '30 seconds' and ring_time < interval '40 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '50' as ring,count(q_num) FROM \r\n    callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '40 seconds' and ring_time < interval '50 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '60' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '50 seconds'\r\n    and ring_time < interval '60 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` order by ring asc`;\r\n  useEffect(() => {\r\n    getServiceLevel(string).then(response => setResponse(JSON.parse(response.data.data)));\r\n  }, [string, setResponse]);\r\n  useEffect(() => {\r\n    getQueue().then(response => setQueueList(JSON.parse(response.data.data)));\r\n  }, []);\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  }, [startDate, endDate]);\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <ServiceLevelDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                        <InputLabel id=\"queue-select-label\">\r\n                          <IntlMessages id={'queue.answer.report.queues'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((queue, index) => (\r\n                            <MenuItem key={index} value={queue.dn}>\r\n                              {queue.dn} {queue.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\nfunction createData(level, cnt) {\r\n  return { level, cnt };\r\n}\r\n\r\nfunction DataTable({ response }) {\r\n  const classes = useStyles();\r\n\r\n  let total = 0;\r\n  for (var i = 0; i < response.length; i++) {\r\n    total = total + parseInt(response[i].cnt);\r\n  }\r\n  function percent(cnt) {\r\n    var result = 0;\r\n    result = parseInt(cnt) / total;\r\n    return (parseFloat(result) * 100).toFixed(2);\r\n  }\r\n  const rows = response.map(data => createData(data.ring, percent(data.cnt)));\r\n\r\n  const csvData = rows.map(row => ({\r\n    level: row.level,\r\n    cnt: `%${row.cnt === 'NaN' ? '00.00' : row.cnt}`,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-EN'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Servis Seviyesi'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Service Level'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Seconds'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Saniye'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Seconden'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Sekunden'\r\n                  : ''\r\n              }\r\n              value=\"level\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Servis Seviyesi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Service Level'\r\n                  : ''\r\n              }\r\n              value=\"cnt\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'seconds'} />\r\n              </TableCell>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'service.level'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.level}>\r\n                <TableCell align=\"center\">{row.level}</TableCell>\r\n                <TableCell align=\"center\">%{row.cnt === 'NaN' ? '00.00' : row.cnt}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Alert } from '@material-ui/lab';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nfunction ServiceLevel() {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'service.level'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'service.level'} />\r\n          <FavoriteReports reportId=\"16\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item xs={12} xl={12}>\r\n          <Table response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Alert style={{ marginTop: '20px' }} severity=\"info\">\r\n        <IntlMessages id={'servicelevel.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default ServiceLevel;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedQueuesDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CircularProgress, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getAbandonedQueueCalls, getQueue } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AbondenedQueuesDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse, limit, offset, setQueueList, queuelist, setResponseCount }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ startDate: formatDate(today), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  let string = `SELECT \r\n  queue_view.display_name,\r\n  t1.from_userpart,\r\n  count(*),\r\n  sum (time_end - time_start) as waiting\r\n  from callcent_queuecalls_view t1\r\n  inner join queue_view on queue_view.dn = t1.q_num\r\n  where\r\n  t1.from_userpart != ''\r\n  and queue_view.display_name like '%${queue}'\r\n  and (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start)\r\n  and (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >= t1.time_start) \r\n  and is_answered = false\r\n  and  reason_noanswercode != 2\r\n  and  reason_failcode = 1\r\n  group by t1.from_userpart , queue_view.display_name \r\n  order by display_name,from_userpart\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `SELECT \r\n  count(*)\r\n  from callcent_queuecalls_view t1\r\n  inner join queue_view on queue_view.dn = t1.q_num\r\n  where\r\n  t1.from_userpart != ''\r\n  and queue_view.display_name like '%${queue}'\r\n  and (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start)\r\n  and (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >= t1.time_start) \r\n  and is_answered = false\r\n  and  reason_noanswercode != 2\r\n  and  reason_failcode = 1`;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAbandonedQueueCalls(string).then(response => {\r\n      getAbandonedQueueCalls(stringCount).then(resp => {\r\n        setResponse(JSON.parse(response.data.data));\r\n        setResponseCount(parseInt(JSON.parse(resp.data.data)[0]?.count));\r\n        setLoading(false);\r\n      });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [string]);\r\n  useEffect(() => {\r\n    getQueue().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  }, [startDate, endDate]);\r\n  const handleChangeQueue = event => {\r\n    event.target.value === '' ? setQueue('') : setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <AbondenedQueuesDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((que, index) => (\r\n                            <MenuItem key={index} value={que.display_name}>\r\n                              {que.dn} - {que.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, responseCount }) {\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'caller.id'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'count',\r\n      headerName: <IntlMessages id={'count'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting',\r\n      headerName: <IntlMessages id={'waiting.time'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(num, id, display_name, from_userpart, count, waiting) {\r\n    return { num, id, display_name, from_userpart, count, waiting };\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index + 1 + offset,\r\n      index,\r\n      data.display_name,\r\n      data.from_userpart,\r\n      data.count,\r\n      data.waiting\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(responseCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Abondened_queues'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_terk_raporu'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Verlassene Warteschlangen'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Verlaten wachtrijen'\r\n                      : ' '\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Saati'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Caller Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Bellernummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anrufernummer'\r\n                          : ''\r\n                      }\r\n                      value=\"caller_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Sıra'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrij'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlange'\r\n                          : ''\r\n                      }\r\n                      value=\"queue\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Agent Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Agent Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Agent nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Agentennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"agent_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={rows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function RepadativeCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {\r\n  getQueueNumber,\r\n  getRepetetiveAll,\r\n  getRepetetiveAnswered,\r\n  getDidNumbers,\r\n  getRepetetiveAllCount,\r\n  getRepetetiveAnsweredCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getRepetetiveCallerDetails } from 'api/api';\r\nimport RepadativeCallsDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setallcalls,\r\n  limit,\r\n  allCallOffset,\r\n  answeredLimit,\r\n  answeredCallsOffset,\r\n  setAnsweredCalls,\r\n  callerNumber,\r\n  setResponseCaller,\r\n  setAllCallCount,\r\n  setAnsweredCallCount,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: formatDate(yesterday),\r\n    paramFinish: formatDate(today),\r\n  });\r\n\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [didList, setDidList] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRepetetiveAll(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setallcalls(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n    getRepetetiveAllCount(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setAllCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, limit, allCallOffset, queue, setallcalls, setAllCallCount, didNumber]);\r\n  useEffect(() => {\r\n    getRepetetiveAnswered(params, answeredLimit, answeredCallsOffset, queue).then(response =>\r\n      setAnsweredCalls(JSON.parse(response.data.data)),\r\n    );\r\n\r\n    getRepetetiveAnsweredCount(params).then(response => {\r\n      setAnsweredCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, answeredLimit, answeredCallsOffset, setAnsweredCalls, setAnsweredCallCount, queue]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDidNumbers().then(resp => {\r\n      setDidList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRepetetiveCallerDetails(params, callerNumber).then(resp => {\r\n      setResponseCaller(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params, callerNumber, setQueueList, setDidList, setResponseCaller]);\r\n\r\n  useEffect(()=>{\r\n    setParams({\r\n      paramStart: formatDate(startDate),\r\n      paramFinish: formatDate(endDate),\r\n    });\r\n  },[startDate,endDate])\r\n  const handleChangeQueueNumber = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeDidNumber = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RepadativeCallsDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <GridContainer>\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={queue}\r\n                    onChange={handleChangeQueueNumber}\r\n                    label={<IntlMessages id={'queue'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {queuelist.map((queue, index) => (\r\n                      <MenuItem key={index} value={queue.dn}>\r\n                        {queue.dn} - {queue.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={didNumber}\r\n                    onChange={handleChangeDidNumber}\r\n                    label={<IntlMessages id={'mountlydetails.didnumber'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {didList.map((did, index) => (\r\n                      <MenuItem key={index} value={did.conditiondata}>\r\n                        {did.conditiondata}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </GridContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AllCalls = ({\r\n  allcalls,\r\n  setallcalls,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  setCallerNumber,\r\n  setOpen,\r\n  allCallCount,\r\n  offset,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      id: 'num',\r\n      label: '#',\r\n    },\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(num, cnt, src_display_name) {\r\n    return { num, cnt, src_display_name };\r\n  }\r\n\r\n  const rows = allcalls.map((data, index) => createData(index + 1 + offset, data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClick = number => {\r\n    setCallerNumber(number);\r\n    setOpen(true);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [exportAllOpen, setExpotAllOpen] = useState(false);\r\n  const handleExportAllOpen = () => setExpotAllOpen(true);\r\n  const handleExportAllClose = () => setExpotAllOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(allCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setallcalls([]);\r\n    handleExportAllOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={exportAllOpen}\r\n        onClose={handleExportAllClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'allcalls'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell>\r\n                  <IntlMessages id={'details'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell style={{ cursor: 'pointer' }} onClick={() => handleClick(row.src_display_name)}>\r\n                      <VisibilityIcon style={{ color: '#F05454' }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, allCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={allCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={allcalls.length < limit || allcalls.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCalls;\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ responseCaller }) => {\r\n  const columns = [\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n    { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n    { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n    { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='left'><b>#</b></TableCell>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {responseCaller.map((row, index) => {\r\n            return (\r\n              <TableRow style={{ cursor: 'pointer' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell align='left'><b>{index+1}</b></TableCell>\r\n                {columns.map(column => {\r\n                  const value = row[column.id];\r\n                  return <TableCell align='center'>{value}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AnsweredCalls = ({\r\n  answeredcalls,\r\n  setAnsweredCalls,\r\n  setAnsweredLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  answeredCallCount,\r\n  offset,\r\n}) => {\r\n  const columns = [\r\n    {\r\n      id: 'num',\r\n      label: '#',\r\n    },\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(num, cnt, src_display_name) {\r\n    return { num, cnt, src_display_name };\r\n  }\r\n\r\n  const rows = answeredcalls.map((data, index) => createData(index + 1 + offset, data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setAnsweredLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setAnsweredLimit(answeredCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setAnsweredCalls([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'wallboard.answered'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, answeredCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={answeredCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={\r\n            answeredcalls.length < limit || answeredcalls.length === 0 ? { disabled: true } : { disabled: false }\r\n          }\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnsweredCalls;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport CallTable from './AllCalls';\r\nimport Model from './Model';\r\nimport AnsweredCalls from './AnsweredCalls';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box, Button } from '@mui/material';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst RepetetiveCalls = () => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [answeredLimit, setAnsweredLimit] = useState(10);\r\n  const [allCallOffset, setAllCallOffset] = useState(0);\r\n  const [answeredCallsOffset, setAnsweredCallOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [pageAnswered, setPageAnswered] = useState(0);\r\n  const [allcalls, setallcalls] = useState([]);\r\n  const [answeredCalls, setAnsweredCalls] = useState([]);\r\n  const [callerNumber, setCallerNumber] = useState('');\r\n  const [responseCaller, setResponseCaller] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [allCallCount, setAllCallCount] = useState(10);\r\n  const [answeredCallCount, setAnsweredCallCount] = useState(10);\r\n  let curentLanguage = useIntl();\r\n\r\n  const handleClose = event => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'repetetive.calls'} />, isActive: true },\r\n  ];\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'repetetive.calls'} />\r\n          <FavoriteReports reportId=\"14\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <Filter\r\n            setResponseCaller={setResponseCaller}\r\n            setAnsweredCallCount={setAnsweredCallCount}\r\n            setallcalls={setallcalls}\r\n            callerNumber={callerNumber}\r\n            answeredLimit={answeredLimit}\r\n            limit={limit}\r\n            allCallOffset={allCallOffset}\r\n            answeredCallsOffset={answeredCallsOffset}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            setAllCallCount={setAllCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<AddIcCallIcon />}\r\n                    number={allCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'allcalls'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<PhoneInTalkIcon />}\r\n                    number={answeredCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'wallboard.answered'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <CallTable\r\n            setOpen={setOpen}\r\n            responseCaller={responseCaller}\r\n            offset={allCallOffset}\r\n            setOffset={setAllCallOffset}\r\n            allcalls={allcalls}\r\n            setallcalls={setallcalls}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setCallerNumber={setCallerNumber}\r\n            setPage={setPage}\r\n            page={page}\r\n            allCallCount={allCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <AnsweredCalls\r\n            answeredcalls={answeredCalls}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            answeredCallCount={answeredCallCount}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            setPage={setPageAnswered}\r\n            page={pageAnswered}\r\n            limit={answeredLimit}\r\n            setOffset={setAnsweredCallOffset}\r\n            offset={answeredCallsOffset}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model responseCaller={responseCaller} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <ExcelFile\r\n              filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls_Detail' : 'Mükerrer_arama_Detay'}\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={responseCaller} name=\"responseCaller\">\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'DID Number' : 'DID Numarası'} value=\"src_did\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Called' : 'Hedef DN'} value=\"dst_display_name\" />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Talk Time' : 'Konuşma Süresi'}\r\n                  value=\"talkingtime\"\r\n                />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                  value=\"waitingtime\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginLeft: '10px' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default RepetetiveCalls;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst QueueList = ({ setQueueAmaunt }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [response, setResponse] = useState([]);\r\n  useEffect(() => {\r\n    api.getQueueList().then(resp => {\r\n      let queAmaunt = 0;\r\n      setResponse(resp.data.data);\r\n      resp.data.data.forEach(element => {\r\n        if (element.waitingNumber !== '-') {\r\n          queAmaunt++;\r\n        }\r\n      });\r\n      setQueueAmaunt(queAmaunt);\r\n    });\r\n    var intervalId = setInterval(() => {\r\n      api.getQueueList().then(resp => {\r\n        let queAmaunt = 0;\r\n        setResponse(resp.data.data);\r\n        resp.data.data.forEach(element => {\r\n          if (element.waitingNumber !== '-') {\r\n            queAmaunt++;\r\n          }\r\n        });\r\n        setQueueAmaunt(queAmaunt);\r\n      });\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [setQueueAmaunt]);\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.waiting'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.length >= 1\r\n            ? response.map((row, index) => {\r\n                return row.waitingNumber !== '-' ? (\r\n                  <TableRow style={{ backgroundColor: '#FFFD95' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.waitingNumber}</b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                      <b>\r\n                        {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                          ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                              .toString()\r\n                              .replace(':', 'h ')\r\n                              .replace(':', 'm ') + 's'\r\n                          : null}\r\n                      </b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : null;\r\n              })\r\n            : null}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.waitingNumber === '-' ? (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                  <b>\r\n                    <IntlMessages id={'no.waiting'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                  <b>\r\n                    {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default QueueList;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport Chip from '@mui/material/Chip';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentConnection = ({ setCallAmaunt, setAgentAmaunt, setAgentNum, setAgentName }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    api.getQueueNumber().then(resp => setQueues(JSON.parse(resp.data.data)));\r\n    api.getAgentConnection().then(resp => {\r\n      let callAmount = 0;\r\n      setResponse(resp.data.data);\r\n      resp.data.data.forEach(element => {\r\n        if (element.connectionNumber !== '-') {\r\n          callAmount++;\r\n        }\r\n      });\r\n      setCallAmaunt(callAmount);\r\n      setAgentAmaunt(resp.data.data.length);\r\n    });\r\n\r\n    var intervalId = setInterval(() => {\r\n      api.getAgentConnection().then(resp => {\r\n        let callAmount = 0;\r\n        setResponse(resp.data.data);\r\n        resp.data.data.forEach(element => {\r\n          if (element.connectionNumber !== '-') {\r\n            callAmount++;\r\n          }\r\n        });\r\n        setCallAmaunt(callAmount);\r\n        setAgentAmaunt(resp.data.data.length);\r\n      });\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [setCallAmaunt, setAgentAmaunt]);\r\n\r\n  const setAgentNumFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const column = [\r\n    { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'agent'} />, width: '30px' },\r\n    { id: 'direction', headerName: <IntlMessages id={'direction'} />, width: '100px' },\r\n    { id: 'queue', headerName: <IntlMessages id={'queue'} />, width: '100px' },\r\n    { id: 'connection_number', headerName: <IntlMessages id={'connection.number'} />, width: '60px' },\r\n    { id: 'connection_time', headerName: <IntlMessages id={'connection.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'internals.summary.agent'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'direction'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.number'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.time'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber !== '-' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}\r\n                hover\r\n                role=\"checkbox\"\r\n                tabIndex={-1}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  {row.direction.includes('inbound') ? (\r\n                    <Chip color=\"success\" label={<IntlMessages id={'incomingcall'} />} />\r\n                  ) : row.connectionNumber.length < 10 ? (\r\n                    <Chip color=\"info\" label={<IntlMessages id={'agentedcall'} />} />\r\n                  ) : (\r\n                    <Chip color=\"error\" label={<IntlMessages id={'outgoingcall'} />} />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  {row?.queue !== null ? (\r\n                    row?.queue !== undefined ? (\r\n                      queues.find(e => e.dn === row?.queue?.split('.')[0])?.display_name || <b>-</b>\r\n                    ) : (\r\n                      <b>-</b>\r\n                    )\r\n                  ) : (\r\n                    <b>-</b>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber === '-' ? (\r\n              <TableRow key={index} hover role=\"checkbox\" tabIndex={-1} style={{ cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentConnection;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst AgentStatus = ({ setBreakeAgentAmount, setLoginAgentAmount, setAgentNum, setAgentName }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const breakStates = ['Login', 'State', 'Logout'];\r\n    api.getAgentStatus(dateFormat(new Date(), 'yyyy-mm-dd')).then(resp => {\r\n      let breakeAgenAmaunt = 0;\r\n      let loginAgentAmaunt = 0;\r\n      let data = JSON.parse(resp.data.data);\r\n      setResponse(data);\r\n      data.forEach(element => {\r\n        if (!breakStates.includes(element.states)) {\r\n          breakeAgenAmaunt++;\r\n        } else if (element.states === 'Login') {\r\n          loginAgentAmaunt++;\r\n        }\r\n      });\r\n      setBreakeAgentAmount(breakeAgenAmaunt);\r\n      setLoginAgentAmount(loginAgentAmaunt);\r\n    });\r\n    var intervalId = setInterval(() => {\r\n      api.getAgentStatus(dateFormat(new Date(), 'yyyy-mm-dd')).then(resp => {\r\n        let breakeAgenAmaunt = 0;\r\n        let loginAgentAmaunt = 0;\r\n        let data = JSON.parse(resp.data.data);\r\n        setResponse(data);\r\n        data.forEach(element => {\r\n          if (!breakStates.includes(element.states)) {\r\n            breakeAgenAmaunt++;\r\n          } else if (element.states === 'Login') {\r\n            loginAgentAmaunt++;\r\n          }\r\n        });\r\n        setBreakeAgentAmount(breakeAgenAmaunt);\r\n        setLoginAgentAmount(loginAgentAmaunt);\r\n      });\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [setBreakeAgentAmount, setLoginAgentAmount]);\r\n\r\n  const onClickUptateValuesFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const column = [\r\n    { id: 'agent_name', headerName: <IntlMessages id={'internals.summary.agent'} />, width: '30px' },\r\n    { id: 'states', headerName: <IntlMessages id={'state'} />, width: '60px' },\r\n    { id: 'statustime', headerName: <IntlMessages id={'state.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '33vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map(column => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={{\r\n                  paddingTop: '8px',\r\n                  paddingBottom: '8px',\r\n                  fontFamily: 'Roboto',\r\n                  color: 'white',\r\n                  backgroundColor: '#FA744F',\r\n                }}>\r\n                {column.headerName}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Login' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states !== 'Login' && res.states !== 'State' && res.states !== 'Logout' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{\r\n                  backgroundColor:\r\n                    res.states === 'YEMEK' && parseInt(res.statustime.split(':')[0]) >= 1\r\n                      ? '#DD4A48'\r\n                      : res.states === 'WC' && parseInt(res.statustime.split(':')[1]) >= 5\r\n                      ? '#DD4A48'\r\n                      : '#F3950D',\r\n                  cursor: 'pointer',\r\n                }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Logout' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#DE834D', cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'State' ? (\r\n              <TableRow key={index} style={{ cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />{' '}\r\n                  <b>{res.states === 'State' ? <IntlMessages id={'passive'} /> : res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { Grid, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PhonePausedIcon from '@mui/icons-material/PhonePaused';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport PhoneMissedIcon from '@mui/icons-material/PhoneMissed';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport SupportAgentIcon from '@mui/icons-material/SupportAgent';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\n\r\nimport dateFormat from 'dateformat';\r\nimport { DateRange } from '@material-ui/icons';\r\n\r\nexport default function CallDetail({ queueAmaunt, callAmaunt, agentAmaunt, breakeAgentAmaunt, loginAgentAmaunt }) {\r\n  let history = useHistory();\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd'));\r\n  const [dateFilter, setDateFilter] = useState('daily');\r\n  const [direction, setDirection] = useState('all');\r\n  const [callType, setCallType] = useState('all');\r\n  const handleChangeFilter = e => {\r\n    setDateFilter(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'weekly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 7)), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'daily':\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'monthly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 30)), 'yyyy-mm-dd'));\r\n        break;\r\n      default:\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getDailyCallDetails(startTimeApi)\r\n      .then(resp => {\r\n        setResponse(JSON.parse(resp.data.data)[0]);\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [startTimeApi, history]);\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      api\r\n        .getDailyCallDetails(startTimeApi)\r\n        .then(resp => setResponse(JSON.parse(resp.data.data)[0]))\r\n        .catch(err => {\r\n          if (err.response.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [startTimeApi, history]);\r\n\r\n  const convertTime = timeString => {\r\n    if (timeString !== undefined) {\r\n      if (timeString.includes('.')) {\r\n        let tempHour = parseInt(timeString.split('.')[0]) * 24;\r\n        return (\r\n          tempHour +\r\n          parseInt(timeString.split('.')[1].split(':')[0]) +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[1] +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[2]\r\n        );\r\n      } else {\r\n        return timeString;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ marginBottom: '1px', fontFamily: 'Roboto' }}>\r\n      <GridContainer>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={dateFilter} onChange={handleChangeFilter}>\r\n              <MenuItem value=\"daily\">\r\n                <DateRange />\r\n                <IntlMessages id=\"daily\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"weekly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.weekly\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"monthly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.monthly\" />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={direction} onChange={e => setDirection(e.target.value)}>\r\n              <MenuItem value=\"all\">\r\n                <CompareArrowsIcon />\r\n                <IntlMessages id={'all'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"inbound\">\r\n                <PhoneCallbackIcon />\r\n                <IntlMessages id={'dashboard.inbound'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"outbound\">\r\n                <PhoneForwardedIcon />\r\n                <IntlMessages id={'dashboard.outbound'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"queue\">\r\n                <PhoneForwardedIcon />\r\n                <IntlMessages id={'queue'} />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={callType} onChange={e => setCallType(e.target.value)}>\r\n              <MenuItem value=\"all\">\r\n                <AddIcCallIcon />\r\n                <IntlMessages id={'all'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"agent\">\r\n                <SupportAgentIcon />\r\n                <IntlMessages id={'CallLog.filter.innumber'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"out\">\r\n                <PhoneInTalkIcon />\r\n                <IntlMessages id={'CallLog.filter.outnumber'} />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                callType === 'agent'\r\n                  ? convertReadableTime(convertTime(response.agent_to_agent_totaltime))\r\n                  : direction === 'inbound'\r\n                  ? convertReadableTime(convertTime(response.inbound_totaltime))\r\n                  : direction === 'outbound'\r\n                  ? convertReadableTime(convertTime(response.outbound_totaltime))\r\n                  : direction === 'queue'\r\n                  ? convertReadableTime(convertTime(response.queue_totaltime))\r\n                  : response.totaltime !== ''\r\n                  ? convertReadableTime(convertTime(response.totaltime))\r\n                  : '00:00:00'\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.call.time'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<AddIcCallIcon />}\r\n              number={response.total_call}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.total.call'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={2}\r\n          style={{ display: direction === 'queue' || direction === 'outbound' || callType === 'agent' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneCallbackIcon />}\r\n              number={response.inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.inbound'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={2}\r\n          style={{ display: direction === 'queue' || direction === 'inbound' || callType === 'agent' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.outbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.outbound'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'agent' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<SupportAgentIcon />}\r\n              number={response.agent_to_agent_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'agentedcall'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'queue' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.queue_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'queue'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={response.answered_inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.answered'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#EA4C4C  -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{ display: direction !== 'all' || callType !== 'all' ? 'none' : 'unset' }}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneMissedIcon />}\r\n              number={String(\r\n                parseInt(response.inbound_calls) - parseInt(response.answered_inbound_calls) < 0\r\n                  ? '0'\r\n                  : parseInt(response.inbound_calls) - parseInt(response.answered_inbound_calls),\r\n              )}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.unanswered'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                callType === 'agent'\r\n                  ? getAverageTime(convertTime(response.agent_to_agent_totaltime), response.agent_to_agent_calls)\r\n                  : direction === 'inbound'\r\n                  ? getAverageTime(convertTime(response.inbound_totaltime), response.inbound_calls)\r\n                  : direction === 'outbound'\r\n                  ? getAverageTime(convertTime(response.outbound_totaltime), response.outbound_calls)\r\n                  : direction === 'queue'\r\n                  ? getAverageTime(convertTime(response.queue_totaltime), response.queue_calls)\r\n                  : response.average !== ''\r\n                  ? convertReadableTime(convertTime(response.average))\r\n                  : '00:00:00'\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.average.time'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhonePausedIcon />}\r\n              number={queueAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.waiting.queue'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#EA4C4C -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={callAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.call'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<PersonIcon />}\r\n              number={agentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<TimerIcon />}\r\n              number={breakeAgentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.inbreak'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px', height: '100%' }}>\r\n            <CounterCard\r\n              icon={<GroupIcon />}\r\n              number={String(loginAgentAmaunt - callAmaunt < 0 ? 0 : loginAgentAmaunt - callAmaunt)}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.available'} />}\r\n              labelProps={{\r\n                fontSize: 16,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\nconst getAverageTime = (totaltime, count) => {\r\n  if (totaltime === '' || totaltime === undefined) {\r\n    return '00h 00m 00s';\r\n  } else {\r\n    let temptime = totaltime.split(':');\r\n    let totalSec = parseInt(temptime[0]) * 3600 + parseInt(temptime[1]) * 60 + parseInt(temptime[2]);\r\n    let average = Math.round(totalSec / (parseInt(count) === 0 ? 1 : parseInt(count)));\r\n    var hours = Math.floor(average / 3600);\r\n    average %= 3600;\r\n    var minutes = Math.floor(average / 60);\r\n    var seconds = average % 60;\r\n    return `${hours < 10 ? `0${hours}` : hours}h ${minutes < 10 ? `0${minutes}` : minutes}m ${\r\n      seconds < 10 ? `0${seconds}` : seconds\r\n    }s`;\r\n  }\r\n};\r\n\r\nconst convertReadableTime = time => {\r\n  if (time === '' || time === undefined) {\r\n    return '00h 00m 00s';\r\n  } else {\r\n    return (\r\n      time\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's'\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Tab, Tabs, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nimport { DateRange } from '@material-ui/icons';\r\n\r\nexport default function AgentDetail({ agentNum, agentName }) {\r\n  const [agentDetail, setAgentDetail] = useState({\r\n    dst_display_name: '-',\r\n    totalcall: '0',\r\n    answered_call: '0',\r\n    inbound_call_to_agent: '0',\r\n    outbound_call_to_agent: '0',\r\n    totaltime: '00:00:00',\r\n    average: '00:00:00',\r\n    inboundtotaltime: '00:00:00',\r\n    outboundtotaltime: '00:00:00',\r\n    inboundaverage: '00:00:00',\r\n    outboundaverage: '00:00:00',\r\n  });\r\n  let [voiceMail, setVoiceMail] = useState('0');\r\n  let [longTime, setLongTime] = useState('00:00:00');\r\n  let [waitingTime, setWaitingTime] = useState('00:00:00');\r\n\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  const [dateFilter, setDateFilter] = useState('daily');\r\n\r\n  const handleChangeFilter = e => {\r\n    setDateFilter(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'weekly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 7)), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'daily':\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'monthly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 30)), 'yyyy-mm-dd'));\r\n        break;\r\n      default:\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n    }\r\n  };\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getInternalsSummaryLongestCalled(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      api.getInternalsSummaryLongestCaller(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      api\r\n        .getInternalsSummaryLongestCalledAmount(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum)\r\n        .then(result => {\r\n          setLongestAmount(JSON.parse(result.data.data));\r\n        });\r\n      api\r\n        .getInternalsSummaryLongestCallerAmount(startTimeApi, dateFormat(new Date(), 'yyyy-mm-dd'), agentNum)\r\n        .then(result => {\r\n          setLongestCallerAmount(JSON.parse(result.data.data));\r\n        });\r\n    }\r\n  }, [agentNum, startTimeApi]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getAgentDetails(agentNum, startTimeApi).then(res => {\r\n        if (JSON.parse(res.data.data).length === 0) {\r\n          setAgentDetail({\r\n            dst_display_name: agentName,\r\n            totalcall: '0',\r\n            answered_call: '0',\r\n            inbound_call_to_agent: '0',\r\n            outbound_call_to_agent: '0',\r\n            totaltime: '00:00:00',\r\n            average: '00:00:00',\r\n            inboundtotaltime: '00:00:00',\r\n            outboundtotaltime: '00:00:00',\r\n            inboundaverage: '00:00:00',\r\n            outboundaverage: '00:00:00',\r\n          });\r\n        } else {\r\n          setAgentDetail(JSON.parse(res.data.data)[JSON.parse(res.data.data).length-1]);\r\n        }\r\n      });\r\n    }\r\n  }, [agentNum, agentName, startTimeApi]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardVoiceMail(agentNum).then(response => {\r\n        setVoiceMail(JSON.parse(response.data.data)[0].count);\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardLongTime(agentNum).then(response => {\r\n        setLongTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardWaitingTime(agentNum).then(response => {\r\n        setWaitingTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <Paper>\r\n        <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select id=\"direction-select\" value={dateFilter} onChange={handleChangeFilter}>\r\n              <MenuItem value=\"daily\">\r\n                <DateRange />\r\n                <IntlMessages id=\"daily\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"weekly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.weekly\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"monthly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.monthly\" />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <div style={{ minHeight: '33vh', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Box style={{ width: '100%' }}>\r\n            <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n              <Tabs value={value} onChange={handleChange}>\r\n                <Tab style={{ borderRight: '3px solid #a1bf6e' }} label={<IntlMessages id={'Total'} />} {...a11yProps(0)} />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Inbound'} />}\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Outbound'} />}\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <span>{longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}</span>\r\n                    <b>{longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}</b>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <span> {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}</span>\r\n                    <b>{longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}</b>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={8}>\r\n                  <p style={{ opacity: '.5', display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                    </span>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.callednumber'} />\r\n                    </span>\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <b>\r\n                      {longestCalleds[0] !== undefined\r\n                        ? longestCalleds[0].en_uzun_aranan_süre\r\n                            .toString()\r\n                            .replace(':', 'h ')\r\n                            .replace(':', 'm ') + 's'\r\n                        : '-'}\r\n                    </b>\r\n                    <span>{longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}</span>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={8}>\r\n                  <p style={{ opacity: '.5', display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                    </span>\r\n                    <span>\r\n                      <IntlMessages id={'internalssummary.callernumber'} />\r\n                    </span>\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <b>\r\n                      {longestCallers[0] !== undefined\r\n                        ? longestCallers[0].en_uzun_aranan_süre\r\n                            .toString()\r\n                            .replace(':', 'h ')\r\n                            .replace(':', 'm ') + 's'\r\n                        : '-'}\r\n                    </b>\r\n                    <span>{longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}</span>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n          </Box>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport QueueList from './QueueList';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport AgentConnection from './AgentConnection';\r\nimport AgentStatus from './AgentStatus/AgentStatus';\r\nimport CallDetail from './CallDetail';\r\nimport AgentDetail from './AgentDetail';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst WallBoard = () => {\r\n  let [queueAmaunt, setQueueAmaunt] = useState(0);\r\n  let [callAmaunt, setCallAmaunt] = useState(0);\r\n  let [agentAmaunt, setAgentAmaunt] = useState(0);\r\n  let [breakeAgentAmaunt, setBreakeAgentAmount] = useState(0);\r\n  let [loginAgentAmaunt, setLoginAgentAmount] = useState(0);\r\n  let [agentNum, setAgentNum] = useState('0');\r\n  let [agentName, setAgentName] = useState('-');\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n    { label: <IntlMessages id={'wallboard'} />, isActive: true },\r\n  ];\r\n\r\n  let [callDetailVisible, setCallDetailVisible] = useState(true);\r\n  const handleSwitchChange = e => {\r\n    setCallDetailVisible(e.target.checked);\r\n  };\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"wallboard\" />} breadcrumbs={breadcrumbs}>\r\n      <div>\r\n        {callDetailVisible && (\r\n          <CallDetail\r\n            queueAmaunt={queueAmaunt}\r\n            callAmaunt={callAmaunt}\r\n            agentAmaunt={agentAmaunt}\r\n            breakeAgentAmaunt={breakeAgentAmaunt}\r\n            loginAgentAmaunt={loginAgentAmaunt}\r\n          />\r\n        )}\r\n        <FormControlLabel\r\n          control={<Switch checked={callDetailVisible} onChange={handleSwitchChange} />}\r\n          label={<IntlMessages id=\"showCards\" />}\r\n        />\r\n      </div>\r\n      <GridContainer>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#EA4C4C   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queuelist'} />\r\n            </div>\r\n            <QueueList queueAmaunt={queueAmaunt} setQueueAmaunt={setQueueAmaunt} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#2978B5   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.connection'} />\r\n            </div>\r\n            <AgentConnection\r\n              setCallAmaunt={setCallAmaunt}\r\n              setAgentAmaunt={setAgentAmaunt}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#FA744F',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agent.status'} />\r\n            </div>\r\n            <AgentStatus\r\n              setBreakeAgentAmount={setBreakeAgentAmount}\r\n              setLoginAgentAmount={setLoginAgentAmount}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#ADCE74',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.detail'} />\r\n            </div>\r\n            <AgentDetail agentNum={agentNum} agentName={agentName} />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default WallBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { getDailyLog, getDailyLogTable } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, setResponseTable }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyLog(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  useEffect(() => {\r\n    getDailyLogTable(params.date).then(resp => {\r\n      setResponseTable(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params.date, setResponseTable]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  useEffect(()=>{\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  },[endDate])\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  maxDate={new Date()}\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst DataTable = ({ responseTable }) => {\r\n  let date;\r\n  let totalCall = 0;\r\n  let total = 0;\r\n  let act = 0;\r\n\r\n  for (let i = 0; i < responseTable.length; i++) {\r\n    date = responseTable[i].hour_log !== 'undefined' ? responseTable[i].hour_log.split(' ')[0] : '-';\r\n    totalCall += parseInt(responseTable[i].count);\r\n    total = responseTable[i].total;\r\n    act = responseTable[i].act;\r\n  }\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function createData(date, totalCall, totalMin, act) {\r\n    return { date, totalCall, totalMin, act };\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const rows = [createData(date, totalCall, total, act)];\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"totalCall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalMin\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalam Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Duration'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b>{row.date !== undefined ? row.date : '-'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.totalCall}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>{row.totalMin.length > 0 && convertReadableTime(convertTime(row.totalMin))}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {row.act\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\nconst convertReadableTime = time => {\r\n  if (time === '' || time === undefined) {\r\n    return '00h 00m 00s';\r\n  } else {\r\n    return (\r\n      time\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's'\r\n    );\r\n  }\r\n};\r\nconst convertTime = timeString => {\r\n  if (timeString !== undefined) {\r\n    if (timeString.includes('.')) {\r\n      let tempHour = parseInt(timeString.split('.')[0]) * 24;\r\n      return (\r\n        tempHour +\r\n        parseInt(timeString.split('.')[1].split(':')[0]) +\r\n        ':' +\r\n        timeString.split('.')[1].split(':')[1] +\r\n        ':' +\r\n        timeString.split('.')[1].split(':')[2]\r\n      );\r\n    } else {\r\n      return timeString;\r\n    }\r\n  }\r\n};\r\n","import React, { createRef } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis, Label } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst Chart = ({ response }) => {\r\n  let datalist = [];\r\n  datalist = response.map(data => ({\r\n    count: data.count,\r\n    hour: parseInt(data.hour_log.split(' ')[1].split(':')[0]),\r\n  }));\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    const found = datalist.some(data => parseInt(data.hour) === i);\r\n    if (!found) {\r\n      datalist.push({ count: 0, hour: i });\r\n    }\r\n  }\r\n  datalist.sort(function(a, b) {\r\n    return parseInt(a.hour) - parseInt(b.hour);\r\n  });\r\n  var maximum = Math.max.apply(\r\n    Math,\r\n    datalist.map(function(o) {\r\n      return o.count;\r\n    }),\r\n  );\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\">\r\n                <Label\r\n                  value={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunden'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : 'Hour'\r\n                  }\r\n                  position=\"insideBottomRight\"\r\n                  offset={0}\r\n                />\r\n              </XAxis>\r\n              <YAxis\r\n                domain={[0, maximum]}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={data => {\r\n                  return data.payload[0] ? (\r\n                    <div style={{ backgroundColor: 'white' }}>\r\n                      <p>\r\n                        <IntlMessages id={'hour'} />: {data.payload[0].payload.hour}\r\n                      </p>\r\n                      <p>\r\n                        <IntlMessages id={'call.time'} />: {data.payload[0].payload.count}\r\n                      </p>\r\n                    </div>\r\n                  ) : null;\r\n                }}\r\n              />\r\n              <Legend />\r\n              <defs>\r\n                <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                  <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                </linearGradient>\r\n              </defs>\r\n\r\n              <Bar dataKey=\"count\" fill=\"url(#color1)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst DailyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTable, setResponseTable] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailylog'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'dailylog'} /> <FavoriteReports reportId=\"17\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse} setResponseTable={setResponseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <DataTable responseTable={responseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyLog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { getDailyActiveCalls } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyActiveCalls(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  useEffect(() => {\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  }, [endDate]);\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  maxDate={new Date()}\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { createRef } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport dateFormat from 'dateformat';\r\nconst Chart = ({ response }) => {\r\n  let datalist = [{ hour: '', count: 0 }];\r\n  datalist = response.map(item => ({\r\n    hour: dateFormat(item.timezone, 'HH:MM'),\r\n    count: parseInt(item.acc),\r\n  }));\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\" label={{\r\n                  value:\r\n                  curentLanguage.locale === 'en-EN'\r\n                  ? 'Hour'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Stunden'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Saat'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Uur'\r\n                  : 'Hour',\r\n                  position: 'insideBottom',\r\n                  offset:0\r\n                }}>\r\n              </XAxis>\r\n              <YAxis\r\n                allowDecimals={false}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={<CustomTooltip/>}\r\n              />\r\n              <Legend verticalAlign=\"top\" />\r\n              <Line dataKey=\"count\" dot={false} stroke=\"#3b65ff\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div style={{ backgroundColor: 'white' }}>\r\n        <p>\r\n          <IntlMessages id={'hour'} />: {payload[0]?.payload.hour}\r\n        </p>\r\n        <p>\r\n          <IntlMessages id={'call.time'} />: {payload[0]?.payload.count}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst DailyAcc = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailyacc'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'dailyacc'} />\r\n          <FavoriteReports reportId=\"18\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyAcc;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(date, count, total, act) {\r\n    return { date, count, total, act };\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n  const rows = response.map(data => createData(data.day_log, data.count, data.total, data.act));\r\n\r\n  let data = rows.map(unit => ({\r\n    date: unit.date.split('T')[0],\r\n    count: unit.count,\r\n    total:\r\n      unit.total.hours === undefined\r\n        ? unit.total.minutes === undefined\r\n          ? unit.total.seconds === undefined\r\n            ? '00:00:00'\r\n            : '00:00:' + addZero(unit.total.seconds)\r\n          : unit.total.seconds === undefined\r\n          ? '00:' + addZero(unit.total.minutes) + ':00'\r\n          : '00:' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds)\r\n        : unit.total.minutes === undefined\r\n        ? unit.total.seconds === undefined\r\n          ? addZero(unit.total.hours) + ':00:00'\r\n          : addZero(unit.total.hours) + ':00:' + addZero(unit.total.seconds)\r\n        : unit.total.seconds === undefined\r\n        ? addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':00'\r\n        : addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds),\r\n    act:\r\n      unit.act !== undefined\r\n        ? unit.act.hours === undefined\r\n          ? unit.act.minutes === undefined\r\n            ? unit.act.seconds === undefined\r\n              ? '00:00:00'\r\n              : '00:00:' + addZero(unit.act.seconds)\r\n            : unit.act.seconds === undefined\r\n            ? '00:' + addZero(unit.act.minutes) + ':00'\r\n            : '00:' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n          : unit.act.minutes === undefined\r\n          ? unit.act.seconds === undefined\r\n            ? addZero(unit.act.hours) + ':00:00'\r\n            : addZero(unit.act.hours) + ':00:' + addZero(unit.act.seconds)\r\n          : unit.act?.seconds === undefined\r\n          ? addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':00'\r\n          : addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n        : '00:00:00',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    day: 0,\r\n    count: 0,\r\n    totalTime: 0,\r\n    averageTime: 0,\r\n  };\r\n\r\n  function timeToSecond(param) {\r\n    let second = parseInt(param.hours) * 3600 + parseInt(param.minutes) * 60 + parseInt(param.seconds);\r\n    return second;\r\n  }\r\n  for (let i = 0; i < rows.length; i++) {\r\n    total.count += parseInt(rows[i].count);\r\n    total.day = rows.length;\r\n    total.totalTime += timeToSecond(rows[i].total);\r\n    total.averageTime += timeToSecond(rows[i].act);\r\n  }\r\n\r\n  function secondToTime(param, day) {\r\n    param = param / parseInt(day);\r\n    let string =\r\n      addZero(Math.floor(param / 3600)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) % 60));\r\n    return string;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily log report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk yuk raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell>\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.date.split('T')[0]}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.count}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.total.hours === undefined\r\n                      ? row.total.minutes === undefined\r\n                        ? row.total.seconds === undefined\r\n                          ? '00:00:00'\r\n                          : '00:00:' + addZero(row.total.seconds)\r\n                        : row.total.seconds === undefined\r\n                        ? '00:' + addZero(row.total.minutes) + ':00'\r\n                        : '00:' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                      : row.total.minutes === undefined\r\n                      ? row.total.seconds === undefined\r\n                        ? addZero(row.total.hours) + ':00:00'\r\n                        : addZero(row.total.hours) + ':00:' + addZero(row.total.seconds)\r\n                      : row.total.seconds === undefined\r\n                      ? addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':00'\r\n                      : addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b style={{ color: '#FF87CA' }}>\r\n                    {(row.act !== undefined\r\n                      ? row.act.hours === undefined\r\n                        ? row.act.minutes === undefined\r\n                          ? row.act.seconds === undefined\r\n                            ? '00:00:00'\r\n                            : '00:00:' + addZero(row.act.seconds)\r\n                          : row.act.seconds === undefined\r\n                          ? '00:' + addZero(row.act.minutes) + ':00'\r\n                          : '00:' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                        : row.act.minutes === undefined\r\n                        ? row.act.seconds === undefined\r\n                          ? addZero(row.act.hours) + ':00:00'\r\n                          : addZero(row.act.hours) + ':00:' + addZero(row.act.seconds)\r\n                        : row.act?.seconds === undefined\r\n                        ? addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':00'\r\n                        : addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                      : '00:00:00'\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <b>\r\n                  {total.day + ' '} <IntlMessages id={'day'} />{' '}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.totalTime, 1)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.averageTime, total.day)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TableContainer } from '@material-ui/core';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = props => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const data = {\r\n    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\r\n    datasets: [\r\n      {\r\n        label: typeof props.array[0] === 'undefined' ? [] : props.array[0].date,\r\n        data: typeof props.array[0] === 'undefined' ? [] : props.array[0].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 206, 86, 0.8)',\r\n        borderColor: 'rgba(255, 206, 86, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[1] === 'undefined' ? [] : props.array[1].date,\r\n        data: typeof props.array[1] === 'undefined' ? [] : props.array[1].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[2] === 'undefined' ? [] : props.array[2].date,\r\n        data: typeof props.array[2] === 'undefined' ? [] : props.array[2].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        borderColor: 'rgba(54, 162, 235, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[3] === 'undefined' ? [] : props.array[3].date,\r\n        data: typeof props.array[3] === 'undefined' ? [] : props.array[3].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n      {\r\n        label: typeof props.array[4] === 'undefined' ? [] : props.array[4].date,\r\n        data: typeof props.array[4] === 'undefined' ? [] : props.array[4].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderColor: 'rgba(153, 102, 255, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n\r\n      <TableContainer className={classes.root} component={Paper} ref={ref}>\r\n        <Line data={data} options={options} />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, Select, InputLabel, MenuItem, Card, CardContent, CircularProgress } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getCallComparison, getCallComparisonDaily } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, response, setGraphData, setResponseDaily }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const showTime = date => {\r\n    const date_ = new Date(date);\r\n    return date_.getHours();\r\n  };\r\n  const today = new Date();\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [select, setSelect] = useState(1);\r\n  const [, setParams] = useState({ date: formatDate(today), choice: '' });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let array = [];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallComparisonDaily(formatDate(endDate), select).then(resp => {\r\n      let tempResponse = JSON.parse(resp.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          'T00:00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours:\r\n            tempResponse[i].total.split(':')[0].length > 2\r\n              ? parseInt(tempResponse[i].total.split(':')[0].split('.')[0]) * 24 +\r\n                parseInt(tempResponse[i].total.split(':')[0].split('.')[1]).toString()\r\n              : tempResponse[i].total.split(':')[0].startsWith('0')\r\n              ? tempResponse[i].total.split(':')[0].substring(1)\r\n              : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponseDaily(tempResponse);\r\n      setGraphData(array);\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  useEffect(() => {\r\n    getCallComparison(formatDate(endDate), select).then(response => {\r\n      let tempResponse = JSON.parse(response.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          'T' +\r\n          tempResponse[i].day_log.split(' ')[1].split(':')[0] +\r\n          ':00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours: tempResponse[i].total.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[0].substring(1)\r\n            : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponse(tempResponse);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  const respdata = response.map(data => ({\r\n    DayLog: formatDate(data.day_log),\r\n    Count: data.count,\r\n    TotalHour: data.total.hours === undefined || data.total.hour === 0 ? 0 : data.total.hour,\r\n    TotalMinutes: data.total.minutes === undefined || data.total.minutes === 0 ? 0 : data.total.minutes,\r\n    TotalSeconds: data.total.seconds === undefined || data.total.seconds === 0 ? 0 : data.total.seconds,\r\n    Hour: showTime(data.day_log),\r\n    Act: data.act.seconds === undefined || data.act.seconds === 0 ? 0 : data.act.seconds,\r\n  }));\r\n\r\n  let labelArray = [];\r\n\r\n  for (let i = select; i >= 0; i--) {\r\n    var date = new Date(formatDate(endDate));\r\n    date.setDate(date.getDate() - i);\r\n    labelArray.push(formatDate(date));\r\n  }\r\n  labelArray.reverse();\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    if (!respdata.some(daylog => daylog.DayLog === labelArray[i])) {\r\n      respdata.push({\r\n        DayLog: labelArray[i],\r\n        Count: 0,\r\n        TotalHour: 0,\r\n        TotalMinutes: 0,\r\n        TotalSeconds: 0,\r\n        Hour: 0,\r\n        Act: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    let group = [];\r\n    let totalDataArray = [];\r\n    let totalMins = [];\r\n    let totalSeconds = [];\r\n    let act = [];\r\n    group = respdata.filter(function(el) {\r\n      return !(el.DayLog !== labelArray[i]);\r\n    });\r\n\r\n    group.map(data => {\r\n      for (let j = 0; j < 24; j++) {\r\n        if (j === data.Hour) {\r\n          totalDataArray[j] = data.Count;\r\n          act[j] = data.Act;\r\n          totalSeconds[j] = data.TotalSeconds;\r\n          totalMins[j] = data.TotalMinutes;\r\n        } else {\r\n          if (typeof totalDataArray[j] === 'undefined') {\r\n            totalDataArray[j] = 0;\r\n            act[j] = 0;\r\n            totalSeconds[j] = 0;\r\n            totalMins[j] = 0;\r\n          }\r\n        }\r\n      }\r\n      array[i] = {\r\n        date: labelArray[i],\r\n        count: totalDataArray,\r\n        totalSeconds: totalSeconds,\r\n        totalMins: totalMins,\r\n        act: act,\r\n      };\r\n      return data;\r\n    });\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSelect(event.target.value);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  useEffect(() => {\r\n    setParams({ date: formatDate(endDate), choice: select });\r\n    setGraphData(array);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                {' '}\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'days.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"* days ago\"\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport DataTable from './Table';\r\nimport { Grid } from '@material-ui/core';\r\nimport Graph from './Graph';\r\nimport Filter from './Filter';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst CallComparison = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseDaily, setResponseDaily] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'call.comparison'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'call.comparison'} /> <FavoriteReports reportId=\"19\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n          <Filter\r\n            setGraphData={setGraphData}\r\n            response={response}\r\n            setResponse={setResponse}\r\n            setResponseDaily={setResponseDaily}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <DataTable response={responseDaily} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Graph array={graphData} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CallComparison;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getMontlyLog } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nfunction Filter({ setResponse }) {\r\n  const today = new Date();\r\n  const [selectedMonth, setSelectedMonth] = useState(1);\r\n  const [select, setSelect] = useState(1);\r\n  const [sum, setSum] = useState(0);\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let selectboxdata = [];\r\n\r\n  for (var i = 6; i >= 0; i -= 1) {\r\n    var date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n\r\n    selectboxdata.push({\r\n      data: months[date.getMonth()] + ' ' + date.getFullYear(),\r\n      year: date.getFullYear(),\r\n      month: <IntlMessages id={`${months[date.getMonth()]}`} />,\r\n    });\r\n  }\r\n  selectboxdata.reverse();\r\n\r\n  const handleChange = event => {\r\n    setSum(event.target.value - 1);\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleMonthChange = event => {\r\n    setSelectedMonth(event.target.value);\r\n    setSum(select - 1);\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n      setLoading(true);\r\n      getMontlyLog(selectedMonth, sum).then(response => {\r\n        let resultArray = JSON.parse(response.data.data);\r\n        for (let i = 0; i < resultArray.length; i++) {\r\n          let tempArray = resultArray[i].date_trunc.split(' ')[0].split('.');\r\n          resultArray[i].date_trunc = tempArray[2] + '-' + tempArray[1] + '-0' + tempArray[0];\r\n        }\r\n        setResponse(resultArray);\r\n        setLoading(false);\r\n      });\r\n  }, [sum, selectedMonth, setResponse]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                  value={selectedMonth}\r\n                  onChange={handleMonthChange}>\r\n                  <MenuItem value={' '}>\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {selectboxdata.map((data, index) => (\r\n                    <MenuItem key={index} value={selectboxdata.indexOf(data) + 1}>\r\n                      {data.month} {data.year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'months.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={'* ' + <IntlMessages id={'months.ago'} />}\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={5}>\r\n                    5 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={6}>\r\n                    6 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  customTooltip: {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: 5,\r\n  },\r\n}));\r\nconst formatDate = date => {\r\n  let d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  let year = d.getFullYear();\r\n  let hour = d.getHours();\r\n  let min = d.getMinutes();\r\n\r\n  if (month < 10) month = '0' + month;\r\n  if (day < 10) day = '0' + day;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n\r\n  return year + '-' + month;\r\n};\r\nconst ApplicationsGraph = ({ pieData }) => {\r\n  const classes = useStyles();\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      return (\r\n        <Box className={classes.customTooltip}>\r\n          <label>{`${payload[0].name} : ${payload[0].value}`}</label>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const data = pieData.map(data => ({\r\n    name: formatDate(data.date_trunc),\r\n    value: parseInt(data.toplam),\r\n  }));\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n  return (\r\n    <PieChart width={194} height={194}>\r\n      <Pie\r\n        data={data}\r\n        color=\"#000000\"\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        isAnimationActive={true}\r\n        outerRadius={95}\r\n        fill=\"#8884d8\">\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip content={<CustomTooltip />} />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default ApplicationsGraph;\r\n","import React, { createRef } from 'react';\r\nimport CmtCard from '@coremat/CmtCard';\r\nimport CmtCardHeader from '@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '@coremat/CmtCard/CmtCardContent';\r\nimport Chart from './graph';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = ({ response }) => {\r\n  const useStyles = makeStyles({\r\n    cardRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative',\r\n      '& .Cmt-card-content': {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n      <div ref={ref}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader className=\"pt-5\" title={<IntlMessages id={'monthly.log'} />}></CmtCardHeader>\r\n          <CmtCardContent>\r\n            <Chart pieData={response} />\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { toInteger } from 'lodash';\r\n\r\nconst DataTable = ({ response }) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  let aylar = [\r\n    'Ocak',\r\n    'Şubat',\r\n    'Mart',\r\n    'Nisan',\r\n    'Mayıs',\r\n    'Haziran',\r\n    'Temmuz',\r\n    'Ağustos',\r\n    'Eylül',\r\n    'Ekim',\r\n    'Kasım',\r\n    'Aralık',\r\n  ];\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 200,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + d.getMonth();\r\n\r\n    return { month: <IntlMessages id={`${months[parseInt(month)]}`} />, year: d.getFullYear() };\r\n  };\r\n  function createData(date, total) {\r\n    return { date, total };\r\n  }\r\n  const rows = response.map(data => createData(formatDate(data.date_trunc), data.toplam));\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  function formatDateExcel(param) {\r\n    let d = new Date(param);\r\n    let month = parseInt(d.getMonth());\r\n\r\n    let returnedMonth = currentLanguage.locale === 'en-US' ? months[month] : aylar[month];\r\n\r\n    return returnedMonth + '-' + d.getFullYear();\r\n  }\r\n\r\n  let data = response.map(unit => ({\r\n    date: formatDateExcel(unit.date_trunc),\r\n    total: unit.toplam,\r\n  }));\r\n\r\n  let totalCall = 0;\r\n  for (let i = 0; i < rows.length; i++) {\r\n    totalCall += toInteger(rows[i].total);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Monthly_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Aylık_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Maandelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Monatlicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5', color: 'white' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow style={{ backgroundColor: colors[index] }} key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>\r\n                    {row.date.month}-{row.date.year}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.total}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {rows.length > 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px' }} /> <b>{totalCall}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Graph from './Graph';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst MonthlyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthly.log'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'monthly.log'} />\r\n          <FavoriteReports reportId=\"20\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xs={12} lg={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <Graph response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default MonthlyLog;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function AgentSessionReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  let [endDate, setEndDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  MenuItem,\r\n  Grid,\r\n  CardContent,\r\n  Card,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueueNumber, getAgentSession, getBreakName, getAgentSessionClicked } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AgentSessionReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\n\r\nfunction Filter({\r\n  setAgentSession,\r\n  qnum,\r\n  agent,\r\n  setQnum,\r\n  setAgent,\r\n  setClickedResponse,\r\n  clickedAgent,\r\n  responseBreak,\r\n  setResponseBreak,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  \r\n  const [params, setParams] = useState({\r\n    agent: '',\r\n    queue: '',\r\n    break: '',\r\n  });\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => setQnum(JSON.parse(response.data.data)));\r\n    getAgentNumber().then(response => setAgent(JSON.parse(response.data.data)));\r\n    getBreakName().then(response => {\r\n      setResponseBreak(JSON.parse(response.data.data));\r\n    });\r\n  }, [setQnum, setAgent, setResponseBreak]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let [startTime, setStartTime] = useState(dateFormat(new Date(),'yyyy-mm-dd '));\r\n  let [endTime, setEndTime] = useState(dateFormat(new Date(),'yyyy-mm-dd '));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAgentSession(params.agent, params.queue, params.break, startTime, endTime).then(response => {\r\n      setAgentSession(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getAgentSessionClicked(clickedAgent, startTime, endTime).then(resp => {\r\n      setClickedResponse(JSON.parse(resp.data.data));\r\n    });\r\n  }, [clickedAgent, params, endTime, startTime, setAgentSession, setClickedResponse]);\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  let [agentSelect, setAgentSelect] = useState('');\r\n  const [breakSelect, setBreakSelect] = useState('');\r\n\r\n  const handleChangeQueueSelect = event => {\r\n    setQueueSelect(event.target.value);\r\n  };\r\n  const handleChangeAgentSelect = event => {\r\n    setAgentSelect(event.target.value);\r\n  };\r\n  const handleBreakChange = event => {\r\n    setBreakSelect(event.target.value);\r\n  };\r\n  useEffect(()=>{\r\n    setParams({\r\n      agent: agentSelect === 'all' ? '' : agentSelect,\r\n      queue: queueSelect === 'all' ? '' : queueSelect,\r\n      break: breakSelect === 'all' ? '' : breakSelect,\r\n      paramFinish: dateDifference(startTime),\r\n    });\r\n  },[startTime,agentSelect,queueSelect,breakSelect])\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '15px' }}>\r\n        <AgentSessionReportDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card className={classes.root}>\r\n        <Formik initialValues={{ queue: '', agent: '' }} onSubmit={values => {}}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"queue-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          value={queueSelect}\r\n                          onChange={handleChangeQueueSelect}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {qnum.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">\r\n                          <IntlMessages id={'internals.summary.agent'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={agentSelect}\r\n                          onChange={handleChangeAgentSelect}\r\n                          label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {agent.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"break-select-label\">\r\n                          <IntlMessages id={'breaks'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"break-select-label\"\r\n                          id=\"break-select\"\r\n                          value={breakSelect}\r\n                          onChange={handleBreakChange}\r\n                          label={<IntlMessages id={'breaks'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {responseBreak.map((data, index) => (\r\n                            <MenuItem key={index} value={data.value}>\r\n                              {data.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function DataTable({ qnum, agent, agentSession, setClickedAgent, setOpen }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < agent.length; z++) {\r\n      if (agentSession[i].ag_num === agent[z].dn) {\r\n        agentSession[i].ag_num = agentSession[i].ag_num + '-' + agent[z].display_name;\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < qnum.length; z++) {\r\n      if (agentSession[i].q_num === qnum[z].dn) {\r\n        agentSession[i].q_num = qnum[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  let csvData = agentSession.map(row => ({\r\n    ag_num: row.ag_num,\r\n    q_num: row.q_num,\r\n    status: row.status,\r\n    state_time:\r\n      row.escapetime\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    last_state_date:\r\n      new Date(row.lastlogout).getTime() > new Date(row.lastlogin).getTime()\r\n        ? dateFormat(row.lastlogout, 'dd/mm/yyyy HH:MM:ss')\r\n        : dateFormat(row.lastlogin, 'dd/mm/yyyy HH:MM:ss'),\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  const handleClick = ag_num => {\r\n    setClickedAgent(ag_num.split('-')[0]);\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <>\r\n      {agentSession.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Agent_Session_Report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Agent_Oturum_Raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Agentsessierapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Agentensitzungsbericht'\r\n                : ' '\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"ag_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Queue Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachtrijnaam'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Warteschlangenname'\r\n                    : ''\r\n                }\r\n                value=\"q_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Staat'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Bundesland'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Status Tijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Staatszeit'\r\n                    : ''\r\n                }\r\n                value=\"state_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Last State Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Son Durum Tarihi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Laatste Staat Tijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Letzte Zustandszeit'\r\n                    : ''\r\n                }\r\n                value=\"last_state_date\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'detail'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'wallboard.queue.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state.time'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'last.login.date'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'last.logout.date'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {agentSession.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{index + 1}</b>\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => handleClick(row.ag_num)}>\r\n                  <VisibilityIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />\r\n                  <span>{row.ag_num.split('-')[1] + ' (' + row.ag_num.split('-')[0] + ')'}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span>{row.q_num}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: row.status === 'Login' ? '#109e28' : '#F05454' }} />{' '}\r\n                  <b style={{ color: row.status === 'Login' ? '#109e28' : '#F05454' }}>{row.status}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <span style={{ color: '#F2789F' }}>\r\n                    {' '}\r\n                    {row.escapetime\r\n                      .replace('.', 'd ')\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EventNoteIcon style={{ verticalAlign: '-5px', color: '#109e28' }} />{' '}\r\n                  <span style={{ color: '#109e28', fontWeight: row.status === 'Login' && 'bold' }}>\r\n                    {dateFormat(row.lastlogin, 'dd/mm/yyyy HH:MM:ss')}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EventNoteIcon style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n                  <span style={{ color: '#F05454', fontWeight: row.status === 'Logout' && 'bold' }}>\r\n                    {dateFormat(row.lastlogout, 'dd/mm/yyyy HH:MM:ss')}\r\n                  </span>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ clickedResponse, responseBreak }) => {\r\n\r\n  let keys = [];\r\n\r\n  if (clickedResponse.length > 0) {\r\n    keys = Object.keys(clickedResponse[0]);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      for (let j = 0; j < responseBreak.length; j++) {\r\n        if (keys[i].substring(1) === responseBreak[j].value) {\r\n          keys[i] = responseBreak[j].name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Agent</TableCell>\r\n            <TableCell>Logout</TableCell>\r\n            <TableCell>{keys[2]}</TableCell>\r\n            <TableCell>{keys[3]}</TableCell>\r\n            <TableCell>{keys[4]}</TableCell>\r\n            <TableCell>{keys[5]}</TableCell>\r\n            <TableCell>{keys[6]}</TableCell>\r\n            <TableCell>{keys[7]}</TableCell>\r\n            <TableCell>{keys[8]}</TableCell>\r\n            <TableCell>{keys[9]}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clickedResponse.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.agent}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.logout}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8072}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8073}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8074}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8075}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8076}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8077}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8078}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8079}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Model from './Model';\r\nimport { Modal } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box } from '@mui/material';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst AgentCDR = () => {\r\n  const [agentSession, setAgentSession] = useState([]);\r\n  const [qnum, setQnum] = useState([]);\r\n  const [agent, setAgent] = useState([]);\r\n  const [clickedAgent, setClickedAgent] = useState('');\r\n  const [clickedResponse, setClickedResponse] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.session.report'} />, isActive: true },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const [responseBreak, setResponseBreak] = useState([]);\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'agent.session.report'} /> <FavoriteReports reportId=\"15\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <Filter\r\n            responseBreak={responseBreak}\r\n            setResponseBreak={setResponseBreak}\r\n            setAgentSession={setAgentSession}\r\n            qnum={qnum}\r\n            agent={agent}\r\n            setQnum={setQnum}\r\n            setAgent={setAgent}\r\n            setClickedResponse={setClickedResponse}\r\n            clickedAgent={clickedAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <DataTable\r\n            qnum={qnum}\r\n            agent={agent}\r\n            agentSession={agentSession}\r\n            setClickedAgent={setClickedAgent}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model clickedResponse={clickedResponse} responseBreak={responseBreak} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AgentCDR;\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getAgentNumberV16 } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Filter({ selectedStartTime, selectedEndTime, setSelectedEndTime, setSelectedStartTime, setParams }) {\r\n  const [agent, setAgent] = React.useState('All');\r\n  const [menuItems, setMenuItems] = React.useState([]);\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  useEffect(() => {\r\n    getAgentNumberV16().then(response => setMenuItems(response));\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setParams({\r\n      startdate: formatDate(selectedStartTime),\r\n      enddate: formatDate(selectedEndTime),\r\n      agent: agent,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          <IntlMessages id={'filter'} />\r\n        </Typography>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedStartTime}\r\n              onChange={setSelectedStartTime}\r\n              label={<IntlMessages id={'filter.menu.startdate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedEndTime}\r\n              onChange={setSelectedEndTime}\r\n              label={<IntlMessages id={'filter.menu.enddate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Agent</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={agent}\r\n                  label=\"Agent\"\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"All\">\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {menuItems.map((data, index) => (\r\n                    <MenuItem value={data.dn} key={index}>\r\n                      {data.dn} {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Table, TableHead, TableBody, TableContainer, TableCell, Paper, TableRow } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n    let seconds = d.getSeconds();\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + seconds;\r\n  };\r\n  function createData(agent, called, date, key) {\r\n    return { agent, called, date, key };\r\n  }\r\n  const rows = response.map(data => createData(data.agent, data.called, formatDate(data.issuetime), data.key));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'agent.number'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'called'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'filter.menu.date'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell align=\"center\">{row.agent}</TableCell>\r\n              <TableCell align=\"center\">{row.called}</TableCell>\r\n              <TableCell align=\"center\">{row.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { getIYSReport } from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\n\r\nconst IYS = () => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const today = new Date();\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(today) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n  const [response, setResponse] = useState([]);\r\n  const [params, setParams] = useState({\r\n    agent: 'All',\r\n    startdate: formatDate(today) + ' 00:00:00',\r\n    enddate: formatDate(today) + ' 23:59:00',\r\n  });\r\n  useEffect(() => {\r\n    getIYSReport(params).then(response => setResponse(response.data));\r\n  }, [params]);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item sm={12} md={12} lg={12}>\r\n          <Filter\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setParams={setParams}\r\n          />\r\n        </Grid>\r\n        <Grid item sm={12} md={12} lg={12}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default IYS;\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getAgentTotalCall } from 'api/api';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function Filter({ selectedEndTime, setSelectedEndTime, setTotalAgent, setTotalDid, selectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte3').then(resp => {\r\n      setTotalAgent(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte2').then(resp => {\r\n      setTotalDid(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider\r\n              dateAdapter={AdapterDateFns}\r\n              locale={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? enLocale\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? nlLocale\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? trLocale\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? deLocale\r\n                  : enLocale\r\n              }>\r\n              {' '}\r\n              <DatePicker\r\n                value={selectedEndTime}\r\n                views={['year', 'month']}\r\n                onChange={newValue => setSelectedEndTime(dateFormat(newValue, 'yyyy-mm-dd'))}\r\n                renderInput={params => <TextField {...params} />}\r\n                inputVariant=\"outlined\"\r\n                format=\"MM-YYYY\"\r\n                maxDate={new Date()}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function DataTable({ response, limit, setOffset, setPage, setCsvData, setSelectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  function returnedTime(param1, param2) {\r\n    let Param1Array = param1.split(':');\r\n    let Param2Array = param2.split(':');\r\n    if (param1.includes('.')) {\r\n      Param1Array[0] = parseInt(Param1Array[0]) + parseInt(param1.split('.')[0]) * 24;\r\n    }\r\n    if (param2.includes('.')) {\r\n      Param2Array[0] = parseInt(Param2Array[0]) + parseInt(param2.split('.')[0]) * 24;\r\n    }\r\n\r\n    let hour = parseInt(Param1Array[0]) + parseInt(Param2Array[0]);\r\n    let minute = parseInt(Param1Array[1]) + parseInt(Param2Array[1]);\r\n    let second = parseInt(Param1Array[2]) + parseInt(Param2Array[2]);\r\n    return (\r\n      addZero(hour + Math.floor(minute / 60)) +\r\n      ':' +\r\n      addZero((minute % 60) + Math.floor(second / 60)) +\r\n      ':' +\r\n      addZero(second % 60)\r\n    );\r\n  }\r\n\r\n  function calculateAverage(totalCall, totalTime) {\r\n    let timeArray;\r\n    if (totalTime.includes('.')) {\r\n      let tempHour = parseInt(totalTime.split('.')[0]) * 24 + parseInt(totalTime.split('.')[1].split(':')[0]);\r\n      let tempTime = tempHour + ':' + totalTime.split('.')[1].split(':')[1] + ':' + totalTime.split('.')[1].split(':')[2];\r\n      timeArray = tempTime.split(':');\r\n    } else {\r\n      timeArray = totalTime.split(':');\r\n    }\r\n    let time = parseInt(timeArray[0]) * 60 * 60 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);\r\n    let averageSecond = time / (parseInt(totalCall) !== 0 ? parseInt(totalCall) : 1);\r\n\r\n    return totalCall !== 0\r\n      ? addZero(Math.floor(averageSecond / 3600)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) / 60)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) % 60))\r\n      : '00:00:00';\r\n  }\r\n\r\n  const column = [\r\n    {\r\n      id: 'd',\r\n      headerName: <IntlMessages id={'filter.menu.date'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalcall',\r\n      headerName: <IntlMessages id={'wallboard.total.call'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalinbound',\r\n      headerName: <IntlMessages id={'dashboard.inbound'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'answeredinb',\r\n      headerName: <IntlMessages id={'wallboard.answered'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationcalls',\r\n      headerName: <IntlMessages id={'total.time'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationinbound',\r\n      headerName: <IntlMessages id={'durationinbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'totaloutbound',\r\n      headerName: <IntlMessages id={'dashboard.outbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationoutbound',\r\n      headerName: <IntlMessages id={'durationoutbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageTotal',\r\n      headerName: <IntlMessages id={'Act'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageInbound',\r\n      headerName: <IntlMessages id={'avIn'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageOutbound',\r\n      headerName: <IntlMessages id={'avOut'} />,\r\n      width: '30px',\r\n    },\r\n  ];\r\n  const createData = (\r\n    d,\r\n    totalcall,\r\n    totalinbound,\r\n    answeredinb,\r\n    durationcalls,\r\n    durationinbound,\r\n    totaloutbound,\r\n    durationoutbound,\r\n    averageTotal,\r\n    averageInbound,\r\n    averageOutbound,\r\n  ) => {\r\n    return {\r\n      d,\r\n      totalcall,\r\n      totalinbound,\r\n      answeredinb,\r\n      durationcalls,\r\n      durationinbound,\r\n      totaloutbound,\r\n      durationoutbound,\r\n      averageTotal,\r\n      averageInbound,\r\n      averageOutbound,\r\n    };\r\n  };\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.d !== 'Total Call' ? getNewDate(data.d.split(' ')[0]) : data.d,\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      data.totalinbound,\r\n      data.answeredinb,\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.totaloutbound,\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(\r\n        parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n        returnedTime(data.durationinbound, data.durationoutbound),\r\n      )\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const csvData = response.map(data => ({\r\n    date: data.d !== 'Total Call' ? data.d.split(' ')[0] : data.d,\r\n    totalcall: parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n    totalinbound: data.totalinbound,\r\n    answeredinb: data.answeredinb,\r\n    durationcalls:\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n\r\n    durationinbound:\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    totaloutbound: data.totaloutbound,\r\n    durationoutbound:\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageTotal: calculateAverage(\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      returnedTime(data.durationinbound, data.durationoutbound),\r\n    ),\r\n    averageinbound:\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageoutbound:\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-US'\r\n              ? 'Monthly_Details'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Aylik_Detaylar'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Maandelijkse details'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Monatliche Details'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Date'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Tarih'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Datum'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Datum'\r\n                  : ''\r\n              }\r\n              value=\"date\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Arama Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal aantal gesprekken'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamtzahl der Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"totalcall\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Aramalar'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal inkomend'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamteingang'\r\n                  : ''\r\n              }\r\n              value=\"totalinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Answered Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Cevaplanmış Çağrı Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Aantal beantwoorde oproepen'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Zählung angenommener Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"answeredinb\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Duration'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Süre'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Looptijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Dauer'\r\n                  : ''\r\n              }\r\n              value=\"durationcalls\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Inbound Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Çağrı Süresi Toplamı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Inkomende tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Eingangszeit'\r\n                  : ''\r\n              }\r\n              value=\"durationinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Giden Çağrı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamt ausgehend'\r\n                  : ''\r\n              }\r\n              value=\"totaloutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Outbound Total Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Giden Çağrı toplam süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Uitgaande totale tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Ausgehend Gesamtzeit'\r\n                  : ''\r\n              }\r\n              value=\"durationoutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Total'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Toplam Arama'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld totaal'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittliche Summe'\r\n                  : ''\r\n              }\r\n              value=\"averageTotal\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddelde inkomende'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher Eingang'\r\n                  : ''\r\n              }\r\n              value=\"averageinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher ausgehender'\r\n                  : ''\r\n              }\r\n              value=\"averageoutbound\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root} style={{ maxHeight: '550px' }}>\r\n        <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column, index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  style={{\r\n                    width: column.width,\r\n                    opacity: '.9',\r\n                    backgroundColor: '#4E9F3D',\r\n                    color: 'white',\r\n                  }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return row.d !== 'Total Call' ? (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column, inds) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell\r\n                        onClick={() => setSelectedDate(row.d)}\r\n                        key={inds}\r\n                        style={{ padding: '0px', textAlign: 'center', cursor: 'pointer' }}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ) : null;\r\n            })}\r\n\r\n            {rows.map((row, index) => {\r\n              return row.d === 'Total Call' ? (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={index}\r\n                  style={{ backgroundColor: '#4E9F3D', opacity: '.9' }}>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    <IntlMessages id={'Total'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.totalcall}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.totalinbound}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.answeredinb}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.durationcalls}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.totaloutbound}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationoutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.averageTotal}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>{row.averageInbound}</TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageOutbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : null;\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function Detail({ totalAgent, totalDid }) {\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <GridContainer>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalDid.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'DID_top_5' : 'DID_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalDid} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'DID number' : 'DID Numarası'}\r\n                      value=\"src_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"calldid\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.src_did !== undefined ? totalDid[0]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.calldid !== undefined ? totalDid[0]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.src_did !== undefined ? totalDid[1]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.calldid !== undefined ? totalDid[1]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.src_did !== undefined ? totalDid[2]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.calldid !== undefined ? totalDid[2]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.src_did !== undefined ? totalDid[3]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.calldid !== undefined ? totalDid[3]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.src_did !== undefined ? totalDid[4]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.calldid !== undefined ? totalDid[4]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalAgent.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'Agent_top_5' : 'Agent_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalAgent} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'}\r\n                      value=\"dst_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"agentcall\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.agentnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.dst_display_name !== undefined ? totalAgent[0]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.agentcall !== undefined ? totalAgent[0]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.dst_display_name !== undefined ? totalAgent[1]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.agentcall !== undefined ? totalAgent[1]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.dst_display_name !== undefined ? totalAgent[2]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.agentcall !== undefined ? totalAgent[2]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.dst_display_name !== undefined ? totalAgent[3]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.agentcall !== undefined ? totalAgent[3]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.dst_display_name !== undefined ? totalAgent[4]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.agentcall !== undefined ? totalAgent[4]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n        </GridContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Detail from './Detail';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport dateFormat from 'dateformat';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nconst MonthlyDetails = () => {\r\n  const [, setCsvData] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTotal] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate(),\r\n  );\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthlydetails'} />, isActive: true },\r\n  ];\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedTime, setSelectedTime] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  const [totalAgent, setTotalAgent] = useState([]);\r\n  const [totalDid, setTotalDid] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `select * from cl_get_daily_statics_proc('${selectedTime}')`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  function lastDay(date) {\r\n    var year = parseInt(date.split('-')[0]);\r\n    var month = parseInt(date.split('-')[1]);\r\n    if (new Date().getMonth() + 1 === month) {\r\n      return dateFormat(date, 'yyyy-mm-dd');\r\n    } else {\r\n      var d = new Date(year, month, 0);\r\n      return dateFormat(d, 'yyyy-mm-dd');\r\n    }\r\n  }\r\n\r\n  let queryTotal = `with recursive cte1 as (\r\n    select * from cl_get_daily_statics_proc('${selectedTime}')\r\n      )\r\n  select \r\n  'Total Call' as d,\r\n  (sum(totalinbound)) as totalinbound,\r\n  (sum(answeredinb)) as answeredinb,\r\n  (sum(durationinbound)) as durationinbound ,\r\n  (sum(totaloutbound)) as totaloutbound,\r\n  (sum(durationoutbound)) as durationoutbound\r\n  from cte1`;\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setSelectedTime(lastDay(selectedTime));\r\n    api\r\n      .getMonthlyDetails({ token: localStorage.getItem('token'), query: query })\r\n      .then(resp => {\r\n        setResponse(JSON.parse(resp.data.data));\r\n        api.getMonthlyTotal({ token: localStorage.getItem('token'), query: queryTotal }).then(resps => {\r\n          setResponse([...JSON.parse(resp.data.data), ...JSON.parse(resps.data.data)]);\r\n          setLoading(false);\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [query, selectedTime, history, queryTotal]);\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'monthlydetails'} /> <FavoriteReports reportId=\"21\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <Filter\r\n        selectedEndTime={selectedTime}\r\n        setSelectedEndTime={setSelectedTime}\r\n        setOffset={setOffset}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        setTotalAgent={setTotalAgent}\r\n        setTotalDid={setTotalDid}\r\n        selectedDate={selectedDate}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Table\r\n        page={page}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        setResponse={setResponse}\r\n        setCsvData={setCsvData}\r\n        limit={limit}\r\n        setOffset={setOffset}\r\n        responseTotal={responseTotal}\r\n        offset={offset}\r\n        response={response}\r\n        setSelectedDate={setSelectedDate}\r\n      />\r\n      <Detail totalAgent={totalAgent} totalDid={totalDid} />\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default MonthlyDetails;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\nexport default function QueueAnswerReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  FormControl,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  getQueueAnswerReport,\r\n  getQueueAnswerReportSummary,\r\n  getQueueNumber,\r\n  getQueueAnswerReportSummaryTotal,\r\n  getQueueAnswerReportCount,\r\n  getTotalCallByDate,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport QueueAnswerReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\nexport default function Filter({ setData, rowsPerPage, page, setSummary, setSummaryTotal, setResponseCount }) {\r\n  const today = new Date();\r\n  let [startDate, setStartDate] = useState(dateFormat(today, 'yyyy-mm-dd'));\r\n  let [endDate, setEndDate] = useState(dateFormat(today, 'yyyy-mm-dd'));\r\n  let [queueNum, setQueueNum] = useState('');\r\n  let [src, setSrc] = useState('');\r\n  let [order, setOrder] = useState('ASC');\r\n  let [queues, setQueues] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getQueueAnswerReportCount(startDate, endDate, queueNum, src).then(resp => {\r\n      setResponseCount(JSON.parse(resp.data.data)[0].summed);\r\n    });\r\n\r\n    getQueueAnswerReportSummary(startDate, endDate, queueNum).then(resp => {\r\n      let summary = JSON.parse(resp.data.data);\r\n      getTotalCallByDate(startDate, endDate, queueNum).then(response => {\r\n        let totalcalls = JSON.parse(response.data.data);\r\n        let tabledata = summary.reduce((filtered, item) => {\r\n          let totalDetails = totalcalls.find(e => e.date === item.date) || {};\r\n          let value = {\r\n            ...item,\r\n            ...totalDetails,\r\n          };\r\n          filtered.push(value);\r\n\r\n          return filtered;\r\n        }, []);\r\n        setSummary(tabledata);\r\n      });\r\n    });\r\n\r\n    getQueueAnswerReportSummaryTotal(startDate, endDate, queueNum).then(resp => {\r\n      setSummaryTotal(JSON.parse(resp.data.data));\r\n    });\r\n  }, [startDate, endDate, queueNum, src, order, rowsPerPage, page, setData, setResponseCount, setSummary, setSummaryTotal]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueues(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n  const handleChangeQueueNum = event => {\r\n    setQueueNum(event.target.value);\r\n  };\r\n  const handleChangeOrder = event => {\r\n    setOrder(event.target.value);\r\n  };\r\n  const handleChangeCaller = event => {\r\n    setSrc(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <QueueAnswerReportDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'queue.answer.report.queues'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                  value={queueNum}\r\n                  onChange={handleChangeQueueNum}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {queues.map(que => (\r\n                    <MenuItem key={que.id} value={que.dn}>\r\n                      {que.dn} - {que.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"distinct-label\">\r\n                  <IntlMessages id={'queue.answer.report.orderby'} />\r\n                </InputLabel>\r\n                <Select\r\n                  label={<IntlMessages id={'queue.answer.report.orderby'} />}\r\n                  labelId=\"distinct-label\"\r\n                  id=\"distinct\"\r\n                  value={order}\r\n                  onChange={handleChangeOrder}>\r\n                  <MenuItem value=\"ASC\">\r\n                    <IntlMessages id={'oldtonew'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"DESC\">\r\n                    <IntlMessages id={'newtoold'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-basic\"\r\n                label={<IntlMessages id={'callernumber'} />}\r\n                onChange={handleChangeCaller}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { getQueueNumber } from 'api/api';\r\nimport { Button } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DataTable({\r\n  data,\r\n  setData,\r\n  rowsPerPage,\r\n  setRowsPerPage,\r\n  page,\r\n  setPage,\r\n  summaryTotal,\r\n  responseCount,\r\n}) {\r\n  const [queueList, setQueueList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(resp => {\r\n      setQueueList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < queueList.length; j++) {\r\n      if (queueList[j].dn === data[i].dst_dn) {\r\n        data[i].dst_dn = queueList[j].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  const rows = data.map((dataUnit, index) => ({\r\n    num: index + 1 + page * rowsPerPage,\r\n    id: index,\r\n    dst_start_time: getNewDate(dataUnit.dst_start_time),\r\n    waiting_time: dataUnit.waiting_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    talking:\r\n      dataUnit.talking\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    src_display_name: dataUnit.src_display_name,\r\n    dst_dn: dataUnit.dst_dn,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleDowlandButtonClick = () => {\r\n    setRowsPerPage(responseCount);\r\n    setPage(0);\r\n    setData([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'dst_start_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.date'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'talking',\r\n      headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'src_display_name',\r\n      headerName: <IntlMessages id={'queueanswerreport.caller'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#F05454' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'dst_dn',\r\n      headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Queue_answer_report'\r\n                      : currentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_cevap_raporu'\r\n                      : currentLanguage.locale === 'nl-NL'\r\n                      ? 'Rapport voor antwoord in wachtrij'\r\n                      : currentLanguage.locale === 'de-DE'\r\n                      ? 'Warteschlangen-Antwortbericht'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Date'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Tarih'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Datum'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Datum'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi Toplamı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Talking Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Konuşma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Gesprekstijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesprächszeit'\r\n                          : ''\r\n                      }\r\n                      value=\"talking\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Caller'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Beller'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Anruferin'\r\n                          : ''\r\n                      }\r\n                      value=\"src_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_dn\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={rows} columns={columns} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={parseInt(responseCount)}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport AbondenedCallsDateFilter from './DateFilter';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getQueue, getAgentNumber } from 'api/api';\r\n\r\nfunction Filter({ setColor, color, queue, setQueue, agent, setAgent, setStartDate, setEndDate }) {\r\n  let [loading] = useState(false);\r\n\r\n  const colors = [\r\n    {\r\n      name: 'Green',\r\n      value: <IntlMessages id={'returned'} />,\r\n    },\r\n    {\r\n      name: 'Red',\r\n      value: <IntlMessages id={'notreturned'} />,\r\n    },\r\n  ];\r\n\r\n  const handleChangeColor = event => {\r\n    setColor(event.target.value);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  const handleChangeAgent = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n  const [queues, setQueues] = useState([]);\r\n\r\n  const [agents, setAgents] = useState([]);\r\n  useEffect(() => {\r\n    getQueue().then(resp => setQueues(JSON.parse(resp.data.data)));\r\n    getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AbondenedCallsDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n        {loading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'returnfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={color}\r\n                  onChange={handleChangeColor}\r\n                  label={<IntlMessages id={'returnfilter'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {colors.map((color, index) => (\r\n                    <MenuItem key={index} value={color.name}>\r\n                      {color.value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'queue'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={queue}\r\n                  onChange={handleChangeQueue}\r\n                  label={<IntlMessages id={'queue'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {queues.map((queue, index) => (\r\n                    <MenuItem key={index} value={queue.dn}>\r\n                      {queue.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={agent}\r\n                  onChange={handleChangeAgent}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((data, index) => (\r\n                    <MenuItem key={index} value={data.dn}>\r\n                      {data.dn} - {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Box, Button, CircularProgress, Collapse, Typography, IconButton } from '@material-ui/core';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nexport default function DataTable({ params, color, queue, agent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 580,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [agents, setAgents] = useState([]);\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    api.getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n    api.getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  }, []);\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [detail, setDetail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    let getDetails = (time, userpart) => {\r\n      return new Promise((resolve, reject) => {\r\n        api.getAbondenedCallDetails(time, userpart).then(resp => resolve(JSON.parse(resp.data.data)));\r\n      });\r\n    };\r\n\r\n    api.getAbondenedCalls(params, queue, agent).then(call => {\r\n      let calls = JSON.parse(call.data.data);\r\n      let detailPromises = [];\r\n      calls.forEach(item => detailPromises.push(getDetails(item.time_start, item.from_displayname)));\r\n      Promise.all(detailPromises).then(details => {\r\n        setDetail(details);\r\n        setResponse(calls);\r\n        setLoading(false);\r\n      });\r\n    });\r\n  }, [params, queue, agent]);\r\n\r\n  let res = [];\r\n  for (let i = 0; i < response.length; i++) {\r\n    res.push({\r\n      from_userpart: response[i].from_displayname,\r\n      timeofevent: getNewDate(response[i].time_start.split(' ')[0]) + ' ' + response[i].time_start.split(' ')[1],\r\n      count: response[i].count,\r\n      queue: queues.find(e => e.dn === response[i].q_num)?.display_name || '',\r\n      agent: `${agents.find(a => a.dn === response[i].ag_num)?.display_name} (${response[i].ag_num})`,\r\n    });\r\n  }\r\n  let curentLanguage = useIntl();\r\n\r\n  function Row(props) {\r\n    const { calls, index } = props;\r\n    const [open, setOpen] = useState(false);\r\n    let hasDetail = detail[index]?.length > 0;\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow\r\n          style={{\r\n            display: ((color === 'Green' && !hasDetail) || (color === 'Red' && hasDetail)) && 'none',\r\n            backgroundColor: hasDetail ? '#4E9F3D' : '#FF5C58',\r\n          }}\r\n          sx={{\r\n            '& > *': { borderBottom: 'unset' },\r\n          }}>\r\n          <TableCell align=\"left\">\r\n            <b>{index + 1}</b>\r\n          </TableCell>\r\n          <TableCell>\r\n            <IconButton\r\n              disabled={detail[index] !== undefined ? (detail[index].length !== 0 ? false : true) : true}\r\n              aria-label=\"expand row\"\r\n              size=\"small\"\r\n              onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\">{calls.timeofevent}</TableCell>\r\n          <TableCell align=\"center\">{calls.from_userpart}</TableCell>\r\n          <TableCell align=\"center\">{calls.agent}</TableCell>\r\n          <TableCell align=\"center\">{calls.queue}</TableCell>\r\n          <TableCell align=\"center\">{calls.count}</TableCell>\r\n        </TableRow>\r\n        {hasDetail && (\r\n          <TableRow style={{ display: ((color === 'Green' && !hasDetail) || (color === 'Red' && hasDetail)) && 'none' }}>\r\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <Box sx={{ margin: 1 }}>\r\n                  <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                    <IntlMessages id={'abondenedcalls.detail'} />\r\n                  </Typography>\r\n                  <Table size=\"small\" aria-label=\"Details\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell align=\"left\">\r\n                          <b>#</b>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.diraction'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.srcdn'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.dststarttime'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.dstendtime'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'abondenedcalls.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {detail[index].map((deta, ins) => (\r\n                        <TableRow key={ins}>\r\n                          <TableCell component=\"th\" scope=\"row\" align=\"left\">\r\n                            <b>{ins + 1}</b>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {deta.direction === '-->' ? (\r\n                              <span\r\n                                style={{\r\n                                  padding: '5px',\r\n                                  backgroundColor: '#4E9F3D',\r\n                                  color: '#125C13',\r\n                                  borderRadius: '10px',\r\n                                  fontWeight: '600',\r\n                                }}>\r\n                                <IntlMessages id={'incomingcall'} />\r\n                              </span>\r\n                            ) : (\r\n                              <span\r\n                                style={{\r\n                                  padding: '5px',\r\n                                  backgroundColor: '#FF7777',\r\n                                  color: '#852747',\r\n                                  borderRadius: '10px',\r\n                                  fontWeight: '600',\r\n                                }}>\r\n                                <IntlMessages id={'outgoingcall'} />\r\n                              </span>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>{deta.src_dn}</TableCell>\r\n                          <TableCell>{deta.dst_start_time}</TableCell>\r\n                          <TableCell>{deta.dst_end_time}</TableCell>\r\n                          <TableCell>{deta.calltime}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n              </Collapse>\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {res.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '15px' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Abondened_calls'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cevaplanmayan_cagrilar'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Verlaten oproepen'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Abgebrochene Anrufe'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={res} name=\"res\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Time of Event'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Etkinlik Zamanı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Tijd van evenement'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zeitpunkt des Ereignisses'\r\n                    : ''\r\n                }\r\n                value=\"timeofevent\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"from_userpart\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Display Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ekran adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Weergavenaam'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzeigename'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Adet'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Graaf'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      {loading ? (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"Abondened Calls Table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">\r\n                    <b>#</b>\r\n                  </TableCell>\r\n                  <TableCell />\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.timeofevent'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.fromuserpart'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'called'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.displayname'} />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IntlMessages id={'abondenedcalls.count'} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {res.length > 0 && res.map((item, index) => <Row key={index} index={index} calls={item} />)}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n}","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallTerminationReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nexport default function CallTerminationReportFilters({ setCallTerminator }) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setCallTerminator('');\r\n    } else if (event.target.value === 'outnumber') {\r\n      setCallTerminator('1');\r\n    } else if (event.target.value === 'agent') {\r\n      setCallTerminator('0');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CallEndIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'callterminator'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'callterminator'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'callterminator'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'outnumber'}>\r\n                    <IntlMessages id={'CallLog.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'agent'}>\r\n                    <IntlMessages id={'CallLog.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getTerminatedCallsByAgent, getTerminatedCallsByAgentCount } from 'api/api';\r\nimport CallTerminationReportDateFilter from './DateFilter';\r\nimport CallTerminationReportFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallTerminationReportFilter({ setData, setTotalCount, limit, offset }) {\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  const [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n\r\n  const [callTerminator, setCallTerminator] = useState('');\r\n  useEffect(() => {\r\n    getTerminatedCallsByAgent(startTimeApi, endTimeApi, limit, offset, callTerminator).then(resp =>\r\n      setData(JSON.parse(resp.data.data)),\r\n    );\r\n    getTerminatedCallsByAgentCount(startTimeApi, endTimeApi, callTerminator).then(resp => {\r\n      setTotalCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n    });\r\n  }, [startTimeApi, endTimeApi, setData, setTotalCount, limit, offset, callTerminator]);\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <CallTerminationReportDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallTerminationReportFilters setCallTerminator={setCallTerminator} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nexport default function CallTerminationReportTable({ data, totalCount, limit, setLimit, page, setPage, offset, setOffset }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <b>#</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.startdate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.enddate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.modal.caller'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.modal.called'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'callterminator'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.length > 0 &&\r\n                data.map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>\r\n                      <b>{index + 1 + offset}</b>\r\n                    </TableCell>\r\n                    <TableCell>{dateFormat(item.start_time, 'dd/mm/yyyy HH:MM:ss')}</TableCell>\r\n                    <TableCell>{dateFormat(item.end_time, 'dd/mm/yyyy HH:MM:ss')}</TableCell>\r\n                    <TableCell>\r\n                      {item.src_display_name} ({item.src_dn})\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.dst_display_name} ({item.dst_dn})\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <b>\r\n                        {item.act === '5'\r\n                          ? `${item.src_display_name} (${item.src_dn})`\r\n                          : `${item.dst_display_name} (${item.dst_dn})`}\r\n                      </b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={totalCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DailySummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getDailySummary, getDailySummaryTotal } from 'api/api';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport DailySummaryDateFilter from './DateFilter';\r\n\r\nexport default function DailySummaryReportFilter({ setData, setDataTotal }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailySummary(startTime, endTime).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getDailySummaryTotal(startTime, endTime).then(response => {\r\n      setDataTotal(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [startTime, endTime, setData, setDataTotal]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <DailySummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDailySummaryModalTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\nexport default function TotalCallModal({ date, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTotalCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'callid'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.call_id}</TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAnsweredCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function AnsweredCallModal({ date, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAnsweredCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAbondenedCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function AbondenedCallModal({ date, handleAbondenedCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAbondenedCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n              <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAbondenedCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalTransferCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function TransferCallModal({ date, handleTransferCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTransferCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transferer'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transfered'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.caller}</TableCell>\r\n                <TableCell>{item.transferer}</TableCell>\r\n                <TableCell>{item.trasfered}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTransferCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutOfTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function OutOfTimeModal({ date, handleOutOfTimeClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutOfTime(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutOfTimeClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalRonaCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function RonaCallModla({ date, handleRonaCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalRonaCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleRonaCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getTotalSec } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function OutCallModal({ date, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  let resp = [];\r\n  let num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    let { ...datas } = data[i];\r\n    if (i === 0) {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    } else if (data[i - 1].call_id === data[i].call_id) {\r\n      resp.push({\r\n        num: resp[i - 1].num,\r\n        ...datas,\r\n      });\r\n    } else {\r\n      resp.push({\r\n        num: num + 1,\r\n        ...datas,\r\n      });\r\n      num += 1;\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {resp.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <b>{item.num}</b>\r\n                </TableCell>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{getTotalSec(item.talk_time) === 0 ? item.start_time : item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }} lang=\"en\">\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PercentIcon from '@mui/icons-material/Percent';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport { Box, Modal } from '@mui/material';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport AbondenedCallModal from '../Modals/AbondenedCallModal';\r\nimport TransferCallModal from '../Modals/TransferCallModal';\r\nimport OutOfTimeModal from '../Modals/OutOfTimeModal';\r\nimport RonaCallModla from '../Modals/RonaCallModla';\r\nimport OutCallModal from '../Modals/OutCallModal';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport dateFormat from 'dateformat';\r\nexport default function DailySummaryReportTable({ data, dataTotal }) {\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    datetime: dateFormat(dataUnit.datetime, 'yyyy-mm-dd'),\r\n    totalcall: dataUnit.totalcall,\r\n    answered: dataUnit.answered,\r\n    answeredRate: `%${((parseInt(dataUnit.answered || 0) * 100) / parseInt(dataUnit.totalcall || 1)).toFixed(2)}`,\r\n    inboundtime: dataUnit.inboundtime,\r\n    waitingtime: dataUnit.waitingtime,\r\n    averageconnection: dataUnit.averageconnection,\r\n    abondened: dataUnit.abondened,\r\n    transfer: dataUnit.transfer,\r\n    long_time: dataUnit.long_time,\r\n    zdisi: dataUnit.zdisi,\r\n    average_abondened_waiting: dataUnit.average_abondened_waiting,\r\n    rona: dataUnit.rona,\r\n    outbound: dataUnit.outbound,\r\n    outbound_time: dataUnit.outbound_time,\r\n    average_outbound_time: dataUnit.average_outbound_time,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  let dataGridRows = data.map((row, index) => ({\r\n    num: index + 1,\r\n    id: index,\r\n    date: dateFormat(row.datetime, 'dd-mm-yyyy'),\r\n    totalCall: parseInt(row.totalcall),\r\n    answered: parseInt(row.answered),\r\n    answeredRate: ((parseInt(row.answered || 0) * 100) / parseInt(row.totalcall || 1)).toFixed(2),\r\n    inboundTime: row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    waitingTime: row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    averageTime: row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    abondened: parseInt(row.abondened),\r\n    transfer: parseInt(row.transfer),\r\n    longestTime: row.long_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outOfTime: parseInt(row.zdisi),\r\n    averageAbondenedWaiting: row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    rona: parseInt(row.rona),\r\n    outbound: parseInt(row.outbound),\r\n    outboundTotalTime: row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outboundAverageTime: row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [totalCallDate, setTotalCallDate] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = date => {\r\n    setTotalCallDate(date);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const [answeredCallDate, setAnsweredCallDate] = useState('');\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = date => {\r\n    setAnsweredCallDate(date);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [abondenedCallModalOpen, setAbondenedCallOpen] = useState(false);\r\n  const [abondenedCallDate, setAbondenedCallDate] = useState('');\r\n  const handleAbondenedCallOpen = () => setAbondenedCallOpen(true);\r\n  const handleAbondenedCallClose = () => setAbondenedCallOpen(false);\r\n  const handleAbondenedCallClick = date => {\r\n    setAbondenedCallDate(date);\r\n    handleAbondenedCallOpen();\r\n  };\r\n  const [transferCallModalOpen, setTransferCallOpen] = useState(false);\r\n  const [transferCallDate, setTransferCallDate] = useState('');\r\n  const handleTransferCallOpen = () => setTransferCallOpen(true);\r\n  const handleTransferCallClose = () => setTransferCallOpen(false);\r\n  const handleTransferCallClick = date => {\r\n    setTransferCallDate(date);\r\n    handleTransferCallOpen();\r\n  };\r\n\r\n  const [outOfTimeModalOpen, setOutOfTimeModalOpen] = useState(false);\r\n  const [outOfTimeDate, setOutOfTimeDate] = useState('');\r\n  const handleOutOfTimeOpen = () => setOutOfTimeModalOpen(true);\r\n  const handleOutOfTimeClose = () => setOutOfTimeModalOpen(false);\r\n  const handleOutOfTimeClick = date => {\r\n    setOutOfTimeDate(date);\r\n    handleOutOfTimeOpen();\r\n  };\r\n  const [ronaCallModalOpen, setRonaCallOpen] = useState(false);\r\n  const [ronaCallDate, setRonaCallDate] = useState('');\r\n  const handleRonaCallOpen = () => setRonaCallOpen(true);\r\n  const handleRonaCallClose = () => setRonaCallOpen(false);\r\n  const handleRonaCallClick = date => {\r\n    setRonaCallDate(date);\r\n    handleRonaCallOpen();\r\n  };\r\n  const [outCallModalOpen, setOutCallOpen] = useState(false);\r\n  const [outCallDate, setOutCallDate] = useState('');\r\n  const handleOutCallOpen = () => setOutCallOpen(true);\r\n  const handleOutCallClose = () => setOutCallOpen(false);\r\n  const handleOutCallClick = date => {\r\n    setOutCallDate(date);\r\n    handleOutCallOpen();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'dailysummary.date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span>\r\n          <CalendarTodayIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'totalCall',\r\n      headerName: <IntlMessages id={'dailysummary.totalcall'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTotalCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ color: '#406882' }}>{params.row.totalCall}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'dailysummary.answered'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAnsweredCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <PermPhoneMsgIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answeredRate',\r\n      headerName: <IntlMessages id={'answeredcallratio'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span>\r\n          <PercentIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'inboundTime',\r\n      headerName: <IntlMessages id={'dailysummary.inboundtime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waitingTime',\r\n      headerName: <IntlMessages id={'dailysummary.waitingtime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageTime',\r\n      headerName: <IntlMessages id={'dailysummary.avaragetime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'abondened',\r\n      headerName: <IntlMessages id={'dailysummary.abondened'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAbondenedCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#DD4A48' }}>\r\n          <PersonOffIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'transfer',\r\n      headerName: <IntlMessages id={'dailysummary.transfer'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTransferCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#396EB0' }}>\r\n          <TransferWithinAStationIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'longestTime',\r\n      headerName: <IntlMessages id={'dailysummary.longesttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outOfTime',\r\n      headerName: <IntlMessages id={'dailysummary.outoftime'} />,\r\n      width: 230,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutOfTimeClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageAbondenedWaiting',\r\n      headerName: <IntlMessages id={'dailysummary.averageabondenedwaiting'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rona',\r\n      headerName: <IntlMessages id={'dailysummary.rona'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleRonaCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outbound',\r\n      headerName: <IntlMessages id={'dailysummary.outboundcount'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#519259', cursor: 'pointer' }}>\r\n          <CallIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundTotalTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundtotaltime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundAverageTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundaveragetime'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      {csvData.length > 0 && (\r\n        <div style={{ marginBottom: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Daily_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijkse samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Tägliche Zusammenfassung'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"datetime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Çağrı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal gesprek'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anruf insgesamt'\r\n                    : ''\r\n                }\r\n                value=\"totalcall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Rate'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Çağrı Oranı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Percentage Beantwoorde Oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Rate Angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answeredRate\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Inbound Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Gelen Çağrı Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomende tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingangszeit'\r\n                    : ''\r\n                }\r\n                value=\"inboundtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Waiting Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Bekleme Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachttijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Wartezeit'\r\n                    : ''\r\n                }\r\n                value=\"waitingtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Zeit'\r\n                    : ''\r\n                }\r\n                value=\"averageconnection\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Abandoned'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Terkeden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Verlaten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Verlassen'\r\n                    : ''\r\n                }\r\n                value=\"abondened\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Transfer'\r\n                    : ''\r\n                }\r\n                value=\"transfer\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Longest Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'En uzun süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Langste tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Längste Zeit'\r\n                    : ''\r\n                }\r\n                value=\"long_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Out Of Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk dışı taşanlar'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Geen tijd meer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Außerhalb der Zeit'\r\n                    : ''\r\n                }\r\n                value=\"zdisi\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Abadoned Waiting'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Terkeden Bekleme'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddeld verlaten wachten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliches verlassenes Warten'\r\n                    : ''\r\n                }\r\n                value=\"average_abondened_waiting\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Rona'\r\n                    : ''\r\n                }\r\n                value=\"rona\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı Sayısı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande telling'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehender Zähler'\r\n                    : ''\r\n                }\r\n                value=\"outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Total Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı toplam süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande totale tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend Gesamtzeit'\r\n                    : ''\r\n                }\r\n                value=\"outbound_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden çağrı ortalama süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd uitgaan'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche ausgehende Zeit'\r\n                    : ''\r\n                }\r\n                value=\"average_outbound_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            localeText={localeText}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.totalcall'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.answered'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'answeredcallratio'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.inboundtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.waitingtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.answering.speed'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.avaragetime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.abondened'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.transfer'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.longesttime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 230 }}>\r\n                  <IntlMessages id={'dailysummary.outoftime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 260 }}>\r\n                  <IntlMessages id={'dailysummary.averageabondenedwaiting'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.rona'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.outboundcount'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.outboundtotaltime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 220 }}>\r\n                  <IntlMessages id={'dailysummary.outboundaveragetime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataTotal.map((data, index) => (\r\n                <TableRow key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                  <TableCell>\r\n                    {' '}\r\n                    <IntlMessages id={'total'} />{' '}\r\n                  </TableCell>\r\n                  <TableCell>{data.totalcall}</TableCell>\r\n                  <TableCell>{data.answered}</TableCell>\r\n                  <TableCell>%{((parseInt(data.answered || 0) * 100) / parseInt(data.totalcall || 1)).toFixed(2)}</TableCell>\r\n                  <TableCell>{data.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{answeringSpeed(data.answered, data.waitingtime)}</TableCell>\r\n                  <TableCell>{data.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.abondened}</TableCell>\r\n                  <TableCell>{data.transfer}</TableCell>\r\n                  <TableCell>{data.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.zdisi}</TableCell>\r\n                  <TableCell>{data.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.rona}</TableCell>\r\n                  <TableCell>{data.outbound}</TableCell>\r\n                  <TableCell>{data.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TotalCallModal date={totalCallDate} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AnsweredCallModal date={answeredCallDate} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={abondenedCallModalOpen}\r\n        onClose={handleAbondenedCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AbondenedCallModal date={abondenedCallDate} handleAbondenedCallClose={handleAbondenedCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outOfTimeModalOpen}\r\n        onClose={handleOutOfTimeClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutOfTimeModal date={outOfTimeDate} handleOutOfTimeClose={handleOutOfTimeClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={ronaCallModalOpen}\r\n        onClose={handleRonaCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <RonaCallModla date={ronaCallDate} handleRonaCallClose={handleRonaCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={transferCallModalOpen}\r\n        onClose={handleTransferCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TransferCallModal date={transferCallDate} handleTransferCallClose={handleTransferCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outCallModalOpen}\r\n        onClose={handleOutCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutCallModal date={outCallDate} handleOutCallClose={handleOutCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst answeringSpeed = (totalCall, waitingTotal) => {\r\n  var totalwaiting = waitingTotal.split(':');\r\n  var totalSeconds = parseInt(totalwaiting[0]) * 3600 + parseInt(totalwaiting[1]) * 60 + parseInt(totalwaiting[2]);\r\n  var average = Math.round(totalSeconds / parseInt(totalCall));\r\n  var hours = Math.floor(average / 3600);\r\n  average %= 3600;\r\n  var minutes = Math.floor(average / 60);\r\n  var seconds = average % 60;\r\n  hours = String(hours).padStart(2, '0');\r\n  minutes = String(minutes).padStart(2, '0');\r\n  seconds = String(seconds).padStart(2, '0');\r\n  return `${hours}h ${minutes}m ${seconds}s`;\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function InternalSummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getInternalsSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InternalSummaryDateFilter from './DateFilter';\r\n\r\nexport default function InternalsSummaryReportFilter({ setData, startTime, setStartTime, endTime, setEndTime, direction, setDirection }) {\r\n  let [agents, setAgents] = useState([]);\r\n  let [seletAgent, setSelectAgent] = useState(\"\");\r\n  const handleChangeAgentSelect = event => {\r\n    setSelectAgent(event.target.value === 'all' ? '' : event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAgentNumber().then(response => {\r\n      setAgents(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n        setLoading(true);\r\n        getInternalsSummary(startTime, endTime, seletAgent).then(result => {\r\n          let filtered = JSON.parse(result.data.data).filter((item)=> (\r\n            direction === \"all\" ? item :\r\n            direction === \"inbound\" ? parseInt(item.total_inbound) > 0 : parseInt(item.total_outbound) > 0\r\n          ));\r\n          setData(filtered);\r\n          setLoading(false);\r\n        });\r\n  }, [startTime, endTime, seletAgent, setData,direction]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBlock: '10px' }}>\r\n        <InternalSummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={seletAgent}\r\n                  onChange={handleChangeAgentSelect}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.dn}>\r\n                      {agent.dn} - {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"direction-select-label\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"direction-select-label\"\r\n                  id=\"direction-select\"\r\n                  value={direction}\r\n                  onChange={(e)=> setDirection(e.target.value)}\r\n                  label={<IntlMessages id={'direction'} />}>\r\n                  <MenuItem value='all'>\r\n                    <IntlMessages id={'alltimes'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inbound\">\r\n                    <IntlMessages id={'dashboard.inbound'} />\r\n                    </MenuItem>\r\n                  <MenuItem value=\"outbound\">\r\n                    <IntlMessages id={'dashboard.outbound'} />\r\n                    </MenuItem>\r\n\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload, ArrowForward, ArrowBack, Person, PhoneMissed, PhoneInTalk, Phone } from '@material-ui/icons';\r\nimport { DataGrid, GridToolbarFilterButton } from '@mui/x-data-grid';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport {\r\n  getInternalsSummaryLongestCalled,\r\n  getInternalsSummaryLongestCaller,\r\n  getInternalsSummaryLongestCalledAmount,\r\n  getInternalsSummaryLongestCallerAmount,\r\n  getInternalBreakTime,\r\n} from 'api/api';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function InternalsSummaryReportTable({ data, startTime, endTime, direction }) {\r\n  let [selectedAgent, setSelectedAgent] = useState('');\r\n  const handleAgentClick = agentNum => {\r\n    setSelectedAgent(agentNum);\r\n    handleOpenModal();\r\n  };\r\n\r\n  let [modalOpen, setModalOpen] = useState(false);\r\n  const handleOpenModal = () => setModalOpen(true);\r\n  const handleCloseModal = () => setModalOpen(false);\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  let [longestBreakTime, setLongestBreakTime] = useState([]);\r\n  useEffect(() => {\r\n    if (selectedAgent !== '') {\r\n      getInternalsSummaryLongestCalled(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCaller(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCalledAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestAmount(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCallerAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallerAmount(JSON.parse(result.data.data));\r\n      });\r\n\r\n      getInternalBreakTime(selectedAgent, startTime, endTime).then(result => {\r\n        setLongestBreakTime(JSON.parse(result.data.data));\r\n      });\r\n    }\r\n  }, [selectedAgent, startTime, endTime]);\r\n\r\n  let csvData = data.map((dataUnit, index) => ({\r\n    num: index + 1,\r\n    details: dataUnit.id,\r\n    id: dataUnit.id,\r\n    display_name: dataUnit.display_name,\r\n    total_inbound: parseInt(dataUnit.total_inbound),\r\n    answered_inbound: parseInt(dataUnit.answered_inbound),\r\n    unanswered_inbound: dataUnit.total_inbound - dataUnit.answered_inbound,\r\n    total_outbound: parseInt(dataUnit.total_outbound),\r\n    answered_outbound: parseInt(dataUnit.answered_outbound),\r\n    unanswered_outbound: dataUnit.total_outbound - dataUnit.answered_outbound,\r\n  }));\r\n  let curentLanguage = useIntl();\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n    },\r\n    {\r\n      field: 'details',\r\n      headerName: <IntlMessages id={'details'} />,\r\n      renderCell: params => (\r\n        <span onClick={() => handleAgentClick(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF5959', verticalAlign: '-5px' }} />{' '}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'id',\r\n      headerName: <IntlMessages id={'agentnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <b style={{ color: '#406882' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: <IntlMessages id={'agentname'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <span style={{ verticalAlign: '-5px', color: '#5584AC' }}>\r\n            <Person />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_inbound',\r\n      headerName: <IntlMessages id={'totalinbound'} />,\r\n      width: 225,\r\n      hide: direction === 'outbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_inbound',\r\n      headerName: <IntlMessages id={'answeredinbound'} />,\r\n      width: 220,\r\n      hide: direction === 'outbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_inbound',\r\n      headerName: <IntlMessages id={'unansweredinbound'} />,\r\n      width: 260,\r\n      hide: direction === 'outbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_outbound',\r\n      headerName: <IntlMessages id={'totaloutbound'} />,\r\n      width: 225,\r\n      hide: direction === 'inbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_outbound',\r\n      headerName: <IntlMessages id={'answeredoutbound'} />,\r\n      width: 220,\r\n      hide: direction === 'inbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_outbound',\r\n      headerName: <IntlMessages id={'unansweredoutbound'} />,\r\n      width: 260,\r\n      hide: direction === 'inbound',\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = selectedAgent, extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'ınternal_summary_report'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'dahili özet raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'ıintern samenvattend rapport'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'interner zusammenfassender Bericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamteingang'\r\n                    : ''\r\n                }\r\n                value=\"total_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomend beantwoord'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord Inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantworteter Eingang'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamt ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"total_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande beantwoording'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantwortet ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_outbound\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginTop: '20px', height: '700px' }}>\r\n        <DataGrid\r\n          rows={csvData}\r\n          columns={columns}\r\n          pageSize={100}\r\n          rowsPerPageOptions={[100]}\r\n          components={{ Toolbar: GridToolbarFilterButton }}\r\n          localeText={localeText}\r\n        />\r\n      </Card>\r\n\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <div style={{ padding: '10px' }} ref={ref}>\r\n            <GridContainer>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined\r\n                            ? longestCalleds[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined ? longestCalleds[1].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined\r\n                            ? longestCalleds[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined ? longestCalleds[2].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined\r\n                            ? longestCalleds[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined ? longestCalleds[3].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined\r\n                            ? longestCalleds[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined ? longestCalleds[4].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined\r\n                            ? longestCalleds[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined\r\n                            ? longestCallers[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined ? longestCallers[1].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined\r\n                            ? longestCallers[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined ? longestCallers[2].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined\r\n                            ? longestCallers[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined ? longestCallers[3].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined\r\n                            ? longestCallers[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined ? longestCallers[4].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined\r\n                            ? longestCallers[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4}></Grid>\r\n              <Grid item md={4} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestbreaketimes'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={4}></Grid>\r\n            </GridContainer>\r\n          </div>\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white', marginRight: '10px' }} onClick={downloadScreenshot}>\r\n              <IntlMessages id={'dowlandimage'} />\r\n            </Button>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleCloseModal()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CompareArrowsIcon from '@mui/icons-material/CompareArrows';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { getQueueNumber } from 'api/api';\r\n\r\nexport default function CallLogtherFilters({\r\n  setDirectionApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus,\r\n  setDuration,\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [directionSelect, setDirectionSelect] = useState('');\r\n  const handleDirectionSelect = event => {\r\n    setDirectionSelect(event.target.value);\r\n    setDirectionApi(event.target.value);\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [stateSelect, setStateSelect] = useState('');\r\n  const handleChangeStateSelect = event => {\r\n    setStateSelect(event.target.value);\r\n    setAnswerStatus(event.target.value);\r\n  };\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  const handleChangeQueueSelect = event => {\r\n    if (event.target.value === 'all') {\r\n      setQueueSelect('');\r\n      setDestinationFilterText('all');\r\n    } else {\r\n      setQueueSelect(event.target.value);\r\n      setDestinationFilterText(`dnOrDns====${event.target.value}`);\r\n    }\r\n  };\r\n  let [advancedFilter, setAdvancedFilter] = useState([]);\r\n  const handleChangeAdvancedFilterSelect = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setAdvancedFilter(typeof value === 'string' ? value.split(',') : value);\r\n  };\r\n  let [durationSelect, setDurationSelect] = useState('');\r\n  let [durationMinMax, setDurationMinMax] = useState({ durationMin: '', durationMax: '' });\r\n  const handleDurationSelect = e => {\r\n    setDurationSelect(e.target.value);\r\n    e.target.value === 'all'\r\n      ? setDuration('')\r\n      : e.target.value === 'spec'\r\n      ? setDuration(durationMinMax)\r\n      : setDuration(e.target.value);\r\n  };\r\n  const handleDurationChange = e => {\r\n    const { name, value } = e.target;\r\n    if (/^\\d*$/.test(value)) {\r\n      setDurationMinMax({\r\n        ...durationMinMax,\r\n        [name]: value,\r\n      });\r\n      setDuration({\r\n        ...durationMinMax,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!advancedFilter.includes('Duration')) {\r\n      setDuration('');\r\n      setDurationSelect('');\r\n    }\r\n    if (!advancedFilter.includes('Queue')) {\r\n      setDestinationFilterText('all');\r\n      setQueueSelect('');\r\n    }\r\n  }, [advancedFilter, setDuration, setDestinationFilterText]);\r\n\r\n  let [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    getQueueNumber().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <CompareArrowsIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'directionfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={directionSelect}\r\n                  label={<IntlMessages id={'direction'} />}\r\n                  onChange={handleDirectionSelect}>\r\n                  <MenuItem value=\"all\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' ||\r\n                sourceFilterSelect === 'numberfilter' ||\r\n                sourceFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : sourceFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'CallLog.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'didno'}>\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' ||\r\n                targetFilterSelect === 'numberfilter' ||\r\n                targetFilterSelect === 'didno') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.numberfilter'} />\r\n                      ) : targetFilterSelect === 'didno' ? (\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'CallLog.filter.ep.number'} />\r\n                      ) : (\r\n                        ''\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <QuestionAnswerIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'stateFilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={stateSelect}\r\n                  label={<IntlMessages id={'stateFilter'} />}\r\n                  onChange={handleChangeStateSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'CallLog.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'nonanswered'}>\r\n                    <IntlMessages id={'CallLog.filter.unanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'missed'}>\r\n                    <IntlMessages id={'missedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'transfered'}>\r\n                    <IntlMessages id={'dailysummary.transfer'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'CallLog.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={advancedFilter}\r\n                  label={<IntlMessages id={'CallLog.filter.filter3'} />}\r\n                  onChange={handleChangeAdvancedFilterSelect}\r\n                  renderValue={() => \"\"}>\r\n                  <MenuItem value={'Duration'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Duration') > -1} />\r\n                    <AccessTime style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'durationfilter'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'Queue'}>\r\n                    <Checkbox checked={advancedFilter.indexOf('Queue') > -1} />\r\n                    <ContactPhoneIcon style={{ marginRight: '2px' }} fontSize=\"medium\" />\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {advancedFilter.includes('Duration') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'durationfilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"durationLbl\">\r\n                    <IntlMessages id={'durationfilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"durationLbl\"\r\n                    id=\"duration-simple-select\"\r\n                    value={durationSelect}\r\n                    label={<IntlMessages id={'durationfilter'} />}\r\n                    onChange={handleDurationSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"3\">\r\n                      3 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"5\">\r\n                      5 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"10\">\r\n                      10 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"20\">\r\n                      20 <IntlMessages id={'seconds'} />\r\n                    </MenuItem>\r\n                    <MenuItem value=\"spec\">\r\n                      <IntlMessages id={'custom'} />\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                {durationSelect === 'spec' && (\r\n                  <>\r\n                    <FormControl sx={{ mt: 2 }}>\r\n                      <TextField\r\n                        label=\"Min\"\r\n                        variant=\"outlined\"\r\n                        name=\"durationMin\"\r\n                        onChange={handleDurationChange}\r\n                        value={durationMinMax.durationMin}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IntlMessages id={'seconds'} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl sx={{ mt: 2 }}>\r\n                      <TextField\r\n                        sx={{ mt: 3 }}\r\n                        label=\"Max\"\r\n                        name=\"durationMax\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleDurationChange}\r\n                        value={durationMinMax.durationMax}\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              <IntlMessages id={'seconds'} />\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            )}\r\n            {advancedFilter.includes('Queue') && (\r\n              <Grid item md={2}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                  <InputLabel id=\"queue-label\">\r\n                    <IntlMessages id={'queueFilter'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"queue-label\"\r\n                    value={queueSelect}\r\n                    label={<IntlMessages id={'queueFilter'} />}\r\n                    onChange={handleChangeQueueSelect}>\r\n                    <MenuItem value=\"all\">\r\n                      <IntlMessages id={'CallLog.filter.all'} />\r\n                    </MenuItem>\r\n                    {queues.map(que => (\r\n                      <MenuItem key={que.id} value={que.dn}>\r\n                        {que.dn} - {que.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog, getCallLogTotal, getCallLogCount, getCallLogTotalSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLogDateFilter from './DateFilter';\r\nimport CallLogtherFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLogFilter({ setData, limit, offset, setPage, setTotalData, setCount, setResponseTotalSummary }) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [directionApi, setDirectionApi] = useState('');\r\n  let [directionSql, setDirectionSql] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n  let [didNumber, setDidNumber] = useState('');\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [answerStatusSql, setAnswerStatusSql] = useState('');\r\n  let [duration, setDuration] = useState('');\r\n  let [durationSql, setDurationSql] = useState('');\r\n  useEffect(() => {\r\n    if (duration === '') {\r\n      setDurationSql('');\r\n    } else if (duration?.durationMin === undefined) {\r\n      setDurationSql(`and \r\n  (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) <= interval '${duration}' second`);\r\n    } else if (duration.durationMin === '' && duration.durationMax !== '') {\r\n      setDurationSql(`and \r\n      (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) <= interval '${duration.durationMax}' second`);\r\n    } else if (parseInt(duration.durationMin) <= parseInt(duration.durationMax)) {\r\n      setDurationSql(`\r\n      and\r\n      (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) >= interval '${duration.durationMin}' second\r\n      and \r\n      (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) <= interval '${duration.durationMax}' second`);\r\n    }\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    if (directionApi === 'all') {\r\n      setDirectionSql('');\r\n    } else if (directionApi === 'inb') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'out') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%1' and\");\r\n    } else if (directionApi === 'agent') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%0' and cast(dst_dn_type as text) like '%0' and\");\r\n    } else if (directionApi === 'ques') {\r\n      setDirectionSql(\"cast(src_dn_type as text) like '%1' and cast(dst_dn_type as text) not like '%0' and\");\r\n    }\r\n  }, [directionApi]);\r\n\r\n  useEffect(() => {\r\n    if (answerStatus === 'all') {\r\n      setAnswerStatusSql('');\r\n    } else if (answerStatus === 'answered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'answered'\");\r\n    } else if (answerStatus === 'nonanswered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'nonanswered'\");\r\n    } else if (answerStatus === 'transfered') {\r\n      setAnswerStatusSql(\"where statusofcall = 'transfered'\");\r\n    } else if (answerStatus === 'missed') {\r\n      setAnswerStatusSql(\r\n        \"where statusofcall != 'transfered' and statusofcall != 'answered' and statusofcall != 'nonanswered'\",\r\n      );\r\n    }\r\n  }, [answerStatus]);\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  let string = `with recursive cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc\r\n  ), cte2 as( \r\n  SELECT\r\n  call_id,\r\n  act, \r\n  src_did,\r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording'),  \r\n  case \r\n  when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n  when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n  else 'nonanswered'\r\n  end as statusofcall,\r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  when (act >= 400 and dst_dn_type = 13) then 'dışarı' \r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  ${directionSql} \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'\r\n  and\r\n  src_did like '%${didNumber}%'\r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )\r\n  ${durationSql}\r\n  order by dst_start_time desc, seg_order desc\r\n  ) \r\n  select \r\n  * \r\n  from cte2 \r\n  ${answerStatusSql}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let totalString = `\r\n    WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc\r\n  ),cte2 as(  \r\n    SELECT\r\n    *,\r\n    case \r\n    when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n    when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n    left outer join cte1  on \r\n    cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n    where \r\n    ${directionSql}\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    ${durationSql}\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    src_did like '%${didNumber}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  to_char((date_trunc('day',dst_start_time)),'dd-mm-yyyy'),\r\n  count(*),\r\n  sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as answered,\r\n  sum(case when act in (3,15,101,400,418) then 1 else 0 end) as not_answered,\r\n  sum(case when act in (9,10,12) then 1 else 0 end) as transfered,\r\n  count(*)-sum(case when act in (9,10,12) then 1 else 0 end) - sum(case when act in (3,15,101,400,418) then 1 else 0 end) - sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as missed,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from cte2 ${answerStatusSql}\r\n  group by date_trunc('day',dst_start_time) \r\n  order by date_trunc('day',dst_start_time) asc`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as\r\n  (    \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,    \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,    \r\n  start_time,    \r\n  end_time,      \r\n  recording_url    \r\n  from recordings as records    \r\n  where    \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time)\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'        \r\n  order by start_time desc    \r\n  ), cte2 as( \r\n    SELECT\r\n    case \r\n    when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n    when act = 2 then 'phoneispickedup'\r\n  when act = 3 then 'nonanswered'\r\n  when act = 7 then 'FailedBXferOfSrc'\r\n  when act = 8  then 'FailedBXferOfDst'\r\n  when act = 9 then 'transfered'\r\n  when act = 10 then 'transfered'\r\n  when act = 12 then 'transfered'\r\n  when act = 15 then 'nonanswered'\r\n  when act = 404 then 'CallerForbidden'\r\n  when act = 408 then 'TargetNotFound'\r\n  when act = 418 then 'nonanswered'\r\n  when act = 400 then 'nonanswered'\r\n  when act = 102 then 'FwdOnBusy'\r\n  when act = 101 then 'nonanswered'\r\n  when act = 409 then 'TerminatedByRule'\r\n  when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n    FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n    left outer join cte1  on \r\n    cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n    where  \r\n    ${directionSql} \r\n    act != 1 \r\n    and  \r\n    dst_display_name like '%${destinationFilterNumber}%'  \r\n    and  \r\n    src_display_name like '%${sourceFilterNumber}%'  \r\n    and\r\n    src_did like '%${didNumber}%'\r\n    and\r\n    (  \r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n    and\r\n    cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n    and \r\n    cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n    )\r\n    ${durationSql}\r\n    order by dst_start_time,seg_order asc \r\n    ) \r\n    select \r\n    count(*) as cnt\r\n    from cte2 \r\n    ${answerStatusSql}`;\r\n\r\n  let stringTotalSummary = `\r\n    WITH RECURSIVE cte1 as \r\n    (     \r\n    select  \r\n    split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n    split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n    start_time,     \r\n    end_time,      \r\n    recording_url     \r\n    from recordings as records     \r\n    where     \r\n    (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n    and      \r\n    (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n    and\r\n    split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n    and\r\n    split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n    order by start_time desc\r\n    ), cte2 as( \r\n    SELECT\r\n    *,\r\n    case \r\n    when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) )  then 'answered'\r\n    when act = 2 then 'phoneispickedup'\r\n    when act = 3 then 'nonanswered'\r\n    when act = 7 then 'FailedBXferOfSrc'\r\n    when act = 8  then 'FailedBXferOfDst'\r\n    when act = 9 then 'transfered'\r\n    when act = 10 then 'transfered'\r\n    when act = 12 then 'transfered'\r\n    when act = 15 then 'nonanswered'\r\n    when act = 404 then 'CallerForbidden'\r\n    when act = 408 then 'TargetNotFound'\r\n    when act = 418 then 'nonanswered'\r\n    when act = 400 then 'nonanswered'\r\n    when act = 102 then 'FwdOnBusy'\r\n    when act = 101 then 'nonanswered'\r\n    when act = 409 then 'TerminatedByRule'\r\n    when act = 422 then 'RouteNotFound'\r\n    else 'nonanswered'\r\n    end as statusofcall\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n    left outer join cte1  on \r\n    cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n    where \r\n    ${directionSql}\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    ${durationSql}\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    src_did like '%${didNumber}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  count(*),\r\n  sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as answered,\r\n  sum(case when act in (3,15,101,400,418) then 1 else 0 end) as not_answered,\r\n  sum(case when act in (9,10,12) then 1 else 0 end) as transfered,\r\n  count(*)-sum(case when act in (9,10,12) then 1 else 0 end) - sum(case when act in (3,15,101,400,418) then 1 else 0 end) - sum(case when ( (src_dn_type = 0) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 1) and (dst_dn_type = 0) and ( act = 5 or act = 6 ) ) or ( (src_dn_type = 0) and (dst_dn_type = 1) and ( act = 5 or act = 6 ) ) then 1 else 0 end) as missed,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from cte2 ${answerStatusSql}\r\n  `;\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n      setDidNumber('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setDidNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setDidNumber('');\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n      } else {\r\n        setDidNumber('');\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    } else if (sourceFilterText.startsWith('didno====')) {\r\n      setDidNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnLike('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceNumber('');\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n      setDidNumber('');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDidNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDidNumber('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDidNumber('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    } else if (destinationFilterText.startsWith('didno====')) {\r\n      setDidNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogTotal(totalString).then(result => {\r\n      setTotalData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [totalString, setTotalData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogTotalSummary(stringTotalSummary).then(result => {\r\n      setResponseTotalSummary(JSON.parse(result.data.data)[0]);\r\n      setLoading(false);\r\n    });\r\n  }, [stringTotalSummary, setResponseTotalSummary]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLogCount(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].cnt));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n\r\n  return (\r\n    <div>\r\n      <CallLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLogtherFilters\r\n        setDirectionApi={setDirectionApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n        setDuration={setDuration}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Grid, Tab, Tabs, Typography } from '@mui/material';\r\nimport { getCallDetail } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineOppositeContent,\r\n  TimelineSeparator,\r\n} from '@material-ui/lab';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function CallLogCallDetail({ callId }) {\r\n  let [data, setData] = useState([]);\r\n  const detailContainerStyle={borderBottom:\"1px solid rgba(0, 0, 0, 0.87)\", margin:\"10px 0\", width:\"100%\"};\r\n\r\n  useEffect(() => {\r\n    getCallDetail(callId).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      setTotalTime(\r\n        new Date(JSON.parse(resp.data.data)[JSON.parse(resp.data.data).length - 1]?.end_time).getTime() -\r\n          new Date(JSON.parse(resp.data.data)[0]?.start_time).getTime(),\r\n      );\r\n    });\r\n  }, [callId]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let [totalTime, setTotalTime] = useState(0);\r\n\r\n  const secondToTime = ms => {\r\n    let seconds = ms / 1000;\r\n    const hours = parseInt(seconds / 3600);\r\n    seconds = seconds % 3600;\r\n    const minutes = parseInt(seconds / 60);\r\n    seconds = seconds % 60;\r\n    let hourString = hours.toString().length === 1 ? '0' : '';\r\n    let minutesString = minutes.toString().length === 1 ? '0' : '';\r\n    let secondsString = seconds.toString().length === 1 ? '0' : '';\r\n    let string = hourString + hours + 'h ' + minutesString + minutes + 'm ' + secondsString + seconds + 's ';\r\n    return string;\r\n  };\r\n\r\n  let [totalRingTime, setTotalRingTime] = useState(0);\r\n  let [totalTalkTime, setTotalTalkTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let tempRingTime = 0;\r\n    let tempTalkTime = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].ring_time !== '') {\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n      if (data[i].duration !== '') {\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n    }\r\n    setTotalRingTime(tempRingTime);\r\n    setTotalTalkTime(tempTalkTime);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ background: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)' }}>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              background: 'rgb(173,206,116)',\r\n              height: '200px',\r\n              marginRight: '0px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#89a658',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.callers}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ width: '100%', height: '200px' }}>\r\n            <div\r\n              style={{\r\n                width: 0,\r\n                height: 0,\r\n                borderTop: '100px solid transparent',\r\n                borderLeft: '200px solid',\r\n                borderLeftColor: 'rgb(173,206,116)',\r\n                borderBottom: '100px solid transparent',\r\n              }}></div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)',\r\n              height: '200px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#2978B5',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.calleds}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <hr style={{ marginTop: '0px', height: '5px', color: 'gray' }} />\r\n      <div>\r\n        <Box sx={{ width: '100%' }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'CallLog.detail.callinfo'} />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'CallLog.datail.detail'} />}\r\n                {...a11yProps(1)}\r\n              />\r\n            </Tabs>\r\n          </Box>\r\n          <TabPanel value={value} index={0}>\r\n            <Timeline position=\"alternate\">\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#2978B5' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[0]?.start_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"primary\">\r\n                    <DateRangeIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n              {data.map((item, index) => (\r\n                <TimelineItem key={index}>\r\n                  <TimelineOppositeContent\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ marginTop: '80px' }}>\r\n                    <Typography variant=\"h6\" component=\"span\" style={{ marginTop: '45px' }}>\r\n                      <b>{item.calleds}</b>\r\n                    </Typography>\r\n                    <Typography>{item.states}</Typography>\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color=\"secondary\">\r\n                      <CallIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography style={{ marginTop: '20px' }}>\r\n                        <IntlMessages id={'CallLog.datail.starttime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#A6CF98', borderRadius: '10px', color: '#557C55' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.start_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'CallLog.datail.ringtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#EEC373', borderRadius: '10px', color: '#EA5C2B' }}>\r\n                        <NotificationsActiveIcon style={{ verticalAlign: '-5px' }} /> <b>{item.ring_time}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'CallLog.datail.talktime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#6998AB', borderRadius: '10px', color: '#1A374D' }}>\r\n                        <PhoneInTalkIcon style={{ verticalAlign: '-5px' }} /> <b>{item.duration}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'CallLog.datail.endtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#FF7272', borderRadius: '10px', color: '#9B0000' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.end_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))}\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#EA4C4C' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[data.length - 1]?.end_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"secondary\">\r\n                    <CallEndIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n          <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>Call Id:</b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <p style={{ fontSize: '16px' }}>{callId}</p>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.from'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#086E7D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.callers}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.to'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.calleds}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.duration'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{secondToTime(totalTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.talktime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#406882' }}>{secondToTime(totalTalkTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.ringtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#EF2F88' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#EF2F88' }}>{secondToTime(totalRingTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.date'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.start_time.split(' ')[0]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.starttime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[0]?.start_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'CallLog.datail.endtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[data.length - 1]?.end_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n          </TabPanel>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport {\r\n  AccessTime,\r\n  Check,\r\n  Clear,\r\n  CloudDownload,\r\n  DateRange,\r\n  Person,\r\n  PhoneDisabled,\r\n  PlayArrow,\r\n  PhoneMissed,\r\n} from '@material-ui/icons';\r\nimport { getPath, getRecordingBytes, getQueues, setAuditLog } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallLogCallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\nimport SendToMobileIcon from '@mui/icons-material/SendToMobile';\r\nimport TtyIcon from '@mui/icons-material/Tty';\r\nimport { darken, lighten } from '@mui/material/styles';\r\nexport default function CallLogTable({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  totalData,\r\n  count,\r\n  responseTotalSummary,\r\n  offset,\r\n}) {\r\n  let [path, setPath] = useState('');\r\n\r\n  const [listenedRecords, setListenedRecords] = useState([]);\r\n  const getBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6));\r\n\r\n  const getHoverBackgroundColor = (color, mode) => (mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5));\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  const [record, setRecord] = useState('');\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = (dir, num) => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer !== null) {\r\n          setRecord(buffer);\r\n          setListenedRecords(prev => [...prev, num]);\r\n          setAuditLog(dir);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  let tableData = data.map((item, index) => ({\r\n    num: index + 1 + offset,\r\n    callId: item.call_id,\r\n    listen: item.coalesce,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    srcDid: item.src_did,\r\n    caller:\r\n      item.src_display_name === item.src_dn || item.src_dn === '-'\r\n        ? item.src_display_name\r\n        : item.src_display_name + '(' + item.src_dn + ')',\r\n    called:\r\n      item.dst_display_name === item.dst_dn || item.dst_dn === '-'\r\n        ? item.dst_display_name\r\n        : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    direction: [item.direction, item.dst_dn],\r\n    duration: item.duration,\r\n    salable: item.statusofcall,\r\n    id: index,\r\n  }));\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      field: 'num',\r\n      headerName: '#',\r\n      renderCell: params => <b>{params.value}</b>,\r\n      width: 40,\r\n    },\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value, params.row.num)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n          {params.value === 'no recording' && (\r\n            <IconButton disabled style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }} size=\"small\" aria-label=\"listen\">\r\n              <Clear />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'srcDid',\r\n      headerName: <IntlMessages id={'didnumber'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#d6851a' }}>\r\n            <TtyIcon style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value || '-'}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => q.dn === params.value[1])?.display_name || <IntlMessages id=\"queue\" />}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'answered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          ) : params.value === 'nonanswered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          ) : params.value === 'transfered' ? (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#bd88f7',\r\n                color: '#27034f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n              <IntlMessages id={'dailysummary.transfer'} />\r\n            </span>\r\n          ) : (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#f3bbfc',\r\n                color: '#a402bd',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'missedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          {\r\n            <ExcelFile\r\n              filename={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? 'Call_Log'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Cagri_raporu'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Oproep_Log'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Anrufliste'\r\n                  : ''\r\n              }\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={data} name=\"data\">\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Date'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Tarih'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Datum'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Datum'\r\n                      : ''\r\n                  }\r\n                  value=\"date\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunde'\r\n                      : ''\r\n                  }\r\n                  value=\"hour\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'From'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kimden'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Van'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Von'\r\n                      : ''\r\n                  }\r\n                  value=\"src_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Destination'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Hedef'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Bestemming'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Ziel'\r\n                      : ''\r\n                  }\r\n                  value=\"dst_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Direction'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Yön'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Richting'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Genaamd'\r\n                      : ''\r\n                  }\r\n                  value=\"direction\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Duration'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Süre'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Looptijd'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Dauer'\r\n                      : ''\r\n                  }\r\n                  value=\"duration\"\r\n                />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          }\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px' }}>\r\n          <CallLogCallDetail callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {data.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {data.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {data.length > 0 && (\r\n              <ExcelFile\r\n                filename={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Call_Log'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cagri_raporu'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Oproep_Log'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufliste'\r\n                    : ''\r\n                }\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={data} name=\"data\">\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Date'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Tarih'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Datum'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Datum'\r\n                        : ''\r\n                    }\r\n                    value=\"date\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Hour'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Saat'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Uur'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Stunde'\r\n                        : ''\r\n                    }\r\n                    value=\"hour\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Caller'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Arayan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Beller'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Anruferin'\r\n                        : ''\r\n                    }\r\n                    value=\"src_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Called'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Aranan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Genaamd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Namens'\r\n                        : ''\r\n                    }\r\n                    value=\"dst_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Direction'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Yön'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Richting'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Genaamd'\r\n                        : ''\r\n                    }\r\n                    value=\"direction\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Duration'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Süre'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Looptijd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Dauer'\r\n                        : ''\r\n                    }\r\n                    value=\"duration\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'State'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Durum'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Staat'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Bundesland'\r\n                        : ''\r\n                    }\r\n                    value=\"salable\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <Box\r\n          style={{ height: '440px', width: '100%' }}\r\n          sx={{\r\n            '& .Calllog-Table-Listened': {\r\n              bgcolor: getBackgroundColor('#ffeb7a', 'light'),\r\n              '&:hover': {\r\n                bgcolor: getHoverBackgroundColor('#ffeb7a', 'light'),\r\n              },\r\n            },\r\n          }}>\r\n          <DataGrid\r\n            disableSelectionOnClick\r\n            getRowClassName={params => listenedRecords.includes(params.row.num) && `Calllog-Table-Listened`}\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </Box>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tableData.length < limit || tableData.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tableData.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {totalData.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log Samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Zusammenfassung des Anrufprotokolls'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={totalData} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"to_char\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmamış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal onbeantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl unbeantworteter Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalduration\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"averageduration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'missedcallcount'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'transferedcallcount'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.average.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalData.map((total, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    <b>{total.to_char}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#1C7947',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#852747',\r\n                      }}>\r\n                      <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.not_answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#a402bd',\r\n                      }}>\r\n                      <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.missed}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        color: '#27034f',\r\n                      }}>\r\n                      <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.transfered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalduration}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.averageduration}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{responseTotalSummary.count}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#1C7947',\r\n                    }}>\r\n                    <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#852747',\r\n                    }}>\r\n                    <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    <b>{responseTotalSummary.not_answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#a402bd',\r\n                    }}>\r\n                    <PhoneMissed fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.missed}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      color: '#27034f',\r\n                    }}>\r\n                    <SendToMobileIcon fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <b>{responseTotalSummary.transfered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.totalduration}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.averageduration}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Modal\r\n          open={openAudioModal}\r\n          onClose={() => setOpenAudioModal(false)}\r\n          aria-labelledby=\"Audio\"\r\n          aria-describedby=\"Audio Player Modal\">\r\n          <Box style={audioModalStyle}>\r\n            <Paper\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n                borderRadius: 'inherit',\r\n                borderBottomLeftRadius: '0',\r\n                borderBottomRightRadius: '0',\r\n              }}>\r\n              <Button onClick={() => setOpenAudioModal(false)}>X</Button>\r\n            </Paper>\r\n            <Box style={{ padding: '12px 8px' }}>\r\n              <AudioWaveForm buffer={record} />\r\n            </Box>\r\n          </Box>\r\n        </Modal>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QualityReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={9}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DateTimePicker\r\n                          disableMaskedInput\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField fullWidth {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDateTime={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DateTimePicker\r\n                          disableMaskedInput\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField fullWidth {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDateTime={startDate}\r\n                          maxDateTime={new Date(new Date().setHours(23, 59, 59))}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography, Box, Chip } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nexport default function QualityReportFilters({ agents, agentNo, setAgentNo, agentName, setAgentName, score, setScore }) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneIcon style={{ verticalAlign: '-5px', marginRight: '.25rem' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'customer.number'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <TextField\r\n                fullWidth\r\n                style={{ marginTop: '8px' }}\r\n                variant=\"outlined\"\r\n                id=\"agentNo\"\r\n                type=\"text\"\r\n                name=\"agentNo\"\r\n                value={agentNo}\r\n                label={<IntlMessages id={'customer.number'} />}\r\n                onChange={e => {\r\n                  setAgentNo(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <ContactPhoneIcon style={{ verticalAlign: '-5px', marginRight: '.25rem' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"agentName\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </InputLabel>\r\n                <Select\r\n                  multiple\r\n                  labelId=\"agentName\"\r\n                  label={<IntlMessages id={'agent.name'} />}\r\n                  value={agentName}\r\n                  MenuProps={{ style: { maxHeight: 300 } }}\r\n                  renderValue={selected => (\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                      {selected.map(value => (\r\n                        <Chip key={value} label={value} />\r\n                      ))}\r\n                    </Box>\r\n                  )}\r\n                  onChange={e => {\r\n                    const {\r\n                      target: { value },\r\n                    } = e;\r\n                    if (value[value.length - 1] === '') {\r\n                      setAgentName([]);\r\n                    } else {\r\n                      setAgentName(typeof value === 'string' ? value.split(',') : value);\r\n                    }\r\n                  }}>\r\n                  <MenuItem value=\"\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  {agents &&\r\n                    agents.map((item, index) => (\r\n                      <MenuItem key={index} value={item.dn}>\r\n                        {item.dn + '-' + item.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <StarRoundedIcon style={{ verticalAlign: '-5px', marginRight: '.25rem' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'score'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"score\">\r\n                  <IntlMessages id={'score'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"score\"\r\n                  label={<IntlMessages id={'score'} />}\r\n                  value={score}\r\n                  onChange={e => setScore(e.target.value)}>\r\n                  <MenuItem value=\"\">\r\n                    <IntlMessages id={'CallLog.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"5\">5</MenuItem>\r\n                  <MenuItem value=\"4\">4</MenuItem>\r\n                  <MenuItem value=\"3\">3</MenuItem>\r\n                  <MenuItem value=\"2\">2</MenuItem>\r\n                  <MenuItem value=\"1\">1</MenuItem>\r\n                  <MenuItem value=\"0\">0</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getAgentNumber, getQualityReport, getQualityReportCount } from 'api/api';\r\nimport QualityReportDateFilter from './DateFilter';\r\nimport QualityReportFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function QualityFilters({ setData, setTotalCount, limit, offset }) {\r\n  const [agents, setAgents] = useState([]);\r\n  const [agentNo, setAgentNo] = useState('');\r\n  const [agentName, setAgentName] = useState([]);\r\n  const [score, setScore] = useState('');\r\n\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  const [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  useState(() => {\r\n    getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getQualityReport(startTimeApi, endTimeApi, agentNo, agentName, score, limit, offset).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    });\r\n    getQualityReportCount(startTimeApi, endTimeApi, agentNo, agentName, score).then(resp => {\r\n      setTotalCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n    });\r\n  }, [startTimeApi, endTimeApi, agentNo, agentName, score, limit, offset, setData, setTotalCount]);\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <QualityReportDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <QualityReportFilters\r\n        agents={agents}\r\n        agentNo={agentNo}\r\n        setAgentNo={setAgentNo}\r\n        agentName={agentName}\r\n        setAgentName={setAgentName}\r\n        score={score}\r\n        setScore={setScore}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport dateFormat from 'dateformat';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nexport default function QualityTable({ data, totalCount, limit, setLimit, page, setPage, offset, setOffset }) {\r\n  var nonRepeatingArr = [];\r\n  var copyArr = JSON.parse(JSON.stringify(data));\r\n  for (var i = 0; i < data.length; i++) {\r\n    var temp = [];\r\n    for (var j = 0; j < copyArr.length; j++) {\r\n      if (data[i].agent === copyArr[j].agent && data[i].score === copyArr[j].score) {\r\n        temp.push(data[i].ani);\r\n        copyArr[j].score = null;\r\n      }\r\n    }\r\n    if (temp.length > 0) {\r\n      nonRepeatingArr.push({\r\n        agent: data[i].agent,\r\n        score: data[i].score,\r\n        timeofinsertion: data[i].timeofinsertion,\r\n        voters: temp,\r\n      });\r\n    }\r\n  }\r\n\r\n  const [averageScores, setAverageScores] = useState([]);\r\n  useEffect(() => {\r\n    const totalScoreByAgent = data.reduce((acc, item) => {\r\n      return { ...acc, [item.agent]: (acc[item.agent] || 0) + parseInt(item.score) };\r\n    }, {});\r\n    const totalVotesByAgent = data.reduce((acc, item) => {\r\n      return { ...acc, [item.agent]: (acc[item.agent] || 0) + 1 };\r\n    }, {});\r\n    let temp = [];\r\n    for (let i in totalScoreByAgent) {\r\n      temp.push({\r\n        agent: i,\r\n        totalVote: totalVotesByAgent[i],\r\n        averageScore: (totalScoreByAgent[i] / totalVotesByAgent[i]).toFixed(1),\r\n      });\r\n    }\r\n    setAverageScores(temp);\r\n  }, [data]);\r\n\r\n  const [voters, setVoters] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Customer_Survey_Report'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Musteri_Anket_Raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Onderzoeksrapport'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Kundenbefragungsbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"timeofinsertion\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"agent\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Customer Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Müşteri Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Klantnummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Kundennummer'\r\n                    : ''\r\n                }\r\n                value=\"ani\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Score'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Puan'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Scoren'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ergebnis'\r\n                    : ''\r\n                }\r\n                value=\"score\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"Scores\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <b>#</b>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'votescount'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'score'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {nonRepeatingArr.length > 0 &&\r\n                nonRepeatingArr.map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>{index + 1 + offset}</TableCell>\r\n                    <TableCell>{dateFormat(item.timeofinsertion, 'dd/mm/yyyy HH:MM:ss')}</TableCell>\r\n                    <TableCell>{item.agent}</TableCell>\r\n                    <TableCell>\r\n                      <span\r\n                        aria-controls={open ? 'voters-menu' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={e => {\r\n                          setVoters(item.voters);\r\n                          setAnchorEl(e.currentTarget);\r\n                        }}>\r\n                        <b>{item.voters.length}</b>\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>{item.score}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={totalCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      {averageScores.length > 0 && (\r\n        <TableContainer style={{ maxHeight: '500px', marginTop: '1rem', width: '500px', float: 'right' }} component={Paper}>\r\n          <Table stickyHeader aria-label=\"Average Scores\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'totalvotes'} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'average'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {averageScores.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell align=\"right\">{item.agent}</TableCell>\r\n                  <TableCell align=\"right\">{item.totalVote}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <b>{item.averageScore}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      <Menu id=\"voters-menu\" anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n        {voters.map((item, index) => (\r\n          <MenuItem key={index}>\r\n            <Chip label={item} variant=\"outlined\" />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallTransferReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDate={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDate={startDate}\r\n                          maxDate={new Date()}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setSelectedStartTime, setSelectedEndTime, agent, setAgent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'calltransferreport.agnet'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'calltransferreport.agnet'} />}\r\n                  value={agent}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.display_name}>\r\n                      {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { getCallTransferReport } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { AccessTime, DateRange } from '@material-ui/icons';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\n\r\nexport default function DataTable({ agent, selectedStartTime, selectedEndTime }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getCallTransferReport(agent, selectedStartTime, selectedEndTime).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    });\r\n  }, [agent, selectedStartTime, selectedEndTime]);\r\n\r\n  let rows = data.map((item, index) => ({\r\n    num:index+1,\r\n    id: index,\r\n    transferer: item.transferer,\r\n    trasfered: item.trasfered,\r\n    caller: item.caller,\r\n    start_time: item.start_time,\r\n    answer_time: item.answer_time,\r\n    end_time: item.end_time,\r\n    ring_time: item.ring_time,\r\n    talk_time: item.talk_time,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field:'num',\r\n      headerName:\"#\",\r\n      renderCell:params =>(\r\n        <b>{params.value}</b>\r\n      )\r\n    },\r\n    {\r\n      field: 'transferer',\r\n      headerName: <IntlMessages id={'calltransferreport.transferfrom'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'trasfered',\r\n      headerName: <IntlMessages id={'calltransferreport.transferto'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'calltransferreport.caller'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'calltransferreport.starttime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'answer_time',\r\n      headerName: <IntlMessages id={'calltransferreport.answertime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'calltransferreport.endtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'ring_time',\r\n      headerName: <IntlMessages id={'calltransferreport.ringingtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'talk_time',\r\n      headerName: <IntlMessages id={'calltransferreport.talktime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n  ];\r\n\r\n  const [total, setTotal] = useState({totalRingTime:\"00h 00m 00s\",totalTalkTime:\"00h 00m 00s\",totalCount:0});\r\n  useEffect(()=>{\r\n    let totalring = 0;\r\n    let totalTalk = 0;\r\n    data.forEach(async (item)=>{\r\n      totalring+= convertSec(item.ring_time);\r\n      totalTalk+= convertSec(item.talk_time);\r\n    });\r\n    setTotal({\r\n      totalRingTime: convertTime(totalring),\r\n      totalTalkTime: convertTime(totalTalk),\r\n      totalCount:data.length\r\n    })\r\n  },[data])\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{ height: '600px', width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          localeText={localeText}\r\n          componentsProps={{\r\n            pagination: {\r\n              labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.totalCount}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalRingTime}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalTalkTime}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst convertSec = (str) =>{\r\n  var hour = parseInt(str.slice(0,2));\r\n  var min = parseInt(str.slice(3,6));\r\n  var sec = parseInt(str.slice(8,10));\r\n  return hour*3600+min*60+sec;\r\n}\r\nconst convertTime = (sec) =>{\r\n  var hours   = Math.floor(sec / 3600);\r\n  var minutes = Math.floor((sec - (hours * 3600)) / 60);\r\n  var seconds = sec - (hours * 3600) - (minutes * 60);\r\n  if (hours   < 10) {hours   = \"0\"+hours;}\r\n  if (minutes < 10) {minutes = \"0\"+minutes;}\r\n  if (seconds < 10) {seconds = \"0\"+seconds;}\r\n  return `${hours}h ${minutes}m ${seconds}s`;\r\n}","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakName } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakNameModal({ id, selectedBreakName, handleBreakNameModalClose }) {\r\n  let [newName, setNewName] = useState(selectedBreakName);\r\n  const handleSubmit = () => {\r\n    setBreakName(newName, id).then(rep => {\r\n      handleBreakNameModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breakname'} />}\r\n        variant=\"outlined\"\r\n        value={newName}\r\n        onChange={event => setNewName(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakNameModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakTime } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakTimeModal({ logouttype, period, handleBreakTimeModalClose }) {\r\n  let [newTime, setNewTime] = useState(period);\r\n  const handleSubmit = () => {\r\n    setBreakTime(newTime, logouttype).then(resp => {\r\n      handleBreakTimeModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breaktime'} />}\r\n        variant=\"outlined\"\r\n        value={newTime}\r\n        onChange={event => setNewTime(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakTimeModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { addUserOwndedDeps, deleteUserOwndedDeps, getDepartmants, getUsers, getUserOwndedDeps } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserDepartmans({ reloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  let [deps, setDeps] = useState([]);\r\n  let [userOwnedDeps, setUserOwnedDeps] = useState([]);\r\n  let [selectedUserId, setSelectedUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getUsers().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserOwndedDeps(selectedUserId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].department_id);\r\n      }\r\n      setUserOwnedDeps(tempArr);\r\n    });\r\n  }, [selectedUserId]);\r\n\r\n  const handleCheckboxClick = (depId, event) => {\r\n    if (event.target.checked) {\r\n      addUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      deleteUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'username'} />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IntlMessages id={'rolename'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users.map(user => (\r\n                    <TableRow\r\n                      key={user.id}\r\n                      style={{ backgroundColor: selectedUserId === user.id ? '#90E0EF' : 'white' }}\r\n                      onClick={() => setSelectedUserId(user.id)}>\r\n                      <TableCell>{user.name}</TableCell>\r\n                      <TableCell>{user.type}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={userOwnedDeps.includes(dep.id)}\r\n                          onChange={event => handleCheckboxClick(dep.id, event)}\r\n                        />\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addUser, getRolenames } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddUserModal({ setReloadValues, addHandleClose }) {\r\n  const [roles, setRoles] = useState([]);\r\n  useEffect(() => {\r\n    getRolenames().then(resp => {\r\n      setRoles(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n  let [userName, setUserName] = useState('');\r\n  const handleChangeUserName = event => {\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState('');\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState('');\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || userType === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      addUser(userName, password, userType).then(() => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(userName);\r\n        addHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'Admin'}>Admin</MenuItem>\r\n          {roles.map((item, index) => (\r\n            <MenuItem key={index} value={item.rolename}>\r\n              {item.rolename}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateUser, getRolenames } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateUserModal({ setReloadValues, updateHandleClose, selectedUser }) {\r\n  const [roles, setRoles] = useState([]);\r\n  useEffect(() => {\r\n    getRolenames().then(resp => {\r\n      setRoles(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n  let [userName, setUserName] = useState(selectedUser.name);\r\n  const handleChangeUserName = event => {\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState(selectedUser.pass);\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState(selectedUser.type);\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateUser(selectedUser.id, userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Güncellendi', '', 3000);\r\n        setReloadValues(userName);\r\n        updateHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton aria-label=\"toggle password visibility\" onClick={handleClickShowPassword} edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'Admin'}>Admin</MenuItem>\r\n          {roles.map((item, index) => (\r\n            <MenuItem key={index} value={item.rolename}>\r\n              {item.rolename}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"warning\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteUserByUserId, deleteUserOwndedDepsByUserId, getUsers } from '../../../../api/api';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport UpdateUserModal from './UpdateUserModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { decryptData } from '@jumbo/utils/secureData';\r\nexport default function UserTable({ reloadValues, setReloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    getUsers().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({ id: '0', name: '', pass: '', type: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = user => {\r\n    setSelectedUser(user);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = userId => {\r\n    deleteUserOwndedDepsByUserId(userId).then(res1 => {\r\n      deleteUserByUserId(userId).then(res2 => {\r\n        setReloadValues(userId.toString());\r\n      });\r\n    });\r\n  };\r\n  let cryptedData = localStorage.getItem('username');\r\n  const salt = process.env.REACT_APP_CRYPTO_SECRET || 'DvSDbYSnkWzCbWpo3ivELWZY8wqF1Znc6Ts6oIs9lsC39sdh0L';\r\n  const username = decryptData(cryptedData, salt) || 'admin';\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ fontWeight: '300' }}>\r\n          <IntlMessages id={'welcome'} />, <b>{username}</b>\r\n        </h2>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adduser'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'username'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'password'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'usertype'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map(user => (\r\n              <TableRow key={user.id}>\r\n                <TableCell>{user.name}</TableCell>\r\n                <TableCell>********</TableCell>\r\n                <TableCell>{user.type}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(user)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(user.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddUserModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateUserModal\r\n            selectedUser={selectedUser}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Button, TextField, FormControlLabel, Checkbox, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addRole } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddRoleModal({ roles, setReloadValues, addHandleClose }) {\r\n  let [roleName, setRoleName] = useState('');\r\n  let [allowedPages, setAllowedPages] = useState([]);\r\n  const handleSubmit = () => {\r\n    if (roleName === undefined || roleName === '') {\r\n      NotificationManager.error('Rol adı doğru formatta değil', '', 3000);\r\n    } else if (allowedPages.length === 0) {\r\n      NotificationManager.error('En az 1 sayfa seçiniz', '', 3000);\r\n    } else if (roles.some(e => e.rolename === roleName)) {\r\n      NotificationManager.error('Bu isimde rol zaten mevcut', '', 3000);\r\n    } else {\r\n      addRole(roleName, allowedPages.join(',')).then(() => {\r\n        setReloadValues(new Date().getTime());\r\n        addHandleClose();\r\n      });\r\n    }\r\n  };\r\n  const CheckboxDatas = [\r\n    { id: '0', name: 'sidebar.dashboard' },\r\n    { id: '1', name: 'wallboard' },\r\n    { id: '2', name: 'agent.status' },\r\n    { id: '3', name: 'campaigns' },\r\n    { id: '4', name: 'calllog' },\r\n    { id: '5', name: 'calllistening' },\r\n    { id: '6', name: 'callmanagement' },\r\n    { id: '7', name: 'calltransferreport' },\r\n    { id: '8', name: 'internalssummary' },\r\n    { id: '9', name: 'did.report' },\r\n    { id: '10', name: 'dailysummary' },\r\n    { id: '11', name: 'queue.answer.report' },\r\n    { id: '12', name: 'abandoned.queues' },\r\n    { id: '13', name: 'droppedcall' },\r\n    { id: '14', name: 'abondenedcalls' },\r\n    { id: '15', name: 'callterminationreport' },\r\n    { id: '16', name: 'repetetive.calls' },\r\n    { id: '17', name: 'agent.session.report' },\r\n    { id: '18', name: 'service.level' },\r\n    { id: '19', name: 'dailylog' },\r\n    { id: '20', name: 'dailyacc' },\r\n    { id: '21', name: 'call.comparison' },\r\n    { id: '22', name: 'monthly.log' },\r\n    { id: '23', name: 'monthlydetails' },\r\n    { id: '24', name: 'survey.report' },\r\n    { id: '25', name: 'edit.breaks' },\r\n    { id: '26', name: 'departmentsettings' },\r\n    { id: '27', name: 'usersettings' },\r\n    { id: '28', name: 'rolesettings' },\r\n    { id: '29', name: 'Called.Numbers' },\r\n    { id: '30', name: 'microsoft.teams.users' },\r\n  ];\r\n  const handleChecked = (e, id) => {\r\n    if (e.target.checked) {\r\n      setAllowedPages(prev => [...prev, id]);\r\n    } else {\r\n      let tempArr = JSON.parse(JSON.stringify(allowedPages));\r\n      tempArr.splice(tempArr.indexOf(id), 1);\r\n      setAllowedPages(tempArr);\r\n    }\r\n  };\r\n  const handleSelectAll = e => {\r\n    if (e.target.checked) {\r\n      let tempArr = [];\r\n      for (let i = 0; i < 31; i++) {\r\n        tempArr.push(i.toString());\r\n      }\r\n      setAllowedPages(tempArr);\r\n    } else {\r\n      setAllowedPages([]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={12}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"roleName\"\r\n            type=\"text\"\r\n            name=\"roleName\"\r\n            value={roleName}\r\n            label={<IntlMessages id={'rolename'} />}\r\n            onChange={e => setRoleName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <Grid container spacing={3} alignItems=\"flex-start\">\r\n            <Grid item md={12}>\r\n              <Grid container spacing={0} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n                    <IntlMessages id={'allowedPages'} />\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={allowedPages.length === 31} onChange={handleSelectAll} />}\r\n                    label={<IntlMessages id={'all'} />}\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <hr />\r\n            </Grid>\r\n            {CheckboxDatas.map((item, index) => (\r\n              <Grid item md={4} key={index}>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={allowedPages.includes(item.id)} onChange={e => handleChecked(e, item.id)} />}\r\n                  label={<IntlMessages id={item.name} />}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <Button fullWidth color=\"info\" variant=\"contained\" onClick={handleSubmit}>\r\n            <IntlMessages id={'add'} />\r\n          </Button>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Button, TextField, FormControlLabel, Checkbox, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateRole } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateRoleModal({ setReloadValues, updateHandleClose, selectedRole, roles }) {\r\n  let [roleName, setRoleName] = useState(selectedRole.rolename);\r\n  let [allowedPages, setAllowedPages] = useState(selectedRole.accessablepages.split(','));\r\n\r\n  const handleSubmit = () => {\r\n    if (roleName === undefined || roleName === '') {\r\n      NotificationManager.error('Rol adı doğru formatta değil', '', 3000);\r\n    } else if (allowedPages.length === 0) {\r\n      NotificationManager.error('En az 1 sayfa seçiniz', '', 3000);\r\n    } else if (roles.some(e => e.rolename === roleName && selectedRole.rolename !== roleName)) {\r\n      NotificationManager.error('Bu isimde rol zaten mevcut', '', 3000);\r\n    } else {\r\n      updateRole(roleName, allowedPages.join(','), selectedRole.rolename).then(() => {\r\n        setReloadValues(new Date().getTime());\r\n        updateHandleClose();\r\n      });\r\n    }\r\n  };\r\n  const CheckboxDatas = [\r\n    { id: '0', name: 'sidebar.dashboard' },\r\n    { id: '1', name: 'wallboard' },\r\n    { id: '2', name: 'agent.status' },\r\n    { id: '3', name: 'campaigns' },\r\n    { id: '4', name: 'calllog' },\r\n    { id: '5', name: 'calllistening' },\r\n    { id: '6', name: 'callmanagement' },\r\n    { id: '7', name: 'calltransferreport' },\r\n    { id: '8', name: 'internalssummary' },\r\n    { id: '9', name: 'did.report' },\r\n    { id: '10', name: 'dailysummary' },\r\n    { id: '11', name: 'queue.answer.report' },\r\n    { id: '12', name: 'abandoned.queues' },\r\n    { id: '13', name: 'droppedcall' },\r\n    { id: '14', name: 'abondenedcalls' },\r\n    { id: '15', name: 'callterminationreport' },\r\n    { id: '16', name: 'repetetive.calls' },\r\n    { id: '17', name: 'agent.session.report' },\r\n    { id: '18', name: 'service.level' },\r\n    { id: '19', name: 'dailylog' },\r\n    { id: '20', name: 'dailyacc' },\r\n    { id: '21', name: 'call.comparison' },\r\n    { id: '22', name: 'monthly.log' },\r\n    { id: '23', name: 'monthlydetails' },\r\n    { id: '24', name: 'survey.report' },\r\n    { id: '25', name: 'edit.breaks' },\r\n    { id: '26', name: 'departmentsettings' },\r\n    { id: '27', name: 'usersettings' },\r\n    { id: '28', name: 'rolesettings' },\r\n    { id: '29', name: 'Called.Numbers' },\r\n    { id: '30', name: 'microsoft.teams.users' },\r\n  ];\r\n  const handleChecked = (e, id) => {\r\n    if (e.target.checked) {\r\n      setAllowedPages(prev => [...prev, id]);\r\n    } else {\r\n      let tempArr = JSON.parse(JSON.stringify(allowedPages));\r\n      tempArr.splice(tempArr.indexOf(id), 1);\r\n      setAllowedPages(tempArr);\r\n    }\r\n  };\r\n  const handleSelectAll = e => {\r\n    if (e.target.checked) {\r\n      let tempArr = [];\r\n      for (let i = 0; i < 31; i++) {\r\n        tempArr.push(i.toString());\r\n      }\r\n      setAllowedPages(tempArr);\r\n    } else {\r\n      setAllowedPages([]);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={12}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"roleName\"\r\n            type=\"text\"\r\n            name=\"roleName\"\r\n            value={roleName}\r\n            label={<IntlMessages id={'rolename'} />}\r\n            onChange={e => setRoleName(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <Grid container spacing={3} alignItems=\"flex-start\">\r\n            <Grid item md={12}>\r\n              <Grid container spacing={0} alignItems=\"center\" justifyContent=\"space-between\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n                    <IntlMessages id={'allowedPages'} />\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={allowedPages.length === 31} onChange={handleSelectAll} />}\r\n                    label={<IntlMessages id={'all'} />}\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <hr />\r\n            </Grid>\r\n            {CheckboxDatas.map((item, index) => (\r\n              <Grid item md={4} key={index}>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={allowedPages.includes(item.id)} onChange={e => handleChecked(e, item.id)} />}\r\n                  label={<IntlMessages id={item.name} />}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <Button fullWidth color=\"warning\" variant=\"contained\" onClick={handleSubmit}>\r\n            <IntlMessages id={'update'} />\r\n          </Button>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport UpdateRoleModal from './UpdateRoleModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { deleteRoleByRolename, getRoles } from 'api/api';\r\nexport default function RoleTable({ reloadValues, setReloadValues }) {\r\n  let [roles, setRoles] = useState([]);\r\n  useEffect(() => {\r\n    getRoles().then(result => {\r\n      setRoles(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState({ rolename: '', accessablepages: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = role => {\r\n    setSelectedRole(role);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '60%',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: '8px',\r\n    maxHeight: '90vh',\r\n    overflowY: 'scroll',\r\n  };\r\n\r\n  const handleDeleteClick = rolename => {\r\n    deleteRoleByRolename(rolename).then(() => {\r\n      setReloadValues(new Date().getTime());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'addrole'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'rolename'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell align=\"left\">\r\n                <b>1</b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b>Admin</b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IconButton color=\"warning\" disabled>\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IconButton color=\"error\" disabled>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n            {roles.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"left\">{index + 2}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <b>{item.rolename}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton color=\"warning\" onClick={() => handleClickEdit(item)}>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton color=\"error\" onClick={() => handleDeleteClick(item.rolename)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal open={addModal} onClose={addHandleClose} aria-labelledby=\"add-role-modal\" aria-describedby=\"add-role-modal\">\r\n        <Box sx={style}>\r\n          <AddRoleModal roles={roles} addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"update-role-modal\"\r\n        aria-describedby=\"update-role-modal\">\r\n        <Box sx={style}>\r\n          <UpdateRoleModal\r\n            roles={roles}\r\n            selectedRole={selectedRole}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddTagModal({ setReloadTags, addHandleClose }) {\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const [depId, setDepId] = useState('');\r\n  const [depName, setDepName] = useState('');\r\n  const [tagName, setTagName] = useState('');\r\n\r\n  const handleDepChange = e => {\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value);\r\n  };\r\n  const handleSubmit = () => {\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n      addTagTypes(depName, tagName, depId).then(() => {\r\n        NotificationManager.success('Etiket Eklendi', '', 3000);\r\n        setReloadTags(prev => prev + 1);\r\n        addHandleClose();\r\n      });\r\n    } else {\r\n      NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\">\r\n            <IntlMessages id={'tag'} />\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={e => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\"\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"depNameAddLbl\">\r\n            <IntlMessages id={'departmentname'} />\r\n          </InputLabel>\r\n          <Select labelId=\"depNameAddLbl\" fullWidth value={depId} onChange={handleDepChange}>\r\n            {departments &&\r\n              departments.map((item, index) => (\r\n                <MenuItem key={index} value={item.id}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n        <Button sx={{ width: '100%', marginTop: '1rem' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { setTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateTagModal({ selectedTag, setReloadTags, updateHandleClose }) {\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const [depId, setDepId] = useState(selectedTag.department_id);\r\n  const [depName, setDepName] = useState(selectedTag.department);\r\n  const [tagName, setTagName] = useState(selectedTag.tagmassage);\r\n\r\n  const handleDepChange = e => {\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n      setTagTypes(depName, tagName, depId, selectedTag.tagtypes_id).then(() => {\r\n        NotificationManager.success('Etiket Güncellendi', '', 3000);\r\n        setReloadTags(prev => prev + 1);\r\n        updateHandleClose();\r\n      });\r\n    } else {\r\n      NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\">\r\n            <IntlMessages id={'tag'} />\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={e => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\"\r\n          />\r\n        </FormControl>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"depNameUpdateLbl\">\r\n            <IntlMessages id={'departmentname'} />\r\n          </InputLabel>\r\n          <Select labelId=\"depNameUpdateLbl\" fullWidth value={depId} onChange={handleDepChange}>\r\n            {departments &&\r\n              departments.map((item, index) => (\r\n                <MenuItem key={index} value={item.id}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n        <Button sx={{ width: '100%', marginTop: '1rem' }} color=\"warning\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getTagTypes, deleteTag } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddTagModal from './AddTagModal';\r\nimport UpdateTagModal from './UpdateTagModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TagTable() {\r\n  let [tags, setTags] = useState([]);\r\n  let [reloadTags,setReloadTags] = useState(0);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => {\r\n        setTags(JSON.parse(resp.data.data));\r\n    });\r\n  }, [reloadTags]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n   let [selectedTag, setSelectedTag] = useState({ department: '', department_id: '',tagmassage:'' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = tag => {\r\n    setSelectedTag(tag);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = (tag) => {\r\n    deleteTag(tag).then(() => {\r\n      setReloadTags((prev)=> prev+1);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex',alignItems:\"center\",justifyContent:\"space-between\", margin: '10px 0' }}>\r\n        <h3><IntlMessages id={'tag'} /></h3>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'addtag'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer sx={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n              <IntlMessages id={'tag'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tags.map((item,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{item.department}</TableCell>\r\n                <TableCell>{item.tagmassage}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(item)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(item.tagtypes_id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddTagModal addHandleClose={addHandleClose} setReloadTags={setReloadTags} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateTagModal\r\n            selectedTag={selectedTag}\r\n            setReloadTags={setReloadTags}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { addDepOwnedQueues, deleteDepOwnedQueues, getDepartmants, getDepOwnedQueues, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TagTable from '../TagTable/TagTable';\r\n\r\nexport default function DepartmentQueues({ reloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  let [queues, setQueues] = useState([]);\r\n  let [depOwnedQueues, setDepOwnedQueues] = useState([]);\r\n  let [selectedDepId, setSelectedDepId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n  useEffect(() => {\r\n    getQueues().then(result => {\r\n      setQueues(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getDepOwnedQueues(selectedDepId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].queue_id);\r\n      }\r\n      setDepOwnedQueues(tempArr);\r\n    });\r\n  }, [selectedDepId]);\r\n\r\n  const handleCheckboxClick = (queueId, event) => {\r\n    if (event.target.checked) {\r\n      addDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      deleteDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedDepId === dep.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedDepId(dep.id)}>\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n\r\n          <TagTable />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'queue.answer.report.queues'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {queues.map(queue => (\r\n                    <TableRow key={queue.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={depOwnedQueues.includes(queue.id)}\r\n                          onChange={event => handleCheckboxClick(queue.id, event)}\r\n                        />\r\n\r\n                        {queue.display_name}\r\n                        <b> ({queue.dn})</b>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddDepartmanModal({ setReloadValues, addHandleClose }) {\r\n  let [name, setName] = useState('');\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      addDepartmant(name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        addHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateDepartmanModal({ selectedDep, setReloadValues, updateHandleClose }) {\r\n  let [name, setName] = useState(selectedDep.name);\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateDepartmant(selectedDep.id, name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        updateHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { deleteDepOwnedAllQueues, deleteDepWithDepId, deleteUserAllDepsWithDepId, getDepartmants } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddDepartmanModal from './AddDepartmanModal';\r\nimport UpdateDepartmanModal from './UpdateDepartmanModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DepartmantTable({ reloadValues, setReloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  let [selectedDep, setSelectedDep] = useState({ id: 0, name: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = dep => {\r\n    setSelectedDep(dep);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = depId => {\r\n    deleteDepOwnedAllQueues(depId).then(res1 => {\r\n      deleteUserAllDepsWithDepId(depId).then(res2 => {\r\n        deleteDepWithDepId(depId).then(res3 => {\r\n          setReloadValues(depId.toString());\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adddepartment'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deps.map(dep => (\r\n              <TableRow key={dep.id}>\r\n                <TableCell>{dep.name}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(dep)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(dep.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddDepartmanModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateDepartmanModal\r\n            selectedDep={selectedDep}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Typography, Paper, Grid } from '@mui/material';\r\nimport { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { decryptData } from '@jumbo/utils/secureData';\r\nexport default function Account() {\r\n  const [company, setCompany] = useState('');\r\n  const [user, setUser] = useState('');\r\n  useEffect(() => {\r\n    setCompany(localStorage.getItem('company') || '');\r\n    let cryptedData = localStorage.getItem('username');\r\n    const salt = process.env.REACT_APP_CRYPTO_SECRET || 'DvSDbYSnkWzCbWpo3ivELWZY8wqF1Znc6Ts6oIs9lsC39sdh0L';\r\n    const username = decryptData(cryptedData, salt) || '';\r\n    setUser(username);\r\n  }, []);\r\n\r\n  const flexbox = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  return (\r\n    <PageContainer>\r\n      {company && (\r\n        <Typography variant=\"h3\" component=\"div\">\r\n          {company}\r\n        </Typography>\r\n      )}\r\n      <Paper sx={{ py: 3, px: 2, my: 3 }}>\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          <span style={{ fontWeight: '300' }}>\r\n            <IntlMessages id={'welcome'} />,\r\n          </span>{' '}\r\n          {user}\r\n        </Typography>\r\n      </Paper>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2 }} style={flexbox}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              Yeni Bildirimlerim\r\n            </Typography>\r\n            <PieChart width={250} height={250}>\r\n              <Pie\r\n                data={newNotifications}\r\n                color=\"#000\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                isAnimationActive={true}\r\n                outerRadius={95}\r\n                fill=\"#8884d8\">\r\n                {newNotifications.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2 }} style={flexbox}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              Devam Eden Bildirimlerim\r\n            </Typography>\r\n            <PieChart width={250} height={250}>\r\n              <Pie\r\n                data={currentNotifications}\r\n                color=\"#000\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                isAnimationActive={true}\r\n                outerRadius={95}\r\n                fill=\"#8884d8\">\r\n                {currentNotifications.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2 }} style={flexbox}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              Gecikmiş Bildirimlerim\r\n            </Typography>\r\n            <PieChart width={250} height={250}>\r\n              <Pie\r\n                data={delayedNotifications}\r\n                color=\"#000\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                isAnimationActive={true}\r\n                outerRadius={95}\r\n                fill=\"#8884d8\">\r\n                {delayedNotifications.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\nconst newNotifications = [\r\n  {\r\n    name: 'mesaj',\r\n    value: 30,\r\n  },\r\n  {\r\n    name: 'kuyruk',\r\n    value: 3,\r\n  },\r\n];\r\nconst currentNotifications = [\r\n  {\r\n    name: 'mesaj',\r\n    value: 27,\r\n  },\r\n  {\r\n    name: 'kuyruk',\r\n    value: 12,\r\n  },\r\n];\r\nconst delayedNotifications = [\r\n  {\r\n    name: 'mesaj',\r\n    value: 1,\r\n  },\r\n  {\r\n    name: 'kuyruk',\r\n    value: 0,\r\n  },\r\n];\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AuditLogDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={9}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DateTimePicker\r\n                          disableMaskedInput\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField fullWidth {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          maxDateTime={endDate}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DateTimePicker\r\n                          disableMaskedInput\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField fullWidth {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          minDateTime={startDate}\r\n                          maxDateTime={new Date(new Date().setHours(23, 59, 59))}\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\r\nexport default function AuditLogFilters({ username, setUsername }) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <AssignmentIndIcon style={{ verticalAlign: '-5px', marginRight: '.25rem' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'username'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <TextField\r\n                fullWidth\r\n                style={{ marginTop: '8px' }}\r\n                variant=\"outlined\"\r\n                id=\"username\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                label={<IntlMessages id={'username'} />}\r\n                onChange={e => {\r\n                  setUsername(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getAuditLog, getAuditLogCount } from 'api/api';\r\nimport AuditLogDateFilter from './DateFilter';\r\nimport AuditLogFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function AuditLogFiter({ setData, setTotalCount, limit, offset }) {\r\n  const [username, setUsername] = useState('');\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  const [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  useEffect(() => {\r\n    getAuditLog(startTimeApi, endTimeApi, limit, offset, username).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    });\r\n    getAuditLogCount(startTimeApi, endTimeApi, username).then(resp => {\r\n      setTotalCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n    });\r\n  }, [startTimeApi, endTimeApi, limit, offset, setData, setTotalCount, username]);\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <AuditLogDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <AuditLogFilters username={username} setUsername={setUsername} />\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination } from '@material-ui/core';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport dateFormat from 'dateformat';\r\nexport default function AuditLogTable({ data, totalCount, limit, setLimit, page, setPage, offset, setOffset }) {\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"Scores\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <b>#</b>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'date'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'username'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'activity'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 &&\r\n              data.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <b>{index + 1 + offset}</b>\r\n                  </TableCell>\r\n                  <TableCell>{dateFormat(item.actiontime, 'dd/mm/yyyy HH:MM:ss')}</TableCell>\r\n                  <TableCell>{item.pageuser}</TableCell>\r\n                  <TableCell>{item.page}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={totalCount}\r\n        backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n        nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n        rowsPerPage={limit}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport AuditLogFilter from './Filter';\r\nimport AuditLogTable from './Table';\r\n\r\nexport default function AuditLog() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'auditLog'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(10);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'auditLog'} />} breadcrumbs={breadcrumbs}>\r\n      <AuditLogFilter setData={setData} setTotalCount={setTotalCount} limit={limit} offset={offset} />\r\n      <AuditLogTable\r\n        data={data}\r\n        totalCount={totalCount}\r\n        limit={limit}\r\n        setLimit={setLimit}\r\n        page={page}\r\n        setPage={setPage}\r\n        offset={offset}\r\n        setOffset={setOffset}\r\n      />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Error404 from './Pages/404';\r\nimport Login from './Auth/Login';\r\nimport AgentStatus from './Pages/AgentStatus';\r\nimport Campaigns from './Pages/Campaigns';\r\nimport Register from './Auth/Register';\r\nimport CallListening from './Pages/CallListeningReport';\r\nimport CallManagement from './Pages/CallManagement';\r\nimport DroppedCall from './Pages/DroppedCall';\r\nimport DidReport from './Pages/DIDReport';\r\nimport ForgotPasswordPage from './Auth/ForgotPassword';\r\nimport { PrivateRouteLogin } from './Private/PrivateRouteLogin';\r\nimport { NotPrivateRoute } from './Private/NotPrivateRoute';\r\nimport ServiceLevel from './Pages/ServiceLevel';\r\nimport { AbandonedQueues } from './Pages/AbandonedQueues';\r\nimport RepetetiveCalls from './Pages/RepetetiveCalls';\r\nimport WallBoard from './Pages/WallBoard';\r\nimport DailyLog from './Pages/DailyLog';\r\nimport DailyAcc from './Pages/DailyAcc';\r\nimport CallComparison from './Pages/CallComparison';\r\nimport MonthlyLog from './Pages/MonthlyLog';\r\n// import ReturnedDropCall from './Pages/ReturnedDropCall';\r\nimport AgentCDR from './Pages/AgentSessionReport';\r\nimport IYS from './Pages/IYS';\r\nimport Users from './Pages/MicrosoftTeams/Users';\r\nimport MonthlyDetails from './Pages/MonthlyDetails';\r\nimport QueueAnswerReport from './Pages/QueueAnswerReport';\r\nimport AbondenedCalls from './Pages/AbondenedCalls';\r\nimport CallTerminationReport from './Pages/CallTerminationReport';\r\nimport DailySumaryReport from './Pages/DailySummaryReport';\r\nimport InternalsSummaryReport from './Pages/InternalsSummaryReport';\r\nimport CallLog from './Pages/CallLog';\r\nimport QualityReport from './Pages/QualityReport';\r\nimport './index.css';\r\nimport CallTransferReport from './Pages/CallTransferReport';\r\nimport EditBreaks from './Pages/EditBreaks';\r\nimport UserSettings from './Pages/UserSettings/UserSettings';\r\nimport RoleSettings from './Pages/RoleSettings';\r\nimport DepartmentSettings from './Pages/DepartmansSettingns/DepartmansSettigns';\r\nimport Account from './Pages/Account';\r\nimport AuditLog from './Pages/AuditLog';\r\nimport { setAuditLog } from 'api/api';\r\nimport AppContext from '@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\n\r\nconst OptionalPages = [\r\n  { id: '0', path: '/dashboard', component: Dashboard },\r\n  { id: '1', path: '/wallboard', component: WallBoard },\r\n  { id: '2', path: '/reports/agentstatus', component: AgentStatus },\r\n  { id: '3', path: '/reports/campaigns', component: Campaigns },\r\n  { id: '4', path: '/reports/callLog', component: CallLog },\r\n  { id: '5', path: '/reports/calllistening', component: CallListening },\r\n  { id: '6', path: '/reports/callmanagement', component: CallManagement },\r\n  { id: '7', path: '/reports/calltransferreport', component: CallTransferReport },\r\n  { id: '8', path: '/reports/internalssummary', component: InternalsSummaryReport },\r\n  { id: '9', path: '/reports/didreport', component: DidReport },\r\n  { id: '10', path: '/reports/dailysummaryreport', component: DailySumaryReport },\r\n  { id: '11', path: '/reports/queueanswerreport', component: QueueAnswerReport },\r\n  { id: '12', path: '/reports/abandoned-queues', component: AbandonedQueues },\r\n  { id: '13', path: '/reports/droppedcall', component: DroppedCall },\r\n  { id: '14', path: '/reports/abondenedcalls', component: AbondenedCalls },\r\n  { id: '15', path: '/reports/calltermination', component: CallTerminationReport },\r\n  { id: '16', path: '/reports/repetetive-calls', component: RepetetiveCalls },\r\n  { id: '17', path: '/reports/agentcdr', component: AgentCDR },\r\n  { id: '18', path: '/reports/servicelevel', component: ServiceLevel },\r\n  { id: '19', path: '/reports/dailylog', component: DailyLog },\r\n  { id: '20', path: '/reports/dailyacc', component: DailyAcc },\r\n  { id: '21', path: '/reports/callcomparison', component: CallComparison },\r\n  { id: '22', path: '/reports/monthlylog', component: MonthlyLog },\r\n  { id: '23', path: '/reports/monthlyDetails', component: MonthlyDetails },\r\n  { id: '24', path: '/reports/quality-report', component: QualityReport },\r\n  { id: '25', path: '/settings/editbreaks', component: EditBreaks },\r\n  { id: '26', path: '/settings/departmentsettings', component: DepartmentSettings },\r\n  { id: '27', path: '/settings/usersettings', component: UserSettings },\r\n  { id: '28', path: '/settings/rolesettings', component: RoleSettings },\r\n  { id: '29', path: '/iys/called-number', component: IYS },\r\n  { id: '30', path: '/teams/users', component: Users },\r\n];\r\nconst Routes = () => {\r\n  const location = useLocation();\r\n  const [filteredPages, setFilteredPages] = useState(OptionalPages);\r\n  const { rolePages } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    setAuditLog(location.pathname);\r\n  }, [location.pathname]);\r\n  useEffect(() => {\r\n    let allowedPagesArr = rolePages.split(',');\r\n    let tempArr = OptionalPages.filter(e => allowedPagesArr.includes(e.id));\r\n    setFilteredPages(tempArr);\r\n  }, [rolePages]);\r\n  if (location.pathname === '' || location.pathname === '/') {\r\n    return <Redirect to={'/dashboard'} />;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <NotPrivateRoute path=\"/signup\" component={Register} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <NotPrivateRoute path=\"/forgot-password\" component={ForgotPasswordPage} />\r\n        <NotPrivateRoute path=\"/account\" component={Account} />\r\n        {filteredPages.map((item, index) => (\r\n          <NotPrivateRoute key={index} path={item.path} component={item.component} />\r\n        ))}\r\n\r\n        {/* <NotPrivateRoute path=\"/reports/returned-dropcall\" component={ReturnedDropCall} /> */}\r\n        <NotPrivateRoute path=\"/auditLog\" component={AuditLog} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport default function AgentList() {\r\n  const [response, setResponse] = useState([]);\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  useEffect(() => {\r\n    api.getAgentList({ token: localStorage.getItem('token') }).then(resp => {\r\n      let responseStatus = resp.data.data;\r\n      api.getAgentsRecordListenAuth().then(result => {\r\n        let recordAuths = JSON.parse(result.data.data);\r\n        for (let i = 0; i < responseStatus.length; i++) {\r\n          for (let j = 0; j < recordAuths.length; j++) {\r\n            if (responseStatus[i].agentNumber === recordAuths[j].agent_num) {\r\n              responseStatus[i].recordAuth = recordAuths[j].record_listen === 'True';\r\n            }\r\n          }\r\n        }\r\n        setResponse(responseStatus);\r\n      });\r\n    });\r\n  }, [reloadValues]);\r\n  const createData = (num,id, displayname, status, recordAuth) => {\r\n    return {num, id, displayname, status, recordAuth };\r\n  };\r\n  const rows = response.map((dataValue,index) =>\r\n    createData(\r\n      index+1,\r\n      dataValue.agentNumber,\r\n      dataValue.agentName,\r\n      dataValue.agentState === 'True' ? 'Active' : 'Passive',\r\n      dataValue.recordAuth,\r\n    ),\r\n  );\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'reports.callcenter'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.status'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.status'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Table rows={rows} setReloadValues={setReloadValues} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { styled } from '@mui/material/styles';\r\n// import { sendCampaigns } from 'api/api';\r\nimport { useFormik } from 'formik';\r\nimport { DateTimePicker } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { TextField, MenuItem, FormControl, InputLabel, Select, Button, Typography } from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport Grid from '@mui/material/Grid';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport { getQueue } from 'api/api';\r\n\r\nexport default function Campaigns() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'reports.callcenter'} />, link: '/' },\r\n    { label: <IntlMessages id={'campaigns'} />, isActive: true },\r\n  ];\r\n  const Input = styled('input')({\r\n    display: 'none',\r\n  });\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  const [scheduleBtnLoading, setScheduleBtnLoading] = useState(false);\r\n  let curentLanguage = useIntl();\r\n\r\n  const [queuesList, setQueuesList] = useState([]);\r\n  useEffect(() => {\r\n    getQueue().then(response => {\r\n      setQueuesList(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      callType: '',\r\n      campaignName: '',\r\n      csvfile: '',\r\n      wavfile: '',\r\n      ringtime: new Date().setMinutes(1, 0),\r\n      channelCount: 1,\r\n      anons: '',\r\n      ivrMenu: '',\r\n      repeatCallsCount: 1,\r\n      queue: '',\r\n    },\r\n    onSubmit: values => {\r\n      setBtnLoading(true);\r\n      console.log('values', values);\r\n      setTimeout(() => {\r\n        setBtnLoading(false);\r\n      }, 1000);\r\n    },\r\n  });\r\n  const schedule = useFormik({\r\n    initialValues: {\r\n      success: new Date().setMinutes(1, 0),\r\n      unsuccess: new Date().setMinutes(1, 0),\r\n      sended: new Date().setMinutes(1, 0),\r\n      notSended: new Date().setMinutes(1, 0),\r\n      callAgain: new Date().setMinutes(1, 0),\r\n      unanswered: new Date().setMinutes(1, 0),\r\n    },\r\n    onSubmit: values => {\r\n      setScheduleBtnLoading(true);\r\n      console.log('schedule', values);\r\n      setTimeout(() => {\r\n        setScheduleBtnLoading(false);\r\n      }, 1000);\r\n    },\r\n  });\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'campaigns'} />} breadcrumbs={breadcrumbs}>\r\n      <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <GridContainer>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DateTimePicker\r\n                  label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                  name=\"startDate\"\r\n                  value={formik.values.startDate}\r\n                  inputFormat=\"dd/MM/yyyy HH:mm\"\r\n                  maxDateTime={formik.values.endDate}\r\n                  onChange={val => formik.setFieldValue('startDate', val)}\r\n                  renderInput={params => <TextField fullWidth helperText=\"dd/MM/yyyy hh:mm\" {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DateTimePicker\r\n                  label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                  value={formik.values.endDate}\r\n                  minDateTime={formik.values.startDate}\r\n                  inputFormat=\"dd/MM/yyyy HH:mm\"\r\n                  onChange={val => formik.setFieldValue('endDate', val)}\r\n                  name=\"endDate\"\r\n                  renderInput={params => <TextField fullWidth helperText=\"dd/MM/yyyy hh:mm\" {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"callType\">\r\n                  <IntlMessages id={'callType'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"callType\"\r\n                  name=\"callType\"\r\n                  value={formik.values.callType}\r\n                  label={<IntlMessages id={'callType'} />}\r\n                  onChange={formik.handleChange}>\r\n                  <MenuItem value=\"inb\">\r\n                    <IntlMessages id={'incomingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"out\">\r\n                    <IntlMessages id={'outgoingcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"agent\">\r\n                    <IntlMessages id={'agentedcall'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"ques\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={<IntlMessages id={'campaignName'} />}\r\n                name=\"campaignName\"\r\n                value={formik.values.campaignName}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <label htmlFor=\"csvupload\">\r\n                <Input\r\n                  accept=\".csv\"\r\n                  id=\"csvupload\"\r\n                  type=\"file\"\r\n                  onChange={val => formik.setFieldValue('csvfile', val.target.files[0])}\r\n                />\r\n                <Button fullWidth variant=\"outlined\" color=\"secondary\" component=\"span\">\r\n                  Upload CSV\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <label htmlFor=\"wavupload\">\r\n                <Input\r\n                  accept=\"audio/wav\"\r\n                  id=\"wavupload\"\r\n                  type=\"file\"\r\n                  onChange={val => formik.setFieldValue('wavfile', val.target.files[0])}\r\n                />\r\n                <Button fullWidth variant=\"outlined\" color=\"success\" component=\"span\">\r\n                  Upload WAV\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'CallLog.datail.ringtime'} />}\r\n                  value={formik.values.ringtime}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => formik.setFieldValue('ringtime', val)}\r\n                  name=\"ringtime\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={<IntlMessages id={'channelCount'} />}\r\n                name=\"channelCount\"\r\n                type=\"number\"\r\n                value={formik.values.channelCount}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={<IntlMessages id={'announcement'} />}\r\n                name=\"anons\"\r\n                value={formik.values.anons}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={<IntlMessages id={'IVRMenu'} />}\r\n                name=\"ivrMenu\"\r\n                value={formik.values.ivrMenu}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={<IntlMessages id={'repeatCallsCount'} />}\r\n                name=\"repeatCallsCount\"\r\n                type=\"number\"\r\n                value={formik.values.repeatCallsCount}\r\n                onChange={formik.handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"queue\">\r\n                  <IntlMessages id={'queue'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"queue\"\r\n                  name=\"queue\"\r\n                  value={formik.values.queue}\r\n                  label={<IntlMessages id={'queue'} />}\r\n                  onChange={formik.handleChange}>\r\n                  {queuesList.length > 0 &&\r\n                    queuesList.map((item, index) => (\r\n                      <MenuItem key={index} value={item.display_name}>\r\n                        {item.dn} - {item.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <LoadingButton\r\n                size=\"large\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                loading={btnLoading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                sx={{ mt: 1 }}>\r\n                <IntlMessages id={'save'} />\r\n              </LoadingButton>\r\n            </Grid>\r\n          </GridContainer>\r\n        </form>\r\n      </div>\r\n      <div style={{ marginTop: '2rem' }}>\r\n        <Typography variant=\"h5\" component=\"div\" mb={3} sx={{ textTransform: 'uppercase' }}>\r\n          <IntlMessages id={'schedule'} />\r\n          <hr />\r\n        </Typography>\r\n        <form onSubmit={schedule.handleSubmit}>\r\n          <GridContainer>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'success'} />}\r\n                  value={schedule.values.success}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => schedule.setFieldValue('success', val)}\r\n                  name=\"success\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'unsuccess'} />}\r\n                  value={schedule.values.unsuccess}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => schedule.setFieldValue('unsuccess', val)}\r\n                  name=\"unsuccess\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'sended'} />}\r\n                  value={schedule.values.sended}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => schedule.setFieldValue('sended', val)}\r\n                  name=\"sended\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'notSended'} />}\r\n                  value={schedule.values.notSended}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => schedule.setFieldValue('notSended', val)}\r\n                  name=\"notSended\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'callAgain'} />}\r\n                  value={schedule.values.callAgain}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => schedule.setFieldValue('callAgain', val)}\r\n                  name=\"callAgain\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={6} sm={12}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                adapterLocale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <TimePicker\r\n                  label={<IntlMessages id={'notanswered'} />}\r\n                  value={schedule.values.unanswered}\r\n                  views={['minutes', 'seconds']}\r\n                  inputFormat=\"mm:ss\"\r\n                  mask=\"__:__\"\r\n                  onChange={val => schedule.setFieldValue('unanswered', val)}\r\n                  name=\"unanswered\"\r\n                  renderInput={params => <TextField fullWidth {...params} />}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <LoadingButton\r\n                size=\"large\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                loading={scheduleBtnLoading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                sx={{ mt: 1 }}>\r\n                <IntlMessages id={'save'} />\r\n              </LoadingButton>\r\n            </Grid>\r\n          </GridContainer>\r\n        </form>\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallLogFilter from './Filter';\r\nimport CallLogTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\nexport default function CallLog() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllog'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [responseTotalSummary, setResponseTotalSummary] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer\r\n        heading={\r\n          <>\r\n            <IntlMessages id={'calllog'} /> <FavoriteReports reportId=\"1\" />\r\n          </>\r\n        }\r\n        breadcrumbs={breadcrumbs}>\r\n        <CallLogFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setTotalData={setTotalData}\r\n          setCount={setCount}\r\n          setResponseTotalSummary={setResponseTotalSummary}\r\n        />\r\n        <CallLogTable\r\n          count={count}\r\n          totalData={totalData}\r\n          responseTotalSummary={responseTotalSummary}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallListeningFilter from './Filter';\r\nimport CallListeningTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function CallListeningReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllistening'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  return (\r\n    <div>\r\n      <PageContainer\r\n        heading={\r\n          <>\r\n            <IntlMessages id={'calllistening'} /> <FavoriteReports reportId=\"2\" />\r\n          </>\r\n        }\r\n        breadcrumbs={breadcrumbs}>\r\n        <CallListeningFilter setData={setData} limit={limit} offset={offset} setPage={setPage} setCount={setCount} />\r\n        <CallListeningTable\r\n          count={count}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallManagementFilter from './Filter';\r\nimport CallManagementTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function CallManagement() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'callmanagement'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [reloadValues, setReloadValues] = useState([]);\r\n  const [score, setScore] = useState('');\r\n  const [tagFilter, setTagFilter] = useState('');\r\n  return (\r\n    <div>\r\n      <PageContainer\r\n        heading={\r\n          <>\r\n            <IntlMessages id={'callmanagement'} /> <FavoriteReports reportId=\"3\" />\r\n          </>\r\n        }\r\n        breadcrumbs={breadcrumbs}>\r\n        <CallManagementFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setCount={setCount}\r\n          setScore={setScore}\r\n          setTagFilter={setTagFilter}\r\n        />\r\n        <CallManagementTable\r\n          count={count}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n          reloadValues={reloadValues}\r\n          setReloadValues={setReloadValues}\r\n          scoreFilter={score}\r\n          tagFilter={tagFilter}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport dateFormat from 'dateformat';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function CallTransferReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calltransferreport'} />, isActive: true },\r\n  ];\r\n\r\n  const [selectedStartTime, setSelectedStartTime] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd'));\r\n  const [selectedEndTime, setSelectedEndTime] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd'));\r\n  const [agent, setAgent] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer\r\n        heading={\r\n          <>\r\n            <IntlMessages id={'calltransferreport'} /> <FavoriteReports reportId=\"4\" />\r\n          </>\r\n        }\r\n        breadcrumbs={breadcrumbs}>\r\n        <GridContainer>\r\n          <Grid item xs={12}>\r\n            <Filter\r\n              agent={agent}\r\n              setAgent={setAgent}\r\n              selectedStartTime={selectedStartTime}\r\n              selectedEndTime={selectedEndTime}\r\n              setSelectedEndTime={setSelectedEndTime}\r\n              setSelectedStartTime={setSelectedStartTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table agent={agent} selectedStartTime={selectedStartTime} selectedEndTime={selectedEndTime} />\r\n          </Grid>\r\n        </GridContainer>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport InternalsSummaryReportFilter from './Filter';\r\nimport InternalsSummaryReportTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function InternalsSummaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'internalssummary'} />, isActive: true },\r\n  ];\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [data, setData] = useState([]);\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n  const [direction, setDirection] = useState('all');\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'internalssummary'} />\r\n          <FavoriteReports reportId=\"5\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <InternalsSummaryReportFilter\r\n        setData={setData}\r\n        startTime={startTime}\r\n        setStartTime={setStartTime}\r\n        endTime={endTime}\r\n        setEndTime={setEndTime}\r\n        direction={direction}\r\n        setDirection={setDirection}\r\n      />\r\n      <InternalsSummaryReportTable data={data} startTime={startTime} endTime={endTime} direction={direction} />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DailySummaryReportFilter from './Filter';\r\nimport DailySummaryReportTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function DailySumaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailysummary'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  let [dataTotal, setDataTotal] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer\r\n        heading={\r\n          <>\r\n            <IntlMessages id={'dailysummary'} />\r\n            <FavoriteReports reportId=\"7\" />\r\n          </>\r\n        }\r\n        breadcrumbs={breadcrumbs}>\r\n        <DailySummaryReportFilter setData={setData} setDataTotal={setDataTotal} />\r\n        <DailySummaryReportTable data={data} dataTotal={dataTotal} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function QueueAnswerReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'queue.answer.report'} />, isActive: true },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [summary, setSummary] = useState([]);\r\n  const [summaryTotal, setSummaryTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n  const [totalCall, setTotalCall] = useState(0);\r\n  const [totalCallRate, setTotalCallRate] = useState('%0');\r\n  useEffect(() => {\r\n    let totalcall = 0;\r\n    let totalanswered = 0;\r\n    summary.forEach(item => {\r\n      totalcall += parseInt(item?.total_call);\r\n      totalanswered += parseInt(item?.count);\r\n    });\r\n    setTotalCall(totalcall);\r\n    setTotalCallRate(`%${((parseInt(totalanswered || 0) * 100) / parseInt(totalcall || 1)).toFixed(2)}`);\r\n  }, [summary]);\r\n  let classes = useStyles();\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'queue.answer.report'} /> <FavoriteReports reportId=\"8\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            setSummary={setSummary}\r\n            setSummaryTotal={setSummaryTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            data={data}\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            setRowsPerPage={setRowsPerPage}\r\n            page={page}\r\n            setPage={setPage}\r\n            summaryTotal={summaryTotal}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {summaryTotal.length > 0 && (\r\n            <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n              <ExcelFile\r\n                filename={`Queue Answer Report Summary`}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={summary} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"count\" />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                    value=\"waiting_time\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Talking Time' : 'Konuşma Süresi'}\r\n                    value=\"talking\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Görüşme Süresi'}\r\n                    value=\"act\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            </div>\r\n          )}\r\n          <TableContainer component={Paper} className={classes.root}>\r\n            <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'queueanswerreport.date'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'queueanswercount'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'answeredcallratio'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'waiting.time'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'queueanswerreport.talkingtime'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'wallboard.average.time'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ textAlign: 'center' }}>\r\n                    <IntlMessages id={'average.waiting'} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {summary.map((sum, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum.date}</TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum?.total_call}</TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum.count}</TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      %{((parseInt(sum?.count || 0) * 100) / parseInt(sum?.total_call || 1)).toFixed(2)}\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum.waiting_time}</TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum.talking}</TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum.act}</TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>{sum.waiting_act}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n                {summaryTotal.map((row, index) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'total'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{totalCall.toString()}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{row.count1}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{totalCallRate.toString()}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{row.waiting_time}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{row.talking}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{row.act}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{row.waiting_act}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport const AbandonedQueues = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abandoned.queues'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'abandoned.queues'} />\r\n          <FavoriteReports reportId=\"9\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setQueueList={setQueueList}\r\n            queuelist={queuelist}\r\n            limit={limit}\r\n            offset={offset}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            page={page}\r\n            setPage={setPage}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Alert, Stack } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function AbondenedCalls() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abondenedcalls'} />, isActive: true },\r\n  ];\r\n  let [queue, setQueue] = useState('');\r\n  let [agent, setAgent] = useState('');\r\n  const [color, setColor] = useState('');\r\n  let [params, setParams] = useState({\r\n    startDate: dateFormat(new Date(), 'yyyy-mm-dd'),\r\n    endDate: dateFormat(new Date(), 'yyyy-mm-dd'),\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  const [endDate, setEndDate] = useState(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n  useEffect(() => {\r\n    setParams({\r\n      startDate: dateFormat(startDate, 'yyyy-mm-dd'),\r\n      endDate: dateFormat(endDate, 'yyyy-mm-dd'),\r\n    });\r\n  }, [startDate, endDate]);\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'abondenedcalls'} />\r\n          <FavoriteReports reportId=\"11\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setStartDate={setStartDate}\r\n            setEndDate={setEndDate}\r\n            setColor={setColor}\r\n            color={color}\r\n            queue={queue}\r\n            setQueue={setQueue}\r\n            agent={agent}\r\n            setAgent={setAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table params={params} color={color} queue={queue} agent={agent} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Stack sx={{ width: '100%' }} spacing={2}>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.red'} />\r\n          </Alert>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.green'} />\r\n          </Alert>\r\n        </Stack>\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallTerminationReportFilter from './Filter';\r\nimport CallTerminationReportTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function CallTerminationReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'callterminationreport'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(10);\r\n  return (\r\n    <div>\r\n      <PageContainer\r\n        heading={\r\n          <>\r\n            <IntlMessages id={'callterminationreport'} /> <FavoriteReports reportId=\"12\" />\r\n          </>\r\n        }\r\n        breadcrumbs={breadcrumbs}>\r\n        <CallTerminationReportFilter setData={setData} setTotalCount={setTotalCount} limit={limit} offset={offset} />\r\n        <CallTerminationReportTable\r\n          data={data}\r\n          totalCount={totalCount}\r\n          limit={limit}\r\n          setLimit={setLimit}\r\n          page={page}\r\n          setPage={setPage}\r\n          offset={offset}\r\n          setOffset={setOffset}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport QualityFilter from './Filter';\r\nimport QualityTable from './Table';\r\nimport FavoriteReports from '@jumbo/utils/FavoriteReports';\r\n\r\nexport default function QualityReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'survey.report'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(10);\r\n\r\n  return (\r\n    <PageContainer\r\n      heading={\r\n        <>\r\n          <IntlMessages id={'survey.report'} />\r\n          <FavoriteReports reportId=\"22\" />\r\n        </>\r\n      }\r\n      breadcrumbs={breadcrumbs}>\r\n      <QualityFilter setData={setData} setTotalCount={setTotalCount} limit={limit} offset={offset} />\r\n      <QualityTable\r\n        data={data}\r\n        totalCount={totalCount}\r\n        limit={limit}\r\n        setLimit={setLimit}\r\n        page={page}\r\n        setPage={setPage}\r\n        offset={offset}\r\n        setOffset={setOffset}\r\n      />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Box, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getBreakName, getBreakTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport BreaksChangeBreakNameModal from './Modals/BreaksChangeBreakNameModal';\r\nimport BreaksChangeBreakTimeModal from './Modals/BreaksChangeBreakTimeModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function EditBreaks() {\r\n  const [breaks, setBreaks] = useState([]);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [breakNameModalopen, setBreakNameModalOpen] = useState(false);\r\n  const handleBreakNameModalOpen = () => setBreakNameModalOpen(true);\r\n  const handleBreakNameModalClose = () => setBreakNameModalOpen(false);\r\n  let [selectedBreakId, setSelectedBreakId] = useState('');\r\n  let [selectedBreakName, setSelectedBreakName] = useState('');\r\n  const handleClickName = (id, name) => {\r\n    setSelectedBreakId(id);\r\n    setSelectedBreakName(name);\r\n    handleBreakNameModalOpen();\r\n  };\r\n\r\n  const [breakTimeModalopen, setBreakTimeModalOpen] = useState(false);\r\n  const handleBreakTimeModalOpen = () => setBreakTimeModalOpen(true);\r\n  const handleBreakTimeModalClose = () => setBreakTimeModalOpen(false);\r\n  let [selectedLogoutType, setSelectedLogoutType] = useState('');\r\n  let [selectedBreakTime, setSelectedBreakTime] = useState('');\r\n  const handleClickTime = (logoutType, time) => {\r\n    setSelectedLogoutType(logoutType);\r\n    setSelectedBreakTime(time);\r\n    handleBreakTimeModalOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBreakTime().then(resp => {\r\n      var breakTime = JSON.parse(resp.data.data);\r\n      getBreakName().then(res => {\r\n        var breakName = JSON.parse(res.data.data);\r\n        var arr = breakTime.reduce((filtered, item) => {\r\n          let nameobj = breakName.find(e => e.value === item.logouttype) || {};\r\n          if (nameobj?.name) {\r\n            var value = {\r\n              ...item,\r\n              name: nameobj?.name,\r\n              id: nameobj?.iddn,\r\n            };\r\n            filtered.push(value);\r\n          } else {\r\n            filtered.push(item);\r\n          }\r\n          return filtered;\r\n        }, []);\r\n        setBreaks(arr);\r\n      });\r\n    });\r\n  }, [breakNameModalopen, breakTimeModalopen]);\r\n  return (\r\n    <PageContainer>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakcode'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakname'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breaktime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {breaks.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{item.logouttype}</TableCell>\r\n                  <TableCell onClick={() => handleClickName(item.id, item.name)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.name}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleClickTime(item.logouttype, item.period)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.period}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Modal\r\n        open={breakNameModalopen}\r\n        onClose={handleBreakNameModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakNameModal\r\n            id={selectedBreakId}\r\n            selectedBreakName={selectedBreakName}\r\n            handleBreakNameModalClose={handleBreakNameModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={breakTimeModalopen}\r\n        onClose={handleBreakTimeModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakTimeModal\r\n            logouttype={selectedLogoutType}\r\n            period={selectedBreakTime}\r\n            handleBreakTimeModalClose={handleBreakTimeModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DepartmentQueues from './DepartmentQueues/DepartmentQueues';\r\nimport DepartmantTable from './DeportmentTable/DepartmantTable';\r\n\r\nexport default function DepartmansSettigns() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'departmentsettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'departmentsettings'} />} breadcrumbs={breadcrumbs}>\r\n        <DepartmantTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <DepartmentQueues reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport UserDepartmans from './UserDepartmans/UserDepartmans';\r\nimport UserTable from './UserTable/UserTable';\r\n\r\nexport default function UserSettings() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'usersettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'usersettings'} />} breadcrumbs={breadcrumbs}>\r\n        <UserTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <UserDepartmans reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport RoleTable from './RoleTable';\r\n\r\nexport default function RoleSettings() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'rolesettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'rolesettings'} />} breadcrumbs={breadcrumbs}>\r\n        <RoleTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTeamsUsers,\r\n  getCsOnlineVoiceRoutingPolicy,\r\n  getCsTenantDialplan,\r\n  getCsTeamsCallingPolicy,\r\n  changeCsTeamsCallingPolicy,\r\n  changeCsVoiceRoutingPolicy,\r\n  getUserDetailsByUserId,\r\n  changeCsTenantDiaplan,\r\n} from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Button,\r\n  AccordionActions,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Users() {\r\n  let [users, setUsers] = useState([]);\r\n  let [selecetedUser, setSelectedUser] = useState('');\r\n  let [selectedUserDetails, setSelectedUserDetails] = useState({\r\n    onlineVoiceRoutingPolicy: '-',\r\n    tenantDialPlan: '-',\r\n    teamsCallingPolicy: '-',\r\n    userPrincibleName: '-',\r\n  });\r\n\r\n  let [voiceRoutingPolicys, setVoiceRoutingPolicys] = useState([]);\r\n  let [selectedvoiceRoutingPolicy, setSelectedvoiceRoutingPolicy] = useState('');\r\n\r\n  let [tenantDiaplans, setTenantDiaplan] = useState([]);\r\n  let [selectedTenantDiaplans, setSelectedTenantDiaplans] = useState('');\r\n\r\n  let [teamsCallingPolicys, setTeamsCallingPolicy] = useState([]);\r\n  let [selectedTeamsCallingPolicy, setSelectedTeamsCallingPolicy] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getTeamsUsers({ token: localStorage.getItem('token') })\r\n      .then(result => {\r\n        setUsers(result.data.data);\r\n        getCsOnlineVoiceRoutingPolicy({\r\n          token: localStorage.getItem('token'),\r\n        }).then(res => {\r\n          setVoiceRoutingPolicys(res.data.data);\r\n          getCsTenantDialplan({\r\n            token: localStorage.getItem('token'),\r\n          }).then(res2 => {\r\n            setTenantDiaplan(res2.data.data);\r\n            getCsTeamsCallingPolicy({\r\n              token: localStorage.getItem('token'),\r\n            }).then(res3 => {\r\n              setTeamsCallingPolicy(res3.data.data);\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (selecetedUser !== '') {\r\n      getUserDetailsByUserId({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n      }).then(result => {\r\n        setSelectedUserDetails(result.data.data);\r\n      });\r\n    }\r\n  }, [selecetedUser]);\r\n\r\n  const handleChangeUserEmail = event => {\r\n    setSelectedUser(event.target.value);\r\n  };\r\n  const handleChangeVoiceRoutingPolicy = event => {\r\n    setSelectedvoiceRoutingPolicy(event.target.value);\r\n  };\r\n  const handleChangeTenantDiaplans = event => {\r\n    setSelectedTenantDiaplans(event.target.value);\r\n  };\r\n  const handleChangeTeamsCallingPolicy = event => {\r\n    setSelectedTeamsCallingPolicy(event.target.value);\r\n  };\r\n\r\n  const handleSubmitChangeTeamsCallingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTeamsCallingPolicy === '') {\r\n      NotificationManager.error('Teams Calling Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTeamsCallingPolicy !== '') {\r\n      changeCsTeamsCallingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        policyName: selectedTeamsCallingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeVoiceRoutingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedvoiceRoutingPolicy === '') {\r\n      NotificationManager.error('Voice Routing Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedvoiceRoutingPolicy !== '') {\r\n      changeCsVoiceRoutingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        voiceRoutingPolicy: selectedvoiceRoutingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeTenantDiaplan = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTenantDiaplans === '') {\r\n      NotificationManager.error('Tenant Diaplan must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTenantDiaplans !== '') {\r\n      changeCsTenantDiaplan({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        tenantDiaplan: selectedTenantDiaplans,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <NotificationContainer />\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Teams Calling Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"teamsCallingPolicy-label\">Teams Calling Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"teamsCallingPolicy-label\"\r\n                  id=\"teamsCallingPolicy\"\r\n                  value={selectedTeamsCallingPolicy}\r\n                  onChange={handleChangeTeamsCallingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>Teams Calling Policy</em>\r\n                  </MenuItem>\r\n                  {teamsCallingPolicys.map((teamsCallingPolicy, index) => (\r\n                    <MenuItem key={index} value={teamsCallingPolicy.callingPolicy}>\r\n                      {teamsCallingPolicy.callingPolicy}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTeamsCallingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Voice Routing Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"voiceRoutingPolicy-label\">Voice Routing Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"voiceRoutingPolicy-label\"\r\n                  id=\"voiceRoutingPolicy\"\r\n                  value={selectedvoiceRoutingPolicy}\r\n                  onChange={handleChangeVoiceRoutingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>VoiceRoutingPolicy</em>\r\n                  </MenuItem>\r\n                  {voiceRoutingPolicys.map((voiceRoutingPolicy, index) => (\r\n                    <MenuItem key={index} value={voiceRoutingPolicy.policyName}>\r\n                      {voiceRoutingPolicy.policyName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeVoiceRoutingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Tenant Diaplan</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"tenantDiaplan-label\">Tenant Diaplan</InputLabel>\r\n                <Select\r\n                  labelId=\"tenantDiaplan-label\"\r\n                  id=\"tenantDiaplan\"\r\n                  value={selectedTenantDiaplans}\r\n                  onChange={handleChangeTenantDiaplans}>\r\n                  <MenuItem value=\"\">\r\n                    <em>TenantDiaplan</em>\r\n                  </MenuItem>\r\n                  {tenantDiaplans.map((tenantDiaplan, index) => (\r\n                    <MenuItem key={index} value={tenantDiaplan.teanantDiaPlan}>\r\n                      {tenantDiaplan.teanantDiaPlan}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTenantDiaplan}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n        Değişim işlemlerinin sonuca yansıması biraz zaman alabilir.\r\n      </div>\r\n      <Card style={{ marginTop: '20px' }}>\r\n        <p style={{ textAlign: 'center', fontSize: '20px', padding: '10px' }}>Selected User Details</p>\r\n        <div style={{ padding: '10px' }}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>User Email</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.userPrincibleName}\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Teams Calling Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.teamsCallingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>Voice Routing Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.onlineVoiceRoutingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Tenant Diaplan</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.tenantDialPlan}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </div>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport configureStore, { history } from './redux/store';\r\nimport AppWrapper from './@jumbo/components/AppWrapper';\r\nimport AppContextProvider from './@jumbo/components/contextProvider/AppContextProvider';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport Routes from './routes';\r\n\r\nexport const store = configureStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <AppContextProvider>\r\n        <AppWrapper>\r\n          <Switch>\r\n            <Routes />\r\n          </Switch>\r\n        </AppWrapper>\r\n      </AppContextProvider>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Chrome_Logo.d60a042e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Firefox_Logo.5ab3328a.svg\";"],"sourceRoot":""}