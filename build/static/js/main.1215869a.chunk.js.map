{"version":3,"sources":["redux/reducers/Common.js","@jumbo/constants/ActionTypes.js","redux/reducers/Auth.js","redux/reducers/index.js","redux/store/index.js","theme/GlobalCss.js","@jumbo/constants/ThemeOptions.js","theme/defaultTheme.js","@jumbo/components/contextProvider/AppContextProvider/defaultContext.js","@jumbo/components/contextProvider/AppContextProvider/AppContext.js","i18n/entries/en-US.js","i18n/index.js","i18n/entries/fr_FR.js","redux/actions/Common.js","redux/actions/Auth.js","services/auth/index.js","services/auth/Basic/index.js","@coremat/CmtLayouts/LayoutContext.js","@coremat/CmtLayouts/Vertical/LayoutContextProvider/index.js","@coremat/CmtLayouts/Vertical/MainContainer.style.js","@coremat/CmtLayouts/Vertical/MainContainer.js","@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext.js","@coremat/CmtHelpers/JssHelper.js","@coremat/CmtLayouts/SidebarThemeContext/sidebarThemeColors.js","@coremat/CmtLayouts/SidebarThemeContext/index.js","@coremat/CmtLayouts/Vertical/index.js","@coremat/CmtLayouts/Vertical/Header.js","@coremat/CmtLayouts/Vertical/SidebarToggleHandler.js","@coremat/CmtImage/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/data.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/LanguageItem.js","@coremat/CmtCard/index.js","@coremat/CmtTypography/CmtTitle/index.js","@coremat/CmtTypography/CmtSubTitle/index.js","@coremat/CmtTypography/CmtContentHead/index.js","@coremat/CmtDropdownMenu/index.js","@coremat/CmtCard/CmtCardHeader.style.js","@coremat/CmtCard/CmtCardHeader.js","@coremat/CmtList/ListFooter.js","@coremat/CmtList/ListView.js","@coremat/CmtList/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/index.js","@coremat/CmtCard/CmtCardContent.js","@coremat/CmtGridView/GridView.js","@coremat/CmtGridView/GridFooter.js","@coremat/CmtGridView/index.js","@coremat/CmtAvatar/index.style.js","@coremat/CmtAvatar/index.js","@jumbo/components/AppLayout/partials/Header/AppsMenu.js","@coremat/CmtMediaObject/index.style.js","@coremat/CmtMediaObject/index.js","@jumbo/utils/dateHelper.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/NotificationItem.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/index.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/MessageItem.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/index.js","@jumbo/components/AppLayout/partials/Logo.js","@coremat/CmtSearch/index.style.js","@coremat/CmtSearch/index.js","@jumbo/components/AppLayout/partials/SearchPopover.js","@jumbo/components/AppLayout/partials/Header/index.js","@coremat/CmtLayouts/Vertical/Sidebar.style.js","@coremat/CmtDrawer/index.js","@coremat/CmtLayouts/Vertical/Sidebar.js","@jumbo/components/AppLayout/partials/SidebarHeader.js","@coremat/CmtNavigation/Vertical/NavMenuItem.js","@coremat/CmtNavigation/Vertical/NavCollapse.js","@coremat/CmtNavigation/Vertical/NavSection.js","@coremat/CmtNavigation/Vertical/index.js","@jumbo/utils/IntlMessages.js","@jumbo/components/AppLayout/partials/menus.js","@jumbo/components/AppLayout/partials/SideBar/index.js","@coremat/CmtLayouts/Vertical/Content.js","@jumbo/components/PageComponents/PageLoader.js","@jumbo/components/ContentLoader/index.js","@coremat/CmtLayouts/Vertical/Footer.js","@jumbo/components/AppLayout/partials/FooterLogo.js","@jumbo/components/AppLayout/partials/Footer.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalDefault/index.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalMinimal/index.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/Alerts.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/ActionBarDrawer.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/index.js","@coremat/CmtLayouts/Horizontal/LayoutContextProvider/index.js","@coremat/CmtLayouts/Horizontal/MainContainer.style.js","@coremat/CmtLayouts/Horizontal/MainContainer.js","@coremat/CmtLayouts/Horizontal/index.js","@coremat/CmtLayouts/Horizontal/Header/HeaderNav.js","@coremat/CmtLayouts/Horizontal/Header/HeaderTop.js","@coremat/CmtLayouts/Horizontal/Header/HeaderMain.js","@jumbo/components/AppLayout/partials/Header/HeaderLogin/index.js","@coremat/CmtLayouts/Horizontal/SidebarToggleHandler.js","@jumbo/components/AppLayout/partials/UserDropDown.js","@jumbo/components/AppLayout/partials/GlobalSearchForm.js","@jumbo/components/AppLayout/partials/Header/HeaderTop/index.js","@coremat/CmtLayouts/Horizontal/Header/index.js","@coremat/CmtLayouts/Horizontal/Sidebar.js","@coremat/CmtLayouts/Horizontal/Content.js","@coremat/CmtLayouts/Horizontal/Footer.js","@coremat/CmtNavigation/Horizontal/NavMenuItem.js","@coremat/CmtNavigation/Horizontal/NavCollapse.style.js","@coremat/CmtNavigation/Horizontal/NavCollapse.js","@coremat/CmtNavigation/Horizontal/NavMega.style.js","@coremat/CmtNavigation/Horizontal/NavMega.js","@coremat/CmtNavigation/Horizontal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDefault/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/MainHeader.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderTopMenus.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.js","@jumbo/components/AppLayout/index.js","@jumbo/components/AppWrapper/index.js","@jumbo/components/contextProvider/AppContextProvider/index.js","theme/themeColors.js","@jumbo/components/GridContainer/index.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@coremat/CmtCard/CmtCardFooter.js","@coremat/CmtAdvCard/index.style.js","@coremat/CmtAdvCard/index.js","@coremat/CmtAdvCard/CmtAdvCardContent.style.js","@coremat/CmtAdvCard/CmtAdvCardContent.js","@jumbo/components/Common/CryptoCard/CryptoCard.style.js","@jumbo/components/Common/DownloadApps/index.js","@jumbo/components/Common/CryptoCard/index.js","@jumbo/components/Common/CurrenyCalculator/index.js","@jumbo/components/Common/CodeViewerCard/MarkdownElement.js","@jumbo/components/Common/CodeViewerCard/HighlightedCode.js","@jumbo/utils/prism.js","@coremat/CmtCard/CmtCardActions.js","@jumbo/components/Common/CodeViewerCard/index.js","@jumbo/components/Common/StatisticsCard/index.js","routes/Pages/Dashboard/MissedCalls/MissedCallGraph.js","routes/Pages/Dashboard/MissedCalls/index.js","routes/Pages/Dashboard/InboundRules/InboundStyle.js","routes/Pages/Dashboard/InboundRules/InboundGraph.js","routes/Pages/Dashboard/InboundRules/index.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChart.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChartItem.js","routes/Pages/Dashboard/HeaderChartComponent/index.js","routes/Pages/Dashboard/OutboundCall/OutboundGraph.js","routes/Pages/Dashboard/OutboundCall/index.js","@jumbo/components/Common/CounterCard/index.js","api/api.js","routes/Pages/Dashboard/Extensions/index.js","routes/Pages/Dashboard/TrunksUp/index.js","routes/Pages/Dashboard/ActiveCallCount/index.js","services/auth/logout/index.js","routes/Pages/Dashboard/Tops/DashboardTop5AnsweredCalls.js","routes/Pages/Dashboard/Tops/DashboardTop5Inbound.js","routes/Pages/Dashboard/Tops/DashboardTop5Outbound.js","routes/Pages/Dashboard/Tops/DashboardTop5TalkTime.js","routes/Pages/Dashboard/Tops/index.js","routes/Pages/Dashboard/index.js","routes/Pages/404/index.js","@jumbo/components/Common/authComponents/AuthWrapper.js","@jumbo/components/Common/authComponents/SignIn.js","@jumbo/constants/AppConstants.js","routes/Auth/Login.js","routes/Pages/AgentStatus/Table/index.js","routes/Pages/AgentStatus/index.js","@jumbo/components/Common/authComponents/SignUp.js","routes/Auth/Register.js","routes/Pages/DroppedCall/Filter/DateFilter/index.js","routes/Pages/DroppedCall/Filter/index.js","routes/Pages/DroppedCall/Table/index.js","routes/Pages/DroppedCall/index.js","routes/Pages/DIDReport/Filter/DateFilter/index.js","routes/Pages/DIDReport/Filter/index.js","routes/Pages/DIDReport/Table/index.js","routes/Pages/DIDReport/index.js","@jumbo/components/Common/authComponents/ForgotPassword.js","routes/Auth/ForgotPassword.js","routes/Private/PrivateRouteLogin.js","routes/Private/NotPrivateRoute.js","routes/Pages/ServiceLevel/Filter/DateFilter/index.js","routes/Pages/ServiceLevel/Filter/index.js","routes/Pages/ServiceLevel/Table/index.js","routes/Pages/ServiceLevel/index.js","routes/Pages/AbandonedQueues/Filter/DateFilter/index.js","routes/Pages/AbandonedQueues/Filter/index.js","routes/Pages/AbandonedQueues/Table/index.js","routes/Pages/AbandonedQueues/Details/index.js","routes/Pages/AbandonedQueues/index.js","routes/Pages/RepetetiveCalls/Filter/DateFilter/index.js","routes/Pages/RepetetiveCalls/Filter/index.js","routes/Pages/RepetetiveCalls/AllCalls/index.js","routes/Pages/RepetetiveCalls/Model/index.js","routes/Pages/RepetetiveCalls/AnsweredCalls/index.js","routes/Pages/RepetetiveCalls/index.js","routes/Pages/WallBoard/QueueList/index.js","routes/Pages/WallBoard/AgentConnection/index.js","routes/Pages/WallBoard/AgentStatus/AgentStatus.js","routes/Pages/WallBoard/CallDetail/index.js","routes/Pages/WallBoard/AgentDetail/index.js","routes/Pages/WallBoard/index.js","routes/Pages/DailyLog/Filter/index.js","routes/Pages/DailyLog/Table/index.js","routes/Pages/DailyLog/Chart/index.js","routes/Pages/DailyLog/index.js","routes/Pages/CallComparison/Table/index.js","routes/Pages/CallComparison/Graph/index.js","routes/Pages/CallComparison/Filter/index.js","routes/Pages/CallComparison/index.js","routes/Pages/MonthlyLog/Filter/index.js","routes/Pages/MonthlyLog/Graph/graph.js","routes/Pages/MonthlyLog/Graph/index.js","routes/Pages/MonthlyLog/Table/index.js","routes/Pages/MonthlyLog/index.js","routes/Pages/ReturnedDropCall/Table/index.js","routes/Pages/ReturnedDropCall/Filter/index.js","routes/Pages/ReturnedDropCall/index.js","routes/Pages/AgentSessionReport/Filter/DateFilter/index.js","routes/Pages/AgentSessionReport/Filter/index.js","routes/Pages/AgentSessionReport/Table/index.js","routes/Pages/AgentSessionReport/Model/index.js","routes/Pages/AgentSessionReport/index.js","routes/Pages/IYS/Filter/index.js","routes/Pages/IYS/Table/index.js","routes/Pages/IYS/index.js","routes/Pages/MicrosoftTeams/Users/index.js","routes/Pages/MonthlyDetails/Filter/index.js","routes/Pages/MonthlyDetails/Table/index.js","routes/Pages/MonthlyDetails/Detail/index.js","routes/Pages/MonthlyDetails/index.js","routes/Pages/QueueAnswerReport/Filter/DateFilter/index.js","routes/Pages/QueueAnswerReport/Filter/index.js","routes/Pages/QueueAnswerReport/Table/index.js","routes/Pages/QueueAnswerReport/index.js","routes/Pages/AbondenedCalls/Filter/DateFilter/index.js","routes/Pages/AbondenedCalls/Filter/index.js","routes/Pages/AbondenedCalls/Table/index.js","routes/Pages/AbondenedCalls/index.js","routes/Pages/AgentCdrReport/Filter/index.js","routes/Pages/AgentCdrReport/Table/index.js","routes/Pages/AgentCdrReport/index.js","routes/Pages/DailySummaryReport/Filter/DateFilter/index.js","routes/Pages/DailySummaryReport/Filter/index.js","routes/Pages/DailySummaryReport/Modals/TotalCallModal.js","routes/Pages/DailySummaryReport/Modals/AnsweredCallModal.js","routes/Pages/DailySummaryReport/Modals/AbondenedCallModal.js","routes/Pages/DailySummaryReport/Modals/TransferCallModal.js","routes/Pages/DailySummaryReport/Modals/OutOfTimeModal.js","routes/Pages/DailySummaryReport/Modals/RonaCallModla.js","routes/Pages/DailySummaryReport/Modals/OutCallModal.js","routes/Pages/DailySummaryReport/Table/index.js","routes/Pages/DailySummaryReport/index.js","routes/Pages/InternalsSummaryReport/Filter/DateFilter/index.js","routes/Pages/InternalsSummaryReport/Filter/index.js","routes/Pages/InternalsSummaryReport/Table/index.js","routes/Pages/InternalsSummaryReport/index.js","routes/Pages/CallLog2/Filter/DateFilter/index.js","routes/Pages/CallLog2/Filter/Filters/index.js","routes/Pages/CallLog2/Filter/index.js","routes/Pages/CallLog2/CallDetails/index.js","routes/Pages/CallLog2/Table/index.js","routes/Pages/CallLog2/index.js","routes/Pages/CallTransferReport/Filter/DateFilter/index.js","routes/Pages/CallTransferReport/Filter/index.js","routes/Pages/CallTransferReport/Table/index.js","routes/Pages/CallTransferReport/index.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakNameModal.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakTimeModal.js","routes/Pages/EditBreaks/index.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["INIT_STATE","initialURL","error","message","loading","state","action","type","payload","authUser","loadUser","send_forget_password_email","history","combineReducers","router","connectRouter","common","Common","auth","Auth","createBrowserHistory","routeMiddleware","routerMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","store","createStore","reducers","thunk","HEADER_TYPE","SIDEBAR_TYPE","THEME_TYPES","LAYOUT_TYPES","breakpoints","createBreakpoints","values","xs","sm","md","lg","xl","theme","spacing","direction","palette","black","white","dark","primary","indigo","secondary","pink","sidebar","bgColor","textColor","textDarkColor","textActiveColor","navHoverBgColor","navActiveBgColor","borderColor","horizontalNav","navigationColor","navigationActiveColor","menuHoverBgColor","menuActiveBgColor","background","paper","default","text","disabled","hint","btn","hover","lightBtn","main","popupColor","status","danger","typography","fontFamily","fontWeightExtraLight","fontWeightLight","fontWeightRegular","fontWeightBold","fontWeightExtraBold","overrides","MuiTypography","h1","fontSize","fontWeight","up","h2","h3","h4","h5","h6","letterSpacing","subtitle1","subtitle2","body1","body2","MuiButton","root","MuiToggleButton","borderRadius","MuiCardLg","MuiCard","boxShadow","MuiTab","textColorPrimary","color","MuiPopover","backgroundColor","MuiDialog","defaultLng","languageId","locale","name","icon","layout","layoutType","themeType","drawerBreakPoint","headerType","sidebarType","isSidebarFixed","sidebarWidth","showFooter","AppContext","React","createContext","defaultContext","setLocale","EnLang","messages","enMessages","AppLocale","en","enLang","tr","saMessages","paddingClasses","marginClasses","count","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","marginRight","marginTop","marginBottom","globalStyles","makeStyles","boxSizing","margin","padding","a","textDecoration","pointerEvents","cursor","down","img","maxWidth","minHeight","overflowX","width","overflowY","border","whiteSpace","flex","display","flexDirection","alignItems","outline","transition","zIndex","flexWrap","darken","alpha","backgroundImage","fetchSuccess","dispatch","fetchError","setAuthUser","user","updateLoadUser","setForgetPassMailSent","AuhMethods","basic","onLogin","email","password","setTimeout","onLogout","localStorage","removeItem","getAuthUser","loaded","JSON","parse","getItem","onForgotPassword","getSocialMediaIcons","Fragment","LayoutContext","LAYOUT_STYLES","SIDEBAR_TYPES","HEADER_TYPES","sidebarFixed","headerFixed","LayoutContextProvider","props","location","useLocation","useState","layoutStyle","setLayoutStyle","setSidebarType","isSidebarOpen","setSidebarOpen","setHeaderType","showHeader","setShowHeader","setShowFooter","setSidebarWidth","setSidebarFixed","miniSidebarWidth","setMiniSidebarWidth","actionSidebarWidth","setActionSidebarWidth","useEffect","params","URLSearchParams","search","get","layoutContextValue","useMemo","showTourOpt","document","body","classList","remove","add","Provider","value","children","useStyles","appRoot","height","position","top","right","left","bottom","borderTopLeftRadius","appMain","appInnerRoot","appMainContainer","overflow","MainContainer","header","footer","className","rest","useContext","footerType","useTheme","isDrawer","useMediaQuery","headerClasses","setHeaderClasses","footerClasses","setFooterClasses","sidebarClasses","setSidebarClasses","classes","newClasses","push","clsx","Box","cloneElement","SidebarThemeContext","getBackgroundStyle","gradientDirection","backgroundRepeat","backgroundPosition","backgroundSize","Array","isArray","length","toString","split","join","getOverLayStyle","overlay","colors","opacity","getSeparatorStyle","separator","topBorder","borderWidth","borderStyle","borderTop","borderBottom","hexToRgba","input","replace","test","Error","first","second","last","toUpperCase","parseInt","isUrlInChildren","parent","url","i","link","includes","themeSidebarColor","light","darkThemeSetting","SidebarThemeProvider","activeTheme","setActiveTheme","sidebarContextValue","backgroundStyle","overlayStyle","sidebarTheme","setSidebarTheme","CmtVerticalLayout","layoutOptions","prototype","PropTypes","object","defaultProps","appHeader","CmtHeader","AppBar","SidebarToggleHandler","restProps","IconButton","onClick","CmtImage","alt","altValue","languageData","flags","LanguageItem","language","src","ml","cardOverlay","CmtCard","cardProps","backgroundStyles","overlayStyles","headerRef","useRef","childrenWithProps","Children","map","child","isValidElement","render","ref","Card","onMouseEnter","current","onHeaderMouseEntered","onMouseLeave","onHeaderMouseLeft","style","CmtTitle","content","titleProps","Typography","variant","component","CmtSubTitle","subTitleProps","gutterBottom","headRoot","avatar","headerContent","CmtContentHead","title","subTitle","titleStyle","subTitleStyle","memo","CmtDropdownMenu","TriggerComponent","items","onItemClick","anchorEl","setAnchorEl","menuItems","setMenuItems","open","Boolean","closeMenu","event","stopPropagation","currentTarget","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","item","index","MenuItem","key","selectedIndex","updatedItem","hasChange","newMenuItems","handleMenuItemClick","label","headerRoot","separatorStyles","headerAlignCenter","contentWidth","justifyContent","animationTimingFunction","transform","actionMenu","minWidth","actionMenuDefault","actionMenuAbsolute","textAlign","actionMenuHover","showActionMenu","animationName","animationDuration","hideActionMenu","showActionDefaultMenu","hideActionDefaultMenu","contentRef","createRef","ActionsMenu","actions","actionHandler","size","CmtCardHeader","forwardRef","actionMenuClassName","actionHandleIcon","actionsPos","actionsShowOnHover","alignCenter","showActions","setActionsVisibility","setContentWidth","contentHeadProps","showHideActionClass","headerRootClasses","menuRootClasses","menuRootActionsClasses","useImperativeHandle","clientWidth","listFooterRoot","listFooterLoaderRoot","ListFooter","footerText","CircularProgress","bool","string","ListView","renderRow","onEndReached","data","ListFooterComponent","ListEmptyComponent","useBottomScrollListener","getEmptyContainer","getFooterContainer","CmtList","footerProps","cardRoot","perfectScrollbarLanguage","menuItemRoot","popoverRoot","LanguageSwitcher","handleClose","id","undefined","switchLanguage","data-tut","Popover","CmtCardContent","CardContent","gridContainer","columnRow","itemPadding","columnCount","flexGrow","displayColumn","flexBasis","GridView","column","responsive","setDisplayColumn","getColumnCount","withWidth","footerWrapper","GridFooter","CmtGridView","getContrastText","amber","brown","red","green","blue","yellow","grey","orange","deepOrange","purple","customSize","small","medium","large","colorOptions","CmtAvatar","phCharLength","colorClass","Math","floor","random","sizeClass","classNames","placeHolderChar","substr","Avatar","iconRoot","applications","path","AppsMenu","useHistory","onClosePopOver","onClickApp","Tooltip","py","mt","appItem","mediaObject","mediaImageTop","alignSelf","mediaImageCenter","mediaImageBottom","rootAvatar","mediaBody","mediaHeader","mediaHeaderContent","mediaActions","mediaFooter","CmtMediaObject","avatarPos","avatarProps","onBodyClick","actionsComponent","contentProps","footerComponent","footerComponentProps","mr","clone","oneOfType","element","oneOf","func","getNewDate","date_","date","Date","year","getFullYear","month","getMonth","dt","getDate","getDateElements","dateSections","moment","format","day","time","datePart","trim","dateString","feedItemRoot","fade","titleRoot","icons","POSTING","SHARED_POST","INVITATION","BIRTHDAY","NotificationItem","profile_pic","metaData","post","getPostContent","owner","getSharedContent","group","getInvitationContent","getBirthdayContent","getTitle","counterRoot","warning","scrollbarRoot","headerNotifications","HeaderNotifications","counter","setCounter","pr","active","Badge","badgeContent","badge","p","subTitleRoot","textOverflow","MessageItem","HeaderMessages","Logo","Hidden","xsDown","to","smUp","menuButton","shape","align","searchIcon","inputRoot","inputInput","transitions","create","searchIconBox","CmtSearch","placeholder","iconPosition","onlyIcon","containerStyle","inputStyle","iconStyle","inputBaseStyle","inputBaseClasses","InputBase","inputProps","SearchPopover","iconClassName","popoverClassName","searchRoot","langRoot","borderLeft","iconBtn","Header","Toolbar","edge","aria-label","smDown","mdUp","appSidebar","appSidebarContent","actionSidebarWrapper","overlayRoot","drawerContainer","drawerContent","CmtDrawer","Drawer","CmtSidebarContent","CmtDrawerContent","CmtSidebar","actionBar","matches","hasDrawer","userInfo","userTitle","userSubTitle","SidebarHeader","useDispatch","handlePopoverClose","container","Paper","elevation","MenuList","navMenuItem","navMenuLink","borderTopRightRadius","borderBottomRightRadius","navText","NavMenuItem","List","navCollapseBtn","navCollapse","navCollapseBtnInner","navArrow","navCollapseItem","visibility","NavCollapse","isExpandable","setOpen","pathname","renderIcon","useCallback","MenuCollapse","ListItem","button","MenuItemChildren","Collapse","in","timeout","disablePadding","navHeader","textTransform","navSection","NavSection","sideNavMenu","CmtVertical","injectIntl","withRef","sidebarNavs","IntlMessages","Dashboard","Phone","ArrowForward","Assignment","Receipt","horizontalDefaultNavs","minimalHorizontalMenus","perfectScrollbarSidebar","SideBar","appMainContent","CmtContent","bgcolor","circularProgressRoot","PageLoader","SlideTransition","Slide","ContentLoader","useSelector","Snackbar","TransitionComponent","Alert","severity","appFooter","appFooterWrapper","CmtFooter","FooterLogo","logoUrl","btnRoot","Footer","showFooterOpt","VerticalDefault","VerticalMinimal","borderBottomLeftRadius","Alerts","iconMapping","success","minimalNoHeader","MinimalNoHeader","lgUp","actionSidebar","borderRight","divider","contentArea","ActionBarDrawer","activeOption","onIconClick","onDrawerClose","anchor","actionsList","initSidebarWidth","isDrawerOpen","setDrawerStatus","setActiveOption","option","sidebarHeader","ModernSideBar","mdDown","CmtHorizontalLayout","headerNav","CmtHeaderNav","headerTop","CmtHeaderTop","headerMain","CmtHeaderMain","loginSection","HeaderLogin","Button","Divider","orientation","isOpen","profileRoot","UserDropDown","inputGroup","inputGroupAppend","GlobalSearchForm","showCategories","setShowCategories","onHideCategories","inputText","endIcon","HeaderTop","appMainContentWrapper","handleClick","from","subCollapse","removeHistoryListening","listen","disableGutters","navMega","navMegaBtn","navMegaBtnInner","navMegaColumnsWrapper","navMegaColumn","navMegaColumnInner","navMegaColumnLabel","RenderIcon","NavMegaColumn","navMegaColumnItems","NavMega","totalItems","MenuItemColumns","horizontalNavMenu","CmtHorizontal","HorizontalDefault","appHeaderDark","borderLeftColor","HeaderMain","HorizontalDark","MainHeader","HorizontalMinimal","HeaderTopMenus","HorizontalTopMenu","AppLayout","showLayoutLoader","setLayoutLoader","jss","plugins","jssPreset","rtl","AppWrapper","muiTheme","createTheme","ThemeProvider","utils","MomentUtils","StylesProvider","CssBaseline","initialThemeValue","otherThemes","AppContextProvider","setTheme","setThemeType","setLayout","cardRadius","setCardRadius","setDirection","showTourGuide","setTourGuideStatus","contextValue","prevState","setAttribute","GridContainer","Grid","pageHeaderRoot","PageHeader","heading","breadcrumbComponent","mb","textSm","linkBlock","PageBreadcrumbs","Breadcrumbs","isActive","pxToRem","contentSidebar","flexShrink","pageFull","PageContainer","breadcrumbs","mountOnEnter","unmountOnExit","footerRoot","CmtCardFooter","advCardRoot","deepPurple","CmtAdvCard","advCardContent","gridOrder1","order","gridOrder2","CmtAdvCardContent","extraContent","columnSizes","reverseDir","alignCenterClass","blockClasses","blockFirst","blockSecond","extraContentRender","cardHeaderRoot","CryptoCard","amount","progress","headerSubTitle","textPrimary","mbSpace","wordBreak","WebkitOverflowScrolling","lineHeight","WebkitFontSmoothing","fill","borderCollapse","borderSpacing","fontWeightMedium","font","verticalAlign","maxHeight","flip","MarkdownElement","renderedMarkdown","other","more","dangerouslySetInnerHTML","__html","code","renderedCode","prismLanguage","prism","languages","tsx","jsx","diff","deleted","highlight","card","cardContent","cardContentInner","actionButtons","collapseStyle","cardHeader","cardBody","chartTitle","chartSubTitle","tooltip","MissedCallGraph","labelStyle","start_time","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeWidth","stackId","stroke","fillOpacity","MissedCall","handleChange","getDay","setParam","param","start","calculateYearOfTheDay","aria-controls","aria-haspopup","aria-expanded","Dehaze","MenuListProps","DateRange","total","InboundGraph","InboundRules","HeaderChart","canvas","ctx","getContext","_stroke","countInbound","countOutbound","countMissed","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","inbound","outbound","missed","labels","datasets","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","options","legend","scales","yAxes","ticks","beginAtZero","HeaderChartItem","searchAction","searchActionBar","cardContentRoot","badgeRoot","optionList","SiteTraffic","list","PhoneForwarded","OutboundGraph","OutboundCall","containerRoot","containerRootCenter","contentRoot","contentRootCenter","CounterCard","number","numberProps","labelProps","counterProps","end","useEasing","port","getInboundCalls","query","axios","token","getDidData","console","log","getDidDataCount","getDidNumbers","async","getMonthlyDetails","getMonthlyTotal","getAgentList","getMissedCalls","getOutboundCalls","getQueue","getRepetetiveAll","limit","allCallOffset","queue","didNumber","paramStart","paramFinish","getRepetetiveAllCount","getRepetetiveCallerDetails","callerNumber","getReturnedDropCall","agNum","qNum","getMontlyLog","paramMonth","paramBack","getCallComparison","paramDate","getCallComparisonDaily","getDailyLog","getDailyLogTable","getRepetetiveAnswered","answeredCallsOffset","getRepetetiveAnsweredCount","getAbandonedQueueCallsDetails","startDate","endDate","getAbandonedQueueCallsDetailsTotal","getAbondenedCalls","getAbondenedCallDetails","from_userpart","getAbandonedQueueCalls","getServiceLevel","getDropCall","getDropCallSummary","getDropCallCount","getRecording","dir","directory","filename","encodeURIComponent","response","getRecordingPath","getQueueList","pass","getAgentConnection","getAgentStatus","getAgentNumber","getQueueNumber","getDailyCallDetails","mydate","getBreakTime","getBreakName","setBreakName","breakName","breakId","setBreakTime","breakTime","breakNumber","getAgentDetails","agentNum","getAgentSession","getAgentSessionClicked","getInternalBreakTime","getAgentNumberV16","CryptoJS","AES","encrypt","getIYSReport","agent","startdate","enddate","getTeamsUsers","getCsOnlineVoiceRoutingPolicy","getCsTenantDialplan","getCsTeamsCallingPolicy","changeCsTeamsCallingPolicy","changeCsVoiceRoutingPolicy","changeCsTenantDiaplan","getUserDetailsByUserId","getQueueAnswerReport","queueNum","getQueueAnswerReportCount","getQueueAnswerReportSummary","getQueueAnswerReportSummaryTotal","getDailySummary","startTime","endTime","getDailySummaryTotal","getInternalsSummary","getInternalsSummaryLongestCalled","getInternalsSummaryLongestCaller","getInternalsSummaryLongestCalledAmount","getInternalsSummaryLongestCallerAmount","getAgentTotalCall","cte","getWallBoardVoiceMail","getWallBoardLongTime","getVersion","getWallBoardWaitingTime","getCallLog2","getCallLog2Total","getCallLog2TotalSummary","getCallLog2Count","getDashboardTops","getCallDetail","callid","getDailySummaryModalTotalCall","getDailySummaryModalAnsweredCall","getDailySummaryModalOutOfTime","getDailySummaryModalAbondenedCall","getDailySummaryModalTransferCall","getDailySummaryModalRonaCall","getCallTransferReport","selectedStartTime","selectedEndTime","getDailySummaryModalOutCall","TasksCounterCard","extensions","setExtensions","api","then","resp","activeExtension","totalExtension","GroupOutlined","String","Trunks","paramtotal","paramTrunksUp","totalTrunks","setTotalTrunks","trunksUp","setTrunksUp","ActiveCallCount","setactiveCount","Logout","DashboardTop5AnsweredCalls","convertTimeToApiString","timeString","setDate","toLocaleDateString","setStartTime","setEndTime","setData","selectedTime","setSelectedTime","selectTimeString","display_name","dn","LinearProgress","ButtonGroup","DashboardTop5Inbound","DashboardTop5Outbound","DashboardTop5TalkTime","totalseconds","sum","checkDots","QueryBuilder","DashboardTops","orderLg1","SamplePage","totalInbound","totalOutbound","totalMissed","inboundcalls","setInbound","outboundcalls","setOutbound","missedcalls","setMissedCalls","convertToLocalTime","catch","inboundObject","outboundObject","missedObject","times","d","some","fetchData","array","arr","sort","b","slice","max","MissedCalls","Extensions","HeaderChartComponent","errorNumber","textShadow","Error404","authWrap","authCard","AuthWrapper","authThumb","authContent","textFieldRoot","formcontrolLabelRoot","SignIn","method","wrapperVariant","loginState","setLoginState","myDate","onSubmit","setItem","alert","addNotification","setVersion","browser","regexp","window","navigator","userAgent","chrome","version","e","preventDefault","TextField","fullWidth","onChange","target","defaultValue","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Login","AgentTable","rows","curentLanguage","useIntl","field","headerName","CloudDownload","columns","pageSize","rowsPerPageOptions","localeText","toolbarExport","toolbarExportPrint","toolbarExportCSV","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnMenuFilter","columnMenuHideColumn","columnMenuShowColumns","noRowsLabel","footerRowSelected","componentsProps","pagination","labelRowsPerPage","AgentList","setResponse","dataValue","agentNumber","displayname","agentName","agentState","textCapital","textAcc","alrTextRoot","SignUp","setName","setEmail","setPassword","onRegister","Register","DropCallLogDateFilter","setStartTimeApi","setEndTimeApi","dateFilterOpen","setDateFilterOpen","timeFilterValue","setTimeFilterValue","setHours","setStartDate","setEndDate","setMonth","setFullYear","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","labelId","LocalizationProvider","dateAdapter","AdapterDateFns","enLocale","trLocale","DatePicker","newValue","renderInput","inputVariant","Filter","setLimit","setPage","setOffset","setCount","setResponseSummary","formatDate","hour","getHours","min","getMinutes","dateDifference","today","getTime","round","setParams","setLoading","queueList","q_num","DataTable","datalist","page","responseSummary","renderCell","time_start","end_time","time_end","ringing_time","ring_time","handleDowlandButtonClick","Modal","sx","hideFooter","TablePagination","backIconButtonProps","nextIconButtonProps","rowsPerPage","backIconButtonText","onPageChange","newPage","onRowsPerPageChange","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","to_char","Check","DroppedCall","DidReportDateFilter","setSelectedStartTime","setSelectedEndTime","notFirstReq","setNotFirstReq","setDidNumber","lighten","bullet","pos","didNumbers","setDidNumbers","FormControl","InputLabel","Select","did","conditiondata","CardActions","table","total_did_number","total_did","did_not_answered","did_answered","duration","answered","hourToSecond","secondToTime","addZero","currentLanguage","dataGridRows","did_number","act","PhoneInTalk","AccessTime","DIDReport","yesterday","dates","setDates","queryCount","alertRoot","ForgotPassword","timeOutStopper","clearTimeout","Link","href","ForgotPasswordPage","PrivateRouteLogin","Component","NotPrivateRoute","ServiceLevelDateFilter","queuelist","setQueueList","setQueue","handleChangeQueue","initialValues","queueCheck","handleSubmit","cnt","level","createData","ring","result","parseFloat","toFixed","percent","csvData","row","ServiceLevel","AbondenedQueuesDateFilter","setDetails","setDetailsTotal","setResponseCount","stringCount","res","ag_num","que","queues","responseCount","z","call_time","waiting_time","waiting","callerid","from_displayname","Details","details","detailsTotal","date_day","day_abandoned","total_waiting_time","total_waiting","totalcount","totalwaiting","AbandonedQueues","RepadativeCallsDateFilter","setallcalls","setAllCallOffset","setAnsweredCallOffset","setPageAnswered","setAnsweredLimit","answeredLimit","setAnsweredCalls","setResponseCaller","setAllCallCount","setAnsweredCallCount","didList","setDidList","AllCalls","allcalls","setCallerNumber","allCallCount","src_display_name","exportAllOpen","setExpotAllOpen","role","tabIndex","Model","responseCaller","AnsweredCalls","answeredcalls","answeredCallCount","RepetetiveCalls","pageAnswered","answeredCalls","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","QueueList","setQueueAmaunt","setQueueAmauntFunction","queAmaunt","waitingNumber","reloadValues","queueListTimeout","waitingTime","substring","queuName","queueNumber","AgentConnection","setCallAmaunt","setAgentAmaunt","setAgentNum","setAgentName","setValuesFunction","agentConnectionTimeout","callAmaunt","connectionNumber","setAgentNumFunction","connectionTime","AgentStatus","setBreakeAgentAmount","setLoginAgentAmount","now","agentStatusTimeout","breakeAgenAmaunt","loginAgentAmaunt","states","onClickUptateValuesFunction","statustime","CallDetail","queueAmaunt","agentAmaunt","breakeAgentAmaunt","callDetailTimeout","convertTime","totaltime","total_call","agent_to_agent_calls","outbound_calls","answered_inbound_calls","average","AgentDetail","dst_display_name","totalcall","answered_call","inbound_call_to_agent","outbound_call_to_agent","inboundtotaltime","outboundtotaltime","inboundaverage","outboundaverage","agentDetail","setAgentDetail","voiceMail","setVoiceMail","longTime","setLongTime","setWaitingTime","setValue","Tabs","Tab","a11yProps","TabPanel","hidden","WallBoard","setResponseTable","responseTable","totalCall","hour_log","totalMin","Chart","maximum","o","useScreenshot","quality","takeScreenShot","download","image","extension","createElement","createFileName","click","domain","angle","strokeDasharray","itemStyle","DailyLog","day_log","unit","hours","minutes","seconds","totalTime","averageTime","timeToSecond","scope","Graph","setGraphData","setResponseDaily","showTime","select","setSelect","choice","tempResponse","startsWith","respdata","DayLog","Count","TotalHour","TotalMinutes","TotalSeconds","Hour","Act","labelArray","reverse","daylog","totalDataArray","totalMins","totalSeconds","tempgroup","filter","el","j","CallComparison","responseDaily","graphData","selectedMonth","setSelectedMonth","setSum","months","selectboxdata","resultArray","tempArray","date_trunc","indexOf","customTooltip","ApplicationsGraph","pieData","CustomTooltip","toplam","nameKey","cx","cy","isAnimationActive","outerRadius","entry","aylar","formatDateExcel","toInteger","MonthlyLog","src_dn","dst_start_time","dst_end_time","dst_dn","setAgent","setQueues","agents","setAgents","ReturnedDropCall","respList","forEach","age","AgentSessionReportDateFilter","setAgentSession","qnum","setQnum","setClickedResponse","clickedAgent","responseBreak","setResponseBreak","break","queueSelect","setQueueSelect","agentSelect","setAgentSelect","breakSelect","setBreakSelect","handleChangeQueueSelect","handleChangeAgentSelect","handleBreakChange","agentSession","setClickedAgent","state_time","escapetime","clickedResponse","keys","Object","logout","m8072","m8073","m8074","m8075","m8076","m8077","m8078","m8079","AgentCDR","DateTimePicker","ampm","disableFuture","called","getSeconds","issuetime","IYS","Users","users","setUsers","selecetedUser","setSelectedUser","onlineVoiceRoutingPolicy","tenantDialPlan","teamsCallingPolicy","userPrincibleName","selectedUserDetails","setSelectedUserDetails","voiceRoutingPolicys","setVoiceRoutingPolicys","selectedvoiceRoutingPolicy","setSelectedvoiceRoutingPolicy","tenantDiaplans","setTenantDiaplan","selectedTenantDiaplans","setSelectedTenantDiaplans","teamsCallingPolicys","setTeamsCallingPolicy","selectedTeamsCallingPolicy","setSelectedTeamsCallingPolicy","res2","res3","userId","handleChangeUserEmail","userName","callingPolicy","AccordionActions","NotificationManager","policyName","voiceRoutingPolicy","tenantDiaplan","teanantDiaPlan","setTotalAgent","setTotalDid","selectedDate","formatDate2","dateArray","views","setSelectedDate","setCsvData","returnedTime","param1","param2","Param1Array","Param2Array","minute","calculateAverage","timeArray","averageSecond","totaloutbound","totalinbound","answeredinb","durationcalls","durationinbound","durationoutbound","averageTotal","averageInbound","averageOutbound","averageinbound","averageoutbound","Detail","totalAgent","totalDid","src_did","calldid","agentcall","MonthlyDetails","responseTotal","lastDay","dateFormat","queryTotal","resps","QueueAnswerReportDateFilter","setSummary","setSummaryTotal","setQueueNum","setSrc","setOrder","summed","setRowsPerPage","summaryTotal","dataUnit","talking","QueueAnswerReport","summary","waiting_act","count1","AbondenedCallsDateFilter","setColor","detail","setDetail","setTempArray","call","timeofevent","deta","calltime","AbondenedCalls","Stack","AgentCdrRportFilter","AgentCdrReportTable","AgentCdrReport","DailySummaryDateFilter","DailySummaryReportFilter","setDataTotal","TotalCallModal","handleTotalCallClose","answer_time","talk_time","AnsweredCallModal","handleAnsweredCallClose","AbondenedCallModal","handleAbondenedCallClose","TransferCallModal","handleTransferCallClose","caller","transferer","trasfered","OutOfTimeModal","handleOutOfTimeClose","RonaCallModla","handleRonaCallClose","OutCallModal","handleOutCallClose","DailySummaryReportTable","dataTotal","datetime","inboundtime","waitingtime","averageconnection","abondened","transfer","long_time","zdisi","average_abondened_waiting","rona","outbound_time","average_outbound_time","inboundTime","longestTime","outOfTime","averageAbondenedWaiting","outboundTotalTime","outboundAverageTime","totalCallModalOpen","setTotalCallOpen","totalCallDate","setTotalCallDate","handleTotalCallClick","answeredCallModalOpen","setAnsweredCallOpen","answeredCallDate","setAnsweredCallDate","handleAnsweredCallClick","abondenedCallModalOpen","setAbondenedCallOpen","abondenedCallDate","setAbondenedCallDate","handleAbondenedCallClick","transferCallModalOpen","setTransferCallOpen","transferCallDate","setTransferCallDate","handleTransferCallClick","outOfTimeModalOpen","setOutOfTimeModalOpen","outOfTimeDate","setOutOfTimeDate","handleOutOfTimeClick","ronaCallModalOpen","setRonaCallOpen","ronaCallDate","setRonaCallDate","handleRonaCallClick","outCallModalOpen","setOutCallOpen","outCallDate","setOutCallDate","handleOutCallClick","DailySumaryReport","InternalSummaryDateFilter","InternalsSummaryReportFilter","seletAgent","setSelectAgent","marginBlock","InternalsSummaryReportTable","selectedAgent","setSelectedAgent","modalOpen","setModalOpen","handleOpenModal","handleCloseModal","longestCalleds","setLongestCalleds","longestCallers","setLongestCallers","longestCalledAmount","setLongestAmount","longestCallerAmount","setLongestCallerAmount","longestBreakTime","setLongestBreakTime","total_inbound","answered_inbound","unanswered_inbound","total_outbound","answered_outbound","unanswered_outbound","ArrowBack","components","GridToolbarFilterButton","toolbarFilters","filterPanelColumns","filterPanelOperators","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIsEmpty","filterOperatorIsNotEmpty","en_uzun_aranan_numara","en_uzun_aranan_süre","en_uzun_arayan_numara","en_cok_aranan_numara","en_cok_arayan_numara","InternalsSummaryReport","CallLog2DateFilter","CallLog2therFilters","setSourceApi","setDestinationApi","setSourceFilterText","setDestinationFilterText","setAnswerStatus","handleSubmitFilter","filtersOpen","setFiltersOpen","sourceSelect","setSourceSelect","sourceFilterSelect","setSourceFilterSelect","sourceFilterTextValue","setSourceFilterTextValue","targetSelect","setTargetSelect","targetFilterSelect","setTargetFilterSelect","targetFilterTextValue","setTargetFilterTextValue","filter3Select","setFilter3Select","Star","helperText","Textsms","CallLog2Filter","setTotalData","setResponseTotalSummary","startTimeApi","endTimeApi","sourceApi","destinationApi","sourceFilterText","sourceFilterNumber","setSourceNumber","destinationFilterNumber","setDestinationFilterNumber","destinationFilterText","sourceDnMin","setSourceDnMin","sourceDnMax","setSourceDnMax","destinationDnMin","setDestinationDnMin","destinationDnMax","setDestinationDnMax","sourceDnLike","setSourceDnLike","destinationDnLike","setDestinationDnLike","answerStatus","totalString","stringTotalSummary","CallLog2CallDetail","callId","setTotalTime","ms","totalRingTime","setTotalRingTime","totalTalkTime","setTotalTalkTime","tempRingTime","tempTalkTime","callers","calleds","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","px","CallLog2Table","totalData","responseTotalSummary","setPath","str","lastIndexOf","tableData","call_id","coalesce","salable1","salable","rightMenu","setRightMenu","callIdEye","setCallIdEye","request","responseURL","err","PlayArrow","Clear","PhoneDisabled","rowHeight","not_answered","totalduration","averageduration","CallLog2","CallTransferReportDateFilter","CallTransferReport","BreaksChangeBreakNameModal","selectedBreakName","handleBreakNameModalClose","newName","setNewName","rep","BreaksChangeBreakTimeModal","logouttype","period","handleBreakTimeModalClose","newTime","setNewTime","EditBreaks","breaks","setBreaks","breakNameModalopen","setBreakNameModalOpen","selectedBreakId","setSelectedBreakId","setSelectedBreakName","handleClickName","breakTimeModalopen","setBreakTimeModalOpen","selectedLogoutType","setSelectedLogoutType","selectedBreakTime","setSelectedBreakTime","handleClickTime","logoutType","mola","molaAdı","iddn","Routes","CallLog","DidReport","App","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1215869a.chunk.js","sourcesContent":["import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  initialURL: '/',\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return { ...state, error: '', message: '', loading: true };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return { ...state, error: '', loading: false, message: action.payload };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return { ...state, loading: false, message: '', error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SHOW_MESSAGE = 'show_message';\r\nexport const HIDE_MESSAGE = 'hide_message';\r\nexport const FETCH_START = 'fetch_start';\r\nexport const FETCH_SUCCESS = 'fetch_success';\r\nexport const FETCH_ERROR = 'fetch_error';\r\n\r\nexport const UPDATE_AUTH_USER = 'update_auth_user';\r\nexport const UPDATE_LOAD_USER = 'update_load_user';\r\nexport const SEND_FORGET_PASSWORD_EMAIL = 'send_forget_password_email';\r\nexport const SIGNIN_GOOGLE_USER_SUCCESS = 'signin_google_user_success';\r\nexport const SIGNIN_FACEBOOK_USER_SUCCESS = 'signin_facebook_user_success';\r\nexport const SIGNIN_TWITTER_USER_SUCCESS = 'signin_twitter_user_success';\r\nexport const SIGNIN_GITHUB_USER_SUCCESS = 'signin_github_user_SUCCESS';\r\nexport const SIGNIN_USER_SUCCESS = 'signin_user_success';\r\nexport const SIGNOUT_USER_SUCCESS = 'signout_user_success';\r\n\r\nexport const SET_DASHBOARD_DATA = 'set_dashboard_data';\r\n\r\nexport const SET_TASK_CURRENT_USER = 'set_task_current_user';\r\nexport const SET_TASKS_DATA = 'set_tasks_data';\r\nexport const SET_TASK_LIST_DATA = 'set_task_list_data';\r\nexport const ADD_TASK = 'add_task';\r\nexport const DELETE_TASK = 'delete_task';\r\nexport const UPDATE_TASK = 'update_task';\r\nexport const SET_FILTER_DATA = 'set_filter_data';\r\nexport const ADD_TASK_LIST = 'add_task_list';\r\nexport const UPDATE_TASK_LIST = 'update_task_list';\r\nexport const DELETE_TASK_LIST = 'delete_task_list';\r\nexport const SET_TASK_DETAIL = 'set_task_detail';\r\nexport const SEND_MESSAGE = 'send_message';\r\nexport const TOGGLE_SIDEBAR_COLLAPSED = 'toggle_sidebar_collapsed';\r\nexport const GET_TASKS_COUNTS = 'get_tasks_counts';\r\n\r\n//mail app\r\nexport const GET_LABELS_LIST = 'get_labels_list';\r\nexport const GET_CONNECTIONS_LIST = 'get_connections_list';\r\nexport const GET_MAILS_LIST = 'get_mails_list';\r\nexport const UPDATE_MAIL_FOLDER = 'update_mail_folder';\r\nexport const UPDATE_MAIL_LABEL = 'upade_mail_label';\r\nexport const UPDATE_FAVORITE_STATUS = 'update_favorite_status';\r\nexport const UPDATE_READ_STATUS = 'update_read_status';\r\nexport const UPDATE_IMPORTANT_STATUS = 'update_important_status';\r\nexport const COMPOSE_MAIL = 'compose_mail';\r\nexport const SET_FILTER_TYPE = 'set_filter_type';\r\nexport const GET_SELECTED_MAIL = 'GET_SELECTED_MAIL';\r\nexport const UPDATE_SELECTED_MAIL = 'update_selected_mail';\r\nexport const NULLIFY_SELECTED_MAIL = 'nullify_selected_mail';\r\nexport const REPLY_TO_MAIL = 'reply_to_mail';\r\nexport const GET_MAIL_COUNTS = 'get_mail_count';\r\nexport const ADD_LABEL = 'add_label';\r\nexport const ADD_CONNECTION = 'add_connection';\r\nexport const REMOVE_CONNECTION = 'remove_connection';\r\n\r\nexport const SET_CHAT_USERS = 'set_chat_users';\r\nexport const SET_CONTACT_USERS = 'set_contact_users';\r\nexport const SET_CURRENT_USER = 'set_current_user';\r\nexport const SET_CONVERSATION_DATA = 'set_conversation_data';\r\nexport const SEND_NEW_CHAT_MESSAGE = 'send_new_chat_message';\r\nexport const SEND_NEW_MEDIA_MESSAGE = 'send_new_media_message';\r\n\r\n//Contact App\r\nexport const GET_CONTACTS_LIST = 'get_contacts_list';\r\nexport const SET_CURRENT_CONTACT = 'set_current_contact';\r\nexport const CREATE_CONTACT = 'create_contact';\r\nexport const UPDATE_STARRED_STATUS = 'update_starred_status';\r\nexport const DELETE_CONTACT = 'delete_contact';\r\nexport const UPDATE_CONTACT_LABEL = 'update_contact_label';\r\nexport const UPDATE_CONTACT = 'update_contact';\r\nexport const GET_CONTACT_COUNTS = 'get_contact_counts';\r\nexport const UPDATE_LABEL_ITEM = 'update_label_item';\r\nexport const DELETE_LABEL_ITEM = 'delete_label_item';\r\n\r\nexport const GET_USER_DETAIL = 'get_user_detail';\r\nexport const GET_FEED_POSTS = 'get_feed_posts';\r\nexport const CREATE_POST = 'create_post';\r\nexport const UPDATE_POST = 'update_post';\r\n\r\n// Users Module\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const DELETE_BULK_USERS = 'DELETE_BULK_USERS';\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  authUser: null,\r\n  loadUser: false,\r\n  send_forget_password_email: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loadUser: true,\r\n      };\r\n    }\r\n    case UPDATE_LOAD_USER: {\r\n      return {\r\n        ...state,\r\n        loadUser: action.payload,\r\n      };\r\n    }\r\n    case SEND_FORGET_PASSWORD_EMAIL: {\r\n      return {\r\n        ...state,\r\n        send_forget_password_email: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport Common from './Common';\r\nimport Auth from './Auth';\r\n\r\nexport default history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    common: Common,\r\n    auth: Auth,\r\n  });\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport reducers from '../reducers';\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const store = createStore(reducers(history), initialState, bindMiddleware([routeMiddleware, thunk]));\r\n  return store;\r\n}\r\nexport default configureStore;\r\nexport { history };\r\n","import { alpha, makeStyles, darken } from '@material-ui/core/styles';\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nlet paddingClasses = {};\r\nlet marginClasses = {};\r\nfor (let count = 1; count <= 8; count++) {\r\n  paddingClasses['.pt-' + count] = { paddingTop: count * 4 + 'px !important' };\r\n  paddingClasses['.pb-' + count] = { paddingBottom: count * 4 + 'px !important' };\r\n  paddingClasses['.pl-' + count] = { paddingLeft: count * 4 + 'px !important' };\r\n  paddingClasses['.pr-' + count] = { paddingRight: count * 4 + 'px !important' };\r\n  marginClasses[`.ml-${count}`] = { marginLeft: `${count * 4}px !important` };\r\n  marginClasses[`.mr-${count}`] = { marginRight: `${count * 4}px !important` };\r\n  marginClasses[`.mt-${count}`] = { marginTop: `${count * 4}px !important` };\r\n  marginClasses[`.mb-${count}`] = { marginBottom: `${count * 4}px !important` };\r\n}\r\n\r\nconst globalStyles = makeStyles(theme => ({\r\n  breakpoints,\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      '&:hover,&:focus': {\r\n        textDecoration: 'none',\r\n      },\r\n      '&.disable-link': {\r\n        pointerEvents: 'none',\r\n        cursor: 'default',\r\n        [theme.breakpoints.down('xs')]: {\r\n          pointerEvents: 'inherit',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n    },\r\n    '.pointer': {\r\n      cursor: 'pointer',\r\n    },\r\n    '.rounded': {\r\n      borderRadius: '50%',\r\n    },\r\n    '.Cmt-table-responsive': {\r\n      minHeight: '.01%',\r\n      overflowX: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n        marginBottom: 15,\r\n        overflowY: 'hidden',\r\n        border: `1px solid ${theme.palette.borderColor.main}`,\r\n        '& > table': {\r\n          marginBottom: 0,\r\n          '& > thead > tr > th': {\r\n            paddingTop: 8,\r\n          },\r\n          '& > thead > tr > th, > tbody > tr > th, > tfoot > tr > th, thead > tr > td, tbody > tr > td, tfoot > tr > td': {\r\n            whiteSpace: 'nowrap',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '.dropzone': {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(10, 5),\r\n      border: `2px dashed ${theme.palette.borderColor.main}`,\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default,\r\n      outline: 'none',\r\n      transition: 'border .24s ease-in-out',\r\n    },\r\n    '.swal2-shown .swal2-container': {\r\n      zIndex: 1104,\r\n    },\r\n    '.swal2-container .swal2-popup, .swal2-container .swal2-popup.swal2-toast': {\r\n      backgroundColor: theme.palette.popupColor.main,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-content, .swal2-container .swal2-title': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-footer a': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '.swal2-container .swal2-close:focus': {\r\n      outline: 'none',\r\n    },\r\n    // React Big Calendar\r\n    '.rbc-calendar': {\r\n      flex: 1,\r\n      minHeight: 'calc(100vh - 200px)',\r\n      [theme.breakpoints.down('xs')]: {\r\n        minHeight: 400,\r\n      },\r\n      [theme.breakpoints.down(710)]: {\r\n        '& .rbc-toolbar': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexWrap: 'nowrap',\r\n          alignItems: 'flex-start',\r\n          '& .rbc-toolbar-label': {\r\n            margin: '8px 0',\r\n            padding: 0,\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down(500)]: {\r\n        '& .rbc-toolbar': {\r\n          fontSize: 12,\r\n          '& button': {\r\n            padding: '5px 10px',\r\n          },\r\n        },\r\n      },\r\n      '& .rbc-event': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        minHeight: 50,\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      '& .rbc-event.rbc-selected': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.3),\r\n      },\r\n      '& .rbc-slot-selection': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.7),\r\n      },\r\n      '& .rbc-toolbar button:active, & .rbc-toolbar button.rbc-active': {\r\n        color: theme.palette.common.white,\r\n        backgroundImage: 'none',\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button:active:hover, & .rbc-toolbar button.rbc-active:hover, & .rbc-toolbar button:active:focus, & .rbc-toolbar button.rbc-active:focus': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n      '& .rbc-toolbar button:focus, & .rbc-toolbar button:hover': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-month-row': {\r\n        minHeight: 100,\r\n      },\r\n      '& .rbc-off-range-bg': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      },\r\n    },\r\n    ...paddingClasses,\r\n    ...marginClasses,\r\n  },\r\n}));\r\n\r\nexport default globalStyles;\r\n","export const DRAWER_BREAK_POINT = {\r\n  SX: 'sx',\r\n  SM: 'sm',\r\n  MD: 'md',\r\n};\r\n\r\nexport const HEADER_TYPE = {\r\n  FIXED: 'fixed',\r\n  STATIC: 'static',\r\n};\r\n\r\nexport const SIDEBAR_TYPE = {\r\n  FULL: 'full',\r\n  MINI: 'mini',\r\n  DRAWER: 'drawer',\r\n};\r\nexport const Fonts = {\r\n  PRIMARY: 'Normal',\r\n};\r\n\r\nexport const THEME_TYPES = {\r\n  DARK: 'dark',\r\n  SEMI_DARK: 'semi-dark',\r\n  LIGHT: 'light',\r\n};\r\n\r\nexport const LAYOUT_STYLES = {\r\n  BOXED: 'boxed',\r\n  FULL_WIDTH: 'full-width',\r\n  FRAMED: 'framed',\r\n};\r\n\r\nexport const LAYOUT_TYPES = {\r\n  VERTICAL_DEFAULT: 'vertical-default',\r\n  VERTICAL_MINIMAL: 'vertical-minimal',\r\n  VERTICAL_MINIMAL_NO_HEADER: 'vertical-minimal-no-header',\r\n  VERTICAL_MODERN_SIDEBAR: 'vertical-modern-sidebar',\r\n  HORIZONTAL_DEFAULT: 'horizontal-default',\r\n  HORIZONTAL_DARK: 'horizontal-dark',\r\n  HORIZONTAL_MINIMAL: 'horizontal-minimal',\r\n  HORIZONTAL_TOP_MENU: 'horizontal-top-menu',\r\n};\r\n\r\nexport const SIDEBAR_WIDTH = {\r\n  SMALL: 280,\r\n  DEFAULT: 304,\r\n  WIDE: 330,\r\n};\r\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\nimport { Fonts } from '../@jumbo/constants/ThemeOptions';\r\nimport { indigo, pink } from '@material-ui/core/colors';\r\n\r\nconst breakpoints = createBreakpoints({\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920,\r\n  },\r\n});\r\n\r\nconst defaultTheme = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  spacing: 4,\r\n  direction: 'ltr',\r\n  palette: {\r\n    type: 'light',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n      dark: '#020202',\r\n    },\r\n    primary: indigo,\r\n    secondary: pink,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    btn: {\r\n      hover: 'rgba(0, 0, 0, 0.08)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n  typography: {\r\n    fontFamily: Fonts.PRIMARY,\r\n    fontWeightExtraLight: 200,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightBold: 'bold',\r\n    fontWeightExtraBold: 800,\r\n  },\r\n  overrides: {\r\n    MuiTypography: {\r\n      h1: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 22,\r\n        },\r\n      },\r\n      h2: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n      h3: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 18,\r\n        },\r\n      },\r\n      h4: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n      },\r\n      h5: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n      },\r\n      h6: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.5,\r\n      },\r\n      subtitle1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.15,\r\n      },\r\n      subtitle2: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.1,\r\n      },\r\n      body1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.5,\r\n      },\r\n      body2: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.25,\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1.25,\r\n        fontSize: 13,\r\n      },\r\n    },\r\n    MuiToggleButton: {\r\n      root: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiCardLg: {\r\n      root: {\r\n        borderRadius: 10,\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: 4,\r\n        boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n      },\r\n    },\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default defaultTheme;\r\n","import defaultTheme from '../../../../theme/defaultTheme';\r\nimport {\r\n  DRAWER_BREAK_POINT,\r\n  HEADER_TYPE,\r\n  LAYOUT_STYLES,\r\n  LAYOUT_TYPES,\r\n  SIDEBAR_TYPE,\r\n  SIDEBAR_WIDTH,\r\n  THEME_TYPES,\r\n} from '../../../constants/ThemeOptions';\r\n\r\nexport default {\r\n  theme: defaultTheme,\r\n  defaultLng: {\r\n    languageId: 'turkish',\r\n    locale: 'tr',\r\n    name: 'Turkish',\r\n    icon: 'tr',\r\n  },\r\n  layout: LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR,\r\n  layoutType: LAYOUT_STYLES.FULL_WIDTH,\r\n  themeType: THEME_TYPES.LIGHT,\r\n  drawerBreakPoint: DRAWER_BREAK_POINT.MD,\r\n  headerType: HEADER_TYPE.FIXED,\r\n  sidebarType: SIDEBAR_TYPE.FULL,\r\n  isSidebarFixed: true,\r\n  sidebarWidth: SIDEBAR_WIDTH.DEFAULT,\r\n  showFooter: false,\r\n};\r\n","import React from 'react';\r\nimport defaultContext from './defaultContext';\r\n\r\nconst AppContext = React.createContext({\r\n  locale: defaultContext.defaultLng,\r\n  setLocale: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import enMessages from '../locales/en_US.json';\r\n\r\nconst EnLang = {\r\n  messages: {\r\n    ...enMessages,\r\n  },\r\n  locale: 'en-US',\r\n};\r\nexport default EnLang;\r\n","import enLang from './entries/en-US';\r\nimport trLang from './entries/fr_FR';\r\nconst AppLocale = {\r\n  en: enLang,\r\n  tr: trLang,\r\n};\r\n\r\nexport default AppLocale;\r\n","import saMessages from '../locales/fr_FR.json';\r\n\r\nconst saLang = {\r\n  messages: {\r\n    ...saMessages,\r\n  },\r\n  locale: 'tr-TR',\r\n};\r\nexport default saLang;\r\n","import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const fetchSuccess = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_SUCCESS,\r\n      payload: message || '',\r\n    });\r\n  };\r\n};\r\nexport const fetchError = error => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_ERROR,\r\n      payload: error,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStart = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_START,\r\n    });\r\n  };\r\n};\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const setAuthUser = user => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_AUTH_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLoadUser = loading => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_LOAD_USER,\r\n      payload: loading,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setForgetPassMailSent = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SEND_FORGET_PASSWORD_EMAIL,\r\n      payload: status,\r\n    });\r\n  };\r\n};\r\n","/*import Firebase from './firebase';\r\nimport JWTAuth from './jwt';*/\r\nimport BasicAuth from './Basic';\r\n\r\nexport const AuhMethods = {\r\n  /*firebase: Firebase,\r\n  jwtAuth: JWTAuth,*/\r\n  basic: BasicAuth,\r\n};\r\n","import { fetchError, fetchStart, fetchSuccess } from '../../../redux/actions';\r\nimport { setAuthUser, setForgetPassMailSent, updateLoadUser } from '../../../redux/actions/Auth';\r\nimport React from 'react';\r\n\r\nexport const BasicAuth = {\r\n  onLogin: ({ email, password }) => {\r\n    return dispatch => {\r\n      try {\r\n        dispatch(fetchStart());\r\n\r\n        setTimeout(() => {\r\n          const user = { name: 'Admin', email: email, password: password };\r\n          dispatch(fetchSuccess());\r\n          dispatch(setAuthUser(user));\r\n        }, 300);\r\n      } catch (error) {\r\n        dispatch(fetchError(error.message));\r\n      }\r\n    };\r\n  },\r\n  onLogout: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      dispatch(fetchSuccess());\r\n      localStorage.removeItem('login');\r\n      localStorage.removeItem('role');\r\n      localStorage.removeItem('agent');\r\n\r\n      dispatch(setAuthUser(null));\r\n    };\r\n  },\r\n\r\n  getAuthUser: (loaded = false) => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n      dispatch(updateLoadUser(loaded));\r\n\r\n      setTimeout(() => {\r\n        dispatch(fetchSuccess());\r\n        dispatch(setAuthUser(JSON.parse(localStorage.getItem('user'))));\r\n      }, 300);\r\n    };\r\n  },\r\n\r\n  onForgotPassword: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(true));\r\n        dispatch(fetchSuccess());\r\n      }, 300);\r\n    };\r\n  },\r\n  getSocialMediaIcons: () => {\r\n    return <React.Fragment> </React.Fragment>;\r\n  },\r\n};\r\n\r\nexport default BasicAuth;\r\n","import React from 'react';\r\n\r\n//todo set initial value of LayoutContextProvider\r\nconst LayoutContext = React.createContext();\r\n\r\nexport default LayoutContext;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const location = useLocation();\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false); //for both drawer and mini-sidebar\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  const [miniSidebarWidth, setMiniSidebarWidth] = useState(props.miniSidebarWidth ? props.miniSidebarWidth : 0);\r\n  const [actionSidebarWidth, setActionSidebarWidth] = useState(props.actionSidebarWidth ? props.actionSidebarWidth : 0);\r\n\r\n  useEffect(() => {\r\n    sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n    headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setLayoutStyle(params.get('layout-style'));\r\n    }\r\n  }, [location.search, props.headerType, props.isSidebarFixed]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      miniSidebarWidth,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n      setMiniSidebarWidth,\r\n      actionSidebarWidth,\r\n      setActionSidebarWidth,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      miniSidebarWidth,\r\n      actionSidebarWidth,\r\n      props.drawerBreakPoint,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.01s ease',\r\n    '&.Cmt-fixedHeaderLayout': {\r\n      '& $appMain': {\r\n        position: 'relative',\r\n        paddingTop: 72,\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingTop: '64px !important',\r\n        },\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: props.sidebarWidth,\r\n        zIndex: 9,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          left: 0,\r\n        },\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-fullFixedHeaderLayout': {\r\n      marginTop: 72,\r\n      height: 'calc(100vh - 72px)',\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: 64,\r\n        height: 'calc(100vh - 64px)',\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        width: '100%',\r\n      },\r\n    },\r\n    '&.Cmt-sidebar-fixed': {\r\n      '& .Cmt-sidebar': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 999,\r\n      },\r\n      '&.Cmt-drawer-sidebar': {\r\n        '& .Cmt-sidebar': {\r\n          position: 'relative',\r\n        },\r\n      },\r\n      '& .Cmt-actionSidebarWrapper': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 1103,\r\n        '& .Cmt-sidebar': {\r\n          position: 'static',\r\n        },\r\n      },\r\n    },\r\n    '& .Cmt-header .Cmt-toggle-menu': {\r\n      display: 'none',\r\n    },\r\n    '&.Cmt-miniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.miniSidebarWidth,\r\n        width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n        transition: 'all 0.01s ease',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.miniSidebarWidth + 20,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.miniSidebarWidth + 50,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-miniLayout': {\r\n      '& .Cmt-sidebar': {\r\n        width: props.miniSidebarWidth,\r\n      },\r\n    },\r\n    '&.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.sidebarWidth,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-drawerLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: 0,\r\n        width: '100%',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: 20,\r\n            width: 'calc(100% - 57px)',\r\n            right: 37,\r\n            top: 20,\r\n            borderTopLeftRadius: 12,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: 50,\r\n            width: 'calc(100% - 117px)',\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      '& .Cmt-header .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }),\r\n  appMain: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: `calc(100% - ${props.sidebarWidth}px)`,\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth,\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.miniSidebarWidth,\r\n    },\r\n    '.Cmt-drawerLayout &': {\r\n      width: '100%',\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-drawerLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: 0,\r\n    },\r\n    '.Cmt-fullMiniLayout &': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      width: `calc(100% - ${props.sidebarWidth + props.actionSidebarWidth}px)`,\r\n    },\r\n    '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth + props.actionSidebarWidth,\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      width: '100%',\r\n      '.Cmt-miniLayout &': {\r\n        width: '100%',\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: 0,\r\n      },\r\n      '.Cmt-drawerLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-fullMiniLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-modernLayout &': {\r\n        width: `100% !important`,\r\n      },\r\n      '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: '0 !important',\r\n      },\r\n    },\r\n  }),\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '.Cmt-sidebar-fixed &': {\r\n      flexDirection: 'column',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            position: 'sticky',\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout $appMain': {\r\n            paddingTop: 0,\r\n          },\r\n          '&.Cmt-miniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-drawerLayout.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, useContext, useEffect, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport useStyles from './MainContainer.style';\r\nimport { HEADER_TYPE } from '../../../@jumbo/constants/ThemeOptions';\r\n\r\nconst MainContainer = ({ header, sidebar, footer, children, className, ...rest }) => {\r\n  const {\r\n    headerType,\r\n    footerType,\r\n    sidebarType,\r\n    isSidebarOpen,\r\n    isSidebarFixed,\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  } = useContext(LayoutContext);\r\n\r\n  const theme = useTheme();\r\n  const isDrawer = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const [headerClasses, setHeaderClasses] = useState('');\r\n  const [footerClasses, setFooterClasses] = useState('');\r\n  const [sidebarClasses, setSidebarClasses] = useState('');\r\n\r\n  const classes = useStyles({\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!header) setHeaderClasses('');\r\n    else if (headerType === HEADER_TYPE.FIXED) setHeaderClasses('Cmt-fixedHeaderLayout');\r\n    else setHeaderClasses('');\r\n  }, [header, headerType]);\r\n\r\n  useEffect(() => {\r\n    if (!footer) setFooterClasses('');\r\n    else if (footerType === 'fixed') setFooterClasses('Cmt-FixedFooterLayout');\r\n    else setFooterClasses('');\r\n  }, [footer, footerType]);\r\n\r\n  useEffect(() => {\r\n    const newClasses = [];\r\n    if (!sidebar) newClasses.push('');\r\n    else if (sidebarType === 'drawer' || isDrawer) newClasses.push('Cmt-drawerLayout');\r\n    else if (sidebarType === 'mini') newClasses.push(isSidebarOpen ? 'Cmt-fullMiniLayout' : 'Cmt-miniLayout');\r\n\r\n    if (isSidebarFixed) newClasses.push('Cmt-sidebar-fixed');\r\n\r\n    setSidebarClasses(clsx(newClasses));\r\n  }, [sidebarType, isSidebarOpen, isDrawer, isSidebarFixed, sidebar]);\r\n\r\n  return (\r\n    <Box className={clsx(classes.appRoot, headerClasses, sidebarClasses, footerClasses, className)} {...rest}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {header && cloneElement(header, { type: headerType })}\r\n            {children}\r\n            {footer && cloneElement(footer, { type: footerType })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\n//todo set initial value of SidebarThemeContext\r\nconst SidebarThemeContext = React.createContext();\r\n\r\nexport default SidebarThemeContext;\r\n","const pxToRem = (target, context = '10px') => {\r\n  return (target / context) * '1rem';\r\n};\r\n\r\nconst componentColors = [\r\n  'amber',\r\n  'brown',\r\n  'orange',\r\n  'purple',\r\n  'primary',\r\n  'red',\r\n  'green',\r\n  'blue',\r\n  'grey',\r\n  'yellow',\r\n  'secondary',\r\n];\r\n\r\nconst getBackgroundStyle = (backgroundColor, backgroundImage, gradientDirection) => {\r\n  if (backgroundImage)\r\n    return {\r\n      backgroundImage: `url(${backgroundImage})`,\r\n      backgroundRepeat: `no-repeat`,\r\n      backgroundPosition: `center center`,\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n  if (typeof backgroundColor === 'string' || (Array.isArray(backgroundColor) && backgroundColor.length === 1)) {\r\n    return { backgroundColor: backgroundColor.toString() };\r\n  }\r\n\r\n  if (Array.isArray(backgroundColor) && backgroundColor.length > 1) {\r\n    const [firstColor] = backgroundColor[0].split(' ');\r\n    return {\r\n      backgroundColor: firstColor,\r\n      backgroundImage: gradientDirection\r\n        ? `linear-gradient(${gradientDirection}, ${backgroundColor.join(', ')})`\r\n        : `linear-gradient(${backgroundColor.join(', ')})`,\r\n    };\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getOverLayStyle = overlay => {\r\n  if (overlay.colors) {\r\n    if (typeof overlay.colors === 'string' || (Array.isArray(overlay.colors) && overlay.colors.length === 1)) {\r\n      return {\r\n        backgroundColor: overlay.colors.toString(),\r\n        opacity: overlay.opacity,\r\n      };\r\n    } else if (Array.isArray(overlay.colors) && overlay.colors.length > 1) {\r\n      const [firstColor] = overlay.colors[0].split(' ');\r\n      return {\r\n        backgroundColor: firstColor,\r\n        backgroundImage: overlay.direction\r\n          ? `linear-gradient(${overlay.direction}, ${overlay.colors.join(', ')})`\r\n          : `linear-gradient(${overlay.colors.join(', ')})`,\r\n        opacity: overlay.opacity,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getSeparatorStyle = (separator, topBorder = false) => {\r\n  if (separator.color) {\r\n    const borderWidth = separator.borderWidth ? separator.borderWidth : 1;\r\n    const borderStyle = separator.borderStyle ? separator.borderStyle : 'solid';\r\n\r\n    if (topBorder) {\r\n      return {\r\n        borderTop: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n      };\r\n    }\r\n\r\n    return {\r\n      borderBottom: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst hexToRgba = input => {\r\n  input = input + '';\r\n  input = input.replace('#', '');\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error('input is not a valid hex color.');\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return parseInt(first, 16) + ', ' + parseInt(second, 16) + ', ' + parseInt(last, 16);\r\n};\r\n\r\n/**\r\n * Check if the given url can be found\r\n * in one of the given parent's children\r\n *\r\n * @param parent\r\n * @param url\r\n * @returns {boolean}\r\n */\r\nconst isUrlInChildren = (parent, url) => {\r\n  if (!parent.children) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < parent.children.length; i++) {\r\n    if (parent.children[i].children) {\r\n      if (isUrlInChildren(parent.children[i], url)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (parent.children[i].link === url || url.includes(parent.children[i].link)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { hexToRgba, pxToRem, componentColors, getBackgroundStyle, getOverLayStyle, getSeparatorStyle, isUrlInChildren };\r\n","export const sidebarLightTheme = {\r\n  bgColor: '#fff',\r\n  textColor: 'rgba(0, 0, 0, 0.6)',\r\n  textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n  textActiveColor: '#3f51b5',\r\n  navHoverBgColor: 'rgb(229, 229, 229)',\r\n  navActiveBgColor: 'rgb(239, 229, 253)',\r\n  borderColor: 'rgba(33, 33, 33, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarSemiDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nconst themeSidebarColor = {\r\n  light: sidebarLightTheme,\r\n  'semi-dark': sidebarSemiDarkTheme,\r\n  dark: sidebarDarkTheme,\r\n};\r\n\r\nexport default themeSidebarColor;\r\n","import React, { useState, useMemo, useEffect, useContext } from 'react';\r\n\r\nimport SidebarThemeContext from './SidebarThemeContext';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../../CmtHelpers/JssHelper';\r\nimport AppContext from '../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport themeSidebarColor from './sidebarThemeColors';\r\n\r\nconst darkThemeSetting = {\r\n  textColor: 'rgba(255, 255, 255, 0.7)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.3)',\r\n  navActiveBgColor: 'green',\r\n  borderColor: 'rgba(255, 255, 255, 0.2)',\r\n};\r\n\r\nconst SidebarThemeProvider = ({ children }) => {\r\n  const { themeType } = useContext(AppContext);\r\n  const [activeTheme, setActiveTheme] = useState({\r\n    ...themeSidebarColor[themeType],\r\n    backgroundColor: '',\r\n    backgroundImage: '',\r\n    gradientDirection: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activeTheme.backgroundImage) {\r\n      if (!activeTheme.backgroundColor) {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...darkThemeSetting,\r\n          backgroundColor: '#000',\r\n        });\r\n      }\r\n    } else {\r\n      //this means no flat and gradient style and no background image\r\n      if (activeTheme.backgroundColor === '#000') {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...themeSidebarColor[themeType],\r\n          backgroundColor: '',\r\n        });\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTheme.backgroundImage]);\r\n\r\n  useEffect(() => {\r\n    if (!activeTheme.backgroundColor && !activeTheme.backgroundImage) {\r\n      setActiveTheme({\r\n        ...themeSidebarColor[themeType],\r\n      });\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [themeType]);\r\n\r\n  const sidebarContextValue = useMemo(() => {\r\n    const backgroundStyle = getBackgroundStyle(\r\n      activeTheme.backgroundColor,\r\n      activeTheme.backgroundImage,\r\n      activeTheme.gradientDirection,\r\n    );\r\n    const overlayStyle = getOverLayStyle({\r\n      colors: activeTheme.backgroundColor,\r\n      opacity: 0.6,\r\n      direction: '180deg',\r\n    });\r\n\r\n    return {\r\n      sidebarTheme: activeTheme,\r\n      backgroundStyle: backgroundStyle,\r\n      overlayStyle: overlayStyle,\r\n      setSidebarTheme: setActiveTheme,\r\n    };\r\n  }, [activeTheme]);\r\n\r\n  return <SidebarThemeContext.Provider value={sidebarContextValue}>{children}</SidebarThemeContext.Provider>;\r\n};\r\n\r\nexport default SidebarThemeProvider;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtVerticalLayout = ({ layoutOptions, children, header, sidebar, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} sidebar={sidebar} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nCmtVerticalLayout.prototype = {\r\n  layoutOptions: PropTypes.object,\r\n};\r\n\r\nCmtVerticalLayout.defaultProps = {\r\n  layoutOptions: {},\r\n};\r\n\r\nexport default CmtVerticalLayout;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { className, children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={clsx(classes.appHeader, className, 'Cmt-header')}>\r\n      {children}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'LayoutHeader',\r\n};\r\nCmtHeader.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n  fullHeader: PropTypes.bool,\r\n};\r\n\r\nexport default CmtHeader;\r\n","import React, { useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst SidebarToggleHandler = ({ children, ...restProps }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" onClick={() => setSidebarOpen(!isSidebarOpen)} {...restProps}>\r\n      {children || <MenuIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\n\r\nconst CmtImage = ({ alt, ...restProps }) => {\r\n  const altValue = alt ? alt : '';\r\n  return <img alt={altValue} {...restProps} />;\r\n};\r\n\r\nexport default CmtImage;\r\n","export const languageData = [\r\n  {\r\n    languageId: 'turkish',\r\n    locale: 'tr',\r\n    name: 'Turkish',\r\n    icon: 'tr',\r\n  },\r\n  {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'us',\r\n  },\r\n\r\n];\r\n\r\nexport const flags = {\r\n  tr: '/images/flag/icons8-turkey.png',\r\n  en: '/images/flag/icons8-usa.png',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '12px 24px',\r\n    '& .flag': {\r\n      fontSize: 30,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageItem = ({ language, onClick }) => {\r\n  const { locale, name } = language;\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.root, 'pointer')} onClick={() => onClick(language)}>\r\n      <CmtImage src={flags[locale]} />\r\n      <Box ml={3}>{name}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LanguageItem;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    '& .Cmt-card-content': {\r\n      position: 'relative',\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtCard = ({ backgroundColor, backgroundImage, gradientDirection, overlay, className, children, ...cardProps }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    // Checking isValidElement is the safe way and avoids a TS error too.\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={backgroundStyles}\r\n      {...cardProps}>\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtCard.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default CmtCard;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtTitle = ({ content, ...titleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...titleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'h2',\r\n  component: 'div',\r\n  className: null,\r\n};\r\n\r\nexport default CmtTitle;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtSubTitle = ({ content, ...subTitleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...subTitleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtSubTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtSubTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'subtitle1',\r\n  gutterBottom: true,\r\n};\r\n\r\nexport default CmtSubTitle;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headRoot: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 15,\r\n  },\r\n  headerContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\n/**\r\n * @return {null} or CmtContentHead Component\r\n */\r\nfunction CmtContentHead({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  titleStyle,\r\n  subTitleStyle,\r\n  ...restProps\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.headRoot, 'Cmt-content-head')} {...restProps}>\r\n      {avatar && isValidElement(avatar) ? (\r\n        <div className={clsx(classes.avatar, 'Cmt-avatar')}>{avatar}</div>\r\n      ) : (\r\n        icon && <div className={clsx(classes.avatar, 'Cmt-avatar')}>{icon}</div>\r\n      )}\r\n      <div className={clsx(classes.headerContent, 'Cmt-header-content')}>\r\n        {title && <CmtTitle className={clsx(titleStyle, 'Cmt-title')} content={title} {...titleProps} />}\r\n\r\n        {subTitle && <CmtSubTitle className={clsx(subTitleStyle, 'Cmt-sub-title')} content={subTitle} {...subTitleProps} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCmtContentHead.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n  titleStyle: PropTypes.string,\r\n  subTitleStyle: PropTypes.string,\r\n};\r\n\r\nCmtContentHead.defaultProps = {\r\n  icon: null,\r\n  avatar: null,\r\n  title: null,\r\n  subTitle: null,\r\n  titleStyle: null,\r\n  subTitleStyle: null,\r\n  titleProps: { variant: 'h4', component: 'div' },\r\n  subTitleProps: { variant: 'subtitle2', component: 'p', gutterBottom: false },\r\n};\r\n\r\nexport default React.memo(CmtContentHead);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst CmtDropdownMenu = ({ TriggerComponent, items, onItemClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    setMenuItems(items);\r\n  }, [items]);\r\n\r\n  const openMenu = event => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (item, selectedIndex, event) => {\r\n    event.stopPropagation();\r\n    let updatedItem = { ...item };\r\n\r\n    if (item.onClick && typeof item.onClick === 'function') {\r\n      updatedItem = item.onClick(item);\r\n    } else if (onItemClick && typeof onItemClick === 'function') {\r\n      updatedItem = onItemClick(item);\r\n    }\r\n\r\n    if (updatedItem) {\r\n      let hasChange = false;\r\n      const newMenuItems = menuItems.map((item, index) => {\r\n        if (selectedIndex === index) {\r\n          hasChange = true;\r\n          item = updatedItem;\r\n        }\r\n        return item;\r\n      });\r\n\r\n      if (hasChange) setMenuItems(newMenuItems);\r\n    }\r\n\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pointer\">\r\n        <TriggerComponent.type {...TriggerComponent.props} onClick={openMenu} />\r\n      </div>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n        {menuItems.map((item, index) => {\r\n          return (\r\n            <MenuItem key={index} disabled={item.disabled} onClick={event => handleMenuItemClick({ ...item }, index, event)}>\r\n              {item.icon}\r\n              <div className=\"ml-2\">{item.label}</div>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCmtDropdownMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  TriggerComponent: PropTypes.element.isRequired,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nexport default CmtDropdownMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: 24,\r\n    '&.Cmt-separator': {\r\n      ...props.separatorStyles,\r\n      '& + .Cmt-card-content': {\r\n        paddingTop: 24,\r\n      },\r\n    },\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  }),\r\n  headerAlignCenter: props => ({\r\n    paddingLeft: props.contentWidth + 12,\r\n    '& .Cmt-content-head': {\r\n      justifyContent: 'center',\r\n      '& .Cmt-header-content': {\r\n        flex: '0 0 auto',\r\n      },\r\n    },\r\n  }),\r\n  titleStyle: {\r\n    position: 'relative',\r\n  },\r\n  subTitleStyle: {\r\n    marginBottom: 0,\r\n    marginTop: 4,\r\n    fontSize: 12,\r\n    color: theme.palette.text.disabled,\r\n    letterSpacing: 0.4,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  '@keyframes showHide': {\r\n    '0%': {\r\n      animationTimingFunction: 'ease-in',\r\n      opacity: 0,\r\n      transform: 'scale(0)',\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      transform: 'scale(1)',\r\n    },\r\n  },\r\n  actionMenu: {\r\n    '& button': {\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n    },\r\n  },\r\n  actionMenuDefault: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 10,\r\n    '& .Cmt-action-menu-hover': {\r\n      top: '50%',\r\n    },\r\n  },\r\n  actionMenuAbsolute: {\r\n    position: 'relative',\r\n    paddingTop: 40,\r\n    '& .Cmt-action-menu': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      textAlign: 'center',\r\n      transition: 'all 0.25s ease',\r\n    },\r\n  },\r\n  actionMenuHover: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    transition: 'all 0.25s ease',\r\n  },\r\n  showActionMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -20%)',\r\n  },\r\n  hideActionMenu: {\r\n    transform: 'translate(100% , -100%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n  showActionDefaultMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -50%)',\r\n  },\r\n  hideActionDefaultMenu: {\r\n    transform: 'translate(100% , -50%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useImperativeHandle, useState, useEffect } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nimport useStyles from './CmtCardHeader.style';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst ActionsMenu = ({ actions, actionHandler, icon }) => {\r\n  return (\r\n    <CmtDropdownMenu\r\n      TriggerComponent={<IconButton size=\"small\">{icon || <MoreVertIcon />}</IconButton>}\r\n      items={actions}\r\n      onItemClick={actionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nconst CmtCardHeader = React.forwardRef(function CmtCardHeader(props, ref) {\r\n  const {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n    actions,\r\n    actionMenuClassName,\r\n    actionHandleIcon,\r\n    actionHandler,\r\n    actionsPos,\r\n    actionsShowOnHover,\r\n    backgroundColor,\r\n    gradientDirection,\r\n    separator,\r\n    alignCenter,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [showActions, setActionsVisibility] = useState(false);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const contentHeadProps = {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n  };\r\n\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator);\r\n\r\n  const classes = useStyles({ separatorStyles, contentWidth });\r\n\r\n  let showHideActionClass = showActions ? classes.showActionMenu : classes.hideActionMenu;\r\n  if (actionsPos === 'default') {\r\n    showHideActionClass = showActions ? classes.showActionDefaultMenu : classes.hideActionDefaultMenu;\r\n  }\r\n\r\n  const headerRootClasses = alignCenter\r\n    ? clsx(className, classes.headerRoot, classes.headerAlignCenter, separator.color ? 'Cmt-separator' : '')\r\n    : clsx(className, classes.headerRoot, separator.color ? 'Cmt-separator' : '');\r\n\r\n  const menuRootClasses = actionsShowOnHover\r\n    ? clsx(classes.actionMenu, classes.actionMenuHover, 'Cmt-action-menu-hover', showHideActionClass, actionMenuClassName)\r\n    : clsx(classes.actionMenu, 'Cmt-action-menu', actionMenuClassName);\r\n\r\n  const menuRootActionsClasses = actionsShowOnHover\r\n    ? actionsPos === 'default'\r\n      ? classes.actionMenuDefault\r\n      : ''\r\n    : classes.actionMenuDefault;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onHeaderMouseEntered: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(true);\r\n    },\r\n    onHeaderMouseLeft: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(false);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setContentWidth(contentRef.current ? contentRef.current.clientWidth : 0);\r\n  }, [actionsPos, actionsShowOnHover]);\r\n\r\n  return (\r\n    <div className={clsx(headerRootClasses, 'Cmt-header-root')} style={backgroundStyles} {...rest}>\r\n      {(icon || avatar || title || subTitle) && (\r\n        <CmtContentHead titleStyle={classes.titleStyle} subTitleStyle={classes.subTitleStyle} {...contentHeadProps} />\r\n      )}\r\n\r\n      {(actions.length > 0 || children) && (\r\n        <div ref={contentRef} className={clsx(menuRootActionsClasses, 'Cmt-action-default-menu')}>\r\n          {children}\r\n          {actions.length > 0 && (\r\n            <div style={{ marginLeft: '8px' }} className={menuRootClasses}>\r\n              <ActionsMenu actions={actions} actionHandler={actionHandler} icon={actionHandleIcon} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nCmtCardHeader.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actions: PropTypes.array, //example: [{label: \"Close\", icon: \"icon-slug\", onClick: (func optional), ...}, ...]\r\n  actionMenuClassName: PropTypes.string,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionsPos: PropTypes.oneOf(['default', 'top-corner']),\r\n  actionsShowOnHover: PropTypes.bool,\r\n  actionHandler: PropTypes.func,\r\n  alignCenter: PropTypes.bool,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtCardHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  actions: [],\r\n  actionsPos: 'default',\r\n  actionsShowOnHover: false,\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n  alignCenter: false,\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n  className: '',\r\n};\r\n\r\nexport default CmtCardHeader;\r\n","import React, { useContext } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CircularProgress, makeStyles } from '@material-ui/core';\r\nimport SidebarThemeContext from '../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  listFooterLoaderRoot: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: 'center',\r\n    padding: 8,\r\n    borderTop: props => `1px solid ${props.sidebarTheme.borderColor}`,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst ListFooter = ({ loading, footerText }) => {\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  return loading ? (\r\n    <div className={classes.listFooterLoaderRoot}>\r\n      <CircularProgress size={16} />\r\n      <span className=\"ml-2\">Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nListFooter.prototype = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n\r\nexport default ListFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  return null;\r\n};\r\n\r\nconst ListView = ({ renderRow, onEndReached, data, ListFooterComponent, ListEmptyComponent, ...rest }) => {\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <Box {...rest}>\r\n      {data.length > 0 ? data.map((item, index) => renderRow(item, index)) : getEmptyContainer(ListEmptyComponent)}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n\r\nListView.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\n\r\nListView.defaultProps = {\r\n  data: [],\r\n  onEndReached: () => {},\r\n};\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListFooter from './ListFooter';\r\nimport ListView from './ListView';\r\n\r\nconst CmtList = ({ footerProps, ...props }) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={footerProps && <ListFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CmtList;\r\n\r\nCmtList.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\nCmtList.defaultProps = {\r\n  data: [],\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport { IconButton, Popover, useTheme } from '@material-ui/core';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport LanguageItem from './LanguageItem';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags, languageData } from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 14,\r\n      paddingBottom: 14,\r\n    },\r\n  },\r\n  perfectScrollbarLanguage: {\r\n    height: 324,\r\n  },\r\n  menuItemRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 205,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageSwitcher = () => {\r\n  const classes = useStyles();\r\n  const { locale, setLocale } = useContext(AppContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'language' : undefined;\r\n\r\n  const switchLanguage = item => {\r\n    setLocale(item);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton size=\"small\" onClick={handleClick} data-tut=\"reactour__localization\">\r\n        <CmtImage src={flags[locale.locale]} />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Language\"\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <PerfectScrollbar className={classes.perfectScrollbarLanguage}>\r\n            <CmtList\r\n              data={languageData}\r\n              renderRow={(item, index) => <LanguageItem key={index} language={item} onClick={switchLanguage} />}\r\n            />\r\n          </PerfectScrollbar>\r\n        </CmtCard>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React from 'react';\r\nimport { CardContent, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: () => ({\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardContent = ({ children, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardContent className={clsx(classes.root, 'Cmt-card-content', className)} {...rest}>\r\n      {children}\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default CmtCardContent;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, makeStyles, withWidth } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridContainer: {\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  columnRow: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: `-${props.itemPadding / 2}px`,\r\n  }),\r\n  columnCount: props => ({\r\n    flexGrow: 0,\r\n    maxWidth: `${100 / props.displayColumn}%`,\r\n    flexBasis: `${100 / props.displayColumn}%`,\r\n    padding: `${props.itemPadding / 2}px`,\r\n    boxSizing: 'border-box',\r\n  }),\r\n}));\r\n\r\nconst getColumnCount = (responsive, width, column) => {\r\n  if (responsive) {\r\n    if (width === 'xs') {\r\n      return responsive.xs || column;\r\n    } else if (width === 'sm') {\r\n      return responsive.sm || responsive.xs || column;\r\n    } else if (width === 'md') {\r\n      return responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'lg') {\r\n      return responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'xl') {\r\n      return responsive.xl || responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    }\r\n  } else {\r\n    return column;\r\n  }\r\n};\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) {\r\n    return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) {\r\n    return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GridView = ({\r\n  width,\r\n  column,\r\n  responsive,\r\n  itemPadding,\r\n  renderRow,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  ...rest\r\n}) => {\r\n  const [displayColumn, setDisplayColumn] = useState(column);\r\n  const classes = useStyles({ displayColumn, itemPadding });\r\n\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisplayColumn(getColumnCount(responsive, width, column));\r\n  }, [width, column, responsive]);\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <div className={classes.gridContainer}>\r\n      <Box className={clsx(classes.columnRow, 'Cmt-column-row')} {...rest}>\r\n        {data.length > 0\r\n          ? data.map((item, index) => (\r\n              <div key={index} className={clsx(classes.columnCount, 'Cmt-column-count')}>\r\n                {renderRow(item, index)}\r\n              </div>\r\n            ))\r\n          : null}\r\n      </Box>\r\n      {data.length === 0 ? getEmptyContainer(ListEmptyComponent) : null}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(GridView);\r\nGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  responsive: PropTypes.object,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\nGridView.defaultProps = {\r\n  data: [],\r\n  itemPadding: 0,\r\n  column: 3,\r\n};\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  footerWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '8px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GridFooter = ({ loading, footerText }) => {\r\n  const classes = useStyles();\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.footerWrapper}>\r\n        <CircularProgress size={16} />\r\n        <span className=\"ml-2\">Loading...</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n        <p>{footerText}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nGridFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nGridFooter.defaultProps = {\r\n  loading: false,\r\n  footerText: '',\r\n};\r\n\r\nexport default GridFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GridView from './GridView';\r\nimport GridFooter from './GridFooter';\r\n\r\nconst CmtGridView = ({ column, itemPadding, ListEmptyComponent, data, onEndReached, renderRow, footerProps, ...rest }) => {\r\n  return (\r\n    <GridView\r\n      {...{\r\n        column,\r\n        itemPadding,\r\n        ListEmptyComponent,\r\n        data,\r\n        onEndReached,\r\n        renderRow,\r\n      }}\r\n      {...rest}\r\n      ListFooterComponent={footerProps && <GridFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nCmtGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\n\r\nCmtGridView.defaultProps = {\r\n  itemPadding: 0,\r\n  column: 3,\r\n  data: [],\r\n};\r\n\r\nexport default CmtGridView;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { amber, blue, brown, deepOrange, green, grey, purple, red, yellow } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n  primary: {\r\n    color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  secondary: {\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  amber: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: amber[500],\r\n  },\r\n  brown: {\r\n    color: '#ffffff',\r\n    backgroundColor: brown[500],\r\n  },\r\n  red: {\r\n    color: '#ffffff',\r\n    backgroundColor: red[500],\r\n  },\r\n  green: {\r\n    color: '#ffffff',\r\n    backgroundColor: green[500],\r\n  },\r\n  blue: {\r\n    color: '#ffffff',\r\n    backgroundColor: blue[500],\r\n  },\r\n  yellow: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: yellow[500],\r\n  },\r\n  grey: {\r\n    color: '#ffffff',\r\n    backgroundColor: grey[400],\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n  },\r\n  customSize: props => ({\r\n    height: props.size,\r\n    width: props.size,\r\n  }),\r\n  small: {\r\n    height: 40,\r\n    width: 40,\r\n  },\r\n  medium: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n  large: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { componentColors } from '../CmtHelpers/JssHelper';\r\nimport useStyles from './index.style';\r\n\r\nconst colorOptions = [...componentColors, 'random'];\r\n\r\nconst getRandomColor = () => {\r\n  return colorOptions[Math.floor(Math.random() * 11)];\r\n};\r\n\r\nconst CmtAvatar = React.forwardRef(({ src, alt, className, color, size, phCharLength, children, ...rest }, ref) => {\r\n  const classes = useStyles({ size: typeof size === 'number' ? size : 0 });\r\n  const colorClass = color === 'random' ? classes[getRandomColor()] : classes[color];\r\n  const sizeClass = typeof size === 'number' ? classes.customSize : classes[size];\r\n\r\n  const classNames = clsx(classes.root, colorClass, 'Cmt-avatar-size', sizeClass, className && className);\r\n\r\n  const placeHolderChar = alt && phCharLength > 0 ? alt.substr(0, phCharLength).toUpperCase() : null;\r\n\r\n  return (\r\n    <Avatar ref={ref} className={classNames} src={src} alt={alt} {...rest}>\r\n      {!src && !children && alt ? placeHolderChar : children}\r\n    </Avatar>\r\n  );\r\n});\r\n\r\nCmtAvatar.propTypes = {\r\n  color: PropTypes.oneOf(colorOptions),\r\n  phCharLength: PropTypes.number,\r\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n};\r\n\r\nCmtAvatar.defaultProps = {\r\n  color: 'grey',\r\n  phCharLength: 1,\r\n  size: 'medium',\r\n};\r\n\r\nexport default CmtAvatar;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CmtGridView from '../../../../../@coremat/CmtGridView';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst applications = [\r\n  {\r\n    name: 'Email',\r\n    icon: <EmailIcon style={{ color: '#0795F4' }} />,\r\n    bgColor: '#CDEAFD',\r\n    path: '/apps/mail',\r\n  },\r\n  {\r\n    name: 'Task',\r\n    icon: <CheckCircleIcon style={{ color: '#FF8C00' }} />,\r\n    bgColor: '#FFE8CC',\r\n    path: '/apps/to-do',\r\n  },\r\n  {\r\n    name: 'Contacts',\r\n    icon: <ContactMailIcon style={{ color: '#8DCD03' }} />,\r\n    bgColor: '#E8F5CD',\r\n    path: '/apps/contact',\r\n  },\r\n  {\r\n    name: 'Chating',\r\n    icon: <ChatIcon style={{ color: '#6200EE' }} />,\r\n    bgColor: '#E0CCFC',\r\n    path: '/apps/chat',\r\n  },\r\n];\r\n\r\nconst appItem = (item, index, onClick) => {\r\n  return (\r\n    <Box\r\n      key={index}\r\n      py={2}\r\n      className=\"pointer\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      onClick={() => onClick(item.path)}>\r\n      <CmtAvatar style={{ backgroundColor: item.bgColor }} size={62}>\r\n        {item.icon}\r\n      </CmtAvatar>\r\n      <Box mt={5} fontSize={16} fontWeight=\"bold\" color=\"#666666\">\r\n        {item.name}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst AppsMenu = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const onClickApp = path => {\r\n    history.push(path);\r\n    onClosePopOver();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Applications\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <AppsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Applications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {applications.length > 0 ? (\r\n              <CmtGridView\r\n                itemPadding={24}\r\n                column={2}\r\n                data={applications}\r\n                renderRow={(item, index) => appItem(item, index, onClickApp)}\r\n              />\r\n            ) : (\r\n              <Typography variant=\"body2\">No applications found</Typography>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mediaObject: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n  },\r\n  mediaImageTop: {\r\n    alignSelf: 'flex-start',\r\n    marginTop: 12,\r\n  },\r\n  mediaImageCenter: {\r\n    alignSelf: 'center',\r\n  },\r\n  mediaImageBottom: {\r\n    marginBottom: 12,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rootAvatar: {\r\n    height: 60,\r\n    width: 60,\r\n  },\r\n  mediaBody: {\r\n    flex: '1 1 0%',\r\n  },\r\n  mediaHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  mediaHeaderContent: {\r\n    flex: 1,\r\n  },\r\n  mediaActions: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  mediaFooter: {\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../CmtTypography';\r\nimport useStyles from './index.style';\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst CmtMediaObject = ({\r\n  avatar,\r\n  avatarPos,\r\n  avatarProps,\r\n  onBodyClick,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  actionsComponent,\r\n  content,\r\n  contentProps,\r\n  footerComponent,\r\n  footerComponentProps,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.mediaObject, className, 'Cmt-media-object')} {...rest}>\r\n      {avatar && (\r\n        <div\r\n          className={clsx(\r\n            {\r\n              [classes.mediaImageTop]: avatarPos === 'top',\r\n              [classes.mediaImageCenter]: avatarPos === 'center',\r\n              [classes.mediaImageBottom]: avatarPos === 'bottom',\r\n            },\r\n            'Cmt-media-image',\r\n          )}>\r\n          <Box mr={3} clone>\r\n            {isValidElement(avatar) ? (\r\n              avatar\r\n            ) : (\r\n              <CmtAvatar className={clsx(classes.rootAvatar, 'Cmt-avatar')} src={avatar} {...avatarProps} />\r\n            )}\r\n          </Box>\r\n        </div>\r\n      )}\r\n      <div className={clsx(classes.mediaBody, 'Cmt-media-body')} onClick={onBodyClick}>\r\n        <div className={clsx(classes.mediaHeader, 'Cmt-media-header')}>\r\n          <div className={clsx(classes.mediaHeaderContent, 'Cmt-media-header-content')}>\r\n            {title && <CmtTitle content={title} {...titleProps} />}\r\n            {subTitle && <CmtSubTitle content={subTitle} {...subTitleProps} />}\r\n          </div>\r\n          {actionsComponent && (\r\n            <div className={clsx(classes.mediaActions, 'Cmt-media-actions', 'ml-3')}>{actionsComponent}</div>\r\n          )}\r\n        </div>\r\n        {content && (\r\n          <div className=\"mb-3\">\r\n            {typeof content === 'string' ? <Typography {...contentProps}>{content}</Typography> : content}\r\n          </div>\r\n        )}\r\n        {children}\r\n      </div>\r\n      {footerComponent && (\r\n        <Box ml={3} className={clsx(classes.mediaFooter, 'Cmt-media-footer')} {...footerComponentProps}>\r\n          {footerComponent}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtMediaObject.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarPos: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n  avatarProps: PropTypes.object,\r\n  onBodyClick: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actionsComponent: PropTypes.element,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  contentProps: PropTypes.object,\r\n  footerComponent: PropTypes.element,\r\n  footerComponentProps: PropTypes.object,\r\n  className: PropTypes.func,\r\n};\r\n\r\nCmtMediaObject.defaultProps = {\r\n  avatar: '',\r\n  avatarPos: 'top',\r\n  title: '',\r\n  titleProps: {\r\n    variant: 'h3',\r\n    component: 'div',\r\n  },\r\n  subTitle: '',\r\n  subTitleProps: {\r\n    component: 'span',\r\n  },\r\n  content: '',\r\n  contentProps: {\r\n    component: 'div',\r\n    variant: 'body2',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtMediaObject);\r\n","import moment from 'moment';\r\n\r\nexport const getTodayDate = (format = 'DD.MM.YYYY') => {\r\n  return moment().format(format);\r\n};\r\n\r\nexport const getYesterdayDate = () => {\r\n  return moment()\r\n    .subtract(1, 'day')\r\n    .format('DD.MM.YYYY');\r\n};\r\n\r\nexport const timeFromNow = date => {\r\n  const timestamp = moment(date).format('X');\r\n  const newDate = moment.unix(timestamp);\r\n  return moment(newDate).fromNow();\r\n};\r\n\r\nexport const isToday = date => {\r\n  return moment().isSame(date, 'day');\r\n};\r\n\r\nexport const getNewDate = date_ => {\r\n  var date = new Date(date_);\r\n  var year = date.getFullYear();\r\n  var month = date.getMonth() + 1;\r\n  var dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return dt + '-' + month + '-' + year;\r\n};\r\n\r\nexport const getDateElements = date => {\r\n  const dateString = moment(date).format('dddd, MMMM DD YYYY, hh:mm A');\r\n  const dateSections = dateString.split(',');\r\n  const day = dateSections[0];\r\n  const time = dateSections[2];\r\n  const datePart = dateSections[1].trim().split(' ');\r\n  return {\r\n    day,\r\n    time,\r\n    date: {\r\n      dateString: dateSections[1],\r\n      month: datePart[0],\r\n      date: datePart[1],\r\n      year: datePart[2],\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTime = date => {\r\n  const dateObj = moment(date, 'dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(dateObj).format('LT');\r\n};\r\n\r\nexport const isDatesSame = (dateA, dateB) => {\r\n  return moment(dateA).isSame(dateB, 'day');\r\n};\r\n\r\nexport const isDateAfter = date => {\r\n  const todayDate = getTodayDate('dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(todayDate).isAfter(date);\r\n};\r\n\r\nexport const getDateinDesiredFormat = (date, format) => {\r\n  return moment(date).format(format);\r\n};\r\n\r\nexport const makeJSDateObject = date => {\r\n  if (date) {\r\n    return new Date(date.getTime());\r\n  }\r\n  return date;\r\n};\r\n\r\n/**\r\n * Get Formatted Date\r\n * @param date\r\n * @param format\r\n * @returns {string}\r\n */\r\nexport const getFormattedDate = (date, format = 'YYYY-MM-DD') => {\r\n  if (moment(date, 'YYYY-MM-DD').isValid()) {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\n/**\r\n * Check Is dateTime of Tomorrow\r\n * @param inputDateTime\r\n * @returns {boolean}\r\n */\r\nexport const isTomorrow = inputDateTime => {\r\n  const tomorrow = moment()\r\n    .add(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(tomorrow, 'day');\r\n};\r\n\r\n/**\r\n * Check Is dateTime of Yesterday\r\n * @param inputDateTime\r\n * @returns {boolean}\r\n */\r\nexport const isYesterday = inputDateTime => {\r\n  const yesterday = moment()\r\n    .subtract(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(yesterday, 'day');\r\n};\r\n\r\n/**\r\n * Get Custom Date Time\r\n * @param value\r\n * @param unit\r\n * @param format\r\n * @returns {string}\r\n */\r\nexport const getCustomDateTime = (value = 0, unit = 'days', format = 'YYYY-MM-DD') => {\r\n  if (value === 0) {\r\n    return moment().format(format);\r\n  } else {\r\n    return moment()\r\n      .add(value, unit)\r\n      .format(format);\r\n  }\r\n};\r\n\r\n/**\r\n * Get Custom Date object\r\n * @param value\r\n * @param unit\r\n * @returns Date object\r\n */\r\nexport const getCustomDateObject = (value = 0, unit = 'days') => {\r\n  if (value === 0) {\r\n    return moment();\r\n  } else {\r\n    return moment().add(value, unit);\r\n  }\r\n};\r\n\r\nexport const getDateText = date => {\r\n  if (isToday(date)) {\r\n    return 'Today';\r\n  } else if (isYesterday(date)) {\r\n    return 'Yesterday';\r\n  } else if (isTomorrow(date)) {\r\n    return 'Tomorrow';\r\n  } else {\r\n    return date;\r\n  }\r\n};\r\n\r\nexport const getTimeDiffString = (date, format = 'DD MMM, YYYY', suffix = '') => {\r\n  const postDate = moment(date, 'ddd MMM DD YYYY kk:mm:ss Z');\r\n  const currentDate = moment();\r\n  const duration = moment.duration(currentDate.diff(postDate));\r\n  const minutes = duration.asMinutes() | 0;\r\n  const hours = duration.asHours() | 0;\r\n\r\n  switch (true) {\r\n    case minutes === 0:\r\n      return 'Just now';\r\n    case minutes < 60:\r\n      return `${minutes} min ${suffix}`;\r\n    case hours < 24:\r\n      return `${hours} hours ${suffix}`;\r\n    default:\r\n      return postDate.format(format);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { fade } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    marginBottom: 6,\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst icons = {\r\n  POSTING: <MessageIcon style={{ color: '#836AFF' }} />,\r\n  SHARED_POST: <ShareIcon style={{ color: '#0795F4' }} />,\r\n  INVITATION: <EmailIcon style={{ color: '#00C4B4' }} />,\r\n  BIRTHDAY: <CakeIcon style={{ color: '#EF933C' }} />,\r\n};\r\n\r\nconst getPostContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has recently posted an\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      {item.metaData.post.type}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getSharedContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has shared\r\n    </Box>\r\n    <Box component=\"span\" ml={1} color=\"primary.main\">\r\n      {`${item.metaData.post.owner.name}'s`}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      post.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getBirthdayContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has birthday today.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getInvitationContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.metaData.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has sent you a group invitation for\r\n    </Box>\r\n    <Box component=\"span\" color=\"blue\" ml={1}>\r\n      {item.metaData.group.name}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst NotificationItem = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const getTitle = (item, classes) => {\r\n    switch (item.type) {\r\n      case 'POSTING':\r\n        return getPostContent(item, classes);\r\n      case 'SHARED_POST':\r\n        return getSharedContent(item, classes);\r\n      case 'INVITATION':\r\n        return getInvitationContent(item, classes);\r\n      case 'BIRTHDAY':\r\n        return getBirthdayContent(item, classes);\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getSubTitle = () => (\r\n    <Box display=\"flex\" alignItems=\"center\" fontSize={12} color=\"text.disabled\">\r\n      <Box fontSize={16} clone>\r\n        {icons[item.type]}\r\n      </Box>\r\n      <Box ml={2}>{getDateElements(item.date).time}</Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={getTitle(item, classes)}\r\n        subTitle={getSubTitle()}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, makeStyles, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\n\r\nimport NotificationItem from './NotificationItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &.active': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst headerNotifications = [];\r\n\r\nconst HeaderNotifications = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCounter(0);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Box pr={2}>\r\n      <Tooltip title=\"Notifications\">\r\n        <IconButton\r\n          onClick={onOpenPopOver}\r\n          className={clsx(classes.iconRoot, 'Cmt-appIcon', {\r\n            active: counter > 0,\r\n          })}>\r\n          <Badge badgeContent={counter} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Notifications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {headerNotifications.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList\r\n                  data={headerNotifications}\r\n                  renderRow={(item, index) => <NotificationItem key={index} item={item} />}\r\n                />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No notifications found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderNotifications;\r\n","import React from 'react';\r\nimport { Box, fade } from '@material-ui/core';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-header-content': {\r\n      width: 'calc(100% - 75px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-actions': {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    fontSize: 14,\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer',\r\n  },\r\n  subTitleRoot: {\r\n    letterSpacing: 0.4,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst MessageItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={item.user.name}\r\n        titleProps={{ className: classes.titleRoot }}\r\n        subTitle={item.message}\r\n        subTitleProps={{ className: classes.subTitleRoot }}\r\n        actionsComponent={\r\n          <Box fontSize={12} color=\"text.disabled\">\r\n            {getDateElements(item.date).time}\r\n          </Box>\r\n        }>\r\n        <Box display=\"flex\" alignItems=\"center\" mt={2} fontSize={12} color=\"text.secondary\">\r\n          <Box display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <ReplyIcon />\r\n            </Box>\r\n            <Box ml={2}>Reply</Box>\r\n          </Box>\r\n          <Box ml={4} display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <CheckCircleOutlineIcon />\r\n            </Box>\r\n            <Box ml={2}>Read</Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtMediaObject>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport MessageItem from './MessageItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst messages = [];\r\nconst HeaderMessages = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Messages\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Messages\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {messages.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList data={messages} renderRow={(item, index) => <MessageItem key={index} item={item} />} />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No messages found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderMessages;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst Logo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n  const logoSymbolUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <Hidden xsDown>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoSymbolUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: props => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    marginLeft: props.align === 'right' ? 'auto' : 0,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }),\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&.right': {\r\n      left: 'auto',\r\n      right: 0,\r\n      '& + $inputRoot $inputInput': {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(2, 2, 2, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: 162,\r\n    height: 35,\r\n    borderRadius: 4,\r\n    boxSizing: 'border-box',\r\n    '&:focus': {\r\n      backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n      width: 235,\r\n    },\r\n  },\r\n  searchIconBox: {\r\n    position: 'relative',\r\n    '& $inputInput': {\r\n      width: 35,\r\n      borderRadius: 4,\r\n      paddingLeft: 27,\r\n      '&:focus': {\r\n        width: 150,\r\n        borderRadius: 4,\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 235,\r\n        },\r\n      },\r\n    },\r\n    '& $searchIcon': {\r\n      paddingLeft: 6,\r\n      paddingRight: 6,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useStyles from './index.style';\r\n\r\nconst CmtSearch = ({\r\n  border,\r\n  placeholder,\r\n  iconPosition,\r\n  align,\r\n  onlyIcon,\r\n  containerStyle,\r\n  inputStyle,\r\n  iconStyle,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ align });\r\n  const inputBaseStyle = {\r\n    border: border ? '1px solid' : '0 none',\r\n    ...inputStyle,\r\n  };\r\n  const inputBaseClasses = {\r\n    root: clsx(classes.inputRoot, 'CmtSearch-input-root'),\r\n    input: clsx(classes.inputInput, 'CmtSearch-input'),\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'CmtSearch-root', className)} style={containerStyle}>\r\n      <div className={clsx(classes.search, onlyIcon ? classes.searchIconBox : null)}>\r\n        <div\r\n          className={clsx(classes.searchIcon, 'CmtSearch-icon-wrapper', {\r\n            right: iconPosition === 'right',\r\n          })}\r\n          style={iconStyle}>\r\n          <SearchIcon style={iconStyle} />\r\n        </div>\r\n        <InputBase\r\n          placeholder={placeholder || 'Search…'}\r\n          style={inputBaseStyle}\r\n          classes={inputBaseClasses}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmtSearch;\r\n\r\nCmtSearch.prototype = {\r\n  border: PropTypes.bool,\r\n  iconPosition: PropTypes.string,\r\n  align: PropTypes.string,\r\n  onlyIcon: PropTypes.bool,\r\n  containerStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  iconStyle: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtSearch.defaultProps = {\r\n  border: true,\r\n  containerStyle: {},\r\n  inputStyle: {\r\n    backgroundColor: 'transparent',\r\n    borderColor: 'grey',\r\n    color: 'grey',\r\n    borderRadius: 4,\r\n  },\r\n  iconPosition: 'left',\r\n  onlyIcon: false,\r\n  align: 'left',\r\n  iconStyle: {\r\n    color: 'grey',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Popover } from '@material-ui/core';\r\nimport CmtSearch from '../../../../@coremat/CmtSearch';\r\n\r\nconst SearchPopover = ({ iconClassName, popoverClassName }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenSearchBar = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSearchBar = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={iconClassName} onClick={handleOpenSearchBar}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Popover\r\n        className={popoverClassName}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleCloseSearchBar}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtSearch />\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPopover;\r\n","import React from 'react';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Box, InputBase } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport LanguageSwitcher from '../LanguageSwitcher';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppsMenu from './AppsMenu';\r\nimport HeaderNotifications from './HeaderNotifications';\r\nimport HeaderMessages from './HeaderMessages';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Logo from '../Logo';\r\nimport SearchPopover from '../SearchPopover';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      minHeight: 72,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 30,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n      color: alpha(theme.palette.common.white, 0.7),\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.58),\r\n        color: alpha(theme.palette.common.white, 0.7),\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    borderLeft: `solid 1px ${alpha(theme.palette.common.dark, 0.15)}`,\r\n    minHeight: 72,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minHeight: 64,\r\n    },\r\n  },\r\n  iconBtn: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo ml={2} color=\"white\" />\r\n      <Box flex={1} />\r\n      <Hidden smDown>\r\n        <Box pr={3} className={classes.searchRoot}>\r\n          <InputBase placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n          <SearchIcon />\r\n        </Box>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <SearchPopover iconClassName={classes.iconBtn} />\r\n      </Hidden>\r\n      <AppsMenu />\r\n      <HeaderMessages />\r\n      <HeaderNotifications />\r\n      <Box className={classes.langRoot}>\r\n        <LanguageSwitcher />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    zIndex: 1103,\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '.Cmt-miniLayout &': {\r\n      width: props => props.miniSidebarWidth,\r\n      '&:hover': {\r\n        width: props => props.sidebarWidth,\r\n      },\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  actionSidebarWrapper: {\r\n    display: 'flex',\r\n    width: props => props.sidebarWidth + props.actionSidebarWidth,\r\n    transition: 'all 0.3s ease',\r\n\r\n    '& .actionSidebar': {\r\n      width: props => props.actionSidebarWidth,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Drawer, makeStyles } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  drawerContent: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtDrawer = ({ backgroundColor, backgroundImage, gradientDirection, children, overlay, ...rest }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer {...rest}>\r\n      <div className={clsx(classes.drawerContainer, 'Cmt-Drawer-container')} style={backgroundStyles}>\r\n        <div className={clsx(classes.drawerContent, 'Cmt-Drawer-content')}>{children}</div>\r\n        {overlay.colors && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyles} />}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nCmtDrawer.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtDrawer.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default React.memo(CmtDrawer);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport useStyles from './Sidebar.style';\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst CmtSidebarContent = ({ children, classes }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtDrawerContent = ({ children, classes }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n  return (\r\n    <CmtDrawer\r\n      variant=\"temporary\"\r\n      open={isSidebarOpen}\r\n      onClose={() => setSidebarOpen(false)}\r\n      classes={{\r\n        paper: 'Cmt-drawer-sidebar',\r\n      }}>\r\n      <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = ({ children, actionBar }) => {\r\n  const { drawerBreakPoint, sidebarWidth, miniSidebarWidth, actionSidebarWidth, sidebarType } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const hasDrawer = sidebarType === 'drawer' || matches;\r\n\r\n  const classes = useStyles({\r\n    sidebarWidth,\r\n    miniSidebarWidth,\r\n    actionSidebarWidth,\r\n    sidebarTheme,\r\n  });\r\n\r\n  if (hasDrawer) {\r\n    return (\r\n      <React.Fragment>\r\n        {actionBar}\r\n        <CmtDrawerContent classes={classes}>{children}</CmtDrawerContent>\r\n      </React.Fragment>\r\n    );\r\n  } else if (actionBar) {\r\n    return (\r\n      <div className={clsx(classes.actionSidebarWrapper, 'Cmt-actionSidebarWrapper')}>\r\n        {actionBar}\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useContext } from 'react';\r\nimport { MenuItem, MenuList, Paper, Popover, Typography } from '@material-ui/core';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarThemeContext from '../../../../@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '25px 24px 24px 24px',\r\n    borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n  },\r\n  userInfo: {\r\n    paddingTop: 56,\r\n    transition: 'all 0.1s ease',\r\n    height: 75,\r\n    opacity: 1,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      height: 0,\r\n      paddingTop: 0,\r\n      opacity: 0,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n  },\r\n  userTitle: {\r\n    color: props => props.sidebarTheme.textDarkColor,\r\n    marginBottom: 8,\r\n  },\r\n  userSubTitle: {\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst SidebarHeader = () => {\r\n  let history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n  const dispatch = useDispatch();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const onLogoutClick = () => {\r\n    handlePopoverClose();\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    history.push('/signin');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ paddingTop: '50px' }}>\r\n      <CmtAvatar src={'https://via.placeholder.com/150'} alt=\"User Avatar\" />\r\n      <div className={classes.userInfo} onClick={handlePopoverOpen}>\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-end',\r\n          }}>\r\n          <div className=\"mr-2\">\r\n            <Typography className={classes.userTitle} component=\"h3\" variant=\"h6\">\r\n              Robert Johnson\r\n            </Typography>\r\n            <Typography className={classes.userSubTitle}>robert.johnson@gmail.com</Typography>\r\n          </div>\r\n          <ArrowDropDownIcon />\r\n        </div>\r\n      </div>\r\n\r\n      {open && (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          container={anchorEl}\r\n          onClose={handlePopoverClose}\r\n          anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}>\r\n          <Paper elevation={8}>\r\n            <MenuList>\r\n              <MenuItem onClick={handlePopoverClose}>\r\n                <PersonIcon />\r\n                <div className=\"ml-2\">Profile</div>\r\n              </MenuItem>\r\n              <MenuItem onClick={onLogoutClick}>\r\n                <ExitToAppIcon />\r\n                <div className=\"ml-2\">Logout</div>\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Paper>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import React, { cloneElement, isValidElement, useContext } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuItem: {\r\n    padding: '0 16px 0 0',\r\n    position: 'relative',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: props => props.sidebarTheme.textColor,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: props => props.sidebarTheme.textActiveColor,\r\n      backgroundColor: props => props.sidebarTheme.navActiveBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-nav-text, & .Cmt-icon-root': {\r\n          color: props => props.sidebarTheme.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      justifyContent: 'center',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: '50%',\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link } = props;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" className={clsx(classes.navMenuItem, 'Cmt-nav-menu-item')}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <span className={clsx(classes.navText, 'Cmt-nav-text')}>{name}</span>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import React, { cloneElement, isValidElement, useEffect, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { Collapse, List, ListItem } from '@material-ui/core';\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess';\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavSection from './NavSection';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '0 16px 0 0',\r\n    '& .MuiTouchRipple-root': {\r\n      display: 'none',\r\n    },\r\n    '&:hover, &:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n    '&.open': {\r\n      '& .Cmt-navCollapseBtn': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n      '& .Cmt-iconRoot': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    '& .Cmt-navHeader': {\r\n      paddingLeft: 36,\r\n    },\r\n  },\r\n\r\n  navCollapseBtnInner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-iconRoot': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      paddingRight: 13,\r\n      paddingLeft: 13,\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      paddingRight: 16,\r\n      paddingLeft: 32,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    whiteSpace: 'nowrap',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navArrow: {\r\n    position: 'absolute',\r\n    left: 8,\r\n    top: '50%',\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    fontSize: 16,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'relative',\r\n    '& .Cmt-icon-root': {\r\n      transition: 'all 0.3s ease',\r\n      transform: 'translateX(-100%)',\r\n      opacity: 0,\r\n      visibility: 'hidden',\r\n      marginRight: 0,\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      transition: 'all 0.35s ease',\r\n      marginLeft: -20,\r\n    },\r\n    '& .Cmt-nav-menu-link': {\r\n      padding: '9px 16px 9px 70px',\r\n      transition: 'all 0.3s ease',\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '&.active': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '.Cmt-miniLayout &': {\r\n        paddingRight: 13,\r\n        paddingLeft: 13,\r\n      },\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n        paddingRight: 16,\r\n        paddingLeft: 70,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const { name, icon, children = [] } = props;\r\n  const isExpandable = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const renderIcon = useCallback(() => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: classes.iconRoot,\r\n      });\r\n    }\r\n    return null;\r\n  }, [icon, classes]);\r\n\r\n  const MenuCollapse = (\r\n    <ListItem className={clsx(classes.navCollapseBtn, 'Cmt-navCollapseBtn')} button onClick={handleClick}>\r\n      <span className={classes.navCollapseBtnInner}>\r\n        {/* Display the expand menu if the item has children */}\r\n        {isExpandable && !open && <IconExpandMore className={classes.navArrow} />}\r\n        {isExpandable && open && <IconExpandLess className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <span className={classes.navText}>{name}</span>\r\n      </span>\r\n    </ListItem>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <Collapse className={classes.navCollapseItem} in={open} timeout=\"auto\">\r\n      <List component=\"div\" disablePadding>\r\n        {children.map((item, index) => {\r\n          switch (item.type) {\r\n            case 'section':\r\n              return <NavSection {...item} key={index} />;\r\n            case 'collapse':\r\n              return <NavCollapse {...item} key={index} />;\r\n            case 'item':\r\n              return <NavMenuItem {...item} key={index} />;\r\n            default:\r\n              return null;\r\n          }\r\n        })}\r\n      </List>\r\n    </Collapse>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={clsx(classes.navCollapse, `${open ? 'open' : ''}`)}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import React, { useContext } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navHeader: {\r\n    position: 'relative',\r\n    padding: '24px 16px 20px 16px',\r\n    textTransform: 'uppercase',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navSection: {\r\n    position: 'relative',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:not(:first-child) .Cmt-navHeader': {\r\n      borderTop: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n      marginTop: 10,\r\n    },\r\n    '&:not(:last-child)': {\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n        borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavSection = props => {\r\n  const { name, children = [] } = props;\r\n  const isExpandable = children && children.length > 0;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const MenuCollapse = (\r\n    <List component=\"div\" className={clsx(classes.navHeader, 'Cmt-navHeader')}>\r\n      {name}\r\n    </List>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          default:\r\n            return <NavMenuItem {...item} key={index} />;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={classes.navSection}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSection;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavSection from './NavSection';\r\nimport NavCollapse from './NavCollapse';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sideNavMenu: {\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst CmtVertical = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={classes.sideNavMenu}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtVertical;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Dashboard, Phone, ArrowForward, Assignment, Receipt } from '@material-ui/icons';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { Badge } from '@material-ui/core';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nexport const sidebarNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n      {\r\n        name: <IntlMessages id={'wallboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/wallboard',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: <IntlMessages id={'reports'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'reports.callcenter'} />,\r\n        type: 'collapse',\r\n        icon: <Phone />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'agent.status'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentstatus',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'main.reports'} />,\r\n        type: 'collapse',\r\n        icon: <Assignment />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'calllog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callLog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'calltransferreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltransferreport',\r\n          },\r\n          // {\r\n          //   name: 'Call Log 2',\r\n          //   type: 'item',\r\n          //   icon: <ArrowForward />,\r\n          //   link: '/reports/callLog2',\r\n          // },\r\n          {\r\n            name: <IntlMessages id={'internalssummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/internalssummary',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'did.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/didreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailysummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailysummaryreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'queue.answer.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/queueanswerreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abondenedcalls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abondenedcalls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'droppedcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/droppedcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abandoned.queues'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abandoned-queues',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'returneddropcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/returned-dropcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'repetetive.calls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/repetetive-calls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'agent.session.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentcdr',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'service.level'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/servicelevel',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailylog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'call.comparison'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callcomparison',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthly.log'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthlydetails'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlyDetails',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'settings'} />,\r\n        type: 'collapse',\r\n        icon: <SettingsIcon />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'edit.breaks'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/editbreaks',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'IYS',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                <IntlMessages id={'Called.Numbers'} />\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/iys/called-number',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'V 1.2.2',\r\n        type: 'section',\r\n      },\r\n      // {\r\n      //   name: 'Teams',\r\n      //   type: 'section',\r\n      //   children: [\r\n      //     {\r\n      //       name: (\r\n      //         <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n      //           Microsoft Teams Users\r\n      //         </Badge>\r\n      //       ),\r\n      //       type: 'item',\r\n      //       icon: <Receipt />,\r\n      //       link: '/teams/users',\r\n      //     },\r\n      //   ],\r\n      // },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const horizontalDefaultNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const minimalHorizontalMenus = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'pages.samplePage'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVertical from '../../../../../@coremat/CmtNavigation/Vertical';\r\nimport { sidebarNavs } from '../menus';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  perfectScrollbarSidebar: {\r\n    height: '100%',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &, .Cmt-Drawer-container &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      height: 'calc(100% - 72px)',\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      height: 'calc(100% - 91px)',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.perfectScrollbarSidebar}>\r\n      <CmtVertical menuItems={sidebarNavs} />\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '30px 15px',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appMainContent, 'Cmt-appMainContent')} bgcolor=\"background.main\">\r\n      {children}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999999,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst PageLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.circularProgressRoot}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { Slide, Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageLoader from '../PageComponents/PageLoader';\r\nimport { fetchError } from '../../../redux/actions';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst ContentLoader = () => {\r\n  const { error, loading, message } = useSelector(({ common }) => common);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(fetchError(''));\r\n    }, 3000);\r\n  }, [dispatch, error, message]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <PageLoader />}\r\n      {\r\n        <Snackbar\r\n          open={Boolean(error)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n      {\r\n        <Snackbar\r\n          open={Boolean(message)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentLoader;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 30px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function LayoutFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')}>\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\n\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst FooterLogo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo-white-symbol.png' : '/images/footer-logo.png';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <NavLink to=\"/\">\r\n        <CmtImage src={logoUrl} alt=\"logo\" />\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterLogo;\r\n","import React, { useContext } from 'react';\r\nimport FooterLogo from './FooterLogo';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppContext from '../../contextProvider/AppContextProvider/AppContext';\r\nimport { THEME_TYPES } from '../../../constants/ThemeOptions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  btnRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '6px 12px',\r\n      fontSize: 11,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = props => {\r\n  const classes = useStyles();\r\n  const { themeType } = useContext(AppContext);\r\n  const date = new Date();\r\n\r\n  return (\r\n    <Box className={classes.root} {...props}>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Hidden xsDown>\r\n          <FooterLogo mr={5} color={themeType === THEME_TYPES.DARK ? 'white' : ''} />\r\n        </Hidden>\r\n        <Box fontSize={{ xs: 12, sm: 14 }} component=\"p\" color=\"text.disabled\">\r\n          Copyright Company Name © {date.getFullYear()}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport Header from '../../partials/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  showTourOpt: true,\r\n  showFooterOpt: true,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n  drawerBreakPoint: defaultContext.drawerBreakPoint,\r\n  sidebarWidth: defaultContext.sidebarWidth,\r\n};\r\n\r\nconst VerticalDefault = ({ children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      className=\"verticalDefaultLayout\"\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter>\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalDefault;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport Header from '../../partials/Header';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport { SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst VerticalMinimal = ({ className, children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalMinimal;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { darken, makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '32px 10px 5px',\r\n    width: '100%',\r\n    '& .MuiAlert-root': {\r\n      padding: '0 20px 0 0',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      '& .MuiAlert-icon': {\r\n        padding: '16px 12px',\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Alerts = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          variant=\"filled\"\r\n          iconMapping={{ success: <CachedIcon fontSize=\"inherit\" /> }}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}>\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }>\r\n          A new version has been arrived, Click here to update jumbo 5.0\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { Hidden } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\n\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport Alerts from './Alerts';\r\nimport { HEADER_TYPE, SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  minimalNoHeader: {\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '& .Cmt-toggle-menu': {\r\n      color: theme.palette.text.primary,\r\n      marginLeft: 15,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  headerType: HEADER_TYPE.STATIC,\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst MinimalNoHeader = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalNoHeaderLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.minimalNoHeader}>\r\n          <Hidden lgUp>\r\n            <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n          </Hidden>\r\n          <Alerts />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        <LanguageSwitcher />\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default MinimalNoHeader;\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtDrawer from '../../../../../../@coremat/CmtDrawer';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  actionSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '24px 5px',\r\n    width: 65,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  contentArea: {\r\n    width: 300,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 557,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: '100vh',\r\n    padding: 30,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.dark, 0.38),\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst ActionBarDrawer = ({ activeOption, onIconClick, onDrawerClose, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtDrawer variant=\"temporary\" anchor=\"left\" onClose={onDrawerClose} {...rest}>\r\n      <Box className={clsx(classes.root)}>\r\n        <Box className={classes.actionSidebar}>\r\n          <IconButton className={classes.iconBtn} onClick={onDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box className={classes.contentArea}>\r\n          <PerfectScrollbar className={classes.scrollbarRoot}></PerfectScrollbar>\r\n        </Box>\r\n      </Box>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nexport default ActionBarDrawer;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Hidden, IconButton, withWidth } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtDropdownMenu from '../../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport LayoutContext from '../../../../../../@coremat/CmtLayouts/LayoutContext';\r\n\r\nimport { AuhMethods } from '../../../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../../../constants/AppConstants';\r\nimport Logo from '../../../partials/Logo';\r\nimport ActionBarDrawer from './ActionBarDrawer';\r\nimport { useHistory } from 'react-router';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '10px 24px 10px 15px',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'column',\r\n      padding: '16px 5px',\r\n    },\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.9),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: 'Account',\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: 'Logout',\r\n  },\r\n];\r\n\r\nlet initSidebarWidth = 0;\r\nconst ActionSideBar = ({ width }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [isDrawerOpen, setDrawerStatus] = useState(false);\r\n  const [activeOption, setActiveOption] = useState(null);\r\n  const { isSidebarOpen, setSidebarOpen, sidebarWidth, setSidebarWidth } = useContext(LayoutContext);\r\n\r\n  useEffect(() => {\r\n    initSidebarWidth = sidebarWidth;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSidebarOpen && (width === 'lg' || width === 'xl')) {\r\n      setSidebarWidth(0);\r\n    } else {\r\n      setSidebarWidth(initSidebarWidth);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSidebarOpen, width]);\r\n\r\n  useEffect(() => {\r\n    if (activeOption && !isDrawerOpen) {\r\n      setDrawerStatus(true);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeOption]);\r\n\r\n  const onItemClick = item => {\r\n    if (item.label === 'Logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  const onIconClick = option => {\r\n    setActiveOption(option);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    setDrawerStatus(false);\r\n    setActiveOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'actionSidebar')}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <SidebarToggleHandler className={classes.iconBtn}>\r\n          {isSidebarOpen && (width === 'lg' || width === 'xl') && <CloseIcon />}\r\n        </SidebarToggleHandler>\r\n        <Hidden lgUp>\r\n          <Logo color=\"white\" ml={{ xs: 3, sm: 6 }} />\r\n        </Hidden>\r\n      </div>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} ml={{ xs: 'auto', lg: 'unset' }}>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('search')}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n\r\n        <IconButton className={classes.iconBtn} onClick={() => onIconClick('messages')}>\r\n          <MessageIcon />\r\n        </IconButton> */}\r\n        <IconButton className={classes.iconBtn}>\r\n          <LanguageSwitcher />\r\n        </IconButton>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('notifications')}>\r\n          <Badge badgeContent={4} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n\r\n        {isSidebarOpen && (width === 'lg' || width === 'xl') && (\r\n          <IconButton className={classes.iconBtn} onClick={() => setSidebarOpen(!isSidebarOpen)}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} mt={{ xs: 'unset', lg: 'auto' }}>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('settings')}>\r\n          <SettingsIcon />\r\n        </IconButton> */}\r\n\r\n        <CmtDropdownMenu\r\n          onItemClick={onItemClick}\r\n          TriggerComponent={<CmtAvatar src={'https://via.placeholder.com/150'} />}\r\n          items={actionsList}\r\n        />\r\n      </Box>\r\n\r\n      <ActionBarDrawer\r\n        activeOption={activeOption}\r\n        open={isDrawerOpen}\r\n        onDrawerClose={onDrawerClose}\r\n        onIconClick={onIconClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(ActionSideBar);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport ActionSideBar from './ActionSideBar';\r\nimport Logo from '../../partials/Logo';\r\nimport { THEME_TYPES } from '../../../../constants/ThemeOptions';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sidebarHeader: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: '60px',\r\n      marginBottom: '35px',\r\n      padding: '10px 20px 20px 20px',\r\n      height: 60,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  actionSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst ModernSideBar = ({ children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  const { themeType } = useContext(AppContext);\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      className={clsx('Cmt-modernLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      sidebar={\r\n        <CmtSidebar actionBar={<ActionSideBar />}>\r\n          <Hidden mdDown>\r\n            <Logo color={themeType !== THEME_TYPES.LIGHT ? 'white' : 'dark'} className={classes.sidebarHeader} />\r\n          </Hidden>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default ModernSideBar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false); //for both drawer and mini-sidebar\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n  headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      showFooterOpt: props.showFooterOpt ? props.showFooterOpt : true,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      props.drawerBreakPoint,\r\n      props.showFooterOpt,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-header': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'none',\r\n        marginRight: 10,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'block !important',\r\n        },\r\n      },\r\n      '& .Cmt-header-nav': {\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  appMain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-customizerBtn': {\r\n      top: 220,\r\n    },\r\n  },\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './MainContainer.style';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst MainContainer = ({ header, footer, sidebar, className, children }) => {\r\n  const { drawerBreakPoint, showFooter, showHeader } = useContext(LayoutContext);\r\n\r\n  const classes = useStyles({ drawerBreakPoint });\r\n\r\n  return (\r\n    <div className={clsx(classes.appRoot, className)}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {showHeader && header}\r\n            {children}\r\n            {showFooter && footer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtHorizontalLayout = ({ layoutOptions, children, header, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontalLayout;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headerNav: {\r\n    width: '100%',\r\n    minHeight: 46,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtHeaderNav = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.headerNav, 'Cmt-header-nav')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderNav;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerTop: {\r\n    width: '100%',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    fontSize: 14,\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderTop = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.headerTop} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderTop;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerMain: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderMain = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.headerMain, 'Cmt-headerMain')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderMain;\r\n","import React from 'react';\r\nimport { Box, Button, Divider } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  loginSection: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > .MuiDivider-root': {\r\n      height: 14,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      backgroundColor: theme.palette.text.secondary,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderLogin = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display=\"flex\" alignItems=\"center\" color=\"warning.main\">\r\n        <CachedIcon fontSize=\"small\" />\r\n        <div className=\"ml-3\">This is primary alert-check it out!</div>\r\n      </Box>\r\n      <div className={classes.loginSection}>\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Login\r\n        </Button>\r\n        <Divider className=\"Cmt-divider\" orientation=\"vertical\" />\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderLogin;\r\n","import React, { useContext, useImperativeHandle } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst SidebarToggleHandler = React.forwardRef(function SidebarToggleHandler(props, ref) {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isOpen: isSidebarOpen,\r\n  }));\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" ref={contentRef} onClick={() => setSidebarOpen(!isSidebarOpen)} {...props}>\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n});\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CmtDropdownMenu from '../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 10,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: 'Account',\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: 'Logout',\r\n  },\r\n];\r\n\r\nconst UserDropDown = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onItemClick = item => {\r\n    if (item.label === 'Logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(classes.profileRoot, 'Cmt-profile-pic')}>\r\n      <CmtDropdownMenu\r\n        onItemClick={onItemClick}\r\n        TriggerComponent={<CmtAvatar size=\"small\" src={'https://via.placeholder.com/150'} />}\r\n        items={actionsList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserDropDown;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, InputBase } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 450,\r\n    },\r\n    '& .Cmt-icon': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      position: 'relative',\r\n      flex: '1 1 auto',\r\n      width: '1%',\r\n      minWidth: 0,\r\n      height: 48,\r\n      borderRadius: '30px 0 0  30px',\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.08),\r\n      color: theme.palette.text.secondary,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n\r\n      '&:not(:last-child) .MuiOutlinedInput-root': {\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n      },\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.12),\r\n      },\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: '0 30px 30px 0',\r\n    height: '100%',\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nconst GlobalSearchForm = () => {\r\n  const classes = useStyles();\r\n  const [showCategories, setShowCategories] = React.useState(null);\r\n\r\n  const onShowCategories = event => {\r\n    setShowCategories(event.currentTarget);\r\n  };\r\n\r\n  const onHideCategories = () => {\r\n    setShowCategories(null);\r\n  };\r\n\r\n  return (\r\n    <Box pr={3} className={clsx(classes.searchRoot, 'Cmt-search')}>\r\n      <Box className={classes.inputGroup}>\r\n        <InputBase className={classes.inputText} placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <SearchIcon className={clsx('Cmt-icon')} />\r\n        <Box className={clsx(classes.inputGroupAppend, 'Cmt-inputGroupAppend')}>\r\n          <Button variant=\"outlined\" className={classes.button} endIcon={<ArrowDropDownIcon />} onClick={onShowCategories}>\r\n            Categories\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={showCategories}\r\n            keepMounted\r\n            open={Boolean(showCategories)}\r\n            onClose={onHideCategories}>\r\n            <MenuItem onClick={onHideCategories}>Option 1</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 2</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 3</MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GlobalSearchForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { alpha, darken, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport AppsMenu from '../AppsMenu';\r\nimport HeaderMessages from '../HeaderMessages';\r\nimport HeaderNotifications from '../HeaderNotifications';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport Logo from '../../Logo';\r\nimport SearchPopover from '../../SearchPopover';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport UserDropDown from '../../UserDropDown';\r\nimport GlobalSearchForm from '../../GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderTop = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderTop;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    boxShadow: '0 1px 8px -1px rgba(0,0,0,.2)',\r\n    position: 'relative',\r\n    zIndex: 99,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { children, className } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return <div className={clsx(classes.appHeader, className, 'Cmt-header')}>{children}</div>;\r\n};\r\n\r\nexport default CmtHeader;\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'Header',\r\n};\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    zIndex: 999,\r\n    '.Cmt-drawer-sidebar &': {\r\n      position: 'relative',\r\n    },\r\n    '& .scrollbar-container': {\r\n      height: '100vh',\r\n      width: '100%',\r\n    },\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtSidebarContent = ({ classes, children }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = props => {\r\n  const { children } = props;\r\n  const { isSidebarOpen, setSidebarOpen, drawerBreakPoint, sidebarWidth } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const classes = useStyles({ sidebarWidth, sidebarTheme });\r\n\r\n  if (matches) {\r\n    return (\r\n      <CmtDrawer\r\n        variant=\"temporary\"\r\n        open={isSidebarOpen}\r\n        onClose={() => setSidebarOpen(false)}\r\n        classes={{\r\n          paper: 'Cmt-drawer-sidebar',\r\n        }}>\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </CmtDrawer>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContentWrapper: {\r\n    position: 'relative',\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.appMainContentWrapper} bgcolor=\"background.main\">\r\n      <Box ref={contentRef} className={classes.appMainContent}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function CmtFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')} bgcolor=\"primary.main\">\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React, { cloneElement, isValidElement } from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link, handleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" disablePadding onClick={handleClick}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={clsx(classes.navText, 'Cmt-nav-text')}>\r\n          {name}\r\n        </Box>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n\r\n    '&.active > .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&.active > .Cmt-navCollapseBtn $subCollapse .Cmt-navCollapseBtn.active': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      '& $navCollapseBtnInner  .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& $navCollapseBtnInner > .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'absolute',\r\n    display: 'none',\r\n    top: 80,\r\n    left: 0,\r\n    zIndex: 2,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 200,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n\r\n    '& $navCollapseItem': {\r\n      top: 50,\r\n      left: '100%',\r\n      right: 'auto',\r\n    },\r\n  },\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n\r\n    '& > $navCollapseItem $navCollapseBtn:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: 0,\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navCollapseBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  subCollapse: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '& .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.textColor,\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n    '&.active .Cmt-nav-menu-link.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavCollapse.style';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const { name, icon, className, children = [] } = props;\r\n  const isExpandable = useMemo(() => children.length, [children]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding className={classes.navCollapseItem}>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} className={classes.subCollapse} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navCollapseBtn, `${open ? 'active' : ''}`, 'Cmt-navCollapseBtn')}>\r\n      <Box component=\"span\" className={classes.navCollapseBtnInner}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={classes.navText}>\r\n          {name}\r\n        </Box>\r\n        {/* Display the expand menu if the item has children */}\r\n        {isExpandable && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {isExpandable && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n      </Box>\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Box className={clsx(classes.navCollapse, 'Cmt-navCollapse', className, `${open ? 'active' : ''}`)}>{MenuCollapse}</Box>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navMega: {\r\n    position: 'static',\r\n    '&.Cmt-navMega-5': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 5)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-4': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 4)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-3': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 530,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 3)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-2': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 460,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 2)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navMegaBtn: {\r\n    position: 'static',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navMegaColumnsWrapper': {\r\n      display: 'flex',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navMegaBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navMegaColumnsWrapper: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 600,\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 80,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    margin: '0 auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  navMegaColumn: {\r\n    width: 'calc(100% / 3)',\r\n  },\r\n  navMegaColumnInner: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'unset',\r\n  },\r\n  navMegaColumnLabel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.text.primary,\r\n\r\n    '& .Cmt-icon-root': {\r\n      marginRight: 16,\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavMega.style';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst RenderIcon = ({ icon }) => {\r\n  const classes = useStyles();\r\n\r\n  if (icon && isValidElement(icon)) {\r\n    return cloneElement(icon, {\r\n      className: clsx(classes.iconRoot, '.Cmt-iconRoot', '.Cmt-icon-root'),\r\n    });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst NavMegaColumn = props => {\r\n  const classes = useStyles();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = useMemo(() => children.length, [children]);\r\n\r\n  const MenuItemChildren = totalItems ? (\r\n    <List component=\"div\" disablePadding className={classes.navMegaColumnItems}>\r\n      {children.map((item, index) => (\r\n        <NavMenuItem {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem component=\"div\" disableGutters className={clsx(classes.navMegaColumnInner, 'Cmt-navMegaColumnInner')}>\r\n      {name && (\r\n        <span className={classes.navMegaColumnLabel}>\r\n          <RenderIcon icon={icon} />\r\n          <span className={classes.navText}>{name}</span>\r\n        </span>\r\n      )}\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return <div className={clsx(classes.navMegaColumn, 'Cmt-navMega-column')}>{MenuCollapse}</div>;\r\n};\r\n\r\nconst NavMega = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const MenuItemColumns = totalItems ? (\r\n    <List component=\"div\" disablePadding className={clsx(classes.navMegaColumnsWrapper, 'Cmt-navMegaColumnsWrapper')}>\r\n      {children.map((item, index) => (\r\n        <NavMegaColumn {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navMegaBtn, 'Cmt-navMegaBtn', `${open ? 'active' : ''}`)}>\r\n      <span className={classes.navMegaBtnInner}>\r\n        <RenderIcon icon={icon} />\r\n        <span className={classes.navText}>{name}</span>\r\n        {/* Display the expand menu if the item has children */}\r\n        {totalItems > 0 && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {totalItems > 0 && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n      </span>\r\n      {MenuItemColumns}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.navMega, 'Cmt-navMega', `Cmt-navMega-${totalItems}`, `${open ? 'active' : ''}`)}>\r\n      {MenuCollapse}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMega;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport NavMega from './NavMega';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  horizontalNavMenu: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    marginLeft: -14,\r\n    marginRight: -14,\r\n  },\r\n}));\r\n\r\nconst CmtHorizontal = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={clsx(classes.horizontalNavMenu, 'Cmt-horizontalNavMenu')}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'mega':\r\n            return <NavMega {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport HeaderTop from '../../partials/Header/HeaderTop';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\n\r\nconst layoutOptions = {\r\n  showFooter: false,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalDefault = ({ className, children }) => {\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalDefaultLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderTop />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain bgcolor=\"primary.main\" color=\"white\">\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDefault;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-search': {\r\n      position: 'relative',\r\n      '& .MuiInputBase-input': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-inputGroupAppend': {\r\n      '& .MuiButton-root': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n        borderLeftColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box, alpha } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport GlobalSearchForm from '../../partials/GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport useStyles from './index.style';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport HeaderMain from './HeaderMain';\r\nimport clsx from 'clsx';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst HorizontalDark = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      className={clsx('Cmt-horizontalDarkLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDark;\r\n","import React from 'react';\r\nimport { Box, darken, Hidden, Toolbar } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Logo from '../../partials/Logo';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { minimalHorizontalMenus } from '../../partials/menus';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    minHeight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n    '& .Cmt-horizontalNavMenu': {\r\n      position: 'static',\r\n      '& .Cmt-navMegaBtn, & > .Cmt-navCollapse > .Cmt-navCollapseBtn': {\r\n        minHeight: 64,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainHeader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden mdDown>\r\n        <CmtHorizontal menuItems={minimalHorizontalMenus} />\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport MainHeader from './MainHeader';\r\nimport useStyles from './index.style';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalMinimal = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderMain>\r\n            <MainHeader />\r\n          </CmtHeaderMain>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalMinimal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { darken, Hidden } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <Hidden lgUp>\r\n          <AppsMenu />\r\n          <HeaderMessages />\r\n          <HeaderNotifications />\r\n        </Hidden>\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst HeaderTopMenus = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderTopMenus;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& > .Cmt-headerMain': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: 4,\r\n\r\n      '& .Cmt-navCollapseBtn': {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n      '& .Cmt-navCollapseBtn, & .Cmt-appIcon': {\r\n        color: theme.palette.horizontalNav.textColor,\r\n        '&:hover, &:focus': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n        '&.active': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '& > .Cmt-header-nav': {\r\n      minHeight: 54,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport HeaderMain from './HeaderMain';\r\nimport HeaderTopMenus from './HeaderTopMenus';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport useStyles from './index.style';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalTopMenu = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalTopMenuLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <HeaderTopMenus />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalTopMenu;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport globalStyles from '../../../theme/GlobalCss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuhMethods } from '../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../constants/AppConstants';\r\nimport { LAYOUT_TYPES } from '../../constants/ThemeOptions';\r\nimport VerticalDefault from './VerticalLayouts/VerticalDefault';\r\nimport VerticalMinimal from './VerticalLayouts/VerticalMinimal';\r\nimport MinimalNoHeader from './VerticalLayouts/MinimalNoHeader';\r\nimport ModernSideBar from './VerticalLayouts/ModernSidebar';\r\nimport HorizontalDefault from './HorizontalLayouts/HorizontalDefault';\r\nimport HorizontalDark from './HorizontalLayouts/HorizontalDark';\r\nimport HorizontalMinimal from './HorizontalLayouts/HorizontalMinimal';\r\nimport HorizontalTopMenu from './HorizontalLayouts/HorizontalTopMenu';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [showLayoutLoader, setLayoutLoader] = useState(true);\r\n  const { layout } = useContext(AppContext);\r\n  const { loadUser } = useSelector(({ auth }) => auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  globalStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(AuhMethods[CurrentAuthMethod].getAuthUser());\r\n    setLayoutLoader(false);\r\n  }, [dispatch]);\r\n\r\n  if (showLayoutLoader || !loadUser) {\r\n    return (\r\n      <div className={classes.circularProgressRoot}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (['/signin', '/signup', '/forgot-password'].includes(location.pathname)) {\r\n    return <div style={{ minHeight: '100vh', width: '100%', display: 'flex' }}>{children}</div>;\r\n  }\r\n\r\n  switch (layout) {\r\n    case LAYOUT_TYPES.VERTICAL_DEFAULT: {\r\n      return <VerticalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL: {\r\n      return <VerticalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL_NO_HEADER: {\r\n      return <MinimalNoHeader children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR: {\r\n      return <ModernSideBar children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DEFAULT: {\r\n      return <HorizontalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DARK: {\r\n      return <HorizontalDark children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_MINIMAL: {\r\n      return <HorizontalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_TOP_MENU: {\r\n      return <HorizontalTopMenu children={children} />;\r\n    }\r\n    default:\r\n      return <VerticalDefault children={children} />;\r\n  }\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useContext, useMemo } from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { createTheme, jssPreset, StylesProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport AppLocale from '../../../i18n';\r\nimport AppLayout from '../AppLayout';\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst AppWrapper = ({ children }) => {\r\n  const { locale, theme } = useContext(AppContext);\r\n\r\n  const muiTheme = useMemo(() => {\r\n    return createTheme(theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <IntlProvider locale={AppLocale[locale.locale].locale} messages={AppLocale[locale.locale].messages}>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <StylesProvider jss={jss}>\r\n            <CssBaseline />\r\n            <AppLayout>{children}</AppLayout>\r\n          </StylesProvider>\r\n        </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AppContext from './AppContext';\r\nimport defaultContext from './defaultContext';\r\nimport { darkTheme, lightTheme, semiDarkTheme } from '../../../../theme/themeColors';\r\n\r\nconst initialThemeValue = defaultContext.theme;\r\nconst otherThemes = {\r\n  light: lightTheme,\r\n  'semi-dark': semiDarkTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  const [locale, setLocale] = useState(defaultContext.defaultLng);\r\n  const [theme, setTheme] = useState(initialThemeValue);\r\n  const [themeType, setThemeType] = useState(defaultContext.themeType);\r\n  const [layout, setLayout] = useState(defaultContext.layout);\r\n  const [cardRadius, setCardRadius] = useState(defaultContext.theme.overrides.MuiCard.root.borderRadius);\r\n  const [direction, setDirection] = useState(initialThemeValue.direction || 'rtl');\r\n  const [showTourGuide, setTourGuideStatus] = useState(false);\r\n\r\n  const contextValue = React.useMemo(() => {\r\n    return {\r\n      locale,\r\n      setLocale,\r\n      theme,\r\n      setTheme,\r\n      layout,\r\n      setLayout,\r\n      themeType,\r\n      setThemeType,\r\n      cardRadius,\r\n      setCardRadius,\r\n      direction,\r\n      setDirection,\r\n      showTourGuide,\r\n      setTourGuideStatus,\r\n    };\r\n  }, [locale, theme, themeType, layout, direction, showTourGuide, cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      palette: {\r\n        ...prevState.palette,\r\n        ...otherThemes[themeType].palette,\r\n      },\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        ...otherThemes[themeType].overrides,\r\n      },\r\n    }));\r\n  }, [themeType]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        MuiCard: {\r\n          ...prevState.overrides.MuiCard,\r\n          root: {\r\n            ...prevState.overrides.MuiCard.root,\r\n            borderRadius: cardRadius,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  }, [cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      direction: direction,\r\n    }));\r\n    document.body.setAttribute('dir', direction);\r\n  }, [direction]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setThemeType(params.get('theme-type'));\r\n    }\r\n\r\n    if (params.get('layout')) {\r\n      setLayout(params.get('layout'));\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import { THEME_TYPES } from '../@jumbo/constants/ThemeOptions';\r\n\r\nexport const semiDarkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const darkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.DARK,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(0, 0, 0, 0.8)',\r\n      menuActiveBgColor: 'rgb(0, 0, 0, 0.5)',\r\n    },\r\n    common: {\r\n      dark: '#fff',\r\n    },\r\n    background: {\r\n      paper: '#121212',\r\n      default: '#2e2e2e',\r\n    },\r\n    text: {\r\n      primary: 'rgba(255, 255, 255, 0.87)',\r\n      secondary: 'rgba(255, 255, 255, 0.6)',\r\n      disabled: 'rgba(255, 255, 255, 0.38)',\r\n      hint: 'rgba(255, 255, 255, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(255, 255, 255, 0.06)',\r\n      dark: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#535151',\r\n      textColor: 'rgba(255, 255, 255, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#363636',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#535050',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#2e2e2e',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const lightTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst GridContainer = ({ children, ...rest }) => {\r\n  return (\r\n    <Grid container spacing={6} {...rest}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GridContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\n\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footerRoot: props => ({\r\n    ...props.separatorStyles,\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardFooter = ({ backgroundColor, gradientDirection, separator, children }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator, true);\r\n\r\n  const classes = useStyles({ separatorStyles });\r\n\r\n  return (\r\n    <Box className={clsx(classes.footerRoot, 'Cmtfooter-root')} style={backgroundStyles}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtCardFooter.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n};\r\n\r\nCmtCardFooter.defaultProps = {\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n};\r\n\r\nexport default CmtCardFooter;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { hexToRgba } from '../CmtHelpers/JssHelper';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  advCardRoot: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    height: '100%',\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  actionMenu: {\r\n    position: 'absolute',\r\n    top: 15,\r\n    right: 15,\r\n    zIndex: 4,\r\n    '& button': {\r\n      backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.5)',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.7)',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\nimport { Box, Card } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport useStyles from './index.style';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CmtAdvCard = ({\r\n  className,\r\n  actions,\r\n  actionHandleIcon,\r\n  actionHandler,\r\n  actionMenuClassName,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  children,\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    // Checking isValidElement is the safe way and avoids a TS error too.\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.advCardRoot, className)}\r\n      style={backgroundStyles}>\r\n      {actions.length > 0 && (\r\n        <Box ml={2} className={clsx(classes.actionMenu, actionMenuClassName)}>\r\n          <CmtDropdownMenu\r\n            TriggerComponent={<IconButton size=\"small\">{actionHandleIcon || <MoreVertIcon fontSize=\"small\" />}</IconButton>}\r\n            items={actions}\r\n            onItemClick={actionHandler}\r\n          />\r\n        </Box>\r\n      )}\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtAdvCard.propTypes = {\r\n  actions: PropTypes.array,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionHandler: PropTypes.func,\r\n  actionMenuClassName: PropTypes.string,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtAdvCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  actions: [],\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n};\r\n\r\nexport default CmtAdvCard;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  advCardContent: props => ({\r\n    ...props.backgroundStyles,\r\n    padding: 24,\r\n    position: 'relative',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '&:before': props.overlayStyles\r\n      ? {\r\n          ...props.overlayStyles,\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0,\r\n          zIndex: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n        }\r\n      : {},\r\n  }),\r\n  alignCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    '& .Cmt-content-head': {\r\n      flexDirection: 'column',\r\n    },\r\n    '& .Cmt-avatar': {\r\n      marginRight: 0,\r\n      marginBottom: 15,\r\n    },\r\n  },\r\n  gridOrder1: {\r\n    order: 1,\r\n  },\r\n  gridOrder2: {\r\n    order: 2,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport useStyles from './CmtAdvCardContent.style';\r\nimport clsx from 'clsx';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst CmtAdvCardContent = ({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  extraContent,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  columnSizes,\r\n  alignCenter,\r\n  reverseDir,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles({ overlayStyles, backgroundStyles, alignCenter });\r\n  const alignCenterClass = alignCenter ? classes.alignCenter : {};\r\n  const blockClasses = reverseDir ? [classes.gridOrder1, classes.gridOrder2] : [classes.gridOrder2, classes.gridOrder1];\r\n  const [blockFirst, blockSecond] = blockClasses;\r\n\r\n  let extraContentRender = null;\r\n  if (extraContent) {\r\n    extraContentRender = typeof extraContent === 'function' ? extraContent() : extraContent;\r\n  }\r\n\r\n  return (\r\n    <Box className={clsx(classes.advCardContent, 'Cmt-card-content', 'CmtAdvCard-Content', className)} {...rest}>\r\n      {extraContentRender || icon || avatar || title || subTitle ? (\r\n        <Grid container spacing={6}>\r\n          <Grid\r\n            item\r\n            xs={alignCenter ? 12 : 12}\r\n            sm={alignCenter ? 12 : columnSizes[0] === 12 ? 12 : 6}\r\n            md={alignCenter ? 12 : columnSizes[0]}\r\n            className={clsx(blockFirst, alignCenterClass)}>\r\n            <Box>\r\n              <CmtContentHead\r\n                icon={icon}\r\n                avatar={avatar}\r\n                title={title}\r\n                titleProps={titleProps}\r\n                subTitle={subTitle}\r\n                subTitleProps={subTitleProps}\r\n              />\r\n            </Box>\r\n            {extraContentRender && <Box>{extraContentRender}</Box>}\r\n          </Grid>\r\n          {children && (\r\n            <Grid\r\n              item\r\n              xs={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 12}\r\n              sm={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 6}\r\n              md={alignCenter ? 12 : columnSizes[1]}\r\n              className={blockSecond}>\r\n              <Box width={1}>{children}</Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} md={12}>\r\n            <Box width={1}>{children}</Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtAdvCardContent.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  extraContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n  reverseDir: PropTypes.bool,\r\n  columnSizes: PropTypes.array,\r\n  alignCenter: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtAdvCardContent.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  reverseDir: false,\r\n  columnSizes: [6, 6],\r\n  alignCenter: false,\r\n  className: '',\r\n};\r\n\r\nexport default CmtAdvCardContent;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeaderRoot: {\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 12,\r\n    marginBottom: 2,\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  iconRoot: {\r\n    fontSize: 14,\r\n    display: 'block',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst apps = [\r\n  {\r\n    label: 'Andrioid App',\r\n    imageURL: '/images/dashboard/google_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n  {\r\n    label: 'IOS App',\r\n    imageURL: '/images/dashboard/apple_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    color: theme.palette.common.white,\r\n    padding: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    marginBottom: 7,\r\n    textTransform: 'uppercase',\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst DownloadApps = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard\r\n      className={classes.cardRoot}\r\n      backgroundColor={['#03DAC5 -18.96%', '#6200EE 108.17%']}\r\n      gradientDirection=\"180deg\">\r\n      <CmtAdvCardContent\r\n        title=\"Download Mobile Apps\"\r\n        titleProps={{\r\n          variant: 'body1',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Now, your account is on your fingers\"\r\n        subTitleProps={{\r\n          variant: 'h1',\r\n          component: 'div',\r\n          className: classes.subTitleRoot,\r\n        }}\r\n        extraContent={\r\n          <Box mt={5} mx={-2} display=\"flex\" alignItems=\"center\">\r\n            {apps.map((app, index) => (\r\n              <Box px={2} key={index}>\r\n                <Link href={app.link}>\r\n                  <CmtImage src={app.imageURL} />\r\n                </Link>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default DownloadApps;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport useStyles from './CryptoCard.style';\r\n\r\nconst CryptoCard = ({ title, amount, progress, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const headerSubTitle = (\r\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n      <div style={{ fontWeight: 'fontWeightBold', fontSize: 20 }}>{amount}</div>\r\n      <Box ml={2} fontSize={16} color={progress.color} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n        {progress.icon}\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CmtCard>\r\n      <CmtCardHeader\r\n        className={classes.cardHeaderRoot}\r\n        titleProps={{\r\n          variant: 'h6',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        title={title}\r\n        subTitle={headerSubTitle}\r\n      />\r\n      {children}\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\n\r\nimport GridContainer from '../../GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mbSpace: {\r\n    marginBottom: 16,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    name: 'USD',\r\n    code: 'usd',\r\n  },\r\n  {\r\n    name: 'INR',\r\n    code: 'inr',\r\n  },\r\n  {\r\n    name: 'EURO',\r\n    code: 'euro',\r\n  },\r\n];\r\n\r\nconst currencyRates = {\r\n  'usd-inr': 74,\r\n  'inr-usd': 0.0135,\r\n  'usd-euro': 0.89,\r\n  'euro-usd': 1.13,\r\n  'inr-euro': 0.0117,\r\n  'euro-inr': 85,\r\n  'inr-inr': 1,\r\n  'usd-usd': 1,\r\n  'euro-euro': 1,\r\n};\r\n\r\nconst ConversionResult = ({ fromCurrency, toCurrency, amount, convertedValue, currencyRate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box component=\"p\" mb={4} fontSize={12} color=\"text.primary\">\r\n        {`${amount} ${fromCurrency.name} equals`}\r\n      </Box>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.textPrimary, classes.mbSpace)}>\r\n        {convertedValue + ' ' + toCurrency.name}\r\n      </Typography>\r\n      <Box component=\"p\" fontSize={12} display=\"flex\" alignItems=\"center\" color=\"text.secondary\" mb={6}>\r\n        <span className=\"mr-2\">\r\n          {`@ 1 ${fromCurrency.name}`} = <span className={classes.textPrimary}>{`${currencyRate} ${toCurrency.name}`}</span>\r\n        </span>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConversionControls = ({ amount, setAmount, fromCurrency, setFromCurrency, toCurrency, setToCurrency }) => {\r\n  return (\r\n    <Box pb={{ xs: 6, md: 10, xl: 16 }}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>From</InputLabel>\r\n            <Select\r\n              label=\"From\"\r\n              value={fromCurrency}\r\n              onChange={event => setFromCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'from',\r\n                id: 'demo-controlled-open-select',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>To</InputLabel>\r\n            <Select\r\n              label=\"To\"\r\n              value={toCurrency}\r\n              onChange={event => setToCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'to',\r\n                id: 'demo-controlled-open-select-to',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Amount\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            fullWidth\r\n            style={{\r\n              marginTop: 0,\r\n              marginBottom: 0,\r\n            }}\r\n            value={amount}\r\n            onChange={e => setAmount(parseFloat(e.target.value))}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CurrencyCalculator = ({ title, titleProps, className }) => {\r\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\r\n  const [toCurrency, setToCurrency] = useState(currencies[1]);\r\n  const [amount, setAmount] = useState(0);\r\n  const [convertedValue, setConvertedValue] = useState(0);\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setCurrencyRate(currencyRates[`${fromCurrency.code}-${toCurrency.code}`]);\r\n    setConvertedValue(amount * currencyRate);\r\n  }, [fromCurrency, toCurrency, amount, currencyRate]);\r\n\r\n  const resetCalculator = () => {\r\n    setFromCurrency(currencies[0]);\r\n    setToCurrency(currencies[1]);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <CmtCard className={className}>\r\n      {title && <CmtCardHeader title={title} titleProps={titleProps} />}\r\n      <CmtCardContent>\r\n        <div>\r\n          <ConversionResult\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              amount,\r\n              convertedValue,\r\n              currencyRate,\r\n            }}\r\n          />\r\n          <ConversionControls\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              setFromCurrency,\r\n              setToCurrency,\r\n              amount,\r\n              setAmount,\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Button variant=\"outlined\" size={'large'} onClick={resetCalculator}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CurrencyCalculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.typography.body1,\r\n    color: theme.palette.text.primary,\r\n    wordBreak: 'break-word',\r\n    '& .anchor-link': {\r\n      marginTop: -96, // Offset for the anchor.\r\n      position: 'absolute',\r\n    },\r\n    '& pre, pre.language-jsx': {\r\n      margin: theme.spacing(0, 'auto'),\r\n      padding: theme.spacing(4),\r\n      backgroundColor: '#272c34',\r\n      direction: 'ltr',\r\n      borderRadius: 0,\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\r\n      maxWidth: 'calc(100vw - 32px)',\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: 'calc(100vw - 32px - 16px)',\r\n      },\r\n    },\r\n    // inline code\r\n    '& code': {\r\n      direction: 'ltr',\r\n      lineHeight: 1.4,\r\n      display: 'inline-block',\r\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n      WebkitFontSmoothing: 'subpixel-antialiased',\r\n      padding: '0 3px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 229, 100, 0.2)' : 'rgba(255, 229, 100, 0.2)',\r\n      fontSize: '.85em',\r\n      borderRadius: 2,\r\n    },\r\n    '& code[class*=\"language-\"]': {\r\n      backgroundColor: '#272c34',\r\n      color: '#fff',\r\n      // Avoid layout jump after hydration (style injected by prism)\r\n      lineHeight: 1.5,\r\n    },\r\n    // code blocks\r\n    '& pre code': {\r\n      fontSize: '.9em',\r\n    },\r\n    '& .token.operator': {\r\n      background: 'transparent',\r\n    },\r\n    '& h1': {\r\n      ...theme.typography.h3,\r\n      fontSize: 40,\r\n      margin: '16px 0',\r\n    },\r\n    '& .description': {\r\n      ...theme.typography.h5,\r\n      margin: '0 0 40px',\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h4,\r\n      fontSize: 30,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h5,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h6,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.subtitle2,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& p, & ul, & ol': {\r\n      marginTop: 0,\r\n      marginBottom: 16,\r\n    },\r\n    '& ul': {\r\n      paddingLeft: 30,\r\n    },\r\n    '& h1, & h2, & h3, & h4': {\r\n      '& code': {\r\n        fontSize: 'inherit',\r\n        lineHeight: 'inherit',\r\n        // Remove scroll on small screens.\r\n        wordBreak: 'break-all',\r\n      },\r\n      '& .anchor-link-style': {\r\n        // To prevent the link to get the focus.\r\n        display: 'none',\r\n      },\r\n      '&:hover .anchor-link-style': {\r\n        display: 'inline-block',\r\n        padding: '0 8px',\r\n        color: theme.palette.text.secondary,\r\n        '&:hover': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n        '& svg': {\r\n          width: '0.7em',\r\n          height: '0.7em',\r\n          fill: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n    '& table': {\r\n      // Trade display table for scroll overflow\r\n      display: 'block',\r\n      wordBreak: 'normal',\r\n      width: '100%',\r\n      overflowX: 'auto',\r\n      WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\r\n      borderCollapse: 'collapse',\r\n      marginBottom: '16px',\r\n      borderSpacing: 0,\r\n      overflow: 'hidden',\r\n      '& .prop-name': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n      },\r\n      '& .required': {\r\n        color: theme.palette.type === 'light' ? '#006500' : '#a5ffa5',\r\n      },\r\n      '& .prop-type': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        color: theme.palette.type === 'light' ? '#932981' : '#ffb6ec',\r\n      },\r\n      '& .prop-default': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        borderBottom: `1px dotted ${theme.palette.divider}`,\r\n      },\r\n    },\r\n    '& td': {\r\n      ...theme.typography.body2,\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& td code': {\r\n      lineHeight: 1.6,\r\n    },\r\n    '& th': {\r\n      lineHeight: theme.typography.pxToRem(24),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      color: theme.palette.text.primary,\r\n      whiteSpace: 'pre',\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n    },\r\n    '& blockquote': {\r\n      borderLeft: '5px solid #ffe564',\r\n      backgroundColor: 'rgba(255,229,100,0.2)',\r\n      padding: '4px 24px',\r\n      margin: '24px 0',\r\n      '& p': {\r\n        marginTop: '16px',\r\n      },\r\n    },\r\n    '& a, & a code': {\r\n      // Style taken from the Link component\r\n      color: theme.palette.secondary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n    '& img, video': {\r\n      maxWidth: '100%',\r\n    },\r\n    '& img': {\r\n      // Avoid layout jump\r\n      display: 'inline-block',\r\n    },\r\n    '& hr': {\r\n      height: 1,\r\n      margin: theme.spacing(6, 0),\r\n      border: 'none',\r\n      flexShrink: 0,\r\n      backgroundColor: theme.palette.divider,\r\n    },\r\n    '& kbd': {\r\n      // Style taken from GitHub\r\n      padding: '2px 5px',\r\n      font: '11px Consolas,Liberation Mono,Menlo,monospace',\r\n      lineHeight: '10px',\r\n      color: '#444d56',\r\n      verticalAlign: 'middle',\r\n      backgroundColor: '#fafbfc',\r\n      border: '1px solid #d1d5da',\r\n      borderRadius: 3,\r\n      boxShadow: 'inset 0 -1px 0 #d1d5da',\r\n    },\r\n    '& .token.property, .token.tag, .token.constant, .token.symbol, .token.deleted': {\r\n      color: 'rgb(252, 146, 158)',\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    maxHeight: 'min(68vh, 1000px)',\r\n  },\r\n});\r\nconst useStyles = makeStyles(styles, { name: 'MarkdownElement', flip: false });\r\n\r\nconst MarkdownElement = React.forwardRef(function MarkdownElement(props, ref) {\r\n  const { className, renderedMarkdown, ...other } = props;\r\n  const classes = useStyles();\r\n  const more = {};\r\n\r\n  if (typeof renderedMarkdown === 'string') {\r\n    // workaround for https://github.com/facebook/react/issues/17170\r\n    // otherwise we could just set `dangerouslySetInnerHTML={undefined}`\r\n    more.dangerouslySetInnerHTML = { __html: renderedMarkdown };\r\n  }\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.scrollbarRoot}>\r\n      <div className={clsx(classes.root, 'markdown-body', className)} {...more} {...other} ref={ref} />\r\n    </PerfectScrollbar>\r\n  );\r\n});\r\n\r\nMarkdownElement.propTypes = {\r\n  className: PropTypes.string,\r\n  renderedMarkdown: PropTypes.string,\r\n};\r\n\r\nexport default MarkdownElement;\r\n","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport MarkdownElement from './MarkdownElement';\r\nimport prism from '../../../utils/prism';\r\n\r\nconst HighlightedCode = React.forwardRef(function HighlightedCode(props, ref) {\r\n  const { code, language, ...other } = props;\r\n  const renderedCode = React.useMemo(() => {\r\n    return prism(code.trim(), language);\r\n  }, [code, language]);\r\n\r\n  return (\r\n    <MarkdownElement ref={ref} {...other}>\r\n      <pre>\r\n        <code\r\n          className={`language-${language}`}\r\n          // eslint-disable-next-line react/no-danger\r\n          dangerouslySetInnerHTML={{ __html: renderedCode }}\r\n        />\r\n      </pre>\r\n    </MarkdownElement>\r\n  );\r\n});\r\n\r\nHighlightedCode.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  language: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HighlightedCode;\r\n","import prism from 'prismjs';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-diff';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\n\r\nexport default function highlight(code, language) {\r\n  let prismLanguage;\r\n  switch (language) {\r\n    case 'ts':\r\n      prismLanguage = prism.languages.tsx;\r\n      break;\r\n\r\n    case 'js':\r\n    case 'sh':\r\n      prismLanguage = prism.languages.jsx;\r\n      break;\r\n\r\n    case 'diff':\r\n      prismLanguage = { ...prism.languages.diff };\r\n      // original `/^[-<].*$/m` matches lines starting with `<` which matches\r\n      // <SomeComponent />\r\n      // we will only use `-` as the deleted marker\r\n      prismLanguage.deleted = /^[-].*$/m;\r\n      break;\r\n\r\n    default:\r\n      prismLanguage = prism.languages[language];\r\n      break;\r\n  }\r\n\r\n  if (!prismLanguage) {\r\n    if (language) {\r\n      throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\r\n    } else {\r\n      prismLanguage = prism.languages.jsx;\r\n    }\r\n  }\r\n\r\n  return prism.highlight(code, prismLanguage);\r\n}\r\n","import React from 'react';\r\n\r\nimport { CardActions, makeStyles } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: '8px 24px',\r\n  },\r\n}));\r\n\r\nconst CmtCardActions = ({ className, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardActions className={clsx(classes.root, className, 'CmtCard-Actions')} {...rest}>\r\n      {children}\r\n    </CardActions>\r\n  );\r\n};\r\n\r\nCmtCardActions.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CmtCardActions;\r\n","import React, { useState } from 'react';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport HighlightedCode from './HighlightedCode';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Collapse, IconButton, Snackbar, Tooltip } from '@material-ui/core';\r\nimport CmtCardActions from '../../../../@coremat/CmtCard/CmtCardActions';\r\nimport copy from 'clipboard-copy';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    overflow: 'unset',\r\n  },\r\n  cardContent: {\r\n    position: 'relative',\r\n    paddingBottom: 0,\r\n  },\r\n  cardContentInner: {\r\n    position: 'relative',\r\n    paddingBottom: 40,\r\n  },\r\n  actionButtons: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  collapseStyle: {\r\n    borderBottomRightRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottomLeftRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottom: `4px solid ${theme.palette.primary.main}`,\r\n    overflow: 'hidden',\r\n  },\r\n}));\r\n\r\nconst CodeViewerCard = ({ code, language, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(undefined);\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleCopyClick = async () => {\r\n    await copy(code);\r\n    setSnackbarMessage('The source code has been copied.');\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const showCodeLabel = collapsed ? 'Hide the source' : 'Show the source';\r\n\r\n  return (\r\n    <CmtCard {...rest} className={classes.card}>\r\n      <CmtCardContent className={classes.cardContent}>\r\n        <Box className={classes.cardContentInner}>\r\n          {children}\r\n          {code && (\r\n            <CmtCardActions className={classes.actionButtons}>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={showCodeLabel} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={() => setCollapsed(!collapsed)}>\r\n                  <CodeIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={'Copy the source'} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={handleCopyClick}>\r\n                  <FileCopyOutlinedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </CmtCardActions>\r\n          )}\r\n        </Box>\r\n      </CmtCardContent>\r\n\r\n      <Collapse className={classes.collapseStyle} in={collapsed}>\r\n        <HighlightedCode code={code} language={language} />\r\n      </Collapse>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={handleSnackbarClose} message={snackbarMessage} />\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CodeViewerCard;\r\n","import React from 'react';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeader: {\r\n    padding: 16,\r\n  },\r\n  cardBody: {\r\n    position: 'relative',\r\n  },\r\n  cardContent: {\r\n    padding: 16,\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    zIndex: 1,\r\n  },\r\n  chartTitle: {\r\n    marginBottom: 6,\r\n  },\r\n  chartSubTitle: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nconst StatisticsCard = ({ backgroundColor, title, titleProps, amount, description, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard backgroundColor={backgroundColor} {...rest}>\r\n      <CmtCardHeader className={classes.cardHeader} title={title} titleProps={titleProps} />\r\n      <Box className={classes.cardBody}>\r\n        <CmtAdvCardContent\r\n          className={classes.cardContent}\r\n          title={amount}\r\n          titleProps={{\r\n            variant: 'h1',\r\n            component: 'div',\r\n            className: classes.chartTitle,\r\n          }}\r\n          subTitle={description}\r\n          subTitleProps={{\r\n            className: classes.chartSubTitle,\r\n          }}\r\n          columnSizes={[12, 0]}\r\n        />\r\n        {children}\r\n      </Box>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default StatisticsCard;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#FA744F',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst MissedCallGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"card-img-bottom overflow-hidden\" width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time}({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color5\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#F79071\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#FA744F\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={0}\r\n          stackId=\"2\"\r\n          stroke=\"#FA744F\"\r\n          fill=\"url(#color5)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MissedCallGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneMissed';\r\nimport MissedGraph from './MissedCallGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst MissedCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.missed'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#8DCD03' }}>\r\n        <MissedGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissedCall;\r\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#8d46ef',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport useStyles from './InboundStyle';\r\n\r\nconst InboundGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className={classes.root} width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time} ({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#6166B3\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#544179\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#6200EE\"\r\n          fill=\"url(#color3)\"\r\n          fillOpacity={1}\r\n          type={'monotone'}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default InboundGraph;\r\n/**\r\n */\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneCallBackIcon from '@material-ui/icons/PhoneCallback';\r\nimport InboundGraph from './InboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst InboundRules = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.inbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ color: '#ffc107', icon: <PhoneCallBackIcon /> }}>\r\n        <InboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboundRules;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst HeaderChart = props => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const _stroke = ctx.stroke;\r\n    let label = [];\r\n    let countInbound = [];\r\n    let countOutbound = [];\r\n    let countMissed = [];\r\n    ctx.stroke = function() {\r\n      ctx.save();\r\n      ctx.shadowColor = '#4C4C4C';\r\n      ctx.shadowBlur = 10;\r\n      ctx.shadowOffsetX = 2;\r\n      ctx.shadowOffsetY = 2;\r\n      _stroke.apply(this, arguments);\r\n      ctx.restore();\r\n    };\r\n    const inbound = props.inbound;\r\n    const outbound = props.outbound;\r\n    const missed = props.missed;\r\n    for (var i = 0; i < inbound.length; i++) {\r\n      label[i] = inbound[i].start_time;\r\n      countInbound[i] = inbound[i].count;\r\n      countOutbound[i] = outbound[i] !== undefined ? outbound[i].count : 0;\r\n      countMissed[i] = missed[i] !== undefined ? missed[i].count : 0;\r\n    }\r\n\r\n    return {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: 'Inbound Calls',\r\n          data: countInbound,\r\n          borderColor: '#7F39FB',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#7F39FB',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#7F39FB',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Outbound Calls',\r\n          data: countOutbound,\r\n          borderColor: '#FF8C00',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#FF8C00',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#FF8C00',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Missed Calls',\r\n          data: countMissed,\r\n          borderColor: '#0795F4',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#0795F4',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#0795F4',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <Line data={data} height={100} options={options} />;\r\n};\r\n\r\nexport default HeaderChart;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    marginRight: 15,\r\n  },\r\n});\r\n\r\nconst HeaderChartItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box bgcolor={item.bgColor} color={item.color} className={classes.avatar}>\r\n        {item.icon}\r\n      </Box>\r\n      <Box fontSize={16} fontWeight={700} color=\"text.primary\">\r\n        {item.label}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default HeaderChartItem;\r\n","import React from 'react';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport SiteTrafficGraph from './HeaderChart';\r\nimport { PhoneCallback, PhoneMissed, PhoneForwarded } from '@material-ui/icons';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Item from './HeaderChartItem';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles(theme => ({\r\n  scrollbarRoot: {\r\n    maxHeight: 350,\r\n  },\r\n  searchAction: {\r\n    position: 'relative',\r\n    width: 38,\r\n    height: 38,\r\n  },\r\n  searchActionBar: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 2,\r\n    zIndex: 1,\r\n  },\r\n  cardContentRoot: {\r\n    '& .MuiGrid-container': {\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.15),\r\n    color: theme.palette.success.main,\r\n    padding: '2px 10px',\r\n    borderRadius: 30,\r\n  },\r\n  optionList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 24,\r\n\r\n    '& > *:not(:last-child)': {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up('md')]: {\r\n        marginRight: 40,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SiteTraffic = props => {\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n  const actions = [\r\n    {\r\n      label: <IntlMessages id={'select.menu.weekly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('weekly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.monthly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('monthly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.yearly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('yearly');\r\n      },\r\n    },\r\n  ];\r\n  const list = [\r\n    {\r\n      icon: <PhoneCallback />,\r\n      label: <IntlMessages id={'dashboard.inbound'} />,\r\n      bgColor: '#C8BDFA',\r\n      color: '#7F39FB',\r\n    },\r\n    {\r\n      icon: <PhoneMissed />,\r\n      label: <IntlMessages id={'dashboard.missed'} />,\r\n      bgColor: '#ADD8E6',\r\n      color: '#0795F4',\r\n    },\r\n    {\r\n      icon: <PhoneForwarded />,\r\n      label: <IntlMessages id={'dashboard.outbound'} />,\r\n      bgColor: '#FBF3D2',\r\n      color: '#FF8C00',\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CmtAdvCard>\r\n        <CmtCardHeader\r\n          className={clsx(classes.headerRoot, 'pt-4')}\r\n          title={<IntlMessages id={'dashboard.statistics'} />}\r\n          actionsPos=\"top-corner\"\r\n          actions={actions}\r\n          style={{ height: '10px' }}></CmtCardHeader>\r\n        <CmtAdvCardContent className={classes.cardContentRoot}>\r\n          <CmtList\r\n            className={classes.optionList}\r\n            data={list}\r\n            style={{ height: '25px' }}\r\n            renderRow={(item, index) => <Item key={index} item={item} />}\r\n          />\r\n          <Box>\r\n            <SiteTrafficGraph inbound={props.inbound} outbound={props.outbound} missed={props.missed} />\r\n          </Box>\r\n        </CmtAdvCardContent>\r\n      </CmtAdvCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteTraffic;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#4E8D7C',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst OutboundGraph = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <Box className={classes.tooltip}>\r\n                {(data.payload[0].payload.start_time)} ({data.payload[0].payload.count})\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color12\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#ADCE74\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#4E8D7C\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#4E8D7C\"\r\n          fill=\"url(#color12)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default OutboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneForwarded';\r\nimport OutboundGraph from './OutboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst OutboundCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.outbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#E00930' }}>\r\n        <OutboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboundCall;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport clsx from 'clsx';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  containerRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  containerRootCenter: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  contentRoot: {\r\n    position: 'relative',\r\n  },\r\n  contentRootCenter: {\r\n    marginLeft: 0,\r\n    marginTop: 13,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n  },\r\n}));\r\n\r\nconst CounterCard = ({\r\n  icon,\r\n  number,\r\n  numberProps,\r\n  label,\r\n  labelProps,\r\n  counterProps,\r\n  color,\r\n  gradientDirection,\r\n  alignCenter,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtCard gradientDirection={gradientDirection} {...rest}>\r\n      <CmtCardContent>\r\n        <Box\r\n          className={clsx(classes.containerRoot, 'container', {\r\n            [classes.containerRootCenter]: alignCenter,\r\n          })}\r\n          color={color}>\r\n          {typeof icon === 'string' ? <CmtImage src={icon} alt={label} /> : icon}\r\n          <Box\r\n            ml={{ xs: 3, xl: 5 }}\r\n            className={clsx(classes.contentRoot, 'content-wrapper', {\r\n              [classes.contentRootCenter]: alignCenter,\r\n            })}>\r\n            <Box component=\"h3\" fontSize={{ xs: 20, xl: 24 }} className={clsx(classes.titleRoot, 'title')} {...numberProps}>\r\n              {typeof number === 'string' ? (\r\n                number\r\n              ) : (\r\n                <CountUp start={0} end={number} useEasing={false} separator={','} {...counterProps} />\r\n              )}\r\n            </Box>\r\n            <Box component=\"p\" {...labelProps}>\r\n              {label}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCounterCard.prototype = {\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  numberProps: PropTypes.object,\r\n  label: PropTypes.string,\r\n  labelProps: PropTypes.object,\r\n  counterProps: PropTypes.object,\r\n  color: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  alignCenter: PropTypes.bool,\r\n};\r\n\r\nCounterCard.defaultProps = {\r\n  color: 'common.white',\r\n  gradientDirection: '180deg',\r\n  alignCenter: false,\r\n};\r\n\r\nexport default CounterCard;\r\n","import axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nconst validationUrl = '185.141.109.102';\r\nconst url = '35.204.236.178';\r\nconst port = '4444';\r\n\r\nexport const getInboundCalls = async param => {\r\n  let query = `SELECT count (distinct(call_id)),\r\n  to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time\r\n  FROM cl_segments_view_new\r\n  where  (date_trunc('day', NOW() - INTERVAL '${param} day') <= start_time) \r\n  and act != 1 \r\n  and dst_dn_type = 0\r\n  and src_dn_type = 1\r\n  group by start_time::timestamp::date\r\n  order by start_time::timestamp::date asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getDidData = async query => {\r\n  console.log(query);\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidDataCount = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidNumbers = async => {\r\n  let query = `select \r\nsubstring(conditiondata from '[0-9]+')  as conditiondata\r\nfrom inboundrule\r\nwhere conditiondata != '' \r\nand substring(conditiondata from '[0-9]+') is not null\r\norder by substring(conditiondata from '[0-9]+') asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getMonthlyDetails = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getMonthlyTotal = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getAgentList = async values => {\r\n  return await axios.post(`http://${url}:${port}/agentstatus`, values);\r\n};\r\nexport const getCallLog = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTrunksUp = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getCallLogDetails = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTotalTrunks = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getExtensions = param => {\r\n  return axios.post(`http://${url}:${port}/extension`, param);\r\n};\r\n\r\nexport const getMissedCalls = async param => {\r\n  let query =\r\n    \"select to_char(date_trunc('day',t1.time_start), 'yyyy-mm-dd' ) as times, count(distinct(call_history_id)) from callcent_queuecalls_view t1 where t1.from_userpart != '' and (date_trunc('day', NOW() + INTERVAL '1 day') >=  t1.time_start) and  (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= t1.time_start) and is_answered = false group by times order by times\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getActiveCallCount = param => {\r\n  return axios.post(`http://${url}:${port}/activecallcount`, param);\r\n};\r\n\r\nexport const getOutboundCalls = async param => {\r\n  let query =\r\n    \"SELECT count (start_time::timestamp::date), to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time FROM cl_segments_view where dst_end_time - dst_answer_time != interval '00:00:00' and dst_caller_number like '%' and dst_answer_time is not null  and (date_trunc('day', NOW() + INTERVAL '1 day') >=  start_time) and (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= start_time) and dst_dn_type = 1 and src_dn_type = 0 and act != 0 group by start_time::timestamp::date order by start_time::timestamp::date asc\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getQueue = async () => {\r\n  const query = 'SELECT * FROM queue_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getRepetetiveAll = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(src_display_name) as cnt,\r\n\t  src_display_name \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'\r\n\t  group by src_display_name order by cnt desc\r\n\t  limit ${limit} offset ${allCallOffset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveAllCount = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(distinct(src_display_name)) as cnt \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveCallerDetails = async (param, callerNumber) => {\r\n  const query = `SELECT \r\n  src_display_name,\r\n  src_did,\r\n  dst_display_name,\r\n  to_char(dst_end_time-dst_answer_time ,'HH24h MIm SSs')as talkingtime,\r\n  to_char(dst_answer_time-dst_start_time,'HH24h MIm SSs') as waitingtime\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and src_dn_type = 1\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n  and src_display_name = '${callerNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getReturnedDropCall = async (limit, offset, agNum, qNum) => {\r\n  const string = `with recursive dropped as (\r\n    select \r\n    *\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() + INTERVAL '1 day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '0 day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false  \r\n  )\r\n  select\r\n  cl_segments_view_new.src_dn,\r\n  cl_segments_view_new.src_display_name,\r\n  to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as dst_start_time,\r\n  to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as dst_end_time,\r\n  cl_segments_view_new.dst_dn,\r\n  dropped.q_num,\r\n  to_char(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_start_time,'HH24:MI:SS') as duration\r\n  from dropped\r\n  left outer join cl_segments_view_new on (dropped.from_userpart = cl_segments_view_new.dst_dn)\r\n  where cl_segments_view_new.dst_start_time > dropped.time_start\r\n  and cl_segments_view_new.src_dn like '%${agNum}'\r\n  and dropped.q_num like '%${qNum}'\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getCdr = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMontlyLog = async (paramMonth, paramBack) => {\r\n  const query = `SELECT \r\n    DATE_TRUNC('month',start_time),\r\n    COUNT (distinct(call_id)) as toplam\r\n    FROM cl_segments_view_new\r\n    where (date_trunc('month', NOW() - INTERVAL '${paramBack + paramMonth - 1} month') <= start_time) \r\n    and  date_trunc('month',now() - interval '${paramMonth - 2} month') >= start_time\r\n    GROUP BY DATE_TRUNC('month',start_time)\r\n    ORDER BY DATE_TRUNC('month',start_time) desc`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getCallComparison = async (paramDate, paramBack) => {\r\n  const string =\r\n    \"select count (distinct(call_id)) , cast(sum(end_time-start_time) as text) as total, to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') , 'yyyy-mm-dd HH24:MI:ss') as day_log,date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"') + '- \" +\r\n    paramBack +\r\n    \" day' <= start_time) and (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"')  + '1 day' >= start_time)  and act != 1 and start_time < end_time group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') desc\";\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallComparisonDaily = async (paramDate, paramBack) => {\r\n  const string = `select count (distinct(call_id)),\r\n   sum(end_time-start_time) as total,\r\n   to_char(date_trunc('day',  start_time) , 'yyyy-mm-dd') as day_log,\r\n   date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act\r\n   from cl_segments_view_new\r\n   where (date_trunc('day',  TIMESTAMP '${paramDate}') + '-${paramBack} day' <= start_time) \r\n   and (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)  \r\n   and act != 1 \r\n   and start_time < end_time\r\n   group by date_trunc('day',  start_time) \r\n   order by date_trunc('day',  start_time) desc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLog = async paramDate => {\r\n  const string = `select \r\n  count (distinct(call_id)) ,\r\n  cast(sum(end_time-start_time) as text) as total,\r\n  to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  end_time> start_time\r\n  group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') \r\n  order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLogTable = async paramDate => {\r\n  const string = ` select \r\n  to_char(date_trunc('day',  start_time),'dd-mm-yyyy HH24:MI:SS') as hour_log,\r\n  count (distinct(call_id)) , sum(end_time-start_time) as total,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new\r\n  where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  start_time<end_time\r\n  group by date_trunc('day',  start_time) \r\n  order by date_trunc('day',  start_time) desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getRepetetiveAnswered = async (param, limit, answeredCallsOffset) => {\r\n  const query =\r\n    \"SELECT count( src_display_name) as cnt,src_display_name FROM  cl_segments_view_new as t where dst_end_time - dst_answer_time != interval '00:00:00' and dst_answer_time is not null and src_display_name like '0%' and (date_trunc('day', timestamp '\" +\r\n    param.paramStart +\r\n    \"' - INTERVAL '0 day') <= start_time) and (date_trunc('day', timestamp '\" +\r\n    param.paramFinish +\r\n    \"' + INTERVAL '1 day') >=  start_time) and dst_dn_type = '0' group by src_display_name order by cnt desc limit \" +\r\n    limit +\r\n    ' offset ' +\r\n    answeredCallsOffset;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getRepetetiveAnsweredCount = async param => {\r\n  const string = `SELECT \r\n  count(distinct( src_display_name)) as cnt\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and dst_answer_time is not null\r\n  and src_display_name like '0%'\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time)\r\n  and dst_dn_type = '0'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetails = async (params, queue) => {\r\n  const query = `SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tto_char(sum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*),'HH24:MI:SS') as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >=  timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n\torder by (date_trunc('day' , callcent_ag_dropped_calls.time_start)) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetailsTotal = async (params, queue) => {\r\n  const query = `with recursive cte1 as (\r\n    SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*) as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >= timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n)\r\nselect\r\ncount(cte1.day_abandoned) as day_count,\r\nsum(cte1.cnt) as totalcount,\r\nsum(cte1.total_waiting) as totalwaiting,\r\nto_char(sum(cte1.act)/count(cte1.day_abandoned),'HH24:MI:SS') as act\r\nfrom cte1`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCalls = async (params, queue) => {\r\n  const query = `SELECT t1.from_userpart, to_char(date_trunc('second',t1.time_start + interval '3 hour'), 'yyyy-mm-dd HH24:MI:SS') as timeofevent, count(t1.is_answered), queue_view.display_name from callcent_queuecalls_view t1  inner join queue_view on queue_view.dn = t1.q_num  where t1.from_userpart != '' and queue_view.display_name like '%${queue}' and (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >=  t1.time_start)  and (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start) and is_answered = false group by t1.from_userpart , timeofevent,queue_view.display_name order by timeofevent`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCallDetails = async (params, from_userpart) => {\r\n  const query = `SELECT '<--' as direction,src_dn,to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') AS dst_start_time,to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as dst_end_time,dst_end_time - dst_start_time as calltime from cl_segments_view_new where dst_dn = '${from_userpart}'\r\n  and (date_trunc('second', timestamp '${params}') <=  start_time at time zone 'utc' at time zone 'Etc/GMT+3') \r\n    union \r\n    SELECT  '-->' as direction, \r\n    from_userpart,\r\n    to_char(time_start at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    time_end - time_start as calltime \r\n    from callcent_queuecalls_view where from_userpart like '%${from_userpart}'\r\n    and \r\n    is_answered = true \r\n    and (date_trunc('second', timestamp '${params}') <=  time_start at time zone 'utc' at time zone 'Etc/GMT+3') \r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCalls = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getServiceLevel = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDropCall = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    q_num,\r\n    to_char(time_start,'dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end,'dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    ring_time,\r\n    from_userpart \r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day' ) >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n    order by time_start asc \r\n    LIMIT ${limit} OFFSET ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallSummary = async (paramStart, paramFinish) => {\r\n  const string = `    select\r\n\tto_char(date_trunc('day',time_start) , 'dd-mm-yyyy'),\r\n\tcount(distinct(call_history_id)),\r\n\tto_char(date_trunc('second',sum(ring_time)/count(distinct(call_history_id))),'HH24:MI:SS') as ring_time\r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n\tgroup by date_trunc('day',time_start)\t\r\n\torder by date_trunc('day',time_start) asc\r\n`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallCount = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    count(*)\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - INTERVAL '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day' ) <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getRecording = async (path, dir) => {\r\n  // Kgm = let directory = `E:/Recordings` + '/' + dir.split('/')[0];\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  const response = await axios.get(`http://${url}:${port}/downloadrecord/` + query);\r\n\r\n  return response;\r\n};\r\nexport const getPath = async () => {\r\n  let query = 'SELECT * FROM public.phonesystem_mastertable ORDER BY instanceparamname ASC';\r\n  return axios.post(`http://${url}:${port}/querymaster`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getRecordingPath = async () => {\r\n  let query =\r\n    \"SELECT instanceparamvalue FROM public.phonesystem_mastertable where instanceparamname = '\" +\r\n    'INST_RECORDING_PATH' +\r\n    \"'  ORDER BY instanceparamname ASC \";\r\n  return axios.post(`http://${url}:${port}/querymaster`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getValidation = async (param, type) => {\r\n  const response = await axios.get(`http://${validationUrl}:${port}/api/validation/?string=${param}&type=${type}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserAuth = async (username, password) => {\r\n  const response = await axios.get(`http://${url}:${port}/password/${username}/${password}`, {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const getUserPass = async pass => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(`http://${url}:5600/api/userPass/?pass=` + encodeURIComponent(pass), config);\r\n  return response.data;\r\n};\r\n\r\nexport const getQueueList = async pass => {\r\n  return axios.post(`http://${url}:${port}/queuewaiting`, {\r\n    token: localStorage.getItem('token'),\r\n  });\r\n};\r\n\r\nexport const getAgentConnection = async pass => {\r\n  return axios.post(`http://${url}:${port}/detailconn`, { token: localStorage.getItem('token') });\r\n};\r\n\r\nexport const getAgentStatus = async pass => {\r\n  let query = `WITH RECURSIVE cte1 as (\r\n    select \r\n    dn.value,\r\n    ivr.name \r\n    from \r\n    dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    ) , \r\n    cte2 as (\r\n    select\r\n    * from callcent_ag_qstatus\r\n    where timeofupdate > date_trunc('day', timestamp '${pass}')\r\n    )\r\n  select\r\n  dn,\r\n  display_name,\r\n  coalesce((\r\n  select \r\n  case \r\n  when cte2.is_loggedin_in_queue = 0 then 'Login' \r\n  when cte2.is_loggedin_in_queue = 1 then 'Logout'\r\n  else cte1.name\r\n  end as status\r\n  from cte2\r\n  left outer join cte1 on cte1.value = cast(cte2.is_loggedin_in_queue as character varying)\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1  \r\n  ),'State') as states,\r\n  date_trunc('second',coalesce(now()- (\r\n  select \r\n  timeofupdate\r\n  from cte2\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1\r\n  ),'10000 hours')) as statusTime\r\n  from users_view t\r\n  order by dn asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getBlock = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:5600/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\nexport const getAgentNumber = async () => {\r\n  let string = 'SELECT * FROM users_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueNumber = async () => {\r\n  let string = 'SELECT * FROM public.queue_view order by dn asc';\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailyCallDetails = async mydate => {\r\n  let query = `WITH RECURSIVE cte1 AS (\r\n    select \r\n    * \r\n    from cl_segments_view_new\r\n    where \r\n    start_time > date_trunc('day', timestamp '${mydate}')\r\n    and\r\n\t  start_time<end_time\r\n    order by start_time desc\r\n    )\r\n    select \r\n    ( select count (distinct call_id) from cte1) as total_call,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 0 and dst_dn_type = 1) as outbound_calls,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 0 and dst_dn_type = 0 ) as agent_to_agent_calls,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 1 and dst_dn_type = 0 and dst_answer_time is not null) as answered_inbound_calls,\r\n    (select sum(end_time-start_time) as totaltime from cte1),\r\n    (select (date_trunc('second',(date_trunc('second', sum(end_time-start_time))/( select count (distinct cte1.call_id) from cte1 ))))as average from cte1)`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakTime = async mydate => {\r\n  let query = `select * from logouts`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakName = async mydate => {\r\n  let query = `select \r\n  dn.value,\r\n  ivr.name,\r\n  dn.iddn \r\n  from dn \r\n  inner join ivr on dn.iddn = ivr.fkiddn\r\n  where cast(substring(dn.value from '[0-9]+') as bigint) >= 8072 \r\n  and cast(substring(dn.value from '[0-9]+') as bigint) <= 8079\r\n  order by dn.value asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakName = async (breakName, breakId) => {\r\n  let query = `update ivr set name = '${breakName}'\r\n  where ivr.fkiddn = ${breakId}`;\r\n  return axios.post(`http://${url}:${port}/insertsingle`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakTime = async (breakTime, breakNumber) => {\r\n  let query = `update logouts set period = ${breakTime}\r\n  where logouttype = '${breakNumber}'`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentDetails = async (agentNum, date) => {\r\n  let query = `\r\n  with recursive cte1 as \r\n\t( \r\n\tselect\r\n\tdst_dn,\r\n\tdst_display_name,\t\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time) as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom \r\n\tcl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\t((dst_dn_type = 0))\r\n\tand\r\n\tdst_dn = '${agentNum}'\t\r\n\tand \r\n\tact != 1\r\n\tgroup by dst_dn,dst_display_name),\r\n  cte2 as (\r\n\tselect\r\n\tsrc_dn,\r\n\tsrc_display_name,\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time)as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom cl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\tsrc_dn = '${agentNum}'\t\r\n\tand\r\n\t((src_dn_type =0) and (dst_dn_type=1))\r\n\t\r\n\tand \r\n\tact != 1\r\n\tgroup by src_dn,src_display_name\r\n) \t\r\n\tselect dst_dn,\r\n\tdst_display_name,\r\n  coalesce(cte1.totalcall,0) as inboundtotalcall,\r\n\tcoalesce(cte2.totalcall,0) as outboundtotalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') as inboundtotaltime,\r\n\tcoalesce(cte2.totaltime ,'0 second') as outboundtotaltime,\r\n\tcoalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0) as totalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second') as totaltime,\r\n\tdate_trunc('second',((coalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second'))/(coalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0)))) as average,\r\n  date_trunc('second',((coalesce(cte1.totaltime,'0 second') /(coalesce(cte1.totalcall,1))))) as inboundaverage,\t\r\n\tdate_trunc('second',((coalesce(cte2.totaltime,'0 second')/(coalesce(cte2.totalcall,1))))) as outboundaverage,\r\n\tcoalesce(cte1.totalcall,0) as inbound_call_to_agent,\r\n\tcoalesce(cte2.totalcall,0) as outbound_call_to_agent,\r\n\t(select count(distinct(call_id)) from cl_segments_view_new \r\n\t where dst_answer_time is not null \r\n\t and dst_dn = cte1.dst_dn\r\n\t and start_time > date_trunc('day',timestamp '${date}')) as answered_call\r\n\tfrom cte1\r\n\tleft outer join cte2 on cte1.dst_dn = cte2.src_dn\r\n  \r\n\r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSession = async (agNum, qNum, breakName, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%${qNum}'\r\n    and\r\n    ag_num like '%${agNum}'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )\r\n    \r\n    select \r\n    cte2.ag_num,\r\n    cte2.q_num,\r\n    case\r\n    when cte2.mainreason = 0 then 'Login'\r\n    when cte2.mainreason = 1 then 'Logout'\r\n    else cte1.name\r\n    end as status,\r\n    to_char(cte2.escapetime , 'dd.HH24:MI:SS') AS escapetime\r\n  \r\n   from cte2\t\r\n   left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n   where cast(cte2.mainreason as text) like '%${breakName}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSessionClicked = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte2.ag_num as Agent,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 1),'0 second')),'DDg HH24h MIm SSs') as Logout,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8072),'0 second')),'DDg HH24h MIm SSs') as \"m8072\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8073),'0 second')),'DDg HH24h MIm SSs') as \"m8073\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8074),'0 second')),'DDg HH24h MIm SSs') as \"m8074\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8075),'0 second')),'DDg HH24h MIm SSs') as \"m8075\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8076),'0 second')),'DDg HH24h MIm SSs') as \"m8076\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8077),'0 second')),'DDg HH24h MIm SSs') as \"m8077\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8078),'0 second')),'DDg HH24h MIm SSs') as \"m8078\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8079),'0 second')),'DDg HH24h MIm SSs') as \"m8079\" \r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n\t  where cte2.ag_num like '%${agNum}'\r\n    group by cte2.ag_num`;\r\n\r\n  console.log(query);\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getInternalBreakTime = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num \r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte1.name,\r\n\t  to_char(sum(cte2.escapetime),'DDg HH24h MIm SSs')\r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n    where cte2.ag_num = '${agNum}'\r\n\t  and cte1.name is not null\r\n    group by cte1.name\r\n\t  order by sum(cte2.escapetime) desc\r\n\t  limit 5\r\n    `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\n//158 'in apileri/;\r\nexport const getAgentNumberV16 = async () => {\r\n  let string = 'SELECT dn,display_name FROM users_view order by dn asc';\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response.data;\r\n};\r\nexport const getIYSReport = async param => {\r\n  let string = '';\r\n  if (param.agent === 'All') {\r\n    string += `Select * from iysagents where issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  } else {\r\n    string += `Select * from iysagents where agent='${param.agent}' and issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  }\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/postgres/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getTeamsUsers = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamsusers`, values);\r\n};\r\n\r\nexport const getCsOnlineVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getcsonlinevoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const getCsTenantDialplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/gettenantdiaplan`, values);\r\n};\r\n\r\nexport const getCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamscallingpolicys`, values);\r\n};\r\n\r\nexport const changeCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changecallingpolicy`, values);\r\n};\r\n\r\nexport const changeCsVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changeteamsvoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const changeCsTenantDiaplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changetenantdiaplan`, values);\r\n};\r\n\r\nexport const getUserDetailsByUserId = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getuserbyid`, values);\r\n};\r\n\r\nexport const getQueueAnswerReport = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  )\r\n  select \r\n  to_char(cte1.dst_start_time,'yyyy-mm-dd') as dst_start_time,\r\n  sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)) as waiting_time,\r\n  sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time) as talking,\r\n  cte1.src_display_name,\r\n  cte1.dst_dn\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n  ORDER BY cte1.dst_start_time ${order}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportCount = async (startDate, endDate, queueNum, src) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%${src}'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n/*with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '$12-17-2021' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view\r\n  left outer join cte1 on cl_segments_view.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view.dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n  and\r\n  cl_segments_view.dst_start_time<=date_trunc('day', timestamp '12-17-2021' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2\r\n  \r\n*/\r\n\r\nexport const getQueueAnswerReportSummary = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `    \r\n    with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name,\r\n\t  src_did\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n\tand\r\n\tsrc_did != ''\r\n\tand\r\n\tdst_dn_type != 6\r\n  )\r\n  select\r\n  'Total' as total,\r\n  to_char(date_trunc('day' , cte1.dst_start_time), 'dd-mm-yyyy') as date,\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  group by date_trunc('day' , cte1.dst_start_time)\r\n  ORDER BY date_trunc('day' , cte1.dst_start_time)  ASC\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportSummaryTotal = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n    and\r\n    src_did != ''\r\n    and\r\n    dst_dn_type != 6\r\n  )\r\n  select\r\n  count(distinct(date_trunc('day' , cte1.dst_start_time))),\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act  \r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummary = async (startTime, endTime) => {\r\n  let string = `select * from cl_daily_summary_proc('${startTime}','${endTime}')`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryTotal = async (startTime, endTime) => {\r\n  let string = `\r\n  with recursive cte1 as (\r\n  select * from cl_daily_summary_proc('${startTime}','${endTime}')  \r\n  )\r\n  select\r\n'Total' as datetime,\r\nsum(cte1.totalcall) as totalcall,\r\nsum(cte1.answered) as answered,\r\nto_char(sum(cast(cte1.inboundtime as interval)), 'HH24:MI:ss') as inboundtime,\r\nto_char(sum(cast(cte1.waitingtime as interval)), 'HH24:MI:ss') as waitingtime,\r\nto_char(sum(cast(cte1.averageconnection as interval))/count(cte1.averageconnection), 'HH24:MI:ss') as averageconnection,\r\nsum(cte1.abondened) as abondened,\r\nsum(cte1.transfer) as transfer,\r\nto_char(sum(cast(cte1.long_time as interval)), 'HH24:MI:ss') as long_time,\r\nsum(cte1.zdisi) as zdisi,\r\nto_char(sum(cast(cte1.average_abondened_waiting as interval))/count(cte1.average_abondened_waiting), 'HH24:MI:ss') as average_abondened_waiting,\r\nsum(cte1.rona) as rona,\r\nsum(cte1.outbound) as outbound,\r\nto_char(sum(cast(cte1.outbound_time as interval)), 'HH24:MI:ss')as outbound_time,\r\nto_char(sum(cast(cte1.average_outbound_time as interval))/count(cte1.average_outbound_time), 'HH24:MI:ss') as average_outbound_time\r\nfrom cte1\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummary = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by src_dn\r\n  ), answerInb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as ansInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by dst_dn\t\r\n  ), answerOutb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as ansOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n  \r\n  select\r\n    age.dn as id,\r\n    age.display_name,\r\n    coalesce(inb.cntInbound,0) as total_inbound,\r\n    coalesce(outb.cntOutbound,0) as total_outbound,\r\n    coalesce(answerInb.ansInbound,0) as answered_inbound,\r\n    coalesce(answerOutb.ansOutbound,0) as answered_outbound\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn \r\n    left outer join answerInb on answerInb.dst_dn = age.dn\r\n    left outer join answerOutb on answerOutb.src_dn = age.dn\r\n    where age.dn like '%${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalled = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn like '%${agentNum}'\r\n    and dst_dn_type = 1\r\n    and act != 1\r\n  )\r\n  select \r\n  dst_display_name as en_uzun_aranan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n   dst_answer_time is not null\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCaller = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and act!= 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_uzun_arayan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  and\r\n  dst_answer_time is not null\r\n\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalledAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn ='${agentNum}' \r\n    and act != 1\r\n    and dst_dn_type = 1\r\n    order by dst_start_time desc\r\n  )\r\n  select \r\n  dst_display_name as en_cok_aranan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1  \r\n  group by dst_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCallerAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_cok_arayan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  group by src_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAgentTotalCall = (startTime, cte) => {\r\n  let string = `with recursive cte1 as(select * from cl_segments_daily_statics('${startTime}','${startTime}')),cte2 as (select src_did,count(distinct(call_id)) as callDid from cte1 where src_did != '' group by src_did order by count(distinct(call_id)) desc limit 5),cte3 as (select dst_display_name,count(distinct(call_id)) as agentCall from cte1 where dst_dn_type = 0 group by dst_display_name order by count(distinct(call_id)) desc limit 5) select * from ${cte}`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getWallBoardVoiceMail = async agentNum => {\r\n  let string = `SELECT count(distinct(call_id)) \r\n  FROM public.cl_segments_view_new where dst_caller_number = 'Ext.9999' \r\n  and dst_start_time > date_trunc('day',Now()) \r\n  and act != 1\r\n  and src_dn_type = 1 and \r\n  dst_dn = '${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getWallBoardLongTime = async agentNum => {\r\n  let string = `select\r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(dst_end_time - dst_start_time as text) as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  dst_dn = '${agentNum}' --parameter\r\n  and\r\n  dst_answer_time is not null\r\n  order by duration desc\r\n  limit 1`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getVersion = async () => {\r\n  return axios.get(`http://${url}:${port}/version`);\r\n};\r\n\r\nexport const getWallBoardWaitingTime = async agentNum => {\r\n  let string = `select \r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(sum(dst_answer_time - dst_start_time) as text)  as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  dst_answer_time is not null\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn = '${agentNum}'\r\n  group by dst_dn , dst_display_name`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDenemeLogin = param => {\r\n  return axios.post(`http://${url}:${port}/login`, param);\r\n};\r\n\r\nexport const getCallLog2 = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2Total = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2TotalSummary = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2Count = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDashboardTops = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallDetail = async callid => {\r\n  let string = `with recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    )\r\n    select\r\n    to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3'-dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','HH24h MIm SSs') as ring_time,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3'-dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','HH24h MIm SSs') as duration,\r\n    src_display_name as callers,\r\n    dst_display_name as calleds,\r\n    case when act = 12 then 'Transfer' when act = 10 and act_dn_type != 0 then 'Karşılama' when act = 10 and act_dn_type = 0 then 'Yönlendirme' when act_dn_type = 4 then 'Açılış ' else '-' end as states,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time\r\n    from cte1\r\n    order by dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3' asc`;\r\n  console.log(string);\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalTotalCall = async date => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  order by start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalAnsweredCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and\r\n  dst_dn_type =0 \r\n  and\r\n  dst_answer_time is not null\r\n  order by dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutOfTime = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act=13`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalAbondenedCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 0 and act=15\r\n  order by dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTransferCall = async date => {\r\n  let string = `with recursive cte1 as ( \r\n    select\r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    dst_dn_type =0\r\n    and dst_start_time >= timestamp '${date}'\r\n    and dst_end_time <= timestamp '${date}' + interval '1 day'\r\n    and act = 12 and dst_dn_type = 0 \r\n    )\r\n    select\r\n    cl_segments_view_new.src_display_name as caller,\r\n    cte1.src_display_name as transferer,\r\n    cte1.dst_display_name as trasfered,\r\n    to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    inner join cte1 on cte1.call_id = cl_segments_view_new.call_id\r\n    where cl_segments_view_new.dst_start_time >= timestamp '${date}'\r\n    and cl_segments_view_new.dst_start_time <= timestamp '${date}' + interval '1 day'\r\n    and cl_segments_view_new.act != 1\r\n    and cl_segments_view_new.act != 12\r\n    order by cl_segments_view_new.dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalRonaCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_end_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and dst_dn_type = 0 and dst_answer_time is null\r\n  order by dst_end_time asc`;\r\n\r\n  console.log(string);\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallTransferReport = async (agent, selectedStartTime, selectedEndTime) => {\r\n  let string = `select\r\n\tdst_display_name as transferer,\r\n\tact_display_name as trasfered,\r\n\tsrc_display_name as caller,\r\n\tto_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    src_dn_type = 1\r\n    and \r\n\tdst_start_time >= timestamp '${selectedStartTime}'\r\n    and \r\n\tdst_end_time <= timestamp '${selectedEndTime}' + interval '1 day' \r\n    and \r\n\tdst_dn_type = 0 \r\n\tand \r\n\tdst_answer_time is not null\r\n\tand\r\n\tact = 10 -- transfer\r\n\tand\r\n\tact_dn_type != 8 -- not parked\r\n\tand\r\n\tstart_time != end_time\r\n\tand\r\n\tdst_display_name like '%${agent}%'\r\n\torder by call_id,seg_order`;\r\n\r\n  console.log(string);\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 1\r\n  order by dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport { GroupOutlined } from '@material-ui/icons';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst TasksCounterCard = () => {\r\n  const [extensions, setExtensions] = useState('');\r\n  const [param] = useState({ token: localStorage.getItem('token') });\r\n  useEffect(() => {\r\n    api\r\n      .getExtensions(param)\r\n      .then(resp => setExtensions(resp.data.data.activeExtension + '/' + resp.data.data.totalExtension));\r\n  }, [param]);\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<GroupOutlined />}\r\n        number={String(extensions)}\r\n        label={<IntlMessages id={'dashboard.extensions'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksCounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cable from '@material-ui/icons/Link';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst Trunks = () => {\r\n  let totalquery = 'select * from public.externalline order by fkiddn ASC';\r\n  let trunksUpQuery = 'SELECT count(ipincontactreg) FROM gateway';\r\n\r\n  const [paramtotal] = useState({ token: localStorage.getItem('token'), query: totalquery });\r\n  const [paramTrunksUp] = useState({ token: localStorage.getItem('token'), query: trunksUpQuery });\r\n  const [totalTrunks, setTotalTrunks] = useState('');\r\n\r\n  const [trunksUp, setTrunksUp] = useState([{ count: 0 }]);\r\n  useEffect(() => {\r\n    api.getTotalTrunks(paramtotal).then(resp => setTotalTrunks(JSON.parse(resp.data.data)));\r\n    api.getTrunksUp(paramTrunksUp).then(resp => setTrunksUp(JSON.parse(resp.data.data)));\r\n  }, [paramtotal, paramTrunksUp]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<Cable />}\r\n        number={String(trunksUp[0].count) + '/' + String(totalTrunks.length)}\r\n        label={<IntlMessages id={'dashboard.trunks'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trunks;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport PhoneIcon from '@material-ui/icons/PhoneOutlined';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nconst ActiveCallCount = () => {\r\n  const [response, setactiveCount] = useState();\r\n  const [param] = useState({\r\n    token: localStorage.getItem('token'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.getActiveCallCount(param).then(resp => setactiveCount(resp.data.data.count));\r\n  }, [param]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<PhoneIcon />}\r\n        number={String(response)}\r\n        label={<IntlMessages id={'dashboard.active'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#EA4C4C -18.96%', '#C14545 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveCallCount;\r\n","export function Logout() {\r\n  localStorage.removeItem('login');\r\n  localStorage.removeItem('token');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5AnsweredCalls() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n        select\r\n        dn,\r\n        display_name\r\n        from\r\n        users_view\r\n      ), inb as (\r\n        select \r\n        dst_dn,\r\n        count(distinct(call_id)) as cntInbound\r\n        from\r\n        cl_segments_view\r\n        where start_time >= date_trunc('day',timestamp '${startTime}')\r\n        and dst_dn_type = 0\r\n        and dst_answer_time is not null\r\n        and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n        group by dst_dn\r\n      )\r\n      \r\n      select\r\n        age.display_name,\r\n        sum(coalesce(inb.cntInbound,0)) as total,\r\n        age.dn\r\n        from age\r\n        left outer join inb on inb.dst_dn = age.dn\r\n        where age.dn like '%'\r\n        group by age.display_name,age.dn\r\n        order by sum(coalesce(inb.cntInbound,0)) desc\r\n        limit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5answercalls'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>Kayıt yok</div>}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length && parseInt(data[0]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && parseInt(data[1]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && parseInt(data[2]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && parseInt(data[3]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && parseInt(data[4]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Inbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5inbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>Kayıt yok</div>}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name.split(':')[0]} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name.split(':')[0]} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name.split(':')[0]} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name.split(':')[0]} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name.split(':')[0]} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Outbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5outbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>Kayıt yok</div>}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { QueryBuilder } from '@material-ui/icons';\r\n\r\nexport default function DashboardTop5TalkTime() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n\tsum(dst_end_time-dst_answer_time) as durationInb,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n\tsum(dst_end_time - dst_answer_time) as duration,  \r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n    select\r\n    age.display_name,\r\n\tage.dn,\r\n\tsum(outb.duration+inb.durationInb)\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn\r\n\twhere outb.duration+inb.durationInb is not null\r\n\tgroup by age.display_name,age.dn\r\n\torder by sum(outb.duration+inb.durationInb) desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  const totalseconds = items => {\r\n    let total = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i]?.sum.includes('.')) {\r\n        total += parseInt(items[i]?.sum.split('.')[0]) * 24 * 60 * 60;\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      } else {\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const checkDots = timeString => {\r\n    if (timeString === undefined) {\r\n      return '';\r\n    }\r\n    if (timeString?.includes('.')) {\r\n      let tempHour = parseInt(timeString.split('.')[0]) * 24 + parseInt(timeString.split('.')[1].split(':')[0]);\r\n      return tempHour + 'h ' + timeString.split(':')[1] + 'm ' + timeString.split(':')[2] + 's';\r\n    } else {\r\n      return timeString?.split(':')[0] + 'h ' + timeString?.split(':')[1] + 'm ' + timeString?.split(':')[2] + 's';\r\n    }\r\n  };\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   console.log(new Date().toLocaleDateString());\r\n  //   let asdad = new Date().setDate(new Date().getDate() - 7);\r\n  //   console.log(convertTimeToApiString(new Date(asdad).toLocaleDateString()));\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5talktime'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>Kayıt yok</div>}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[0]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[0]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[1]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[1]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[2]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[2]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[3]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[3]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[4]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[4]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DashboardTop5AnsweredCalls from './DashboardTop5AnsweredCalls';\r\nimport DashboardTop5Inbound from './DashboardTop5Inbound';\r\nimport DashboardTop5Outbound from './DashboardTop5Outbound';\r\nimport DashboardTop5TalkTime from './DashboardTop5TalkTime';\r\n\r\nexport default function DashboardTops() {\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <Grid item md={3}>\r\n          <DashboardTop5TalkTime />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5AnsweredCalls />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Inbound />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Outbound />\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MissedCalls from './MissedCalls';\r\nimport InboundRules from './InboundRules';\r\nimport HeaderChartComponent from './HeaderChartComponent';\r\nimport OutboundCall from './OutboundCall';\r\nimport Extensions from './Extensions';\r\nimport * as api from '../../../api/api';\r\nimport Trunks from './TrunksUp';\r\nimport ActiveCallCount from './ActiveCallCount';\r\nimport { useHistory } from 'react-router';\r\nimport { Logout } from 'services/auth/logout';\r\nimport DashboardTops from './Tops';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nconst breadcrumbs = [\r\n  { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n  { label: <IntlMessages id={'sidebar.dashboard'} />, isActive: true },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  orderLg1: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SamplePage = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  let date = new Date();\r\n\r\n  let totalInbound = 0;\r\n  let totalOutbound = 0;\r\n  let totalMissed = 0;\r\n  const [param, setParam] = useState(date.getDate());\r\n  const [inboundcalls, setInbound] = useState([]);\r\n  const [outboundcalls, setOutbound] = useState([]);\r\n  const [missedcalls, setMissedCalls] = useState([]);\r\n\r\n  // const convertToLocalTimeData = date_ => {\r\n  //   var date = new Date(date_);\r\n  //   var year = date.getFullYear();\r\n  //   var month = date.getMonth() + 1;\r\n  //   var dt = date.getDate();\r\n\r\n  //   if (dt < 10) {\r\n  //     dt = '0' + dt;\r\n  //   }\r\n  //   if (month < 10) {\r\n  //     month = '0' + month;\r\n  //   }\r\n\r\n  //   return year + '-' + dt + '-' + month;\r\n  // };\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n  const sort = array => {\r\n    return array.sort((a, b) => {\r\n      let da = new Date(a.start_time.split('-')[1] + '/' + a.start_time.split('-')[0] + '/' + a.start_time.split('-')[2]);\r\n      let db = new Date(b.start_time.split('-')[1] + '/' + b.start_time.split('-')[0] + '/' + b.start_time.split('-')[2]);\r\n      return da - db;\r\n    });\r\n  };\r\n  if (missedcalls.length > 0) {\r\n    for (let i = 0; i < missedcalls.length; i++) {\r\n      totalMissed += parseInt(missedcalls[i].count);\r\n    }\r\n    // missedcalls.map(Miss => {\r\n    //   totalMissed += parseInt(Miss.count);\r\n    // });\r\n  }\r\n\r\n  if (outboundcalls.length > 0) {\r\n    for (let i = 0; i < outboundcalls.length; i++) {\r\n      totalOutbound += parseInt(outboundcalls[i].count);\r\n    }\r\n    // outboundcalls.map(Out => {\r\n    //   totalOutbound += parseInt(Out.count);\r\n    // });\r\n  }\r\n\r\n  if (inboundcalls.length > 0) {\r\n    for (let i = 0; i < inboundcalls.length; i++) {\r\n      totalInbound += parseInt(inboundcalls[i].count);\r\n    }\r\n    // inboundcalls.map(Inbound => {\r\n    //   totalInbound += parseInt(Inbound.count);\r\n    // });\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMissedCalls(param - 1)\r\n      .then(resp => setMissedCalls(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getOutboundCalls(param - 1)\r\n      .then(resp => setOutbound(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getInboundCalls(param - 1)\r\n      .then(resp => {\r\n        setInbound(JSON.parse(resp.data.data));\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [param, history]);\r\n\r\n  const inboundObject = inboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const outboundObject = outboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const missedObject = missedcalls.map(data => ({\r\n    start_time: data.times,\r\n    count: data.count,\r\n  }));\r\n\r\n  for (let d = new Date(date.getFullYear(), date.getMonth(), 1); d <= date; d.setDate(d.getDate() + 1)) {\r\n    if (!inboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      inboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!outboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      outboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!missedObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      missedObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n  }\r\n\r\n  const fetchData = array => {\r\n    const arr = sort(array);\r\n    if (param <= 7) {\r\n      return arr.slice(Math.max(arr.length - param, 0));\r\n    } else {\r\n      return arr;\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < inboundObject.length; i++) {\r\n    inboundObject[i].start_time = getNewDate(inboundObject[i].start_time);\r\n  }\r\n\r\n  for (let i = 0; i < outboundObject.length; i++) {\r\n    outboundObject[i].start_time = getNewDate(outboundObject[i].start_time);\r\n  }\r\n  for (let i = 0; i < missedObject.length; i++) {\r\n    missedObject[i].start_time = getNewDate(missedObject[i].start_time);\r\n  }\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"sidebar.dashboard\" />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <InboundRules setParam={setParam} date={date} data={fetchData(inboundObject)} total={totalInbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <OutboundCall setParam={setParam} date={date} data={fetchData(outboundObject)} total={totalOutbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <MissedCalls setParam={setParam} date={date} data={fetchData(missedObject)} total={totalMissed} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Grid item xs={12} xl={12} className={classes.orderLg1}>\r\n        <GridContainer>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <ActiveCallCount />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Extensions />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Trunks />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DashboardTops />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <HeaderChartComponent\r\n              date={date}\r\n              setParam={setParam}\r\n              inbound={fetchData(inboundObject)}\r\n              missed={fetchData(missedObject)}\r\n              outbound={fetchData(outboundObject)}\r\n            />\r\n          </Grid>\r\n        </GridContainer>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SamplePage;\r\n","import React from 'react';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, IconButton, InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  },\r\n  errorNumber: {\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 800,\r\n    lineHeight: 1,\r\n    marginBottom: 30,\r\n    textShadow: '10px 6px 8px hsla(0,0%,45.9%,.8)',\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .searchBtn': {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 50px 5px 15px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      '&:focus': {\r\n        boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Error404 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box fontSize={{ xs: 100, sm: 160 }} className={classes.errorNumber}>\r\n        404\r\n      </Box>\r\n      <Box fontSize={{ xs: 16, sm: 24 }} mb={8} color=\"grey.500\">\r\n        <IntlMessages id=\"extraPages.404Msg\" />\r\n      </Box>\r\n      <Box className={classes.searchRoot}>\r\n        <InputBase placeholder={'Search...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <IconButton className=\"searchBtn\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <IntlMessages id=\"extraPages.goHome\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/auth/auth-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authWrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: props => (props.variant === 'bgColor' ? `URL(${bgImage})` : ''),\r\n    backgroundPosition: props => (props.variant === 'bgColor' ? 'center center' : ''),\r\n    backgroundRepeat: props => (props.variant === 'bgColor' ? 'no-repeat' : ''),\r\n    backgroundSize: props => (props.variant === 'bgColor' ? 'cover' : ''),\r\n    position: 'relative',\r\n    padding: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: props => (props.variant === 'bgColor' ? alpha(theme.palette.primary.main, 0.5) : ''),\r\n    },\r\n  },\r\n  authCard: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    maxWidth: props => (props.variant === 'default' ? '850px' : '550px'),\r\n    width: '100%',\r\n    boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.14), 0px 3px 1px rgba(0, 0, 0, 0.12), 0px 1px 5px rgba(0, 0, 0, 0.2)',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: props => (props.variant === 'default' ? '1050px' : '750px'),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AuthWrapper = ({ children, variant }) => {\r\n  const classes = useStyles({ variant });\r\n  return (\r\n    <Box className={classes.authWrap}>\r\n      <Box className={classes.authCard}>{children}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Button } from '@mui/material';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n\r\n  authContent: {\r\n    padding: 30,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  formcontrolLabelRoot: {\r\n    '& .MuiFormControlLabel-label': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  },\r\n}));\r\n//variant = 'default', 'standard'\r\nconst SignIn = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  //7PidcZIBNf\r\n  let history = useHistory();\r\n  const [param, setParam] = useState({\r\n    name: '',\r\n    password: '',\r\n    type: 'console',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [loginState, setLoginState] = useState();\r\n  let data = [];\r\n  var myDate = new Date();\r\n  myDate.setDate(myDate.getDate() + 1);\r\n  data.push(myDate);\r\n\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    api\r\n      .getDenemeLogin(param)\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          setLoginState(resp.status);\r\n          localStorage.setItem('token', resp.data.data.token);\r\n        }\r\n      })\r\n      .catch(response => {\r\n        console.log(response.response.data.message);\r\n        alert(response.response.data.message);\r\n      })\r\n      .then(() => {\r\n        history.push('/dashboard');\r\n      });\r\n  };\r\n\r\n  function addNotification() {\r\n    onSubmit();\r\n  }\r\n\r\n  if (loginState === 200) {\r\n    localStorage.setItem('login', loginState);\r\n  }\r\n\r\n  let [, setVersion] = useState('0.0.0');\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const browser = (function() {\r\n    const test = function(regexp) {\r\n      return regexp.test(window.navigator.userAgent);\r\n    };\r\n    switch (true) {\r\n      case test(/edg/i):\r\n        return 'Edge';\r\n      case test(/opr/i) || test(/opera/i):\r\n        return 'Opera';\r\n      case test(/chrome/i) && !!window.chrome:\r\n        return 'Chrome';\r\n      case test(/MSIE/i):\r\n        return 'Internet Explorer 10-';\r\n      case test(/trident/i):\r\n        return 'Internet Explorer 11';\r\n      case test(/firefox/i):\r\n        return 'Firefox';\r\n      case test(/safari/i):\r\n        return 'Safari';\r\n      default:\r\n        return 'Other';\r\n    }\r\n  })();\r\n  console.log(browser);\r\n\r\n  useEffect(() => {\r\n    if (browser === 'Chrome' || browser === 'Opera') {\r\n      handleClose();\r\n    }\r\n    api.getVersion().then(response => {\r\n      setVersion(response.data.version);\r\n    });\r\n  }, [browser]);\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      <NotificationContainer />\r\n\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/login-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={1}>\r\n          <CmtImage src={'/images/favicon.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          Login\r\n        </Typography>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addNotification(e);\r\n          }}>\r\n          <Box mb={1}>\r\n            <TextField\r\n              label=\"User Name\"\r\n              fullWidth\r\n              onChange={event => {\r\n                setParam({\r\n                  name: event.target.value,\r\n                  password: param.password,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              fullWidth\r\n              id=\"pass\"\r\n              onChange={event => {\r\n                setParam({\r\n                  name: param.name,\r\n                  password: event.target.value,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n            <Button\r\n              type=\"submit\"\r\n              // onClick={() => {\r\n              //   addNotification();\r\n              // }}\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              Login\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n        <p style={{ textAlign: 'center' }}>V1.2.2</p>\r\n\r\n        {dispatch(AuhMethods[method].getSocialMediaIcons())}\r\n\r\n        <ContentLoader />\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{'Google Chrome kullanmanızı tavsiye ediyoruz'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Şuanda <b style={{ fontWeight: '800' }}>{browser}</b> tarayıcısını kullanıyorsunuz.\r\n            <hr style={{ marginTop: '15px', marginBottom: '10px' }} />\r\n            <p>Tavsiye edilen tarayıcılar</p>\r\n            <p>- Google Chrome</p>\r\n            <p>- Opera</p>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Kapat\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const AppHeaderHeight = 72;\r\nexport const AppHeaderHeightSm = 64;\r\nexport const AppFooterHeight = 72;\r\nexport const AppFooterHeightSm = 64;\r\nexport const AppMainContentPadding = 60;\r\nexport const InBuildAppHeaderHeight = 70;\r\n\r\nexport const InBuildAppSidebarHeaderHeight = 86;\r\nexport const MailAppContentHeaderHeight = 78;\r\n\r\nexport const TaskDetailHeaderHeight = 72;\r\nexport const TaskDetailAddCommentHeight = 72;\r\n\r\nexport const ChatSidebarHeaderHeight = 124;\r\nexport const ChatSidebarTabContainerHeight = 49;\r\nexport const ChatFooterHeight = 70;\r\nexport const CurrentAuthMethod = 'basic'; //jwtAuth,firebase,basic\r\n\r\nexport const getAppSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppHeaderHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getMailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getContactContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskDetailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getWallHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport SignIn from '../../@jumbo/components/Common/authComponents/SignIn';\r\n\r\nconst Login = () => <SignIn variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nexport default function AgentTable({ rows }) {\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  // const handleChangeRowsPerPage = event => {\r\n  //   setRowsPerPage(+event.target.value);\r\n  //   setPage(0);\r\n  // };\r\n  let curentLanguage = useIntl();\r\n  const column = [\r\n    { field: 'id', headerName: curentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası', width: 300 },\r\n    { field: 'displayname', headerName: curentLanguage.locale === 'en-US' ? 'Agent Name' : 'Agent Adı', width: 500 },\r\n    { field: 'status', headerName: curentLanguage.locale === 'en-US' ? 'State' : 'Durum', width: 300 },\r\n  ];\r\n  // const column = [\r\n  //   { id: 'dn', headerName: <IntlMessages id={'agent.number'} />, width: '60px' },\r\n  //   { id: 'displayname', headerName: <IntlMessages id={'agent.name'} />, width: '100px' },\r\n  //   { id: 'status', headerName: <IntlMessages id={'state'} />, width: '30px' },\r\n  // ];\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={`Agent_Status`}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"rows\">\r\n              <ExcelColumn label={'Agent Number'} value=\"id\" />\r\n              <ExcelColumn label={'Agent Name'} value=\"displayname\" />\r\n              <ExcelColumn label={'State'} value=\"status\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper>\r\n        <div style={{ height: 700, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={column}\r\n            pageSize={100}\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </>\r\n    // <TableContainer component={Paper} className={classes.root}>\r\n    //   <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n    //     <TableHead>\r\n    //       <TableRow>\r\n    //         {column.map(column => (\r\n    //           <TableCell key={column.id} style={{ width: column.width }}>\r\n    //             {column.headerName}\r\n    //           </TableCell>\r\n    //         ))}\r\n    //       </TableRow>\r\n    //     </TableHead>\r\n    //     <TableBody>\r\n    //       {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n    //         return (\r\n    //           <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n    //             {column.map(column => {\r\n    //               const value = row[column.id];\r\n\r\n    //               return <TableCell key={column.id}>{value}</TableCell>;\r\n    //             })}\r\n    //           </TableRow>\r\n    //         );\r\n    //       })}\r\n    //     </TableBody>\r\n    //   </Table>\r\n    //   <TablePagination\r\n    //     rowsPerPageOptions={[10, 20, 50, 100]}\r\n    //     component=\"div\"\r\n    //     count={rows.length}\r\n    //     rowsPerPage={rowsPerPage}\r\n    //     page={page}\r\n    //     onPageChange={handleChangePage}\r\n    //     labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n    //     onRowsPerPageChange={handleChangeRowsPerPage}\r\n    //   />\r\n    // </TableContainer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useIntl } from 'react-intl';\r\nexport default function AgentList() {\r\n  const [response, setResponse] = useState([]);\r\n  let curentLanguage = useIntl();\r\n  useEffect(() => {\r\n    api.getAgentList({ token: localStorage.getItem('token') }).then(resp => {\r\n      setResponse(resp.data.data);\r\n    });\r\n  }, []);\r\n  const createData = (id, displayname, status) => {\r\n    return { id, displayname, status };\r\n  };\r\n  const rows = response.map(dataValue =>\r\n    createData(\r\n      dataValue.agentNumber,\r\n      dataValue.agentName,\r\n      dataValue.agentState === 'True'\r\n        ? curentLanguage.locale === 'en-US'\r\n          ? 'Online'\r\n          : 'Aktif'\r\n        : curentLanguage.locale === 'en-US'\r\n        ? 'Offline'\r\n        : 'Pasif',\r\n    ),\r\n  );\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'reports.callcenter'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.status'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.status'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Table rows={rows} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  textCapital: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  textAcc: {\r\n    textAlign: 'center',\r\n    '& a': {\r\n      marginLeft: 4,\r\n    },\r\n  },\r\n  alrTextRoot: {\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('sm')]: {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n}));\r\n\r\n//variant = 'default', 'standard', 'bgColor'\r\nconst SignUp = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const [name, setName] = useState('Demo User');\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const [password, setPassword] = useState('demo#123');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onRegister({ name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/sign-up-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={7}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          Create an account\r\n        </Typography>\r\n        <form>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.name\" />}\r\n              fullWidth\r\n              onChange={event => setName(event.target.value)}\r\n              defaultValue={name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id=\"appModule.password\" />}\r\n              fullWidth\r\n              onChange={event => setPassword(event.target.value)}\r\n              defaultValue={password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection={{ xs: 'column', sm: 'row' }}\r\n            alignItems={{ sm: 'center' }}\r\n            justifyContent={{ sm: 'space-between' }}\r\n            mb={3}>\r\n            <Box mb={{ xs: 2, sm: 0 }}>\r\n              <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n                <IntlMessages id=\"appModule.regsiter\" />\r\n              </Button>\r\n            </Box>\r\n\r\n            <Typography className={classes.alrTextRoot}>\r\n              <NavLink to=\"/signin\">\r\n                <IntlMessages id=\"signUp.alreadyMember\" />\r\n              </NavLink>\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n\r\n        <Box mb={3}>{dispatch(AuhMethods[method].getSocialMediaIcons())}</Box>\r\n\r\n        <Typography className={classes.textAcc}>\r\n          Have an account?\r\n          <NavLink to=\"/signin\">Sign In</NavLink>\r\n        </Typography>\r\n        <ContentLoader />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignUp from '../../@jumbo/components/Common/authComponents/SignUp';\r\n\r\nconst Register = () => <SignUp variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Register;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DropCallLogDateFilter({ setStartTimeApi, setEndTimeApi, handleClick }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('special');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        //start.setHours(23, 59, 59);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate());\r\n        //end.setHours(23, 59, 59);\r\n        end.setHours(0, 0, 0);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getDropCall, getDropCallCount, getDropCallSummary, getQueueNumber } from 'api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport DropCallLogDateFilter from './DateFilter';\r\nfunction Filter({ setResponse, setLimit, setPage, setOffset, limit, offset, setCount, setResponseSummary }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    console.log('Yıl ' + paramDate.getFullYear());\r\n    console.log('aY ' + paramDate.getMonth() + 1);\r\n    console.log('Gün ' + paramDate.getDate());\r\n    console.log('Today Time ' + today.getTime());\r\n    console.log('Param Time ' + paramDate.getTime());\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: dateDifference(formatDate(today)),\r\n    paramFinish: dateDifference(formatDate(today)),\r\n  });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDropCall(params.paramStart, params.paramFinish, limit, offset).then(resp => {\r\n      var list = JSON.parse(resp.data.data);\r\n      getQueueNumber().then(queueList => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          // let tempQueueList = JSON.parse(queueList.data.data);\r\n          // for (let j = 0; j < tempQueueList.length; i++) {\r\n          //   if (list[i]?.q_num === tempQueueList[j].dn) {\r\n          //     list[i]?.q_num = tempQueueList[j].dn + '-' + tempQueueList[j].display_name;\r\n          //   }\r\n          // }\r\n          // tempQueueList = [];\r\n          JSON.parse(queueList.data.data).map(queue => {\r\n            if (list[i].q_num === queue.dn) {\r\n              list[i].q_num = queue.dn + '-' + queue.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n      });\r\n      setLoading(false);\r\n    });\r\n\r\n    getDropCallSummary(params.paramStart, params.paramFinish).then(resp => {\r\n      setResponseSummary(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getDropCallCount(params.paramStart, params.paramFinish).then(resp => {\r\n      setCount(JSON.parse(resp.data.data)[0]);\r\n    });\r\n  }, [params, offset, limit, setCount, setResponse, setResponseSummary]);\r\n  const handleClick = () => {\r\n    setOffset(0);\r\n    setLimit(10);\r\n    setPage(0);\r\n    setParams({\r\n      paramStart: dateDifference(startDate),\r\n      paramFinish: dateDifference(endDate),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <DropCallLogDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { Check, CloudDownload, DateRange } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport RingVolumeIcon from '@mui/icons-material/RingVolume';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, count, responseSummary }) {\r\n  const columns = [\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'filter.menu.enddate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#DE834D' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'from'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#5584AC' }} />{' '}\r\n          <b style={{ color: '#5584AC' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'q_num',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#064635' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'ringing_time',\r\n      headerName: <IntlMessages id={'ringingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <RingVolumeIcon style={{ verticalAlign: '-5px', color: '#A3423C' }} />{' '}\r\n          <b style={{ color: '#781D42' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(id, q_num, start_time, end_time, ringing_time, from_userpart) {\r\n    return { id, q_num, start_time, end_time, ringing_time, from_userpart };\r\n  }\r\n\r\n  console.log(responseSummary);\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.time_end,\r\n      data.ring_time\r\n        .split('.')[0]\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_userpart,\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(count.count);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={curentLanguage.locale === 'en-US' ? 'Dropped_call' : 'Kacan_cagri_raporu'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Queue Number' : 'Kuyruk Numarası'}\r\n                      value=\"q_num\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Start Time' : 'Başlangıç Zamanı'}\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'End Time' : 'Bitiş Zamanı'} value=\"end_time\" />\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Ringing Time' : 'Çalma Süresi'}\r\n                      value=\"ringing_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'From Userpart' : 'Arayan Numara'}\r\n                      value=\"from_userpart\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n          />\r\n        </div>\r\n        {/* <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, count.count].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={count.count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={rows.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'average_ring_time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {responseSummary.map(total => (\r\n                <TableRow>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {total.to_char}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {total.count}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        padding: '5px',\r\n                        borderRadius: '7px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      {total.ring_time}\r\n                    </span>{' '}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction DroppedCall() {\r\n  const [responseSummary, setResponseSummary] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [count, setCount] = useState({ count: 0 });\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'droppedcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'droppedcall'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            limit={limit}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setCount={setCount}\r\n            setResponseSummary={setResponseSummary}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            count={count}\r\n            responseSummary={responseSummary}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default DroppedCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DidReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({\r\n  setSelectedStartTime,\r\n  selectedStartTime,\r\n  selectedEndTime,\r\n  setSelectedEndTime,\r\n  setParams,\r\n  setLimit,\r\n  setPage,\r\n  setOffset,\r\n  notFirstReq,\r\n  setNotFirstReq,\r\n  setDidNumber,\r\n  didNumber,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  const [didNumbers, setDidNumbers] = useState([]);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setOffset(0);\r\n    setLimit(10);\r\n    setPage(0);\r\n    setParams({\r\n      paramStart: formatDate(selectedStartTime),\r\n      paramFinish: formatDate(selectedEndTime),\r\n    });\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.getDidNumbers().then(resp => {\r\n      setDidNumbers(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'mountlydetails.didnumber'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'mountlydetails.didnumber'} />}\r\n                  value={didNumber}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {didNumbers.map((did, index) => (\r\n                    <MenuItem key={index} value={did.conditiondata}>\r\n                      {did.conditiondata}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { AccessTime, CloudDownload, ContactPhone, Phone, PhoneInTalk, PhoneMissed } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nexport default function DataTable({ response, setLimit, limit, setOffset, setPage, page, count, setResponse }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const column = [\r\n    { id: 'did_number', headerName: <IntlMessages id={'did.number'} />, width: '60px' },\r\n    { id: 'total_did', headerName: <IntlMessages id={'wallboard.total.call'} />, width: '100px' },\r\n    { id: 'did_not_answered', headerName: <IntlMessages id={'wallboard.unanswered'} />, width: '30px' },\r\n    { id: 'did_answered', headerName: <IntlMessages id={'wallboard.answered'} />, width: '30px' },\r\n    { id: 'duration', headerName: <IntlMessages id={'Duration'} />, width: '30px' },\r\n    { id: 'act', headerName: <IntlMessages id={'average'} />, width: '30px' },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    total_did_number: 0,\r\n    total_did: 0,\r\n    did_not_answered: 0,\r\n    did_answered: 0,\r\n    duration: 0,\r\n  };\r\n\r\n  for (let i = 0; i < response.length; i++) {\r\n    total.total_did_number++;\r\n    total.total_did += parseInt(response[i].total_did);\r\n    total.did_not_answered += parseInt(response[i].did_not_answered);\r\n    total.did_answered += parseInt(response[i].answered);\r\n    total.duration += parseInt(hourToSecond(response[i].duration));\r\n  }\r\n  // response.map(resp => {\r\n  //   total.total_did_number++;\r\n  //   total.total_did += parseInt(resp.total_did);\r\n  //   total.did_not_answered += parseInt(resp.did_not_answered);\r\n  //   total.did_answered += parseInt(resp.answered);\r\n  //   total.duration += parseInt(hourToSecond(resp.duration));\r\n  // });\r\n  function hourToSecond(param) {\r\n    var second =\r\n      parseInt(param.split(' ')[0].slice(0, -1)) * 3600 +\r\n      parseInt(param.split(' ')[1].slice(0, -1)) * 60 +\r\n      parseInt(param.split(' ')[2].slice(0, -1));\r\n    return second;\r\n  }\r\n\r\n  function secondToTime(param) {\r\n    let time =\r\n      addZero(Math.floor(param / 60 / 60)) +\r\n      'h ' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      'm ' +\r\n      addZero(Math.floor((param % 3600) % 60)) +\r\n      's';\r\n    return time;\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = response.map((item, index) => ({\r\n    id: index,\r\n    did_number: item.did_number,\r\n    total_did: parseInt(item.total_did),\r\n    did_not_answered: parseInt(item.did_not_answered),\r\n    answered: parseInt(item.answered),\r\n    duration: item.duration,\r\n    act: item.act,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'did_number',\r\n      headerName: currentLanguage.locale === 'en-US' ? 'DID Number' : 'DID Numarası',\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhone style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_did',\r\n      headerName: currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi',\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <Phone style={{ verticalAlign: '-5px', color: '#6998AB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#6998AB' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'did_not_answered',\r\n      headerName: currentLanguage.locale === 'en-US' ? 'Unansered Calls' : 'Cevaplanmamış Çağrı Adedi',\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PhoneMissed style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#F05454' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: currentLanguage.locale === 'en-US' ? 'Answered Calls' : 'Cevaplanmış Çagrı Adedi',\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PhoneInTalk style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: currentLanguage.locale === 'en-US' ? 'Duration' : 'Süre',\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#D47AE8' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'act',\r\n      headerName: currentLanguage.locale === 'en-US' ? 'Average' : 'Ortalama',\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#7267CB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(parseInt(count));\r\n    setPage(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {response.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {response.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {response.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {response.length > 0 && (\r\n                <ExcelFile\r\n                  filename={curentLanguage.locale === 'en-US' ? 'DID_report' : 'DID_raporu'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={response} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'DID Number' : 'Did Numarası'}\r\n                      value=\"did_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Sayısı'}\r\n                      value=\"total_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Unanswered Calls' : 'Cevaplanmamış Çağrılar'}\r\n                      value=\"did_not_answered\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Answered Calls' : 'Cevaplanmış Çağrılar'}\r\n                      value=\"answered\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n        {/* <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'DID_report' : 'DID_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={response} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'DID Number' : 'Did Numarası'} value=\"did_number\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Total Call Count' : 'Toplam Arama Sayısı'}\r\n                value=\"total_did\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Unanswered Calls' : 'Cevaplanmamış Çağrılar'}\r\n                value=\"did_not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Answered Calls' : 'Cevaplanmış Çağrılar'}\r\n                value=\"answered\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile> */}\r\n      </div>\r\n      <Paper style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, count].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <TableContainer component={Paper} className={classes.root} style={{ fontFamily: 'Roboto' }}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map(column => (\r\n                <TableCell key={column.id} style={{ width: column.width }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          {response.length > 0 && (\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                {count + ' '} <IntlMessages id={'did.number'} />\r\n              </TableCell>\r\n              <TableCell>{total.total_did}</TableCell>\r\n              <TableCell>{total.did_not_answered}</TableCell>\r\n              <TableCell>{total.did_answered}</TableCell>\r\n              <TableCell>{secondToTime(total.duration)}</TableCell>\r\n              <TableCell>{secondToTime(total.duration / total.total_did)}</TableCell>\r\n            </TableRow>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DIDReport = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'did.report'} />, isActive: true },\r\n  ];\r\n\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(yesterday) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n\r\n  const [dates, setDates] = useState({\r\n    paramStart: formatDate(yesterday) + ' 00:00:00',\r\n    paramFinish: formatDate(today) + ' 23:59:00',\r\n  });\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${dates.paramStart}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${dates.paramFinish}' + interval '1 day') >= start_time)\r\n    and src_did != ''\r\n  \tand\r\n\t  dst_answer_time is not null\r\n    )\r\n\t,\r\n\tcte2 as (\r\n    select\r\n\t sum(dst_end_time-dst_answer_time) as duration,\r\n    src_did,\t\r\n    count(distinct(call_id)) as total_call\r\n    from cte1 \t\r\n    -- where dst_dn_type = 0\r\n    --  and act != 1\r\n    group by src_did\r\n    )\r\n\t,\t\r\n\tcte3 as (\r\n    select\r\n    src_did,\t\r\n    count(distinct(call_id)) as did_not_asnwered\r\n    from cte1 \t\r\n    where dst_answer_time is  null\t\r\n    and act!= 1\r\n    group by src_did\r\n    )\r\n    select\r\n    cte2.src_did as did_number,\r\n    cte2.total_call as total_did,\r\n    coalesce(cte3.did_not_asnwered,0) as did_not_answered,\r\n    cte2.total_call - coalesce(cte3.did_not_asnwered,0) as answered,\r\n\tto_char(coalesce(cte2.duration,'0 second'),'HH24h MIm SSs') as duration,\r\n\tto_char((coalesce(cte2.duration/cte2.total_call,'0 second')),'HH24h MIm SSs') as act\r\n    from\r\n    cte2\r\n    left outer join cte3 on cte2.src_did = cte3.src_did\r\n    where (cte2.src_did like '%${didNumber}' or cte2.src_did like '%${didNumber}')\r\n    limit ${limit} offset ${offset}\t\t\r\n`;\r\n\r\n  let queryCount = ` select \r\n    count(distinct(src_did))\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${dates.paramStart}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${dates.paramFinish}' + interval '1 day') >= start_time)\r\n    and src_did != ''`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(dates.paramStart, dates.paramFinish)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        api.getDidData(query).then(resp => {\r\n          setResponse(JSON.parse(resp.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        api.getDidDataCount(queryCount).then(resp => {\r\n          setCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [query, notFirstReq, didNumber, queryCount]);\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'did.report'} />} breadcrumbs={breadcrumbs}>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            didNumber={didNumber}\r\n            setDidNumber={setDidNumber}\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setParams={setDates}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setNotFirstReq={setNotFirstReq}\r\n            notFirstReq={notFirstReq}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            response={response}\r\n            count={count}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default DIDReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Collapse, IconButton, Link } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { setForgetPassMailSent } from '../../../../redux/actions/Auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      order: 1,\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  alertRoot: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\n//variant = 'default', 'standard', 'bgColor'\r\nconst ForgotPassword = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const { send_forget_password_email } = useSelector(({ auth }) => auth);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let timeOutStopper = null;\r\n    if (send_forget_password_email) {\r\n      setOpen(true);\r\n\r\n      timeOutStopper = setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(false));\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n\r\n    return () => {\r\n      if (timeOutStopper) clearTimeout(timeOutStopper);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [send_forget_password_email]);\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onForgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <div className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/forgot-img.png'} />\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.authContent}>\r\n        <div className={'mb-7'}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </div>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          ForgotPassword\r\n        </Typography>\r\n        <Collapse in={open}>\r\n          <Alert\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n            className={classes.alertRoot}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}>\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }>\r\n            A mail has been sent on your email address with reset password link.\r\n          </Alert>\r\n        </Collapse>\r\n        <form>\r\n          <div className={'mb-5'}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </div>\r\n          <div className={'mb-5'}>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n              <IntlMessages id=\"appModule.resetPassword\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography>\r\n              Don't remember your email?\r\n              <span className={'ml-2'}>\r\n                <Link href=\"#\">\r\n                  <IntlMessages id=\"appModule.contactSupport\" />\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </form>\r\n        <ContentLoader />\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport ForgotPassword from '../../@jumbo/components/Common/authComponents/ForgotPassword';\r\n\r\nconst ForgotPasswordPage = () => <ForgotPassword variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouteLogin = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) !== 200 && localStorage.getItem('validation') !== true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const NotPrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) === 200 ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/signin', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function ServiceLevelDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getQueue, getServiceLevel } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ServiceLevelDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [params, setParams] = useState({ startDate: formatDate(yesterday), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT '10' as ring,count(q_num) as cnt FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59'\r\n    and ring_time > interval '0 seconds' and ring_time < interval '10 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '20' as ring,count(q_num) FROM callcent_queuecalls_view where \r\n    time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '10 seconds' and ring_time < interval '20 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union\r\n    SELECT '30' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and\r\n    ring_time > interval '20 seconds' and ring_time < interval '30 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '40' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00'\r\n    and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '30 seconds' and ring_time < interval '40 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '50' as ring,count(q_num) FROM \r\n    callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '40 seconds' and ring_time < interval '50 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '60' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '50 seconds'\r\n    and ring_time < interval '60 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` order by ring asc`;\r\n  useEffect(() => {\r\n    getServiceLevel(string).then(response => setResponse(JSON.parse(response.data.data)));\r\n  }, [string, setResponse]);\r\n  useEffect(() => {\r\n    getQueue().then(response => setQueueList(JSON.parse(response.data.data)));\r\n  }, []);\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  };\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <ServiceLevelDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(startDate)}\r\n                        onChange={setStartDate}\r\n                        label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(endDate)}\r\n                        onChange={setEndDate}\r\n                        label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                      />\r\n                    </Grid> */}\r\n                    <Grid item md={3} xs={3}>\r\n                      {/* <Field disabled={false} name=\"queueCheck\" as=\"select\" component={Select}>\r\n                        <MenuItem value=\"All\">\r\n                          <IntlMessages id={'all'} />\r\n                        </MenuItem>\r\n                        {queuelist.map((queue, index) => (\r\n                          <MenuItem key={index} value={queue.dn}>\r\n                            {queue.dn} {queue.display_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Field> */}\r\n                      <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                        <InputLabel id=\"queue-select-label\">\r\n                          <IntlMessages id={'queue.answer.report.queues'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((queue, index) => (\r\n                            <MenuItem key={index} value={queue.dn}>\r\n                              {queue.dn} {queue.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\nfunction createData(level, cnt) {\r\n  return { level, cnt };\r\n}\r\n\r\nfunction DataTable({ response }) {\r\n  const classes = useStyles();\r\n\r\n  let total = 0;\r\n  for (var i = 0; i < response.length; i++) {\r\n    total = total + parseInt(response[i].cnt);\r\n  }\r\n  function percent(cnt) {\r\n    var result = 0;\r\n    result = parseInt(cnt) / total;\r\n    return (parseFloat(result) * 100).toFixed(2);\r\n  }\r\n  const rows = response.map(data => createData(data.ring, percent(data.cnt)));\r\n\r\n  const csvData = rows.map(row => ({\r\n    level: row.level,\r\n    cnt: `%${row.cnt === 'NaN' ? '00.00' : row.cnt}`,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        <ExcelFile\r\n          filename={currentLanguage.locale === 'en-US' ? 'Service_Level' : 'Servis_seviyesi'}\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Seconds' : 'Saniye'} value=\"level\" />\r\n            <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Service Level' : 'Servis Seviyesi'} value=\"cnt\" />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'seconds'} />\r\n              </TableCell>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'service.level'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.level}>\r\n                <TableCell align=\"center\">{row.level}</TableCell>\r\n                <TableCell align=\"center\">%{row.cnt === 'NaN' ? '00.00' : row.cnt}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction ServiceLevel() {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'service.level'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'service.level'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item xs={12} xl={12}>\r\n          <Table response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Alert style={{ marginTop: '20px' }} severity=\"info\">\r\n        <IntlMessages id={'servicelevel.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default ServiceLevel;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function AbondenedQueuesDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CircularProgress, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport {\r\n  getAbandonedQueueCalls,\r\n  getAbandonedQueueCallsDetails,\r\n  getQueue,\r\n  getAbandonedQueueCallsDetailsTotal,\r\n  getAgentNumber,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AbondenedQueuesDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setResponse,\r\n  limit,\r\n  offset,\r\n  setQueueList,\r\n  queuelist,\r\n  setDetails,\r\n  setPage,\r\n  setOffset,\r\n  setDetailsTotal,\r\n  setResponseCount,\r\n}) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n\r\n  const [params, setParams] = useState({ startDate: formatDate(today), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT callcent_ag_dropped_calls.q_num, callcent_ag_dropped_calls.ag_num, to_char(callcent_ag_dropped_calls.time_start,'dd-mm-yyyy HH24:MI:SS') as time_start, to_char(callcent_ag_dropped_calls.time_end,'dd-mm-yyyy HH24:MI:SS') as time_end,callcent_ag_dropped_calls.q_call_history_id,callcent_queuecalls.from_userpart, callcent_queuecalls.from_displayname, callcent_ag_dropped_calls.reason_noanswerdesc,callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start as waiting FROM callcent_ag_dropped_calls inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id where  callcent_ag_dropped_calls.time_start >= '\r\n\t${params.startDate}' \r\n\t and callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled' ${\r\n    queue === '' ? '' : \"and callcent_ag_dropped_calls.q_num = '\" + queue + \"'\"\r\n  } limit ${limit} offset ${offset}`;\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  let stringCount = `SELECT \r\n  count(*)\r\n  FROM callcent_ag_dropped_calls \r\n  inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id\r\n  where  callcent_ag_dropped_calls.time_start >= '${params.startDate}' \r\n  and\r\n  callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day' \r\n  and \r\n  callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n  `;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAbandonedQueueCalls(string).then(response => {\r\n      getAgentNumber().then(resp => {\r\n        var list = JSON.parse(response.data.data);\r\n        for (let i = 0; i < list.length; i++) {\r\n          JSON.parse(resp.data.data).map(res => {\r\n            if (list[i].ag_num === res.dn) {\r\n              list[i].ag_num = res.dn + '-' + res.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n        setLoading(false);\r\n      });\r\n    });\r\n\r\n    getAbandonedQueueCalls(stringCount).then(response => {\r\n      setResponseCount(JSON.parse(response.data.data)[0].count);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [string]);\r\n  useEffect(() => {\r\n    getQueue().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    getAbandonedQueueCallsDetails(params, queue).then(response => {\r\n      setDetails(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n\r\n  useEffect(() => {\r\n    getAbandonedQueueCallsDetailsTotal(params, queue).then(response => {\r\n      setDetailsTotal(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    event.target.value === '' ? setQueue('') : setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <AbondenedQueuesDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <DatePicker\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(startDate)}\r\n                        onChange={setStartDate}\r\n                        label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <DatePicker\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(endDate)}\r\n                        onChange={setEndDate}\r\n                        label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                      />\r\n                    </Grid> */}\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={''}>All</MenuItem>\r\n                          {queuelist.map((que, index) => (\r\n                            <MenuItem key={index} value={que.dn}>\r\n                              {que.dn} - {que.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\"\r\n                    variant=\"contained\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, queues, responseCount }) {\r\n  // const columns = [\r\n  //   { id: 'call_time', label: <IntlMessages id={'filter.menu.startdate'} />, minWidth: 60, align: 'center' },\r\n  //   {\r\n  //     id: 'callerid',\r\n  //     label: <IntlMessages id={'caller.id'} />,\r\n  //     minWidth: 70,\r\n  //     align: 'center',\r\n  //   },\r\n  //   { id: 'queue', label: <IntlMessages id={'queue'} />, minWidth: 60, align: 'center' },\r\n  //   {\r\n  //     id: 'waiting_time',\r\n  //     label: <IntlMessages id={'waiting.time'} />,\r\n  //     minWidth: 60,\r\n  //     align: 'center',\r\n  //   },\r\n  //   {\r\n  //     id: 'agent',\r\n  //     label: <IntlMessages id={'agent.number'} />,\r\n  //     minWidth: 60,\r\n  //     align: 'center',\r\n  //   },\r\n  // ];\r\n  const columns = [\r\n    {\r\n      field: 'call_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#30475E' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'callerid',\r\n      headerName: <IntlMessages id={'caller.id'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'queue',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'agent',\r\n      headerName: <IntlMessages id={'agent.number'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#AE431E' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'waiting.time'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(id, queue, call_time, waiting_time, callerid, agent) {\r\n    return { id, queue, call_time, waiting_time, callerid, agent };\r\n  }\r\n\r\n  for (var i = 0; i < datalist.length; i++) {\r\n    for (var z = 0; z < queues.length; z++) {\r\n      if (datalist[i].q_num === queues[z].dn) {\r\n        datalist[i].q_num = queues[z].dn + '  ' + queues[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.waiting\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_displayname,\r\n      data.ag_num,\r\n    ),\r\n  );\r\n\r\n  console.log(rows);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(responseCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={curentLanguage.locale === 'en-US' ? 'Abondened_queues' : 'Kuyruk_terk_raporu'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Start Time' : 'Başlangıç Zamanı'}\r\n                      value=\"call_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Caller Number' : 'Arayan Numara'}\r\n                      value=\"callerid\"\r\n                    />\r\n                    <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Queue' : 'Kuyruk'} value=\"queue\" />\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'}\r\n                      value=\"agent\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                      value=\"waiting_time\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n        {/* {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Abondened_queues' : 'Kuyruk_terk_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Start Time' : 'Başlangıç Zamanı'} value=\"call_time\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Caller Number' : 'Arayan Numara'} value=\"callerid\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Queue' : 'Kuyruk'} value=\"queue\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Agent Number' : 'Agent Numarası'} value=\"agent\" />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale == 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                value=\"waiting_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )} */}\r\n      </div>\r\n      <Paper>\r\n        {/* <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, responseCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nfunction Details({ details, detailsTotal }) {\r\n  const columns = [\r\n    { id: 'date_day', label: <IntlMessages id={'filter.menu.date'} />, minWidth: 100, align: 'center' },\r\n    { id: 'cnt', label: <IntlMessages id={'wallboard.total.call'} />, minWidth: 170, align: 'center' },\r\n\r\n    {\r\n      id: 'total_waiting_time',\r\n      label: <IntlMessages id={'waiting.time'} />,\r\n      minWidth: 170,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'act',\r\n      label: <IntlMessages id={'average'} />,\r\n      minWidth: 170,\r\n      align: 'center',\r\n    },\r\n  ];\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  // const returnTime = time => {\r\n  //   if (typeof time === 'undefined') {\r\n  //     time = '00';\r\n  //   } else {\r\n  //     if (time < 10) {\r\n  //       time = '0' + time;\r\n  //     } else {\r\n  //       time = time;\r\n  //     }\r\n  //   }\r\n  //   return time;\r\n  // };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(cnt, date_day, total_waiting_time, act) {\r\n    return { cnt, date_day, total_waiting_time, act };\r\n  }\r\n\r\n  const rows = details.map(data =>\r\n    createData(\r\n      data.cnt,\r\n      data.day_abandoned,\r\n      data.total_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n      data.act.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>\r\n          <IntlMessages id={'summery'} />\r\n        </caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"center\">{getNewDate(row.date_day)}</TableCell>\r\n              <TableCell align=\"center\">{row.cnt}</TableCell>\r\n              <TableCell align=\"center\">{row.total_waiting_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n              <TableCell align=\"center\">{row.act}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {detailsTotal.map((row, index) => (\r\n            <TableRow key={index} style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'total'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.totalcount}</TableCell>\r\n              <TableCell align=\"center\">{row.totalwaiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n              <TableCell align=\"center\">{row.act.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>{' '}\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n/**  */\r\n","import React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport Details from './Details';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport const AbandonedQueues = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [detailsTotal, setDetailsTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abandoned.queues'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abandoned.queues'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setDetails={setDetails}\r\n            setResponse={setResponse}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setQueueList={setQueueList}\r\n            queuelist={queuelist}\r\n            limit={limit}\r\n            offset={offset}\r\n            setDetailsTotal={setDetailsTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            page={page}\r\n            queues={queuelist}\r\n            setPage={setPage}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Details details={details} detailsTotal={detailsTotal} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function RepadativeCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  getQueueNumber,\r\n  getRepetetiveAll,\r\n  getRepetetiveAnswered,\r\n  getDidNumbers,\r\n  getRepetetiveAllCount,\r\n  getRepetetiveAnsweredCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getRepetetiveCallerDetails } from 'api/api';\r\nimport RepadativeCallsDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setallcalls,\r\n  setPage,\r\n  setAllCallOffset,\r\n  limit,\r\n  allCallOffset,\r\n  setAnsweredCallOffset,\r\n  setPageAnswered,\r\n  setAnsweredLimit,\r\n  answeredLimit,\r\n  answeredCallsOffset,\r\n  setAnsweredCalls,\r\n  setLimit,\r\n  callerNumber,\r\n  setResponseCaller,\r\n  setAllCallCount,\r\n  setAnsweredCallCount,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: formatDate(yesterday),\r\n    paramFinish: formatDate(today),\r\n  });\r\n\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [didList, setDidList] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRepetetiveAll(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setallcalls(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n    getRepetetiveAllCount(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setAllCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, limit, allCallOffset, queue, setallcalls, setAllCallCount, didNumber]);\r\n  useEffect(() => {\r\n    getRepetetiveAnswered(params, answeredLimit, answeredCallsOffset, queue).then(response =>\r\n      setAnsweredCalls(JSON.parse(response.data.data)),\r\n    );\r\n\r\n    getRepetetiveAnsweredCount(params).then(response => {\r\n      setAnsweredCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, answeredLimit, answeredCallsOffset, setAnsweredCalls, setAnsweredCallCount, queue]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDidNumbers().then(resp => {\r\n      setDidList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRepetetiveCallerDetails(params, callerNumber).then(resp => {\r\n      setResponseCaller(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params, callerNumber, setQueueList, setDidList, setResponseCaller]);\r\n\r\n  const handleClick = () => {\r\n    setAllCallOffset(0);\r\n    setAnsweredCallOffset(0);\r\n    setLimit(10);\r\n    setAnsweredLimit(10);\r\n    setPage(0);\r\n    setPageAnswered(0);\r\n    setParams({\r\n      paramStart: formatDate(startDate),\r\n      paramFinish: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  const handleChangeQueueNumber = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeDidNumber = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RepadativeCallsDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <GridContainer>\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={queue}\r\n                    onChange={handleChangeQueueNumber}\r\n                    label={<IntlMessages id={'queue'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {queuelist.map((queue, index) => (\r\n                      <MenuItem key={index} value={queue.dn}>\r\n                        {queue.dn} - {queue.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={didNumber}\r\n                    onChange={handleChangeDidNumber}\r\n                    label={<IntlMessages id={'mountlydetails.didnumber'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {didList.map((did, index) => (\r\n                      <MenuItem key={index} value={did.conditiondata}>\r\n                        {did.conditiondata}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </GridContainer>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              onClick={() => {\r\n                handleClick();\r\n              }}\r\n              size=\"small\"\r\n              variant=\"contained\">\r\n              <IntlMessages id={'filter.menu.search'} />\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AllCalls = ({\r\n  allcalls,\r\n  setallcalls,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  setCallerNumber,\r\n  setOpen,\r\n  allCallCount,\r\n}) => {\r\n  const columns = [\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(cnt, src_display_name) {\r\n    return { cnt, src_display_name };\r\n  }\r\n\r\n  const rows = allcalls.map(data => createData(data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClick = number => {\r\n    setCallerNumber(number);\r\n    setOpen(true);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [exportAllOpen, setExpotAllOpen] = useState(false);\r\n  const handleExportAllOpen = () => setExpotAllOpen(true);\r\n  const handleExportAllClose = () => setExpotAllOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(allCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setallcalls([]);\r\n    handleExportAllOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={exportAllOpen}\r\n        onClose={handleExportAllClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      {/* {rows.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )} */}\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'allcalls'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell>\r\n                  <IntlMessages id={'details'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell style={{ cursor: 'pointer' }} onClick={() => handleClick(row.src_display_name)}>\r\n                      <VisibilityIcon style={{ color: '#F05454' }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, allCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={allCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={allcalls.length < limit || allcalls.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={rows.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCalls;\r\n/** */\r\n/***/\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ responseCaller }) => {\r\n  const columns = [\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n    { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n    { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n    { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {responseCaller.map((row, index) => {\r\n            return (\r\n              <TableRow style={{ cursor: 'pointer' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                {columns.map(column => {\r\n                  const value = row[column.id];\r\n                  return <TableCell>{value}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AnsweredCalls = ({\r\n  answeredcalls,\r\n  setAnsweredCalls,\r\n  setAnsweredLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  answeredCallCount,\r\n}) => {\r\n  const columns = [\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(cnt, src_display_name) {\r\n    return { cnt, src_display_name };\r\n  }\r\n\r\n  const rows = answeredcalls.map(data => createData(data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setAnsweredLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setAnsweredLimit(answeredCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setAnsweredCalls([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      {/* {rows.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )} */}\r\n\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'wallboard.answered'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, answeredCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={answeredCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={\r\n            answeredcalls.length < limit || answeredcalls.length === 0 ? { disabled: true } : { disabled: false }\r\n          }\r\n          rowsPerPage={limit}\r\n          backIconButtonText={rows.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnsweredCalls;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport CallTable from './AllCalls';\r\nimport Model from './Model';\r\nimport AnsweredCalls from './AnsweredCalls';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box, Button } from '@mui/material';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst RepetetiveCalls = () => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [answeredLimit, setAnsweredLimit] = useState(10);\r\n  const [allCallOffset, setAllCallOffset] = useState(0);\r\n  const [answeredCallsOffset, setAnsweredCallOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [pageAnswered, setPageAnswered] = useState(0);\r\n  const [allcalls, setallcalls] = useState([]);\r\n  const [answeredCalls, setAnsweredCalls] = useState([]);\r\n  const [callerNumber, setCallerNumber] = useState('');\r\n  const [responseCaller, setResponseCaller] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [allCallCount, setAllCallCount] = useState(10);\r\n  const [answeredCallCount, setAnsweredCallCount] = useState(10);\r\n  let curentLanguage = useIntl();\r\n\r\n  const handleClose = event => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'repetetive.calls'} />, isActive: true },\r\n  ];\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'repetetive.calls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <Filter\r\n            setResponseCaller={setResponseCaller}\r\n            setAnsweredCallCount={setAnsweredCallCount}\r\n            setallcalls={setallcalls}\r\n            callerNumber={callerNumber}\r\n            setPage={setPage}\r\n            setAllCallOffset={setAllCallOffset}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            answeredLimit={answeredLimit}\r\n            limit={limit}\r\n            setPageAnswered={setPageAnswered}\r\n            setLimit={setLimit}\r\n            allCallOffset={allCallOffset}\r\n            setAnsweredCallOffset={setAnsweredCallOffset}\r\n            answeredCallsOffset={answeredCallsOffset}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            setAllCallCount={setAllCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<AddIcCallIcon />}\r\n                    number={allCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'allcalls'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<PhoneInTalkIcon />}\r\n                    number={answeredCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'wallboard.answered'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <CallTable\r\n            setOpen={setOpen}\r\n            responseCaller={responseCaller}\r\n            offset={allCallOffset}\r\n            setOffset={setAllCallOffset}\r\n            allcalls={allcalls}\r\n            setallcalls={setallcalls}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setCallerNumber={setCallerNumber}\r\n            setPage={setPage}\r\n            page={page}\r\n            allCallCount={allCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <AnsweredCalls\r\n            answeredcalls={answeredCalls}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            answeredCallCount={answeredCallCount}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            setPage={setPageAnswered}\r\n            page={pageAnswered}\r\n            limit={answeredLimit}\r\n            setOffset={setAnsweredCallOffset}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model responseCaller={responseCaller} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <ExcelFile\r\n              filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls_Detail' : 'Mükerrer_arama_Detay'}\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={responseCaller} name=\"responseCaller\">\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'DID Number' : 'DID Numarası'} value=\"src_did\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Called' : 'Hedef DN'} value=\"dst_display_name\" />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Talk Time' : 'Konuşma Süresi'}\r\n                  value=\"talkingtime\"\r\n                />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                  value=\"waitingtime\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginLeft: '10px' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default RepetetiveCalls;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst QueueList = ({ setQueueAmaunt }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getQueueList().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n      setQueueAmauntFunction();\r\n    }\r\n    var queueListTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(queueListTimeout);\r\n    }\r\n  };\r\n\r\n  const setQueueAmauntFunction = () => {\r\n    let queAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].waitingNumber !== '-') {\r\n        queAmaunt++;\r\n      }\r\n    }\r\n    // response.map(queue => {\r\n    //   if (queue.waitingNumber !== '-') {\r\n    //     queAmaunt++;\r\n    //   }\r\n    // });\r\n\r\n    setQueueAmaunt(queAmaunt);\r\n  };\r\n\r\n  setQueueAmauntFunction();\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.waiting'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue'} />\r\n            </TableCell>\r\n            {/* <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.number'} />\r\n            </TableCell> */}\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.length >= 1\r\n            ? response.map((row, index) => {\r\n                return row.waitingNumber !== '-' ? (\r\n                  <TableRow style={{ backgroundColor: '#FFFD95' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.waitingNumber}</b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                      <b>\r\n                        {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                          ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                              .toString()\r\n                              .replace(':', 'h ')\r\n                              .replace(':', 'm ') + 's'\r\n                          : null}\r\n                      </b>\r\n                    </TableCell>\r\n                    {/* <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> {row.queueNumber}\r\n                    </TableCell> */}\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : null;\r\n              })\r\n            : null}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.waitingNumber === '-' ? (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                  <b>\r\n                    <IntlMessages id={'no.waiting'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                  <b>\r\n                    {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n                {/* <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> {row.queueNumber}\r\n                </TableCell> */}\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default QueueList;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentConnection = ({ setCallAmaunt, setAgentAmaunt, setAgentNum, setAgentName }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentConnection().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n\r\n      setValuesFunction();\r\n    }\r\n\r\n    var agentConnectionTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentConnectionTimeout);\r\n    }\r\n  };\r\n\r\n  const setValuesFunction = () => {\r\n    let callAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].connectionNumber !== '-') {\r\n        callAmaunt++;\r\n      }\r\n    }\r\n    // response.map(resp => {\r\n    //   if (resp.connectionNumber !== '-') {\r\n    //     callAmaunt++;\r\n    //   }\r\n    // });\r\n\r\n    setCallAmaunt(callAmaunt);\r\n    setAgentAmaunt(response.length);\r\n  };\r\n  setValuesFunction();\r\n\r\n  const setAgentNumFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const column = [\r\n    { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'agent'} />, width: '30px' },\r\n    { id: 'connection_number', headerName: <IntlMessages id={'connection.number'} />, width: '60px' },\r\n    { id: 'connection_time', headerName: <IntlMessages id={'connection.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'agent.number'} />\r\n            </TableCell> */}\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'internals.summary.agent'} />\r\n            </TableCell>{' '}\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.number'} />\r\n            </TableCell>{' '}\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.time'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber !== '-' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}\r\n                hover\r\n                role=\"checkbox\"\r\n                tabIndex={-1}>\r\n                {/* <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {row.agentNumber}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber === '-' ? (\r\n              <TableRow key={index} hover role=\"checkbox\" tabIndex={-1} style={{ cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {row.agentNumber}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentConnection;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentStatus = ({ setBreakeAgentAmount, setLoginAgentAmount, setAgentNum, setAgentName }) => {\r\n  var now = new Date();\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  // const addZero = param => {\r\n  //   if (param < 10) {\r\n  //     return '0' + param;\r\n  //   } else {\r\n  //     return param;\r\n  //   }\r\n  // };\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentStatus(convertToLocalTime(now)).then(resp => {\r\n        setResponse(JSON.parse(resp.data.data));\r\n      });\r\n      setValuesFunction();\r\n    }\r\n    var agentStatusTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentStatusTimeout);\r\n    }\r\n  };\r\n\r\n  //response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout'\r\n\r\n  const setValuesFunction = () => {\r\n    let breakeAgenAmaunt = 0;\r\n    let loginAgentAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout') {\r\n        breakeAgenAmaunt++;\r\n      } else if (response[i].states === 'Login') {\r\n        loginAgentAmaunt++;\r\n      }\r\n    }\r\n    // response.map(agent => {\r\n    //   if (agent.states !== 'Login' && agent.states !== 'State' && agent.states !== 'Logout') {\r\n    //     breakeAgenAmaunt++;\r\n    //   } else if (agent.states === 'Login') {\r\n    //     loginAgentAmaunt++;\r\n    //   }\r\n    // });\r\n    setBreakeAgentAmount(breakeAgenAmaunt);\r\n    setLoginAgentAmount(loginAgentAmaunt);\r\n  };\r\n  setValuesFunction();\r\n\r\n  const onClickUptateValuesFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const column = [\r\n    // { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'internals.summary.agent'} />, width: '30px' },\r\n    { id: 'states', headerName: <IntlMessages id={'state'} />, width: '60px' },\r\n    { id: 'statustime', headerName: <IntlMessages id={'state.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '33vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map(column => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={{\r\n                  paddingTop: '8px',\r\n                  paddingBottom: '8px',\r\n                  fontFamily: 'Roboto',\r\n                  color: 'white',\r\n                  backgroundColor: '#FA744F',\r\n                }}>\r\n                {column.headerName}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Login' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states !== 'Login' && res.states !== 'State' && res.states !== 'Logout' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{\r\n                  backgroundColor:\r\n                    res.states === 'YEMEK' && parseInt(res.statustime.split(':')[0]) >= 1\r\n                      ? '#DD4A48'\r\n                      : res.states === 'WC' && parseInt(res.statustime.split(':')[1]) >= 5\r\n                      ? '#DD4A48'\r\n                      : '#F3950D',\r\n                  cursor: 'pointer',\r\n                }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Logout' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#DE834D', cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'State' ? (\r\n              <TableRow key={index} style={{ cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />{' '}\r\n                  <b>{res.states === 'State' ? 'Pasif' : res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PhonePausedIcon from '@mui/icons-material/PhonePaused';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport PhoneMissedIcon from '@mui/icons-material/PhoneMissed';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\n\r\nexport default function CallDetail({ queueAmaunt, callAmaunt, agentAmaunt, breakeAgentAmaunt, loginAgentAmaunt }) {\r\n  const mydate = new Date();\r\n  let history = useHistory();\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api\r\n        .getDailyCallDetails(convertToLocalTime(mydate))\r\n        .then(resp => {\r\n          setResponse(JSON.parse(resp.data.data)[0]);\r\n        })\r\n        .catch(resp => {\r\n          if (resp.response?.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }\r\n    var callDetailTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(callDetailTimeout);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const convertTime = timeString => {\r\n    if (timeString !== undefined) {\r\n      if (timeString.includes('.')) {\r\n        let tempHour = parseInt(timeString.split('.')[0]) * 24;\r\n        return (\r\n          tempHour +\r\n          parseInt(timeString.split('.')[1].split(':')[0]) +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[1] +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[2]\r\n        );\r\n      } else {\r\n        return timeString;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: '1px', fontFamily: 'Roboto' }}>\r\n      <GridContainer>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00') !== undefined\r\n                  ? (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.call.time'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AddIcCallIcon />}\r\n              number={response.total_call}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.total.call'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneCallbackIcon />}\r\n              number={(\r\n                parseInt(response.total_call) -\r\n                parseInt(response.agent_to_agent_calls) -\r\n                parseInt(response.outbound_calls)\r\n              ).toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.inbound'} />}\r\n              labelProps={{\r\n                fontSize: 11,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.outbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.outbound'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={response.answered_inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.answered'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#EA4C4C  -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneMissedIcon />}\r\n              number={String(\r\n                response.total_call -\r\n                  response.agent_to_agent_calls -\r\n                  response.answered_inbound_calls -\r\n                  response.outbound_calls <\r\n                  0\r\n                  ? '0'\r\n                  : response.total_call -\r\n                      response.agent_to_agent_calls -\r\n                      response.answered_inbound_calls -\r\n                      response.outbound_calls,\r\n              )}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.unanswered'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhonePausedIcon />}\r\n              number={queueAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.waiting.queue'} />}\r\n              labelProps={{\r\n                fontSize: 11,\r\n              }}\r\n              backgroundColor={['#EA4C4C -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={callAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.call'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PersonIcon />}\r\n              number={agentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<TimerIcon />}\r\n              number={breakeAgentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.inbreak'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<GroupIcon />}\r\n              number={String(loginAgentAmaunt - callAmaunt < 0 ? 0 : loginAgentAmaunt - callAmaunt)}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.available'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                (response.average !== '' ? response.average : '00:00:00') !== undefined\r\n                  ? (response.average !== '' ? response.average : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.average.time'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Tab, Tabs, Typography } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AgentDetail({ agentNum, agentName }) {\r\n  const [agentDetail, setAgentDetail] = useState({\r\n    dst_display_name: '-',\r\n    totalcall: '0',\r\n    answered_call: '0',\r\n    inbound_call_to_agent: '0',\r\n    outbound_call_to_agent: '0',\r\n    totaltime: '00:00:00',\r\n    average: '00:00:00',\r\n    inboundtotaltime: '00:00:00',\r\n    outboundtotaltime: '00:00:00',\r\n    inboundaverage: '00:00:00',\r\n    outboundaverage: '00:00:00',\r\n  });\r\n  let [voiceMail, setVoiceMail] = useState('0');\r\n  let [longTime, setLongTime] = useState('00:00:00');\r\n  let [waitingTime, setWaitingTime] = useState('00:00:00');\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getAgentDetails(agentNum, convertToLocalTime(Date.now())).then(res => {\r\n        if (JSON.parse(res.data.data).length === 0) {\r\n          setAgentDetail({\r\n            dst_display_name: agentName,\r\n            totalcall: '0',\r\n            answered_call: '0',\r\n            inbound_call_to_agent: '0',\r\n            outbound_call_to_agent: '0',\r\n            totaltime: '00:00:00',\r\n            average: '00:00:00',\r\n            inboundtotaltime: '00:00:00',\r\n            outboundtotaltime: '00:00:00',\r\n            inboundaverage: '00:00:00',\r\n            outboundaverage: '00:00:00',\r\n          });\r\n        } else {\r\n          setAgentDetail(JSON.parse(res.data.data)[0]);\r\n        }\r\n      });\r\n    }\r\n  }, [agentNum, agentName]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardVoiceMail(agentNum).then(response => {\r\n        setVoiceMail(JSON.parse(response.data.data)[0].count);\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardLongTime(agentNum).then(response => {\r\n        setLongTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardWaitingTime(agentNum).then(response => {\r\n        setWaitingTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  // const addZero = param => {\r\n  //   if (param < 10) {\r\n  //     return '0' + param;\r\n  //   } else {\r\n  //     return param;\r\n  //   }\r\n  // };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <Paper>\r\n        <div style={{ height: '33vh', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Box style={{ width: '100%' }}>\r\n            <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n              <Tabs value={value} onChange={handleChange}>\r\n                {/* <Tab label={<IntlMessages id={'wallboard.agentdetail.calldetails'} />} {...a11yProps(0)} />\r\n                <Tab label={<IntlMessages id={'wallboard.agentdetail.timedetails'} />} {...a11yProps(1)} /> */}\r\n                <Tab style={{ borderRight: '3px solid #a1bf6e' }} label={<IntlMessages id={'Total'} />} {...a11yProps(0)} />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Inbound'} />}\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Outbound'} />}\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Box>\r\n            {/* <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.inbound.call.agent'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.outbound.call.agent'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel> */}\r\n            <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n          </Box>\r\n          {/* <div>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'agent.number'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentNum}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.dst_display_name}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.totalcall}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.inbound.call.agent'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.inbound_call_to_agent}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.answered_call}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'total.time'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.totaltime?.hours === undefined\r\n                    ? agentDetail?.totaltime?.minutes === undefined\r\n                      ? agentDetail?.totaltime?.seconds === undefined\r\n                        ? '00:00:00'\r\n                        : '00:00:' + addZero(agentDetail?.totaltime?.seconds)\r\n                      : agentDetail?.totaltime?.seconds === undefined\r\n                      ? '00:' + addZero(agentDetail?.totaltime?.minutes) + ':00'\r\n                      : '00:' + addZero(agentDetail?.totaltime?.minutes) + ':' + addZero(agentDetail?.totaltime?.seconds)\r\n                    : agentDetail?.totaltime?.minutes === undefined\r\n                    ? agentDetail?.totaltime?.seconds === undefined\r\n                      ? addZero(agentDetail?.totaltime?.hours) + ':00:00'\r\n                      : addZero(agentDetail?.totaltime?.hours) + ':00:' + addZero(agentDetail?.totaltime?.seconds)\r\n                    : agentDetail?.totaltime?.seconds === undefined\r\n                    ? addZero(agentDetail?.totaltime?.hours) + ':' + addZero(agentDetail?.totaltime?.minutes) + ':00'\r\n                    : addZero(agentDetail?.totaltime?.hours) +\r\n                      ':' +\r\n                      addZero(agentDetail?.totaltime?.minutes) +\r\n                      ':' +\r\n                      addZero(agentDetail?.totaltime?.seconds)}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'average'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.average?.hours === undefined\r\n                    ? agentDetail?.average?.minutes === undefined\r\n                      ? agentDetail?.average?.seconds === undefined\r\n                        ? '00:00:00'\r\n                        : '00:00:' + addZero(agentDetail?.average?.seconds)\r\n                      : agentDetail?.average?.seconds === undefined\r\n                      ? '00:' + addZero(agentDetail?.average?.minutes) + ':00'\r\n                      : '00:' + addZero(agentDetail?.average?.minutes) + ':' + addZero(agentDetail?.average?.seconds)\r\n                    : agentDetail?.average?.minutes === undefined\r\n                    ? agentDetail?.average?.seconds === undefined\r\n                      ? addZero(agentDetail?.average?.hours) + ':00:00'\r\n                      : addZero(agentDetail?.average?.hours) + ':00:' + addZero(agentDetail?.average?.seconds)\r\n                    : agentDetail?.average?.seconds === undefined\r\n                    ? addZero(agentDetail?.average?.hours) + ':' + addZero(agentDetail?.average?.minutes) + ':00'\r\n                    : addZero(agentDetail?.average?.hours) +\r\n                      ':' +\r\n                      addZero(agentDetail?.average?.minutes) +\r\n                      ':' +\r\n                      addZero(agentDetail?.average?.seconds)}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.outbound.call.agent'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.outbound_call_to_agent}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>Voice Mail</p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {voiceMail}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>Longest Time</p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {longTime}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>Total Waiting Time</p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {waitingTime}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n          </div> */}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport QueueList from './QueueList';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport AgentConnection from './AgentConnection';\r\nimport AgentStatus from './AgentStatus/AgentStatus';\r\nimport CallDetail from './CallDetail';\r\nimport AgentDetail from './AgentDetail';\r\n\r\nconst WallBoard = () => {\r\n  let [queueAmaunt, setQueueAmaunt] = useState(0);\r\n  let [callAmaunt, setCallAmaunt] = useState(0);\r\n  let [agentAmaunt, setAgentAmaunt] = useState(0);\r\n  let [breakeAgentAmaunt, setBreakeAgentAmount] = useState(0);\r\n  let [loginAgentAmaunt, setLoginAgentAmount] = useState(0);\r\n  let [agentNum, setAgentNum] = useState('0');\r\n  let [agentName, setAgentName] = useState('-');\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n    { label: <IntlMessages id={'wallboard'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"wallboard\" />} breadcrumbs={breadcrumbs}>\r\n      <div>\r\n        <CallDetail\r\n          queueAmaunt={queueAmaunt}\r\n          callAmaunt={callAmaunt}\r\n          agentAmaunt={agentAmaunt}\r\n          breakeAgentAmaunt={breakeAgentAmaunt}\r\n          loginAgentAmaunt={loginAgentAmaunt}\r\n        />\r\n      </div>\r\n      <GridContainer>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#EA4C4C   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queuelist'} />\r\n            </div>\r\n            <QueueList queueAmaunt={queueAmaunt} setQueueAmaunt={setQueueAmaunt} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#2978B5   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.connection'} />\r\n            </div>\r\n            <AgentConnection\r\n              setCallAmaunt={setCallAmaunt}\r\n              setAgentAmaunt={setAgentAmaunt}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#FA744F',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agent.status'} />\r\n            </div>\r\n            <AgentStatus\r\n              setBreakeAgentAmount={setBreakeAgentAmount}\r\n              setLoginAgentAmount={setLoginAgentAmount}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#ADCE74',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.detail'} />\r\n            </div>\r\n            <AgentDetail agentNum={agentNum} agentName={agentName} />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default WallBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDailyLog, getDailyLogTable } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\n\r\nfunction Filter({ setResponse, setResponseTable }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyLog(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  useEffect(() => {\r\n    getDailyLogTable(params.date).then(resp => {\r\n      setResponseTable(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params.date, setResponseTable]);\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst DataTable = ({ response, responseTable }) => {\r\n  let date;\r\n  let totalCall = 0;\r\n  let total = 0;\r\n  let act = 0;\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  // const returnTime = time => {\r\n  //   if (typeof time === 'undefined') {\r\n  //     time = 0;\r\n  //   } else {\r\n  //     time = time;\r\n  //   }\r\n  //   return time;\r\n  // };\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  for (let i = 0; i < responseTable.length; i++) {\r\n    date = responseTable[i].hour_log !== 'undefined' ? responseTable[i].hour_log.split(' ')[0] : '-';\r\n    totalCall += parseInt(responseTable[i].count);\r\n    total = responseTable[i].total;\r\n\r\n    act = responseTable[i].act;\r\n  }\r\n  // responseTable.map(data => {\r\n  //   date = data.hour_log !== 'undefined' ? data.hour_log.split(' ')[0] : '-';\r\n  //   totalCall += parseInt(data.count);\r\n  //   total = data.total;\r\n\r\n  //   act = data.act;\r\n  // });\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function createData(date, totalCall, totalMin, act) {\r\n    return { date, totalCall, totalMin, act };\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const rows = [createData(date, totalCall, total, act)];\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={currentLanguage.locale === 'en-US' ? 'Daily_log_report' : 'Gunluk_yuk_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Adedi'} value=\"totalCall\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Duration' : 'Süre'} value=\"totalMin\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Arama Süresi'}\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Duration'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b>{row.date !== undefined ? row.date : '-'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.totalCall}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.totalMin.length > 0\r\n                      ? row.totalMin.split(':')[0].length > 2\r\n                        ? parseInt(row.totalMin?.split(':')[0].split('.')[0]) * 24 +\r\n                          parseInt(row.totalMin?.split(':')[0].split('.')[1]).toString() +\r\n                          ':' +\r\n                          row.totalMin.split(':')[1] +\r\n                          ':' +\r\n                          row.totalMin.split(':')[2]\r\n                        : row.totalMin\r\n                      : row.totalMin\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {row.act\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis, Label } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst Chart = ({ response }) => {\r\n  // const returnhour = time => {\r\n  //   const date = new Date(time);\r\n  //   return date.getHours();\r\n  // };\r\n  // let count = [];\r\n  let datalist = [];\r\n  datalist = response.map(data => ({\r\n    count: data.count,\r\n    hour: parseInt(data.hour_log.split(' ')[1].split(':')[0]),\r\n  }));\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    const found = datalist.some(data => parseInt(data.hour) === i);\r\n    if (!found) {\r\n      datalist.push({ count: 0, hour: i });\r\n    }\r\n  }\r\n  datalist.sort(function(a, b) {\r\n    return parseInt(a.hour) - parseInt(b.hour);\r\n  });\r\n  var maximum = Math.max.apply(\r\n    Math,\r\n    datalist.map(function(o) {\r\n      return o.count;\r\n    }),\r\n  );\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\">\r\n                <Label value={curentLanguage.locale === 'en-US' ? 'Hour' : 'Saat'} position=\"insideBottomRight\" offset={0} />\r\n              </XAxis>\r\n              <YAxis\r\n                domain={[0, maximum]}\r\n                dataKey=\"count\"\r\n                label={{ value: curentLanguage.locale === 'en-US' ? 'Count' : 'Adet', angle: -90, position: 'insideLeft' }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={data => {\r\n                  return data.payload[0] ? (\r\n                    <div style={{ backgroundColor: 'white' }}>\r\n                      <p>\r\n                        <IntlMessages id={'hour'} />: {data.payload[0].payload.hour}\r\n                      </p>\r\n                      <p>\r\n                        <IntlMessages id={'call.time'} />: {data.payload[0].payload.count}\r\n                      </p>\r\n                    </div>\r\n                  ) : null;\r\n                }}\r\n              />\r\n              <Legend />\r\n              <defs>\r\n                <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                  <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                </linearGradient>\r\n              </defs>\r\n\r\n              <Bar dataKey=\"count\" fill=\"url(#color1)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DailyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTable, setResponseTable] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailylog'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'dailylog'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse} setResponseTable={setResponseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <DataTable response={response} responseTable={responseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyLog;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(date, count, total, act) {\r\n    return { date, count, total, act };\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n  const rows = response.map(data => createData(data.day_log, data.count, data.total, data.act));\r\n\r\n  let data = rows.map(unit => ({\r\n    date: unit.date.split('T')[0],\r\n    count: unit.count,\r\n    total:\r\n      unit.total.hours === undefined\r\n        ? unit.total.minutes === undefined\r\n          ? unit.total.seconds === undefined\r\n            ? '00:00:00'\r\n            : '00:00:' + addZero(unit.total.seconds)\r\n          : unit.total.seconds === undefined\r\n          ? '00:' + addZero(unit.total.minutes) + ':00'\r\n          : '00:' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds)\r\n        : unit.total.minutes === undefined\r\n        ? unit.total.seconds === undefined\r\n          ? addZero(unit.total.hours) + ':00:00'\r\n          : addZero(unit.total.hours) + ':00:' + addZero(unit.total.seconds)\r\n        : unit.total.seconds === undefined\r\n        ? addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':00'\r\n        : addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds),\r\n    act:\r\n      unit.act !== undefined\r\n        ? unit.act.hours === undefined\r\n          ? unit.act.minutes === undefined\r\n            ? unit.act.seconds === undefined\r\n              ? '00:00:00'\r\n              : '00:00:' + addZero(unit.act.seconds)\r\n            : unit.act.seconds === undefined\r\n            ? '00:' + addZero(unit.act.minutes) + ':00'\r\n            : '00:' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n          : unit.act.minutes === undefined\r\n          ? unit.act.seconds === undefined\r\n            ? addZero(unit.act.hours) + ':00:00'\r\n            : addZero(unit.act.hours) + ':00:' + addZero(unit.act.seconds)\r\n          : unit.act?.seconds === undefined\r\n          ? addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':00'\r\n          : addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n        : '00:00:00',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    day: 0,\r\n    count: 0,\r\n    totalTime: 0,\r\n    averageTime: 0,\r\n  };\r\n\r\n  function timeToSecond(param) {\r\n    let second = parseInt(param.hours) * 3600 + parseInt(param.minutes) * 60 + parseInt(param.seconds);\r\n    return second;\r\n  }\r\n  for (let i = 0; i < rows.length; i++) {\r\n    total.count += parseInt(rows[i].count);\r\n    total.day = rows.length;\r\n    total.totalTime += timeToSecond(rows[i].total);\r\n    total.averageTime += timeToSecond(rows[i].act);\r\n  }\r\n\r\n  // rows.map(row => {\r\n  //   total.count += parseInt(row.count);\r\n  //   total.day = rows.length;\r\n  //   total.totalTime += timeToSecond(row.total);\r\n  //   total.averageTime += timeToSecond(row.act);\r\n  // });\r\n\r\n  function secondToTime(param, day) {\r\n    param = param / parseInt(day);\r\n    let string =\r\n      addZero(Math.floor(param / 3600)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) % 60));\r\n    return string;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={currentLanguage.locale === 'en-US' ? 'Daily_log_report' : 'Gunluk_yuk_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Adedi'} value=\"count\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Duration' : 'Süre'} value=\"total\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Arama Süresi'}\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell>\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.date.split('T')[0]}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.count}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.total.hours === undefined\r\n                      ? row.total.minutes === undefined\r\n                        ? row.total.seconds === undefined\r\n                          ? '00:00:00'\r\n                          : '00:00:' + addZero(row.total.seconds)\r\n                        : row.total.seconds === undefined\r\n                        ? '00:' + addZero(row.total.minutes) + ':00'\r\n                        : '00:' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                      : row.total.minutes === undefined\r\n                      ? row.total.seconds === undefined\r\n                        ? addZero(row.total.hours) + ':00:00'\r\n                        : addZero(row.total.hours) + ':00:' + addZero(row.total.seconds)\r\n                      : row.total.seconds === undefined\r\n                      ? addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':00'\r\n                      : addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b style={{ color: '#FF87CA' }}>\r\n                    {(row.act !== undefined\r\n                      ? row.act.hours === undefined\r\n                        ? row.act.minutes === undefined\r\n                          ? row.act.seconds === undefined\r\n                            ? '00:00:00'\r\n                            : '00:00:' + addZero(row.act.seconds)\r\n                          : row.act.seconds === undefined\r\n                          ? '00:' + addZero(row.act.minutes) + ':00'\r\n                          : '00:' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                        : row.act.minutes === undefined\r\n                        ? row.act.seconds === undefined\r\n                          ? addZero(row.act.hours) + ':00:00'\r\n                          : addZero(row.act.hours) + ':00:' + addZero(row.act.seconds)\r\n                        : row.act?.seconds === undefined\r\n                        ? addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':00'\r\n                        : addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                      : '00:00:00'\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <b>\r\n                  {total.day + ' '} <IntlMessages id={'day'} />{' '}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.totalTime, 1)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.averageTime, total.day)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TableContainer } from '@material-ui/core';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = props => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const data = {\r\n    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\r\n    datasets: [\r\n      {\r\n        label: typeof props.array[0] === 'undefined' ? [] : props.array[0].date,\r\n        data: typeof props.array[0] === 'undefined' ? [] : props.array[0].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 206, 86, 0.8)',\r\n        borderColor: 'rgba(255, 206, 86, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[1] === 'undefined' ? [] : props.array[1].date,\r\n        data: typeof props.array[1] === 'undefined' ? [] : props.array[1].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[2] === 'undefined' ? [] : props.array[2].date,\r\n        data: typeof props.array[2] === 'undefined' ? [] : props.array[2].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        borderColor: 'rgba(54, 162, 235, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[3] === 'undefined' ? [] : props.array[3].date,\r\n        data: typeof props.array[3] === 'undefined' ? [] : props.array[3].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n      {\r\n        label: typeof props.array[4] === 'undefined' ? [] : props.array[4].date,\r\n        data: typeof props.array[4] === 'undefined' ? [] : props.array[4].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderColor: 'rgba(153, 102, 255, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n\r\n      <TableContainer className={classes.root} component={Paper} ref={ref}>\r\n        <Line data={data} options={options} />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getCallComparison, getCallComparisonDaily } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nfunction Filter({ setResponse, response, setGraphData, setResponseDaily }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const showTime = date => {\r\n    const date_ = new Date(date);\r\n    return date_.getHours();\r\n  };\r\n  const today = new Date();\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [select, setSelect] = useState(1);\r\n  const [, setParams] = useState({ date: formatDate(today), choice: '' });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let array = [];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallComparisonDaily(formatDate(endDate), select).then(resp => {\r\n      let tempResponse = JSON.parse(resp.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          'T00:00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours:\r\n            tempResponse[i].total.split(':')[0].length > 2\r\n              ? parseInt(tempResponse[i].total.split(':')[0].split('.')[0]) * 24 +\r\n                parseInt(tempResponse[i].total.split(':')[0].split('.')[1]).toString()\r\n              : tempResponse[i].total.split(':')[0].startsWith('0')\r\n              ? tempResponse[i].total.split(':')[0].substring(1)\r\n              : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponseDaily(tempResponse);\r\n      setGraphData(array);\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  useEffect(() => {\r\n    getCallComparison(formatDate(endDate), select).then(response => {\r\n      let tempResponse = JSON.parse(response.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          'T' +\r\n          tempResponse[i].day_log.split(' ')[1].split(':')[0] +\r\n          ':00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours: tempResponse[i].total.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[0].substring(1)\r\n            : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponse(tempResponse);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  const respdata = response.map(data => ({\r\n    DayLog: formatDate(data.day_log),\r\n    Count: data.count,\r\n    TotalHour: data.total.hours === undefined || data.total.hour === 0 ? 0 : data.total.hour,\r\n    TotalMinutes: data.total.minutes === undefined || data.total.minutes === 0 ? 0 : data.total.minutes,\r\n    TotalSeconds: data.total.seconds === undefined || data.total.seconds === 0 ? 0 : data.total.seconds,\r\n    Hour: showTime(data.day_log),\r\n    Act: data.act.seconds === undefined || data.act.seconds === 0 ? 0 : data.act.seconds,\r\n  }));\r\n\r\n  let labelArray = [];\r\n\r\n  for (let i = select; i >= 0; i--) {\r\n    var date = new Date(formatDate(endDate));\r\n    date.setDate(date.getDate() - i);\r\n    labelArray.push(formatDate(date));\r\n  }\r\n  labelArray.reverse();\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    if (!respdata.some(daylog => daylog.DayLog === labelArray[i])) {\r\n      respdata.push({\r\n        DayLog: labelArray[i],\r\n        Count: 0,\r\n        TotalHour: 0,\r\n        TotalMinutes: 0,\r\n        TotalSeconds: 0,\r\n        Hour: 0,\r\n        Act: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    let group = [];\r\n    let totalDataArray = [];\r\n    let totalMins = [];\r\n    let totalSeconds = [];\r\n    let act = [];\r\n    group = respdata.filter(function(el) {\r\n      return !(el.DayLog !== labelArray[i]);\r\n    });\r\n\r\n    let tempgroup = group.map(data => {\r\n      for (let j = 0; j < 24; j++) {\r\n        if (j === data.Hour) {\r\n          totalDataArray[j] = data.Count;\r\n          act[j] = data.Act;\r\n          totalSeconds[j] = data.TotalSeconds;\r\n          totalMins[j] = data.TotalMinutes;\r\n        } else {\r\n          if (typeof totalDataArray[j] === 'undefined') {\r\n            totalDataArray[j] = 0;\r\n            act[j] = 0;\r\n            totalSeconds[j] = 0;\r\n            totalMins[j] = 0;\r\n          }\r\n        }\r\n      }\r\n      array[i] = {\r\n        date: labelArray[i],\r\n        count: totalDataArray,\r\n        totalSeconds: totalSeconds,\r\n        totalMins: totalMins,\r\n        act: act,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tempgroup);\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleClick = () => {\r\n    setParams({ date: formatDate(endDate), choice: select });\r\n    setGraphData(array);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'days.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"* days ago\"\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport DataTable from './Table';\r\nimport { Grid } from '@material-ui/core';\r\nimport Graph from './Graph';\r\nimport Filter from './Filter';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst CallComparison = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseDaily, setResponseDaily] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'call.comparison'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'call.comparison'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n          <Filter\r\n            setGraphData={setGraphData}\r\n            response={response}\r\n            setResponse={setResponse}\r\n            setResponseDaily={setResponseDaily}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <DataTable response={responseDaily} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Graph array={graphData} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CallComparison;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getMontlyLog } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nfunction Filter({ setResponse }) {\r\n  const today = new Date();\r\n  const [selectedMonth, setSelectedMonth] = useState(1);\r\n  const [select, setSelect] = useState(1);\r\n  const [sum, setSum] = useState(0);\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let selectboxdata = [];\r\n\r\n  for (var i = 6; i >= 0; i -= 1) {\r\n    var date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n\r\n    selectboxdata.push({\r\n      data: months[date.getMonth()] + ' ' + date.getFullYear(),\r\n      year: date.getFullYear(),\r\n      month: <IntlMessages id={`${months[date.getMonth()]}`} />,\r\n    });\r\n  }\r\n  selectboxdata.reverse();\r\n\r\n  const handleChange = event => {\r\n    setSum(event.target.value - 1);\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleMonthChange = event => {\r\n    setSelectedMonth(event.target.value);\r\n    setSum(select - 1);\r\n  };\r\n  const handleClick = () => {\r\n    setSum(select - 1);\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      setLoading(true);\r\n      getMontlyLog(selectedMonth, sum).then(response => {\r\n        let resultArray = JSON.parse(response.data.data);\r\n        for (let i = 0; i < resultArray.length; i++) {\r\n          let tempArray = resultArray[i].date_trunc.split(' ')[0].split('.');\r\n          resultArray[i].date_trunc = tempArray[2] + '-' + tempArray[1] + '-0' + tempArray[0];\r\n        }\r\n        setResponse(resultArray);\r\n        // setResponse(response);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [sum, selectedMonth, notFirstReq, setResponse]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                  value={selectedMonth}\r\n                  onChange={handleMonthChange}>\r\n                  <MenuItem value={' '}>\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {selectboxdata.map((data, index) => (\r\n                    <MenuItem key={index} value={selectboxdata.indexOf(data) + 1}>\r\n                      {data.month} {data.year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'months.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={'* ' + <IntlMessages id={'months.ago'} />}\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={5}>\r\n                    5 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={6}>\r\n                    6 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  customTooltip: {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: 5,\r\n  },\r\n}));\r\nconst formatDate = date => {\r\n  let d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  let year = d.getFullYear();\r\n  let hour = d.getHours();\r\n  let min = d.getMinutes();\r\n\r\n  if (month < 10) month = '0' + month;\r\n  if (day < 10) day = '0' + day;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n\r\n  return year + '-' + month;\r\n};\r\nconst ApplicationsGraph = ({ pieData }) => {\r\n  const classes = useStyles();\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      return (\r\n        <Box className={classes.customTooltip}>\r\n          <label>{`${payload[0].name} : ${payload[0].value}`}</label>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const data = pieData.map(data => ({\r\n    name: formatDate(data.date_trunc),\r\n    value: parseInt(data.toplam),\r\n  }));\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n  return (\r\n    <PieChart width={194} height={194}>\r\n      <Pie\r\n        data={data}\r\n        color=\"#000000\"\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        isAnimationActive={true}\r\n        outerRadius={95}\r\n        fill=\"#8884d8\">\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip content={<CustomTooltip />} />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default ApplicationsGraph;\r\n","import React, { createRef } from 'react';\r\nimport CmtCard from '@coremat/CmtCard';\r\nimport CmtCardHeader from '@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '@coremat/CmtCard/CmtCardContent';\r\nimport Chart from './graph';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = ({ response }) => {\r\n  const useStyles = makeStyles({\r\n    cardRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative',\r\n      '& .Cmt-card-content': {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n      <div ref={ref}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader className=\"pt-5\" title={<IntlMessages id={'monthly.log'} />}></CmtCardHeader>\r\n          <CmtCardContent>\r\n            <Chart pieData={response} />\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { toInteger } from 'lodash';\r\n\r\nconst DataTable = ({ response }) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  let aylar = [\r\n    'Ocak',\r\n    'Şubat',\r\n    'Mart',\r\n    'Nisan',\r\n    'Mayıs',\r\n    'Haziran',\r\n    'Temmuz',\r\n    'Ağustos',\r\n    'Eylül',\r\n    'Ekim',\r\n    'Kasım',\r\n    'Aralık',\r\n  ];\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 200,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + d.getMonth();\r\n\r\n    return { month: <IntlMessages id={`${months[parseInt(month)]}`} />, year: d.getFullYear() };\r\n  };\r\n  function createData(date, total) {\r\n    return { date, total };\r\n  }\r\n  const rows = response.map(data => createData(formatDate(data.date_trunc), data.toplam));\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  function formatDateExcel(param) {\r\n    let d = new Date(param);\r\n    console.log(param);\r\n    let month = parseInt(d.getMonth());\r\n\r\n    let returnedMonth = currentLanguage.locale === 'en-US' ? months[month] : aylar[month];\r\n\r\n    return returnedMonth + '-' + d.getFullYear();\r\n  }\r\n\r\n  let data = response.map(unit => ({\r\n    date: formatDateExcel(unit.date_trunc),\r\n    total: unit.toplam,\r\n  }));\r\n\r\n  let totalCall = 0;\r\n  for (let i = 0; i < rows.length; i++) {\r\n    totalCall += toInteger(rows[i].total);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={currentLanguage.locale === 'en-US' ? 'Monthly_log_report' : 'Aylık_yuk_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                value=\"total\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5', color: 'white' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow style={{ backgroundColor: colors[index] }} key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>\r\n                    {row.date.month}-{row.date.year}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.total}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {rows.length > 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px' }} /> <b>{totalCall}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Graph from './Graph';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst MonthlyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthly.log'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthly.log'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xs={12} lg={12}>\r\n          <Filter setResponse={setResponse}/>\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <Graph response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default MonthlyLog;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst DataTable = ({ response, page, setPage, setLimit, setOffset, offset, limit, setResponse }) => {\r\n  const columns = [\r\n    {\r\n      id: 'dst_start_time',\r\n      label: <IntlMessages id={'filter.menu.startdate'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'dst_end_time',\r\n      label: <IntlMessages id={'filter.menu.enddate'} />,\r\n      minWidth: 70,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'q_num',\r\n      label: <IntlMessages id={'queue'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'src_dn',\r\n      label: <IntlMessages id={'internals.summary.agent'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      id: 'dst_dn',\r\n      label: <IntlMessages id={'Called.Numbers'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      id: 'duration',\r\n      label: <IntlMessages id={'Duration'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  function createData(src_dn, src_display_name, dst_start_time, dst_end_time, dst_dn, q_num, duration) {\r\n    return {\r\n      src_dn,\r\n      src_display_name,\r\n      dst_start_time,\r\n      dst_end_time,\r\n      dst_dn,\r\n      q_num,\r\n      duration,\r\n    };\r\n  }\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.src_dn,\r\n      data.src_display_name,\r\n      data.dst_start_time,\r\n      data.dst_end_time,\r\n      data.dst_dn,\r\n      data.q_num,\r\n      data.duration,\r\n    ),\r\n  );\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={currentLanguage.locale === 'en-US' ? 'Returned_drop_call' : 'Geri_donulmus_kacan_cagrilar'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Start Time' : 'Başlangıç Zamanı'}\r\n                value=\"dst_start_time\"\r\n              />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'End Time' : 'Bitiş Zamanı'} value=\"dst_end_time\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Queue Number' : 'Kuyruk Numarası'} value=\"q_num\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numara'} value=\"src_dn\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Called Number' : 'Arayan Numara'} value=\"dst_dn\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Duration' : 'Süre'} value=\"duration\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={(page + 1) * limit}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit || response.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={rows.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n/** */\r\n/** */\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueue } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Filter({ agent, queue, setAgent, setQueue }) {\r\n  const [queues, setQueues] = useState([]);\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeAgent = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Typography>\r\n        <IntlMessages id={'filters'} />\r\n      </Typography>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"agent-select-label\">\r\n                <IntlMessages id={'internals.summary.agent'} />\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"agent-select-label\"\r\n                id=\"agent-select\"\r\n                value={agent}\r\n                onChange={handleChangeAgent}\r\n                label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                <MenuItem value={''}>\r\n                  <IntlMessages id={'all'} />\r\n                </MenuItem>\r\n                {agents.map((agent, index) => (\r\n                  <MenuItem key={index} value={agent.dn}>\r\n                    {agent.dn + '-' + agent.display_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"agent-select-label\">\r\n                <IntlMessages id={'queue'} />\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"agent-select-label\"\r\n                id=\"agent-select\"\r\n                value={queue}\r\n                onChange={handleChangeQueue}\r\n                label={<IntlMessages id={'queue'} />}>\r\n                <MenuItem value={''}>\r\n                  <IntlMessages id={'all'} />\r\n                </MenuItem>\r\n                {queues.map((queue, index) => (\r\n                  <MenuItem key={index} value={queue.dn}>\r\n                    {queue.dn + '-' + queue.display_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions></CardActions>\r\n    </Card>\r\n  );\r\n}\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getReturnedDropCall,getQueue,getAgentNumber } from 'api/api';\r\nimport DataTable from './Table';\r\nimport Filter from './Filter'\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Alert from '@mui/material/Alert';\r\nconst ReturnedDropCall = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queue,setQueue] = useState('')\r\n  const [agent,setAgent] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getReturnedDropCall(limit, offset,agent,queue).then((response) =>{\r\n       var respList = JSON.parse(response.data.data)\r\n       getQueue().then(resp=>{\r\n        var list = JSON.parse(resp.data.data);\r\n        list.forEach(que => {\r\n        for(var i =0;i<respList.length;i++) {      \r\n          if(respList[i].q_num === que.dn) {\r\n            respList[i].q_num = que.dn + \" - \" + que.display_name\r\n          }\r\n        }\r\n        });\r\n        getAgentNumber().then(resp=>{\r\n          var list = JSON.parse(resp.data.data);\r\n          list.forEach(age => {\r\n          for(var i =0;i<respList.length;i++) {      \r\n            if(respList[i].src_dn === age.dn) {\r\n              respList[i].src_dn = age.dn + \" - \" + age.display_name\r\n            }\r\n          }\r\n          });\r\n          setResponse(respList) \r\n        })        \r\n      })     \r\n      });\r\n  }, [limit, offset,agent,queue]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'returneddropcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'returneddropcall'} />} breadcrumbs={breadcrumbs} >\r\n      <GridContainer>\r\n       <Grid item xs={12}>\r\n       <Filter\r\n          queue={queue}\r\n          setQueue={setQueue}\r\n          agent={agent}\r\n          setAgent={setAgent}\r\n        />\r\n       </Grid>\r\n        <Grid item md={12} lg={12} sm={12}>\r\n          <DataTable\r\n            page={page}\r\n            setPage={setPage}\r\n            response={response}\r\n            limit={limit}\r\n            setLimit={setLimit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n\r\n      <Alert style={{ marginTop: '15px' }} severity=\"info\">\r\n        <IntlMessages id={'returneddropcall.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ReturnedDropCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function AgentSessionReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  MenuItem,\r\n  Grid,\r\n  CardActions,\r\n  CardContent,\r\n  Card,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueueNumber, getAgentSession, getBreakName, getAgentSessionClicked } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AgentSessionReportDateFilter from './DateFilter';\r\nfunction Filter({\r\n  setAgentSession,\r\n  qnum,\r\n  agent,\r\n  setQnum,\r\n  setAgent,\r\n  setClickedResponse,\r\n  clickedAgent,\r\n  responseBreak,\r\n  setResponseBreak,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n\r\n  const [params, setParams] = useState({\r\n    agent: '',\r\n    queue: '',\r\n    break: '',\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      agent: agentSelect === 'all' ? '' : agentSelect,\r\n      queue: queueSelect === 'all' ? '' : queueSelect,\r\n      break: breakSelect === 'all' ? '' : breakSelect,\r\n      paramFinish: dateDifference(startTime),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => setQnum(JSON.parse(response.data.data)));\r\n    getAgentNumber().then(response => setAgent(JSON.parse(response.data.data)));\r\n    getBreakName().then(response => {\r\n      setResponseBreak(JSON.parse(response.data.data));\r\n    });\r\n  }, [setQnum, setAgent, setResponseBreak]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let [startTime, setStartTime] = useState(formatDate(today));\r\n  let [endTime, setEndTime] = useState(formatDate(today));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAgentSession(params.agent, params.queue, params.break, startTime, endTime).then(response => {\r\n      setAgentSession(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getAgentSessionClicked(clickedAgent, startTime, endTime).then(resp => {\r\n      setClickedResponse(JSON.parse(resp.data.data));\r\n    });\r\n  }, [clickedAgent, params, endTime, startTime, setAgentSession, setClickedResponse]);\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  let [agentSelect, setAgentSelect] = useState('');\r\n  const [breakSelect, setBreakSelect] = useState('');\r\n\r\n  const handleChangeQueueSelect = event => {\r\n    setQueueSelect(event.target.value);\r\n  };\r\n  const handleChangeAgentSelect = event => {\r\n    setAgentSelect(event.target.value);\r\n  };\r\n  const handleBreakChange = event => {\r\n    setBreakSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '15px' }}>\r\n        <AgentSessionReportDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card className={classes.root}>\r\n        <Formik initialValues={{ queue: '', agent: '' }} onSubmit={values => {}}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          inputVariant=\"outlined\"\r\n                          format=\"DD-MM-YYYY\"\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                          renderInput={params => <TextField {...params} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid> */}\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"queue-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          value={queueSelect}\r\n                          onChange={handleChangeQueueSelect}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {qnum.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">\r\n                          <IntlMessages id={'internals.summary.agent'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={agentSelect}\r\n                          onChange={handleChangeAgentSelect}\r\n                          label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {agent.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n\r\n                      {/* <Field disabled={false} name=\"agent\" as=\"select\" component={Select}>\r\n                        <MenuItem value=\"\">\r\n                          <IntlMessages id={'all'} />\r\n                        </MenuItem>\r\n                        {agent.map((data, index) => (\r\n                          <MenuItem key={index} value={data.dn}>\r\n                            {data.display_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Field> */}\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"break-select-label\">\r\n                          <IntlMessages id={'breaks'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"break-select-label\"\r\n                          id=\"break-select\"\r\n                          value={breakSelect}\r\n                          onChange={handleBreakChange}\r\n                          label={<IntlMessages id={'breaks'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {responseBreak.map((data, index) => (\r\n                            <MenuItem key={index} value={data.value}>\r\n                              {data.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\"\r\n                    variant=\"contained\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nexport default function DataTable({ qnum, agent, agentSession, setClickedAgent, setOpen }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < agent.length; z++) {\r\n      if (agentSession[i].ag_num === agent[z].dn) {\r\n        agentSession[i].ag_num = agentSession[i].ag_num + '-' + agent[z].display_name;\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < qnum.length; z++) {\r\n      if (agentSession[i].q_num === qnum[z].dn) {\r\n        agentSession[i].q_num = qnum[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  let csvData = agentSession.map(row => ({\r\n    ag_num: row.ag_num,\r\n    q_num: row.q_num,\r\n    status: row.status,\r\n    state_time:\r\n      row.escapetime\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  const handleClick = ag_num => {\r\n    setClickedAgent(ag_num.split('-')[0]);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {agentSession.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={currentLanguage.locale === 'en-US' ? 'Agent_Session_Report' : 'Agent_Oturum_Raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Agent Name' : 'Agent Adı'} value=\"ag_num\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Queue Name' : 'Kuyruk Adı'} value=\"q_num\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'State' : 'Durum'} value=\"status\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'State Time' : 'Durum Süresi'} value=\"state_time\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'detail'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {' '}\r\n                <IntlMessages id={'wallboard.queue.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state.time'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {agentSession.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => handleClick(row.ag_num)}>\r\n                  <VisibilityIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />\r\n                  <b>{row.ag_num.split('-')[1] + ' (' + row.ag_num.split('-')[0] + ')'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <b>{row.q_num}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n                  <b style={{ color: '#F05454' }}>{row.status}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b style={{ color: '#F2789F' }}>\r\n                    {' '}\r\n                    {row.escapetime\r\n                      .replace('.', 'd ')\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ clickedResponse, responseBreak }) => {\r\n  // const columns = [\r\n  //   { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  // ];\r\n  let keys = [];\r\n\r\n  if (clickedResponse.length > 0) {\r\n    keys = Object.keys(clickedResponse[0]);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      for (let j = 0; j < responseBreak.length; j++) {\r\n        if (keys[i].substring(1) === responseBreak[j].value) {\r\n          keys[i] = responseBreak[j].name;\r\n        }\r\n      }\r\n      // responseBreak.map(breaks => {\r\n      //   if (keys[i].substring(1) === breaks.value) {\r\n      //     keys[i] = breaks.name;\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  // style={{ minWidth: column.minWidth }}\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Agent</TableCell>\r\n            <TableCell>Logout</TableCell>\r\n            <TableCell>{keys[2]}</TableCell>\r\n            <TableCell>{keys[3]}</TableCell>\r\n            <TableCell>{keys[4]}</TableCell>\r\n            <TableCell>{keys[5]}</TableCell>\r\n            <TableCell>{keys[6]}</TableCell>\r\n            <TableCell>{keys[7]}</TableCell>\r\n            <TableCell>{keys[8]}</TableCell>\r\n            <TableCell>{keys[9]}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clickedResponse.map((row, index) => {\r\n            return (\r\n              <TableRow>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.agent}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.logout}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8072}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8073}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8074}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8075}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8076}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8077}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8078}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8079}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Model from './Model';\r\nimport { Modal } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box } from '@mui/material';\r\n\r\nconst AgentCDR = () => {\r\n  const [agentSession, setAgentSession] = useState([]);\r\n  const [qnum, setQnum] = useState([]);\r\n  const [agent, setAgent] = useState([]);\r\n  const [clickedAgent, setClickedAgent] = useState('');\r\n  const [clickedResponse, setClickedResponse] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  // let token = localStorage.getItem('role');\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.session.report'} />, isActive: true },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const [responseBreak, setResponseBreak] = useState([]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.session.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <Filter\r\n            responseBreak={responseBreak}\r\n            setResponseBreak={setResponseBreak}\r\n            setAgentSession={setAgentSession}\r\n            qnum={qnum}\r\n            agent={agent}\r\n            setQnum={setQnum}\r\n            setAgent={setAgent}\r\n            setClickedResponse={setClickedResponse}\r\n            clickedAgent={clickedAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <DataTable\r\n            qnum={qnum}\r\n            agent={agent}\r\n            agentSession={agentSession}\r\n            setClickedAgent={setClickedAgent}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model clickedResponse={clickedResponse} responseBreak={responseBreak} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AgentCDR;\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getAgentNumberV16 } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Filter({ selectedStartTime, selectedEndTime, setSelectedEndTime, setSelectedStartTime, setParams }) {\r\n  const [agent, setAgent] = React.useState('All');\r\n  const [menuItems, setMenuItems] = React.useState([]);\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  useEffect(() => {\r\n    getAgentNumberV16().then(response => setMenuItems(response));\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setParams({\r\n      startdate: formatDate(selectedStartTime),\r\n      enddate: formatDate(selectedEndTime),\r\n      agent: agent,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          <IntlMessages id={'filter'} />\r\n        </Typography>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedStartTime}\r\n              onChange={setSelectedStartTime}\r\n              label={<IntlMessages id={'filter.menu.startdate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedEndTime}\r\n              onChange={setSelectedEndTime}\r\n              label={<IntlMessages id={'filter.menu.enddate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Agent</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={agent}\r\n                  label=\"Agent\"\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"All\">\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {menuItems.map((data, index) => (\r\n                    <MenuItem value={data.dn} key={index}>\r\n                      {data.dn} {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Table, TableHead, TableBody, TableContainer, TableCell, Paper, TableRow } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n    let seconds = d.getSeconds();\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + seconds;\r\n  };\r\n  function createData(agent, called, date, key) {\r\n    return { agent, called, date, key };\r\n  }\r\n  const rows = response.map(data => createData(data.agent, data.called, formatDate(data.issuetime), data.key));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'agent.number'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'called'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'filter.menu.date'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell align=\"center\">{row.agent}</TableCell>\r\n              <TableCell align=\"center\">{row.called}</TableCell>\r\n              <TableCell align=\"center\">{row.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { getIYSReport } from 'api/api';\r\n\r\nconst IYS = () => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const today = new Date();\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(today) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n  const [response, setResponse] = useState([]);\r\n  const [params, setParams] = useState({\r\n    agent: 'All',\r\n    startdate: formatDate(today) + ' 00:00:00',\r\n    enddate: formatDate(today) + ' 23:59:00',\r\n  });\r\n  useEffect(() => {\r\n    getIYSReport(params).then(response => setResponse(response.data));\r\n  }, [params]);\r\n\r\n  return (\r\n    <GridContainer>\r\n      <Grid item sm={12} md={12} lg={12}>\r\n        <Filter\r\n          selectedStartTime={selectedStartTime}\r\n          selectedEndTime={selectedEndTime}\r\n          setSelectedEndTime={setSelectedEndTime}\r\n          setSelectedStartTime={setSelectedStartTime}\r\n          setParams={setParams}\r\n        />\r\n      </Grid>\r\n      <Grid item sm={12} md={12} lg={12}>\r\n        <DataTable response={response} />\r\n      </Grid>\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\nexport default IYS;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTeamsUsers,\r\n  getCsOnlineVoiceRoutingPolicy,\r\n  getCsTenantDialplan,\r\n  getCsTeamsCallingPolicy,\r\n  changeCsTeamsCallingPolicy,\r\n  changeCsVoiceRoutingPolicy,\r\n  getUserDetailsByUserId,\r\n  changeCsTenantDiaplan,\r\n} from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Button,\r\n  AccordionActions,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Users() {\r\n  let [users, setUsers] = useState([]);\r\n  let [selecetedUser, setSelectedUser] = useState('');\r\n  let [selectedUserDetails, setSelectedUserDetails] = useState({\r\n    onlineVoiceRoutingPolicy: '-',\r\n    tenantDialPlan: '-',\r\n    teamsCallingPolicy: '-',\r\n    userPrincibleName: '-',\r\n  });\r\n\r\n  let [voiceRoutingPolicys, setVoiceRoutingPolicys] = useState([]);\r\n  let [selectedvoiceRoutingPolicy, setSelectedvoiceRoutingPolicy] = useState('');\r\n\r\n  let [tenantDiaplans, setTenantDiaplan] = useState([]);\r\n  let [selectedTenantDiaplans, setSelectedTenantDiaplans] = useState('');\r\n\r\n  let [teamsCallingPolicys, setTeamsCallingPolicy] = useState([]);\r\n  let [selectedTeamsCallingPolicy, setSelectedTeamsCallingPolicy] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getTeamsUsers({ token: localStorage.getItem('token') })\r\n      .then(result => {\r\n        setUsers(result.data.data);\r\n        getCsOnlineVoiceRoutingPolicy({\r\n          token: localStorage.getItem('token'),\r\n        }).then(res => {\r\n          setVoiceRoutingPolicys(res.data.data);\r\n          getCsTenantDialplan({\r\n            token: localStorage.getItem('token'),\r\n          }).then(res2 => {\r\n            setTenantDiaplan(res2.data.data);\r\n            getCsTeamsCallingPolicy({\r\n              token: localStorage.getItem('token'),\r\n            }).then(res3 => {\r\n              setTeamsCallingPolicy(res3.data.data);\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (selecetedUser !== '') {\r\n      getUserDetailsByUserId({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n      }).then(result => {\r\n        setSelectedUserDetails(result.data.data);\r\n      });\r\n    }\r\n  }, [selecetedUser]);\r\n\r\n  const handleChangeUserEmail = event => {\r\n    setSelectedUser(event.target.value);\r\n  };\r\n  const handleChangeVoiceRoutingPolicy = event => {\r\n    setSelectedvoiceRoutingPolicy(event.target.value);\r\n  };\r\n  const handleChangeTenantDiaplans = event => {\r\n    setSelectedTenantDiaplans(event.target.value);\r\n  };\r\n  const handleChangeTeamsCallingPolicy = event => {\r\n    setSelectedTeamsCallingPolicy(event.target.value);\r\n  };\r\n\r\n  const handleSubmitChangeTeamsCallingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTeamsCallingPolicy === '') {\r\n      NotificationManager.error('Teams Calling Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTeamsCallingPolicy !== '') {\r\n      changeCsTeamsCallingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        policyName: selectedTeamsCallingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeVoiceRoutingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedvoiceRoutingPolicy === '') {\r\n      NotificationManager.error('Voice Routing Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedvoiceRoutingPolicy !== '') {\r\n      changeCsVoiceRoutingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        voiceRoutingPolicy: selectedvoiceRoutingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeTenantDiaplan = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTenantDiaplans === '') {\r\n      NotificationManager.error('Tenant Diaplan must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTenantDiaplans !== '') {\r\n      changeCsTenantDiaplan({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        tenantDiaplan: selectedTenantDiaplans,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <NotificationContainer />\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Teams Calling Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"teamsCallingPolicy-label\">Teams Calling Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"teamsCallingPolicy-label\"\r\n                  id=\"teamsCallingPolicy\"\r\n                  value={selectedTeamsCallingPolicy}\r\n                  onChange={handleChangeTeamsCallingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>Teams Calling Policy</em>\r\n                  </MenuItem>\r\n                  {teamsCallingPolicys.map((teamsCallingPolicy, index) => (\r\n                    <MenuItem key={index} value={teamsCallingPolicy.callingPolicy}>\r\n                      {teamsCallingPolicy.callingPolicy}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTeamsCallingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Voice Routing Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"voiceRoutingPolicy-label\">Voice Routing Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"voiceRoutingPolicy-label\"\r\n                  id=\"voiceRoutingPolicy\"\r\n                  value={selectedvoiceRoutingPolicy}\r\n                  onChange={handleChangeVoiceRoutingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>VoiceRoutingPolicy</em>\r\n                  </MenuItem>\r\n                  {voiceRoutingPolicys.map((voiceRoutingPolicy, index) => (\r\n                    <MenuItem key={index} value={voiceRoutingPolicy.policyName}>\r\n                      {voiceRoutingPolicy.policyName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeVoiceRoutingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Tenant Diaplan</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"tenantDiaplan-label\">Tenant Diaplan</InputLabel>\r\n                <Select\r\n                  labelId=\"tenantDiaplan-label\"\r\n                  id=\"tenantDiaplan\"\r\n                  value={selectedTenantDiaplans}\r\n                  onChange={handleChangeTenantDiaplans}>\r\n                  <MenuItem value=\"\">\r\n                    <em>TenantDiaplan</em>\r\n                  </MenuItem>\r\n                  {tenantDiaplans.map((tenantDiaplan, index) => (\r\n                    <MenuItem key={index} value={tenantDiaplan.teanantDiaPlan}>\r\n                      {tenantDiaplan.teanantDiaPlan}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTenantDiaplan}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n        Değişim işlemlerinin sonuca yansıması biraz zaman alabilir.\r\n      </div>\r\n      <Card style={{ marginTop: '20px' }}>\r\n        <p style={{ textAlign: 'center', fontSize: '20px', padding: '10px' }}>Selected User Details</p>\r\n        <div style={{ padding: '10px' }}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>User Email</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.userPrincibleName}\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Teams Calling Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.teamsCallingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>Voice Routing Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.onlineVoiceRoutingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Tenant Diaplan</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.tenantDialPlan}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </div>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getAgentTotalCall } from 'api/api';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function Filter({\r\n  selectedEndTime,\r\n  setSelectedEndTime,\r\n  setNotFirstReq,\r\n  notFirstReq,\r\n  setTotalAgent,\r\n  setTotalDid,\r\n  selectedDate,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setSelectedEndTime(selectedEndTime);\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  const formatDate2 = date => {\r\n    let dateArray = date.split('-');\r\n    return dateArray[2] + '-' + dateArray[1] + '-' + dateArray[0];\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(formatDate2(selectedDate), 'cte3').then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setTotalAgent(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(formatDate2(selectedDate), 'cte2').then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setTotalDid(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider\r\n              dateAdapter={AdapterDateFns}\r\n              locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n              <DatePicker\r\n                value={selectedEndTime}\r\n                views={['year', 'month']}\r\n                onChange={newValue => setSelectedEndTime(newValue)}\r\n                renderInput={params => <TextField {...params} />}\r\n                inputVariant=\"outlined\"\r\n                format=\"MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              />\r\n            </LocalizationProvider>\r\n            {/* <DatePicker\r\n              views={['year', 'month']}\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"MM-YYYY\"\r\n              value={selectedEndTime}\r\n              onChange={setSelectedEndTime}\r\n              label={<IntlMessages id={'filter.menu.date'} />}\r\n            /> */}\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function DataTable({ response, limit, setOffset, setPage, setCsvData, setSelectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  //   setOffset(limit * newPage);\r\n  // };\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  function returnedTime(param1, param2) {\r\n    let Param1Array = param1.split(':');\r\n    let Param2Array = param2.split(':');\r\n    if (param1.includes('.')) {\r\n      Param1Array[0] = parseInt(Param1Array[0]) + parseInt(param1.split('.')[0]) * 24;\r\n    }\r\n    if (param2.includes('.')) {\r\n      Param2Array[0] = parseInt(Param2Array[0]) + parseInt(param2.split('.')[0]) * 24;\r\n    }\r\n\r\n    let hour = parseInt(Param1Array[0]) + parseInt(Param2Array[0]);\r\n    let minute = parseInt(Param1Array[1]) + parseInt(Param2Array[1]);\r\n    let second = parseInt(Param1Array[2]) + parseInt(Param2Array[2]);\r\n    return (\r\n      addZero(hour + Math.floor(minute / 60)) +\r\n      ':' +\r\n      addZero((minute % 60) + Math.floor(second / 60)) +\r\n      ':' +\r\n      addZero(second % 60)\r\n    );\r\n  }\r\n\r\n  function calculateAverage(totalCall, totalTime) {\r\n    let timeArray;\r\n    if (totalTime.includes('.')) {\r\n      let tempHour = parseInt(totalTime.split('.')[0]) * 24 + parseInt(totalTime.split('.')[1].split(':')[0]);\r\n      let tempTime = tempHour + ':' + totalTime.split('.')[1].split(':')[1] + ':' + totalTime.split('.')[1].split(':')[2];\r\n      timeArray = tempTime.split(':');\r\n    } else {\r\n      timeArray = totalTime.split(':');\r\n    }\r\n    // let timeArray = totalTime.split(':');\r\n    let time = parseInt(timeArray[0]) * 60 * 60 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);\r\n    let averageSecond = time / (parseInt(totalCall) !== 0 ? parseInt(totalCall) : 1);\r\n\r\n    return totalCall !== 0\r\n      ? addZero(Math.floor(averageSecond / 3600)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) / 60)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) % 60))\r\n      : '00:00:00';\r\n  }\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n\r\n  const column = [\r\n    {\r\n      id: 'd',\r\n      headerName: <IntlMessages id={'filter.menu.date'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalcall',\r\n      headerName: <IntlMessages id={'wallboard.total.call'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalinbound',\r\n      headerName: <IntlMessages id={'dashboard.inbound'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'answeredinb',\r\n      headerName: <IntlMessages id={'wallboard.answered'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationcalls',\r\n      headerName: <IntlMessages id={'total.time'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationinbound',\r\n      headerName: <IntlMessages id={'durationinbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'totaloutbound',\r\n      headerName: <IntlMessages id={'dashboard.outbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationoutbound',\r\n      headerName: <IntlMessages id={'durationoutbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageTotal',\r\n      headerName: <IntlMessages id={'Act'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageInbound',\r\n      headerName: <IntlMessages id={'avIn'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageOutbound',\r\n      headerName: <IntlMessages id={'avOut'} />,\r\n      width: '30px',\r\n    },\r\n  ];\r\n  const createData = (\r\n    d,\r\n    totalcall,\r\n    totalinbound,\r\n    answeredinb,\r\n    durationcalls,\r\n    durationinbound,\r\n    totaloutbound,\r\n    durationoutbound,\r\n    averageTotal,\r\n    averageInbound,\r\n    averageOutbound,\r\n  ) => {\r\n    return {\r\n      d,\r\n      totalcall,\r\n      totalinbound,\r\n      answeredinb,\r\n      durationcalls,\r\n      durationinbound,\r\n      totaloutbound,\r\n      durationoutbound,\r\n      averageTotal,\r\n      averageInbound,\r\n      averageOutbound,\r\n    };\r\n  };\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.d !== 'Total Call' ? getNewDate(data.d.split(' ')[0]) : data.d,\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      data.totalinbound,\r\n      data.answeredinb,\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.totaloutbound,\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(\r\n        parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n        returnedTime(data.durationinbound, data.durationoutbound),\r\n      )\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const csvData = response.map(data => ({\r\n    date: data.d !== 'Total Call' ? data.d.split(' ')[0] : data.d,\r\n    totalcall: parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n    totalinbound: data.totalinbound,\r\n    answeredinb: data.answeredinb,\r\n    durationcalls:\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n\r\n    durationinbound:\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    totaloutbound: data.totaloutbound,\r\n    durationoutbound:\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageTotal: calculateAverage(\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      returnedTime(data.durationinbound, data.durationoutbound),\r\n    ),\r\n    averageinbound:\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageoutbound:\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n        <ExcelFile\r\n          filename={currentLanguage.locale === 'en-US' ? 'Monthly_Details' : 'Aylik_Detaylar'}\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Total Calls' : 'Toplam Arama Sayısı'}\r\n              value=\"totalcall\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Total Inbound' : 'Gelen Aramalar'}\r\n              value=\"totalinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Answered Calls' : 'Cevaplanmış Çağrılar'}\r\n              value=\"answeredinb\"\r\n            />\r\n            <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Duration Calls' : 'Süre'} value=\"durationcalls\" />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Duration Inbounds' : 'Toplam Gelen Arama süresi'}\r\n              value=\"durationinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Total Outbounds' : 'Giden Aramalar'}\r\n              value=\"totaloutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Duration Outbound' : 'Toplam Giden Arama Süresi'}\r\n              value=\"durationoutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Average Total' : 'Ortalama Arama Süresi'}\r\n              value=\"averageTotal\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Average Inbounds' : 'Ortalama Gelen Arama Süresi'}\r\n              value=\"averageinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={currentLanguage.locale === 'en-US' ? 'Average Outbound' : 'Ortalama Giden Arama Süresi'}\r\n              value=\"averageoutbound\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root} style={{ maxHeight: '550px' }}>\r\n        <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  style={{\r\n                    width: column.width,\r\n                    opacity: '.9',\r\n                    backgroundColor: '#4E9F3D',\r\n                    color: 'white',\r\n                  }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return row.d !== 'Total Call' ? (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {column.map(column => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell\r\n                        onClick={() => setSelectedDate(row.d)}\r\n                        key={column.id}\r\n                        style={{ padding: '0px', textAlign: 'center', cursor: 'pointer' }}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ) : (\r\n                console.log('')\r\n              );\r\n            })}\r\n\r\n            {rows.map((row, index) => {\r\n              return row.d === 'Total Call' ? (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={row.code}\r\n                  style={{ backgroundColor: '#4E9F3D', opacity: '.9' }}>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    <IntlMessages id={'Total'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.totalcall}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.totalinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.answeredinb}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.durationcalls}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.durationinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.totaloutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.durationoutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.averageTotal}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.averageInbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }} key={column.id}>\r\n                    {row.averageOutbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                console.log('')\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function Detail({ totalAgent, totalDid }) {\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <GridContainer>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalDid.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'DID_top_5' : 'DID_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalDid} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'DID number' : 'DID Numarası'}\r\n                      value=\"src_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"calldid\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.src_did !== undefined ? totalDid[0]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.calldid !== undefined ? totalDid[0]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.src_did !== undefined ? totalDid[1]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.calldid !== undefined ? totalDid[1]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.src_did !== undefined ? totalDid[2]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.calldid !== undefined ? totalDid[2]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.src_did !== undefined ? totalDid[3]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.calldid !== undefined ? totalDid[3]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.src_did !== undefined ? totalDid[4]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.calldid !== undefined ? totalDid[4]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalAgent.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'Agent_top_5' : 'Agent_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalAgent} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'}\r\n                      value=\"dst_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"agentcall\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.agentnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.dst_display_name !== undefined ? totalAgent[0]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.agentcall !== undefined ? totalAgent[0]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.dst_display_name !== undefined ? totalAgent[1]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.agentcall !== undefined ? totalAgent[1]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.dst_display_name !== undefined ? totalAgent[2]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.agentcall !== undefined ? totalAgent[2]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.dst_display_name !== undefined ? totalAgent[3]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.agentcall !== undefined ? totalAgent[3]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.dst_display_name !== undefined ? totalAgent[4]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.agentcall !== undefined ? totalAgent[4]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n        </GridContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Detail from './Detail';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst MonthlyDetails = () => {\r\n  const [, setCsvData] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTotal] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate(),\r\n  );\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthlydetails'} />, isActive: true },\r\n  ];\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedTime, setSelectedTime] = useState(lastDay(today));\r\n  const [totalAgent, setTotalAgent] = useState([]);\r\n  const [totalDid, setTotalDid] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `select * from cl_get_daily_statics_proc('${lastDay(selectedTime)}')`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  function lastDay(date) {\r\n    // let d = new Date(date);\r\n    // let today = new Date();\r\n    // let xxx = new Date(d.getFullYear(), d.getMonth() + 1, 0).getFullYear() +\r\n    // '-' +\r\n    // (new Date(d.getFullYear(), d.getMonth() + 2, 0).getMonth() !== 0\r\n    //   ? new Date(d.getFullYear(), d.getMonth() + 2, 0).getMonth()\r\n    //   : '12') +\r\n    // '-' +\r\n    // (d.getFullYear() === today.getFullYear() && d.getMonth() === today.getMonth()\r\n    //   ? today.getDate()\r\n    //   : new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate());\r\n    //   console.log('last date 1' + dateFormat(d,'yyyy-mm-dd'));\r\n    //   console.log('last date 2' + dateFormat(date,'yyyy-mm-dd'));\r\n    return dateFormat(date, 'yyyy-mm-dd');\r\n    /*       new Date(d.getFullYear(), d.getMonth() + 1, 0).getFullYear() +\r\n      '-' +\r\n      (new Date(d.getFullYear(), d.getMonth() + 2, 0).getMonth() !== 0\r\n        ? new Date(d.getFullYear(), d.getMonth() + 2, 0).getMonth()\r\n        : '12') +\r\n      '-' +\r\n      (d.getFullYear() === today.getFullYear() && d.getMonth() === today.getMonth()\r\n        ? today.getDate()\r\n        : new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate()) */\r\n  }\r\n\r\n  let queryTotal = `with recursive cte1 as (\r\n    select * from cl_get_daily_statics_proc('${lastDay(selectedTime)}')\r\n      )\r\n  select \r\n  'Total Call' as d,\r\n  (sum(totalinbound)) as totalinbound,\r\n  (sum(answeredinb)) as answeredinb,\r\n  (sum(durationinbound)) as durationinbound ,\r\n  (sum(totaloutbound)) as totaloutbound,\r\n  (sum(durationoutbound)) as durationoutbound\r\n  from cte1`;\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      setLoading(true);\r\n      setSelectedTime(lastDay(selectedTime));\r\n      api\r\n        .getMonthlyDetails({ token: localStorage.getItem('token'), query: query })\r\n        .then(resp => {\r\n          setResponse(JSON.parse(resp.data.data));\r\n          api.getMonthlyTotal({ token: localStorage.getItem('token'), query: queryTotal }).then(resps => {\r\n            setResponse([...JSON.parse(resp.data.data), ...JSON.parse(resps.data.data)]);\r\n            setLoading(false);\r\n          });\r\n        })\r\n        .catch(resp => {\r\n          if (resp.response?.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }\r\n  }, [query, notFirstReq, selectedTime, history, queryTotal]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthlydetails'} />} breadcrumbs={breadcrumbs}>\r\n      <Filter\r\n        selectedEndTime={selectedTime}\r\n        setSelectedEndTime={setSelectedTime}\r\n        setOffset={setOffset}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        notFirstReq={notFirstReq}\r\n        setNotFirstReq={setNotFirstReq}\r\n        setTotalAgent={setTotalAgent}\r\n        setTotalDid={setTotalDid}\r\n        selectedDate={selectedDate}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {notFirstReq && (\r\n        <Table\r\n          page={page}\r\n          setPage={setPage}\r\n          setLimit={setLimit}\r\n          setResponse={setResponse}\r\n          setCsvData={setCsvData}\r\n          limit={limit}\r\n          setOffset={setOffset}\r\n          responseTotal={responseTotal}\r\n          offset={offset}\r\n          response={response}\r\n          setSelectedDate={setSelectedDate}\r\n        />\r\n      )}\r\n      <Detail totalAgent={totalAgent} totalDid={totalDid} />\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default MonthlyDetails;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function QueueAnswerReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  FormControl,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  getQueueAnswerReport,\r\n  getQueueAnswerReportSummary,\r\n  getQueueNumber,\r\n  getQueueAnswerReportSummaryTotal,\r\n  getQueueAnswerReportCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport QueueAnswerReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setData, rowsPerPage, page, setSummary, setSummaryTotal, setResponseCount }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startDate, setStartDate] = useState(formatDate(new Date()));\r\n  let [endDate, setEndDate] = useState(formatDate(new Date()));\r\n  let [queueNum, setQueueNum] = useState('');\r\n  let [src, setSrc] = useState('');\r\n  let [order, setOrder] = useState('ASC');\r\n  let [queues, setQueues] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(startDate, endDate)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n          setData(JSON.parse(resp.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        getQueueAnswerReportCount(startDate, endDate, queueNum, src).then(resp => {\r\n          setResponseCount(JSON.parse(resp.data.data)[0].summed);\r\n        });\r\n\r\n        getQueueAnswerReportSummary(startDate, endDate, queueNum).then(resp => {\r\n          setSummary(JSON.parse(resp.data.data));\r\n        });\r\n\r\n        getQueueAnswerReportSummaryTotal(startDate, endDate, queueNum).then(resp => {\r\n          setSummaryTotal(JSON.parse(resp.data.data));\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [\r\n    startDate,\r\n    endDate,\r\n    queueNum,\r\n    src,\r\n    order,\r\n    rowsPerPage,\r\n    page,\r\n    notFirstReq,\r\n    setData,\r\n    setResponseCount,\r\n    setSummary,\r\n    setSummaryTotal,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueues(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmitButttonClick = () => {\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n    // getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n    //   setData(resp.data);\r\n    // });\r\n  };\r\n\r\n  // const handleChangeStartTime = event => {\r\n  //   setStartDate(formatDate(event._d));\r\n  // };\r\n  // const handleChangeEndTime = event => {\r\n  //   setEndDate(formatDate(event._d));\r\n  // };\r\n  const handleChangeQueueNum = event => {\r\n    setQueueNum(event.target.value);\r\n  };\r\n  const handleChangeOrder = event => {\r\n    setOrder(event.target.value);\r\n  };\r\n  const handleChangeCaller = event => {\r\n    setSrc(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <QueueAnswerReportDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            {/* <Grid item md={2}>\r\n              <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={startDate}\r\n                onChange={handleChangeStartTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n              />\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                minDate={startDate}\r\n                value={endDate}\r\n                onChange={handleChangeEndTime}\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n              />\r\n            </Grid> */}\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'queue.answer.report.queues'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                  value={queueNum}\r\n                  onChange={handleChangeQueueNum}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {queues.map(que => (\r\n                    <MenuItem key={que.id} value={que.dn}>\r\n                      {que.dn} - {que.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"distinct-label\">\r\n                  <IntlMessages id={'queue.answer.report.orderby'} />\r\n                </InputLabel>\r\n                <Select\r\n                  label={<IntlMessages id={'queue.answer.report.orderby'} />}\r\n                  labelId=\"distinct-label\"\r\n                  id=\"distinct\"\r\n                  value={order}\r\n                  onChange={handleChangeOrder}>\r\n                  <MenuItem value=\"ASC\">\r\n                    <IntlMessages id={'oldtonew'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"DESC\">\r\n                    <IntlMessages id={'newtoold'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-basic\"\r\n                label={<IntlMessages id={'caller'} />}\r\n                onChange={handleChangeCaller}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button onClick={handleSubmitButttonClick} variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { getQueueNumber } from 'api/api';\r\nimport { Button } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nexport default function DataTable({\r\n  data,\r\n  setData,\r\n  rowsPerPage,\r\n  setRowsPerPage,\r\n  page,\r\n  setPage,\r\n  summaryTotal,\r\n  responseCount,\r\n}) {\r\n  const [queueList, setQueueList] = useState([]);\r\n  // const column = [\r\n  //   { id: 'dst_start_time', headerName: <IntlMessages id={'queueanswerreport.date'} />, width: '60px' },\r\n  //   { id: 'waiting_time', headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />, width: '100px' },\r\n  //   { id: 'talking', headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />, width: '30px' },\r\n  //   { id: 'src_display_name', headerName: <IntlMessages id={'queueanswerreport.caller'} />, width: '30px' },\r\n  //   { id: 'dst_dn', headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />, width: '30px' },\r\n  // ];\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(resp => {\r\n      setQueueList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  //get queue name\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < queueList.length; j++) {\r\n      if (queueList[j].dn === data[i].dst_dn) {\r\n        data[i].dst_dn = queueList[j].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // data.map(dataUnit => {\r\n  //   queueList.map(queue => {\r\n  //     if (queue.dn === dataUnit.dst_dn) {\r\n  //       dataUnit.dst_dn = queue.display_name;\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  const rows = data.map((dataUnit, index) => ({\r\n    id: index,\r\n    dst_start_time: getNewDate(dataUnit.dst_start_time),\r\n    waiting_time: dataUnit.waiting_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    talking:\r\n      dataUnit.talking\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    src_display_name: dataUnit.src_display_name,\r\n    dst_dn: dataUnit.dst_dn,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleDowlandButtonClick = () => {\r\n    setRowsPerPage(responseCount);\r\n    setPage(0);\r\n    setData([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'dst_start_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.date'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'talking',\r\n      headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'src_display_name',\r\n      headerName: <IntlMessages id={'queueanswerreport.caller'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#F05454' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'dst_dn',\r\n      headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={curentLanguage.locale === 'en-US' ? 'Queue_answer_report' : 'Kuyruk_cevap_raporu'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"dst_start_time\" />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                      value=\"waiting_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Talking Time' : 'Konuşma Süresi'}\r\n                      value=\"talking\"\r\n                    />\r\n                    <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Queue Number' : 'Kuyruk Numarası'}\r\n                      value=\"dst_dn\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n\r\n        {/* // <ExcelFile\r\n          //   filename={curentLanguage.locale === 'en-US' ? 'Queue_answer_report' : 'Kuyruk_cevap_raporu'}\r\n          //   element={\r\n          //     <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n          //       <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          //     </Button>\r\n          //   }>\r\n          //   <ExcelSheet data={rows} name=\"Data\">\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Date' : 'Tarih'} value=\"dst_start_time\" />\r\n          //     <ExcelColumn\r\n          //       label={currentLanguage.locale == 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n          //       value=\"waiting_time\"\r\n          //     />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Talking Time' : 'Konuşma Süresi'} value=\"talking\" />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Queue Number' : 'Kuyruk Numarası'} value=\"dst_dn\" />\r\n          //   </ExcelSheet>\r\n          // </ExcelFile> */}\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50, 100, responseCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column, index) => (\r\n                <TableCell key={index} style={{ width: column.width, textAlign: 'center' }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column, index) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell key={index} style={{ textAlign: 'center' }}>\r\n                        {value}{' '}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50, 100]}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={'Rows Per Page'}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n          */}\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nexport default function QueueAnswerReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'queue.answer.report'} />, isActive: true },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [summary, setSummary] = useState([]);\r\n  const [summaryTotal, setSummaryTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  let classes = useStyles();\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'queue.answer.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            setSummary={setSummary}\r\n            setSummaryTotal={setSummaryTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            data={data}\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            setRowsPerPage={setRowsPerPage}\r\n            page={page}\r\n            setPage={setPage}\r\n            summaryTotal={summaryTotal}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {summaryTotal.length > 0 && (\r\n            <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n              <ExcelFile\r\n                filename={`Queue Answer Report Summary`}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={summary} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"count\" />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                    value=\"waiting_time\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Talking Time' : 'Konuşma Süresi'}\r\n                    value=\"talking\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Görüşme Süresi'}\r\n                    value=\"act\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            </div>\r\n          )}\r\n          <TableContainer component={Paper} className={classes.root}>\r\n            {summary.length > 0 && (\r\n              <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.date'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.total.call'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'waiting.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.talkingtime'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.average.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'average.waiting'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {summary.map(sum => (\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.date}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.count}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_time}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.talking}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.act}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_act}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  {summaryTotal.map((row, index) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                        <TableCell style={{ textAlign: 'center' }}>\r\n                          <IntlMessages id={'total'} />\r\n                        </TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.count1}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_time}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.talking}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.act}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_act}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            )}\r\n          </TableContainer>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function AbondenedCallsDateFilter({ setStartTimeApi, setEndTimeApi, handleClick }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        //start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport AbondenedCallsDateFilter from './DateFilter';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getQueue } from 'api/api';\r\n\r\nfunction Filter({ setParams, setColor, color, queue, setQueue }) {\r\n  let [loading] = useState(false);\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  };\r\n\r\n  const colors = [\r\n    {\r\n      name: 'Green',\r\n      value: <IntlMessages id={'returned'} />,\r\n    },\r\n    {\r\n      name: 'Red',\r\n      value: <IntlMessages id={'notreturned'} />,\r\n    },\r\n  ];\r\n\r\n  const handleChangeColor = event => {\r\n    setColor(event.target.value);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const [queues, setQueues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <div>\r\n        <AbondenedCallsDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n        {loading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'returnfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={color}\r\n                  onChange={handleChangeColor}\r\n                  label={<IntlMessages id={'returnfilter'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {colors.map((color, index) => (\r\n                    <MenuItem key={index} value={color.name}>\r\n                      {color.value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'queue'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={queue}\r\n                  onChange={handleChangeQueue}\r\n                  label={<IntlMessages id={'queue'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {queues.map((queue, index) => (\r\n                    <MenuItem key={index} value={queue.display_name}>\r\n                      {queue.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Box, Button, CircularProgress, Collapse, Typography } from '@material-ui/core';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nexport default function DataTable({ params, color, queue }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 580,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  const columns = [\r\n    { id: 'timeofevent', label: <IntlMessages id={'abondenedcalls.timeofevent'} />, minWidth: 60, align: 'center' },\r\n    { id: 'from_userpart', label: <IntlMessages id={'abondenedcalls.fromuserpart'} />, minWidth: 60, align: 'center' },\r\n    {\r\n      id: 'display_name',\r\n      label: <IntlMessages id={'abondenedcalls.displayname'} />,\r\n      minWidth: 70,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'count',\r\n      label: <IntlMessages id={'abondenedcalls.count'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [detail, setDetail] = useState([]);\r\n  let [tempArray, setTempArray] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //  if (checkBetween(params.params.startDate, params.params.endDate)) {\r\n    if (true) {\r\n      setLoading(true);\r\n      api.getAbondenedCalls(params, queue).then(call => {\r\n        setTempArray([]);\r\n        for (let i = 0; i < JSON.parse(call.data.data).length; i++) {\r\n          api\r\n            .getAbondenedCallDetails(JSON.parse(call.data.data)[i].timeofevent, JSON.parse(call.data.data)[i].from_userpart)\r\n            .then(resp => {\r\n              let data = JSON.parse(resp.data.data);\r\n              tempArray.push({ i, data });\r\n            });\r\n        }\r\n        setResponse(JSON.parse(call.data.data));\r\n        setTimeout(() => {\r\n          setDetail(tempArray.sort((a, b) => (a.i > b.i ? 1 : b.i > a.i ? -1 : 0)));\r\n          setLoading(false);\r\n        }, 1000);\r\n      });\r\n    } else {\r\n      NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let res = [];\r\n  for (let i = 0; i < response.length; i++) {\r\n    res.push({\r\n      from_userpart: response[i].from_userpart,\r\n      timeofevent: getNewDate(response[i].timeofevent.split(' ')[0]) + ' ' + response[i].timeofevent.split(' ')[1],\r\n      count: response[i].count,\r\n      display_name: response[i].display_name,\r\n    });\r\n  }\r\n  // response.map(resp => {\r\n  //   res.push({\r\n  //     from_userpart: resp.from_userpart,\r\n  //     timeofevent: getNewDate(resp.timeofevent.split(' ')[0]) + ' ' + resp.timeofevent.split(' ')[1],\r\n  //     count: resp.count,\r\n  //     display_name: resp.display_name,\r\n  //   });\r\n  // });\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {res.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n          <Button\r\n            style={{ backgroundColor: '#3f51b5', color: 'white', marginRight: '10px' }}\r\n            onClick={() => {\r\n              setOpen(!open);\r\n            }}>\r\n            {open ? <IntlMessages id={'abondenedcalls.hidedetails'} /> : <IntlMessages id={'abondenedcalls.showdetails'} />}\r\n          </Button>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Abondened_calls' : 'Cevaplanmayan_cagrilar'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={res} name=\"res\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Time Of Event' : 'Olay Zamanı'} value=\"timeofevent\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'From' : 'Kimden'} value=\"from_userpart\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Display Name' : 'Kuyruk'} value=\"display_name\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Count' : 'Toplam Arama Adedi'} value=\"count\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {res.map((row, index) => {\r\n                return detail[index] !== undefined ? (\r\n                  detail[index].data !== undefined &&\r\n                  detail[index].data.length > 0 &&\r\n                  (color === 'Green' || color === '') ? (\r\n                    <>\r\n                      <TableRow style={{ backgroundColor: '#4E9F3D' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n\r\n                      {open && (\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            <Collapse in={true}>\r\n                              <Box sx={{ margin: 1 }}>\r\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                  <IntlMessages id={'abondenedcalls.detail'} />\r\n                                </Typography>\r\n                                <Table size=\"medium\">\r\n                                  <TableHead>\r\n                                    <TableRow>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.diraction'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.srcdn'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.dststarttime'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.dstendtime'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.time'} />\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  </TableHead>\r\n                                  <TableBody>\r\n                                    {detail[index].data.map(deta => (\r\n                                      <TableRow>\r\n                                        <TableCell>\r\n                                          {deta.direction === '-->' ? (\r\n                                            <span\r\n                                              style={{\r\n                                                padding: '5px',\r\n                                                backgroundColor: '#4E9F3D',\r\n                                                color: '#125C13',\r\n                                                borderRadius: '10px',\r\n                                                fontWeight: '600',\r\n                                              }}>\r\n                                              <IntlMessages id={'incomingcall'} />\r\n                                            </span>\r\n                                          ) : (\r\n                                            <span\r\n                                              style={{\r\n                                                padding: '5px',\r\n                                                backgroundColor: '#FF7777',\r\n                                                color: '#852747',\r\n                                                borderRadius: '10px',\r\n                                                fontWeight: '600',\r\n                                              }}>\r\n                                              <IntlMessages id={'outgoingcall'} />\r\n                                            </span>\r\n                                          )}\r\n                                        </TableCell>\r\n                                        <TableCell>{deta.src_dn}</TableCell>\r\n                                        <TableCell>{deta.dst_start_time}</TableCell>\r\n                                        <TableCell>{deta.dst_end_time}</TableCell>\r\n                                        <TableCell>{deta.calltime}</TableCell>\r\n                                      </TableRow>\r\n                                    ))}\r\n                                  </TableBody>\r\n                                </Table>\r\n                              </Box>\r\n                            </Collapse>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    (color === 'Red' || color === '') && (\r\n                      <TableRow style={{ backgroundColor: '#FF5C58' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    )\r\n                  )\r\n                ) : null;\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Alert, Stack } from '@mui/material';\r\n\r\nexport default function AbondenedCalls() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abondenedcalls'} />, isActive: true },\r\n  ];\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [queue,setQueue] = useState('')\r\n\r\n  let [params, setParams] = useState({\r\n    startDate: formatDate(today),\r\n    endDate: formatDate(today),\r\n  });\r\n\r\n  const [color, setColor] = useState('');\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abondenedcalls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setParams={setParams} setColor={setColor} color={color} queue={queue} setQueue={setQueue} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table params={params} color={color} queue={queue}/>\r\n        </Grid>\r\n      </GridContainer>\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Stack sx={{ width: '100%' }} spacing={2}>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.red'} />\r\n          </Alert>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.green'} />\r\n          </Alert>\r\n        </Stack>\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Button, Card, CardActions, CardContent, Grid } from '@material-ui/core';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport React from 'react';\r\n\r\nexport default function AgentCdrRportFilter() {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"Start Time\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"End Time\"\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button>Search</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AgentCdrReportTable() {\r\n  return <div />;\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React from 'react';\r\nimport AgentCdrRportFilter from './Filter';\r\nimport AgentCdrReportTable from './Table';\r\n\r\nexport default function AgentCdrReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'Agent CDR Report'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'Agent CDR Report'} />} breadcrumbs={breadcrumbs}>\r\n        <AgentCdrRportFilter />\r\n        <AgentCdrReportTable />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DailySummaryDateFilter({ setStartTimeApi, setEndTimeApi, handleSubmit }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button onClick={handleSubmit} variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getDailySummary, getDailySummaryTotal } from 'api/api';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport DailySummaryDateFilter from './DateFilter';\r\n\r\nexport default function DailySummaryReportFilter({ setData, setDataTotal }) {\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  // const handleStartTimeChange = event => {\r\n  //   setStartTime(formatDate(event._d));\r\n  // };\r\n  // const handleEndTimeChange = event => {\r\n  //   setEndTime(formatDate(event._d));\r\n  // };\r\n\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(startTime, endTime)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        getDailySummary(startTime, endTime).then(response => {\r\n          setData(JSON.parse(response.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        getDailySummaryTotal(startTime, endTime).then(response => {\r\n          setDataTotal(JSON.parse(response.data.data));\r\n          setLoading(false);\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [startTime, endTime, notFirstReq, setData, setDataTotal]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <DailySummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} handleSubmit={handleSubmit} />\r\n      {/* <GridContainer>\r\n            <Grid item md={3}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                maxDate={endTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                value={startTime}\r\n                onChange={handleStartTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                minDate={startTime}\r\n                format=\"DD-MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                value={endTime}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Grid>\r\n          </GridContainer> */}\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDailySummaryModalTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TotalCallModal({ date, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTotalCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAnsweredCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AnsweredCallModal({ date, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAnsweredCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAbondenedCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AbondenedCallModal({ date, handleAbondenedCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAbondenedCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAbondenedCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalTransferCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TransferCallModal({ date, handleTransferCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTransferCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transferer'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transfered'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.caller}</TableCell>\r\n                <TableCell>{item.transferer}</TableCell>\r\n                <TableCell>{item.trasfered}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTransferCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutOfTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function OutOfTimeModal({ date, handleOutOfTimeClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutOfTime(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutOfTimeClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalRonaCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function RonaCallModla({ date, handleRonaCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalRonaCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleRonaCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function OutCallModal({ date, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport { Box, Modal } from '@mui/material';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport AbondenedCallModal from '../Modals/AbondenedCallModal';\r\nimport TransferCallModal from '../Modals/TransferCallModal';\r\nimport OutOfTimeModal from '../Modals/OutOfTimeModal';\r\nimport RonaCallModla from '../Modals/RonaCallModla';\r\nimport OutCallModal from '../Modals/OutCallModal';\r\n\r\nexport default function DailySummaryReportTable({ data, dataTotal }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    datetime: formatDate(dataUnit.datetime),\r\n    totalcall: dataUnit.totalcall,\r\n    answered: dataUnit.answered,\r\n    inboundtime: dataUnit.inboundtime,\r\n    waitingtime: dataUnit.waitingtime,\r\n    averageconnection: dataUnit.averageconnection,\r\n    abondened: dataUnit.abondened,\r\n    transfer: dataUnit.transfer,\r\n    long_time: dataUnit.long_time,\r\n    zdisi: dataUnit.zdisi,\r\n    average_abondened_waiting: dataUnit.average_abondened_waiting,\r\n    rona: dataUnit.rona,\r\n    outbound: dataUnit.outbound,\r\n    outbound_time: dataUnit.outbound_time,\r\n    average_outbound_time: dataUnit.average_outbound_time,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = data.map((row, index) => ({\r\n    id: index,\r\n    date: getNewDate(row.datetime.split(' ')[0]),\r\n    totalCall: parseInt(row.totalcall),\r\n    answered: parseInt(row.answered),\r\n    inboundTime: row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    waitingTime: row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    averageTime: row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    abondened: parseInt(row.abondened),\r\n    transfer: parseInt(row.transfer),\r\n    longestTime: row.long_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outOfTime: parseInt(row.zdisi),\r\n    averageAbondenedWaiting: row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    rona: parseInt(row.rona),\r\n    outbound: parseInt(row.outbound),\r\n    outboundTotalTime: row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outboundAverageTime: row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [totalCallDate, setTotalCallDate] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = date => {\r\n    setTotalCallDate(date);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const [answeredCallDate, setAnsweredCallDate] = useState('');\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = date => {\r\n    setAnsweredCallDate(date);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [abondenedCallModalOpen, setAbondenedCallOpen] = useState(false);\r\n  const [abondenedCallDate, setAbondenedCallDate] = useState('');\r\n  const handleAbondenedCallOpen = () => setAbondenedCallOpen(true);\r\n  const handleAbondenedCallClose = () => setAbondenedCallOpen(false);\r\n  const handleAbondenedCallClick = date => {\r\n    setAbondenedCallDate(date);\r\n    handleAbondenedCallOpen();\r\n  };\r\n  const [transferCallModalOpen, setTransferCallOpen] = useState(false);\r\n  const [transferCallDate, setTransferCallDate] = useState('');\r\n  const handleTransferCallOpen = () => setTransferCallOpen(true);\r\n  const handleTransferCallClose = () => setTransferCallOpen(false);\r\n  const handleTransferCallClick = date => {\r\n    setTransferCallDate(date);\r\n    handleTransferCallOpen();\r\n  };\r\n\r\n  const [outOfTimeModalOpen, setOutOfTimeModalOpen] = useState(false);\r\n  const [outOfTimeDate, setOutOfTimeDate] = useState('');\r\n  const handleOutOfTimeOpen = () => setOutOfTimeModalOpen(true);\r\n  const handleOutOfTimeClose = () => setOutOfTimeModalOpen(false);\r\n  const handleOutOfTimeClick = date => {\r\n    setOutOfTimeDate(date);\r\n    handleOutOfTimeOpen();\r\n  };\r\n  const [ronaCallModalOpen, setRonaCallOpen] = useState(false);\r\n  const [ronaCallDate, setRonaCallDate] = useState('');\r\n  const handleRonaCallOpen = () => setRonaCallOpen(true);\r\n  const handleRonaCallClose = () => setRonaCallOpen(false);\r\n  const handleRonaCallClick = date => {\r\n    setRonaCallDate(date);\r\n    handleRonaCallOpen();\r\n  };\r\n  const [outCallModalOpen, setOutCallOpen] = useState(false);\r\n  const [outCallDate, setOutCallDate] = useState('');\r\n  const handleOutCallOpen = () => setOutCallOpen(true);\r\n  const handleOutCallClose = () => setOutCallOpen(false);\r\n  const handleOutCallClick = date => {\r\n    setOutCallDate(date);\r\n    handleOutCallOpen();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'dailysummary.date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span>\r\n          <CalendarTodayIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'totalCall',\r\n      headerName: <IntlMessages id={'dailysummary.totalcall'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTotalCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ color: '#406882' }}>{params.row.totalCall}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'dailysummary.answered'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAnsweredCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <PermPhoneMsgIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'inboundTime',\r\n      headerName: <IntlMessages id={'dailysummary.inboundtime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waitingTime',\r\n      headerName: <IntlMessages id={'dailysummary.waitingtime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageTime',\r\n      headerName: <IntlMessages id={'dailysummary.avaragetime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'abondened',\r\n      headerName: <IntlMessages id={'dailysummary.abondened'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAbondenedCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#DD4A48' }}>\r\n          <PersonOffIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'transfer',\r\n      headerName: <IntlMessages id={'dailysummary.transfer'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTransferCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#396EB0' }}>\r\n          <TransferWithinAStationIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'longestTime',\r\n      headerName: <IntlMessages id={'dailysummary.longesttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outOfTime',\r\n      headerName: <IntlMessages id={'dailysummary.outoftime'} />,\r\n      width: 230,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutOfTimeClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageAbondenedWaiting',\r\n      headerName: <IntlMessages id={'dailysummary.averageabondenedwaiting'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rona',\r\n      headerName: <IntlMessages id={'dailysummary.rona'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleRonaCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outbound',\r\n      headerName: <IntlMessages id={'dailysummary.outboundcount'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#519259', cursor: 'pointer' }}>\r\n          <CallIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundTotalTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundtotaltime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundAverageTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundaveragetime'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      {csvData.length > 0 && (\r\n        <div style={{ marginBottom: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Daily_Summary' : 'Gunluk_ozet'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"datetime\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Total Call' : 'Toplam Çağrı'} value=\"totalcall\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Answered' : 'Cevaplanan'} value=\"answered\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Inbound Time' : 'Gelen Çağrı Süresi Toplamı'}\r\n                value=\"inboundtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi Toplamı'}\r\n                value=\"waitingtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Average Time' : 'Ortalama Çağrı Süresi'}\r\n                value=\"averageconnection\"\r\n              />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Abandoned' : 'Terkeden'} value=\"abondened\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Transfer' : 'Transfer'} value=\"transfer\" />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Longest Time' : 'En uzun süre'} value=\"long_time\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Out Of Time' : 'Kuyruk dışı taşanlar'}\r\n                value=\"zdisi\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Average Abadoned Waiting' : 'Ortalama Terkeden Bekleme'}\r\n                value=\"average_abondened_waiting\"\r\n              />\r\n              <ExcelColumn label={currentLanguage.locale === 'en-US' ? 'Rona' : 'Rona'} value=\"rona\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Outbound Count' : 'Giden Çağrı Sayısı'}\r\n                value=\"outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Outbound Total Time' : 'Giden Çağrı toplam süresi'}\r\n                value=\"outbound_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale === 'en-US' ? 'Outbound Average Time' : 'Giden .ağrı ortalama süresi'}\r\n                value=\"average_outbound_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.totalcall'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.answered'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.inboundtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.waitingtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.avaragetime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.abondened'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.transfer'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.longesttime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 230 }}>\r\n                  <IntlMessages id={'dailysummary.outoftime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 260 }}>\r\n                  <IntlMessages id={'dailysummary.averageabondenedwaiting'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.rona'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.outboundcount'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.outboundtotaltime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 220 }}>\r\n                  <IntlMessages id={'dailysummary.outboundaveragetime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {data.map(row => (\r\n                <TableRow>\r\n                  <TableCell>{getNewDate(row.datetime.split(' ')[0])}</TableCell>\r\n                  <TableCell>{row.totalcall}</TableCell>\r\n                  <TableCell>{row.answered}</TableCell>\r\n                  <TableCell>{row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.abondened}</TableCell>\r\n                  <TableCell>{row.transfer}</TableCell>\r\n                  <TableCell>{row.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.zdisi}</TableCell>\r\n                  <TableCell>{row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.rona}</TableCell>\r\n                  <TableCell>{row.outbound}</TableCell>\r\n                  <TableCell>{row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))} */}\r\n              {dataTotal.map(data => (\r\n                <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n                  <TableCell>\r\n                    {' '}\r\n                    <IntlMessages id={'total'} />{' '}\r\n                  </TableCell>\r\n                  <TableCell>{data.totalcall}</TableCell>\r\n                  <TableCell>{data.answered}</TableCell>\r\n                  <TableCell>{data.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.abondened}</TableCell>\r\n                  <TableCell>{data.transfer}</TableCell>\r\n                  <TableCell>{data.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.zdisi}</TableCell>\r\n                  <TableCell>{data.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.rona}</TableCell>\r\n                  <TableCell>{data.outbound}</TableCell>\r\n                  <TableCell>{data.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TotalCallModal date={totalCallDate} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AnsweredCallModal date={answeredCallDate} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={abondenedCallModalOpen}\r\n        onClose={handleAbondenedCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AbondenedCallModal date={abondenedCallDate} handleAbondenedCallClose={handleAbondenedCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outOfTimeModalOpen}\r\n        onClose={handleOutOfTimeClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutOfTimeModal date={outOfTimeDate} handleOutOfTimeClose={handleOutOfTimeClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={ronaCallModalOpen}\r\n        onClose={handleRonaCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <RonaCallModla date={ronaCallDate} handleRonaCallClose={handleRonaCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={transferCallModalOpen}\r\n        onClose={handleTransferCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TransferCallModal date={transferCallDate} handleTransferCallClose={handleTransferCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outCallModalOpen}\r\n        onClose={handleOutCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutCallModal date={outCallDate} handleOutCallClose={handleOutCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DailySummaryReportFilter from './Filter';\r\nimport DailySummaryReportTable from './Table';\r\n\r\nexport default function DailySumaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailysummary'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  let [dataTotal, setDataTotal] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'dailysummary'} />} breadcrumbs={breadcrumbs}>\r\n        <DailySummaryReportFilter setData={setData} setDataTotal={setDataTotal} />\r\n        <DailySummaryReportTable data={data} dataTotal={dataTotal} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function InternalSummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getInternalsSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InternalSummaryDateFilter from './DateFilter';\r\n\r\nexport default function InternalsSummaryReportFilter({ setData, startTime, setStartTime, endTime, setEndTime }) {\r\n  let [agents, setAgents] = useState([]);\r\n  let [seletAgent, setSelectAgent] = useState('');\r\n\r\n  const handleChangeAgentSelect = event => {\r\n    setSelectAgent(event.target.value === 'all' ? '' : event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAgentNumber().then(response => {\r\n      setAgents(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n  const handleSerachClick = () => {\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(startTime, endTime)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        getInternalsSummary(startTime, endTime, seletAgent).then(result => {\r\n          setData(JSON.parse(result.data.data));\r\n          setLoading(false);\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [startTime, endTime, seletAgent, notFirstReq, setData]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBlock: '10px' }}>\r\n        <InternalSummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            {/* <Grid item md={4}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                maxDate={endTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                value={startTime}\r\n                onChange={handleStartTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                minDate={startTime}\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                value={endTime}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Grid> */}\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={seletAgent}\r\n                  onChange={handleChangeAgentSelect}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.dn}>\r\n                      {agent.dn} - {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button onClick={handleSerachClick} variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload, ArrowForward, ArrowBack, Person, PhoneMissed, PhoneInTalk, Phone } from '@material-ui/icons';\r\nimport { DataGrid, GridToolbarFilterButton } from '@mui/x-data-grid';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport {\r\n  getInternalsSummaryLongestCalled,\r\n  getInternalsSummaryLongestCaller,\r\n  getInternalsSummaryLongestCalledAmount,\r\n  getInternalsSummaryLongestCallerAmount,\r\n  getInternalBreakTime,\r\n} from 'api/api';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n// import CallIcon from '@mui/icons-material/Call';\r\n\r\nexport default function InternalsSummaryReportTable({ data, startTime, endTime }) {\r\n  let [selectedAgent, setSelectedAgent] = useState('');\r\n  const handleAgentClick = agentNum => {\r\n    setSelectedAgent(agentNum);\r\n    handleOpenModal();\r\n  };\r\n\r\n  let [modalOpen, setModalOpen] = useState(false);\r\n  const handleOpenModal = () => setModalOpen(true);\r\n  const handleCloseModal = () => setModalOpen(false);\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  let [longestBreakTime, setLongestBreakTime] = useState([]);\r\n  useEffect(() => {\r\n    if (selectedAgent !== '') {\r\n      getInternalsSummaryLongestCalled(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCaller(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCalledAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestAmount(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCallerAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallerAmount(JSON.parse(result.data.data));\r\n      });\r\n\r\n      getInternalBreakTime(selectedAgent, startTime, endTime).then(result => {\r\n        console.log(JSON.parse(result.data.data));\r\n        setLongestBreakTime(JSON.parse(result.data.data));\r\n      });\r\n    }\r\n  }, [selectedAgent, startTime, endTime]);\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    details: dataUnit.id,\r\n    id: dataUnit.id,\r\n    display_name: dataUnit.display_name,\r\n    total_inbound: parseInt(dataUnit.total_inbound),\r\n    answered_inbound: parseInt(dataUnit.answered_inbound),\r\n    unanswered_inbound: dataUnit.total_inbound - dataUnit.answered_inbound,\r\n    total_outbound: parseInt(dataUnit.total_outbound),\r\n    answered_outbound: parseInt(dataUnit.answered_outbound),\r\n    unanswered_outbound: dataUnit.total_outbound - dataUnit.answered_outbound,\r\n  }));\r\n  let curentLanguage = useIntl();\r\n  const columns = [\r\n    {\r\n      field: 'details',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Details' : 'Detaylar',\r\n      renderCell: params => (\r\n        <span onClick={() => handleAgentClick(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF5959', verticalAlign: '-5px' }} />{' '}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'id',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası',\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <b style={{ color: '#406882' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Agent Name' : 'Agent Adı',\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <span style={{ verticalAlign: '-5px', color: '#5584AC' }}>\r\n            <Person />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_inbound',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Total Inbound' : 'Toplam Gelen Çağrı',\r\n      width: 225,\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_inbound',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Answered Inbound' : 'Cevaplanan Gelen Çağrı',\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_inbound',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Unanswered Inbound' : 'Cevaplanmayan Gelen Çağrı',\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_outbound',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Total Outbound' : 'Toplam Giden Çağrı',\r\n      width: 225,\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_outbound',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Answered Outbound' : 'Cevaplanan Giden Çağrı',\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_outbound',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Unanswered Outbound' : 'Cevaplanmayan Giden Çağrı',\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = selectedAgent, extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Internals_Summary_Report' : 'Dahili_ozet_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'} value=\"id\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Agent Name' : 'Agent Adı'} value=\"display_name\" />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Total Inbound' : 'Toplam Gelen Çağrı'}\r\n                value=\"total_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Answered Inbound' : 'Cevaplanan Gelen Çağrı'}\r\n                value=\"answered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Unanswered Inbound' : 'Cevaplanmayan Gelen Çağrı'}\r\n                value=\"unanswered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Total Outbound' : 'Toplam Giden Çağrı'}\r\n                value=\"total_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Answered Outbound' : 'Cevaplanan Giden Çağrı'}\r\n                value=\"answered_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Unanswered Outbound' : 'Cevaplanmayan Giden Çağrı'}\r\n                value=\"unanswered_outbound\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginTop: '20px', height: '700px' }}>\r\n        <DataGrid\r\n          rows={csvData}\r\n          columns={columns}\r\n          pageSize={100}\r\n          rowsPerPageOptions={[100]}\r\n          components={{ Toolbar: GridToolbarFilterButton }}\r\n          localeText={{\r\n            columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n            columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n            columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n            columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n            columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n            columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n            toolbarFilters: curentLanguage.locale === 'en-US' ? 'Filters' : 'Filtre',\r\n            filterPanelColumns: curentLanguage.locale === 'en-US' ? 'Columns' : 'Sutunlar',\r\n            filterPanelOperators: curentLanguage.locale === 'en-US' ? 'Operators' : 'Operatörler',\r\n            filterOperatorContains: curentLanguage.locale === 'en-US' ? 'Contains' : 'İçeren',\r\n            filterOperatorEquals: curentLanguage.locale === 'en-US' ? 'Equals' : 'Eşit',\r\n            filterOperatorStartsWith: curentLanguage.locale === 'en-US' ? 'Starts With' : 'Başlayan',\r\n            filterOperatorEndsWith: curentLanguage.locale === 'en-US' ? 'Ens With' : 'Biten',\r\n            filterOperatorIsEmpty: curentLanguage.locale === 'en-US' ? 'Is Empty' : 'Boş Olan',\r\n            filterOperatorIsNotEmpty: curentLanguage.locale === 'en-US' ? 'Is Not Empty' : 'Boş Olmayan',\r\n            noRowsLabel: <IntlMessages id={'norows'} />,\r\n            footerRowSelected: count =>\r\n              curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n          }}\r\n        />\r\n        {/* <TableContainer style={{ maxHeight: '40vh' }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.agentnumber'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.agentname'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.totalinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.answeredinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.unansweredinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.totaloutbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.answeredoutbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.unansweredoutbound'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((dataunit, index) => (\r\n                <TableRow\r\n                  style={{\r\n                    backgroundColor: dataunit.dn === selectedAgent ? '#D1E8E4' : '',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  key={index}>\r\n                  <TableCell onClick={() => handleAgentClick(dataunit.dn)} style={{ padding: '7px', textAlign: 'center' }}>\r\n                    <Person fontSize=\"small\" style={{ verticalAlign: '-5px' }} style={{ color: '#396EB0' }} /> {dataunit.dn}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleAgentClick(dataunit.dn)} style={{ padding: '7px', textAlign: 'center' }}>\r\n                    <Person fontSize=\"small\" style={{ verticalAlign: '-5px' }} style={{ color: '#396EB0' }} />{' '}\r\n                    {dataunit.display_name}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#009DAE' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <AddCircle fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> {dataunit.total_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#34BE82' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <Call fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    {dataunit.answered_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#FF5151' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <CallEnd fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    {dataunit.total_inbound - dataunit.answered_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#009DAE' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <AddCircle fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> {dataunit.total_outbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#34BE82' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <Call fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    {dataunit.answered_outbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#FF5151' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <CallEnd fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    {dataunit.total_outbound - dataunit.answered_outbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n      </Card>\r\n\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <div style={{ padding: '10px' }} ref={ref}>\r\n            <GridContainer>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined\r\n                            ? longestCalleds[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined ? longestCalleds[1].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined\r\n                            ? longestCalleds[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined ? longestCalleds[2].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined\r\n                            ? longestCalleds[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined ? longestCalleds[3].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined\r\n                            ? longestCalleds[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined ? longestCalleds[4].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined\r\n                            ? longestCalleds[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined\r\n                            ? longestCallers[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined ? longestCallers[1].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined\r\n                            ? longestCallers[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined ? longestCallers[2].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined\r\n                            ? longestCallers[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined ? longestCallers[3].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined\r\n                            ? longestCallers[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined ? longestCallers[4].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined\r\n                            ? longestCallers[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4}></Grid>\r\n              <Grid item md={4} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestbreaketimes'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={4}></Grid>\r\n            </GridContainer>\r\n          </div>\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white', marginRight: '10px' }} onClick={downloadScreenshot}>\r\n              <IntlMessages id={'dowlandimage'} />\r\n            </Button>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleCloseModal()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport InternalsSummaryReportFilter from './Filter';\r\nimport InternalsSummaryReportTable from './Table';\r\n\r\nexport default function InternalsSummaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'internalssummary'} />, isActive: true },\r\n  ];\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [data, setData] = useState([]);\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'internalssummary'} />} breadcrumbs={breadcrumbs}>\r\n      <InternalsSummaryReportFilter\r\n        setData={setData}\r\n        startTime={startTime}\r\n        setStartTime={setStartTime}\r\n        endTime={endTime}\r\n        setEndTime={setEndTime}\r\n      />\r\n      <InternalsSummaryReportTable data={data} startTime={startTime} endTime={endTime} />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLog2DateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      dateFormat(startDate, 'yyyy-mm-dd'),\r\n      /*        new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      dateFormat(endDate, 'yyyy-mm-dd'),\r\n      /*        new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2]  */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  console.log('set edildi satrt:' + startDate);\r\n  console.log('set edildi end:' + endDate);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore, Phone, Star, Textsms } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function CallLog2therFilters({\r\n  setSourceApi,\r\n  setDestinationApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus,\r\n  handleSubmitFilter,\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setSourceApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setSourceApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setSourceApi('0');\r\n    }\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetSelect, setTargetSelect] = useState('');\r\n  const handleChangeTargetSelect = event => {\r\n    setTargetSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setDestinationApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setDestinationApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setDestinationApi('0');\r\n    }\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [filter3Select, setFilter3Select] = useState('');\r\n  const handleChangeFilter3Select = event => {\r\n    setFilter3Select(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setAnswerStatus('');\r\n    } else if (event.target.value === 'answered') {\r\n      setAnswerStatus('-');\r\n    } else if (event.target.value === 'unanswered') {\r\n      setAnswerStatus('~');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <Phone style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.source'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.source'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.source'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <Star style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' || sourceFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <Phone style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destination'} />}\r\n                  onChange={handleChangeTargetSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <Star style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' || targetFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <Textsms style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={filter3Select}\r\n                  label={<IntlMessages id={'calllog2.filter.filter3'} />}\r\n                  onChange={handleChangeFilter3Select}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.answeredandnotanswered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'calllog2.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'unanswered'}>\r\n                    <IntlMessages id={'calllog2.filter.unanswered'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleSubmitFilter();\r\n            }}\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog2, getCallLog2Total, getCallLog2Count, getCallLog2TotalSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLog2DateFilter from './DateFilter';\r\nimport CallLog2therFilters from './Filters';\r\n\r\nexport default function CallLog2Filter({\r\n  setData,\r\n  limit,\r\n  offset,\r\n  setPage,\r\n  setTotalData,\r\n  setCount,\r\n  setResponseTotalSummary,\r\n}) {\r\n  let [startTimeApi, setStartTimeApi] = useState('');\r\n  let [endTimeApi, setEndTimeApi] = useState('');\r\n  let [sourceApi, setSourceApi] = useState('');\r\n  let [destinationApi, setDestinationApi] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select      \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  )  \r\n  SELECT   \r\n  call_id, \r\n  case \r\n  when src_dn_type = 1 then '-' else src_dn end as src_dn,  \r\n  case when dst_dn_type = 1 then '-' else dst_dn end as dst_dn,  \r\n  split_part(to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour,  \r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording'),    \r\n  case when cl_segments_view_new.dst_answer_time is not null then 'ok' else 'not ok' end as Salable,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' end as Salable \r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+0', 'yyyymmddHH24MISS') || '%')\r\n  and\r\n  ((cte1.TransferedTo = cl_segments_view_new.dst_dn) or (cl_segments_view_new.dst_display_name like ('%' || cte1.TransferedTo || '%')))  \r\n  and \r\n  ((cte1.CalledFrom = cl_segments_view_new.src_dn) or (cl_segments_view_new.src_display_name like ('%' || cte1.CalledFrom || '%')))  \r\n  where  \r\n  cast(src_dn_type as text) like '%${sourceApi}'   \r\n  and  \r\n  cast(dst_dn_type as text) like '%${destinationApi}'  \r\n  and   \r\n  (dst_dn_type =0   or  dst_dn_type = 1)   \r\n  and  \r\n  act != 1 \r\n  and \r\n  act_dn_type is null\r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'  \r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time asc   \r\n  limit ${limit} offset ${offset}\r\n  `;\r\n\r\n  let totalString = `with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  to_char((date_trunc('day',answered.dst_start_time)),'dd-mm-yyyy'),\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  group by date_trunc('day',answered.dst_start_time) \r\n  order by date_trunc('day',answered.dst_start_time) asc`;\r\n\r\n  let stringCount = `SELECT\r\n\tcast(count(*) as integer) as cnt\r\n\tFROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new\r\n\twhere\r\n\tcast(src_dn_type as text) like '%${sourceApi}'\r\n\tand\r\n\tcast(dst_dn_type as text) like '%${destinationApi}'\r\n\tand \r\n\t(dst_dn_type =0 \r\n\tor  dst_dn_type = 1)\r\n  \tand\r\n\tact != 1\r\n\tand\r\n\tdst_display_name like '%${destinationFilterNumber}%'\r\n\tand\r\n\tsrc_display_name like '%${sourceFilterNumber}%'\r\n\tand\r\n\tcoalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n  and \r\n  act_dn_type is null\r\n\tand(\r\n\t(dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n \tand\r\n \t(cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n    and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <=${destinationDnMax})`;\r\n\r\n  let stringTotalSummary = `\r\n  with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        // setSourceDnMin(sourceFilterText.split('-')[0]);\r\n        // setSourceDnMax(sourceFilterText.split('-')[1]);\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        // setDestinationDnMin(destinationFilterText.split('-')[0]);\r\n        // setDestinationDnMax(destinationFilterText.split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmitFilter = () => {\r\n    setLoading(true);\r\n    setPage(0);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Total(totalString).then(result => {\r\n      setTotalData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [totalString, setTotalData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2TotalSummary(stringTotalSummary).then(result => {\r\n      setResponseTotalSummary(JSON.parse(result.data.data)[0]);\r\n      setLoading(false);\r\n    });\r\n  }, [stringTotalSummary, setResponseTotalSummary]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Count(stringCount).then(result => {\r\n      setCount(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n\r\n  return (\r\n    <div>\r\n      <CallLog2DateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLog2therFilters\r\n        setSourceApi={setSourceApi}\r\n        setDestinationApi={setDestinationApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        handleSubmitFilter={handleSubmitFilter}\r\n        setLoading={setLoading}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Grid, Tab, Tabs, Typography } from '@mui/material';\r\nimport { getCallDetail } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineOppositeContent,\r\n  TimelineSeparator,\r\n} from '@material-ui/lab';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function CallLog2CallDetail({ callId }) {\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getCallDetail(callId).then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setData(JSON.parse(resp.data.data));\r\n      setTotalTime(\r\n        new Date(JSON.parse(resp.data.data)[JSON.parse(resp.data.data).length - 1]?.end_time).getTime() -\r\n          new Date(JSON.parse(resp.data.data)[0]?.start_time).getTime(),\r\n      );\r\n    });\r\n  }, [callId]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let [totalTime, setTotalTime] = useState(0);\r\n\r\n  const secondToTime = ms => {\r\n    let seconds = ms / 1000;\r\n    const hours = parseInt(seconds / 3600);\r\n    seconds = seconds % 3600;\r\n    const minutes = parseInt(seconds / 60);\r\n    seconds = seconds % 60;\r\n    let hourString = hours.toString().length === 1 ? '0' : '';\r\n    let minutesString = minutes.toString().length === 1 ? '0' : '';\r\n    let secondsString = seconds.toString().length === 1 ? '0' : '';\r\n    let string = hourString + hours + 'h ' + minutesString + minutes + 'm ' + secondsString + seconds + 's ';\r\n    return string;\r\n  };\r\n\r\n  let [totalRingTime, setTotalRingTime] = useState(0);\r\n  let [totalTalkTime, setTotalTalkTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let tempRingTime = 0;\r\n    let tempTalkTime = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].ring_time !== '') {\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n      if (data[i].duration !== '') {\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n    }\r\n    setTotalRingTime(tempRingTime);\r\n    setTotalTalkTime(tempTalkTime);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ background: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)' }}>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              background: 'rgb(173,206,116)',\r\n              height: '200px',\r\n              marginRight: '0px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#89a658',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.callers}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ width: '100%', height: '200px' }}>\r\n            <div\r\n              style={{\r\n                width: 0,\r\n                height: 0,\r\n                borderTop: '100px solid transparent',\r\n                borderLeft: '200px solid',\r\n                borderLeftColor: 'rgb(173,206,116)',\r\n                borderBottom: '100px solid transparent',\r\n              }}></div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)',\r\n              height: '200px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#2978B5',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.calleds}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <hr style={{ marginTop: '0px', height: '5px', color: 'gray' }} />\r\n      <div>\r\n        <Box sx={{ width: '100%' }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n              <Tab label={<IntlMessages id={'calllog2.detail.callinfo'} />} {...a11yProps(0)} />\r\n              <Tab label={<IntlMessages id={'calllog2.datail.detail'} />} {...a11yProps(1)} />\r\n            </Tabs>\r\n          </Box>\r\n          <TabPanel value={value} index={0}>\r\n            <Timeline position=\"alternate\">\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#2978B5' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[0]?.start_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"primary\">\r\n                    <DateRangeIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n              {data.map((item, index) => (\r\n                <TimelineItem>\r\n                  <TimelineOppositeContent\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ marginTop: '80px' }}>\r\n                    <Typography variant=\"h6\" component=\"span\" style={{ marginTop: '45px' }}>\r\n                      <b>{item.calleds}</b>\r\n                    </Typography>\r\n                    <Typography>{item.states}</Typography>\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color=\"secondary\">\r\n                      <CallIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography style={{ marginTop: '20px' }}>\r\n                      <p>\r\n                        <IntlMessages id={'calllog2.datail.starttime'} />\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#A6CF98', borderRadius: '10px', color: '#557C55' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.start_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                      <p>\r\n                        <IntlMessages id={'calllog2.datail.ringtime'} />\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#EEC373', borderRadius: '10px', color: '#EA5C2B' }}>\r\n                        <NotificationsActiveIcon style={{ verticalAlign: '-5px' }} /> <b>{item.ring_time}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                      <p>\r\n                        <IntlMessages id={'calllog2.datail.talktime'} />\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#6998AB', borderRadius: '10px', color: '#1A374D' }}>\r\n                        <PhoneInTalkIcon style={{ verticalAlign: '-5px' }} /> <b>{item.duration}</b>\r\n                      </span>\r\n                    </Typography>\r\n\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                      <p>\r\n                        <IntlMessages id={'calllog2.datail.endtime'} />\r\n                      </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#FF7272', borderRadius: '10px', color: '#9B0000' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.end_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))}\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#EA4C4C' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[data.length - 1]?.end_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"secondary\">\r\n                    <CallEndIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>Call Id:</b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <p style={{ fontSize: '16px' }}>{callId}</p>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.from'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#086E7D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.callers}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.to'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.calleds}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.duration'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{secondToTime(totalTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.talktime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#406882' }}>{secondToTime(totalTalkTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.ringtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#EF2F88' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#EF2F88' }}>{secondToTime(totalRingTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.date'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.start_time.split(' ')[0]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.starttime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[0]?.start_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n            <GridContainer>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.endtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[data.length - 1]?.end_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <hr style={{ marginTop: '10px', marginBottom: '10px' }} />\r\n          </TabPanel>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { AccessTime, Check, Clear, CloudDownload, DateRange, Person, PhoneDisabled, PlayArrow } from '@material-ui/icons';\r\nimport { getRecording, getRecordingPath } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallLog2CallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nexport default function CallLog2Table({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  totalData,\r\n  count,\r\n  responseTotalSummary,\r\n  setData,\r\n}) {\r\n  let [path, setPath] = useState('');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(parseInt(count[0].cnt));\r\n    setPage(0);\r\n    setData([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecordingPath().then(res => {\r\n      var str = res.data.data.toString();\r\n      setPath(str.substring(str.indexOf(':') + 2, str.lastIndexOf('\"')));\r\n      console.log(str.substring(str.indexOf(':') + 2, str.lastIndexOf('\"')));\r\n    });\r\n  }, []);\r\n\r\n  console.log(totalData);\r\n\r\n  const listenRecord = dir => {\r\n    getRecording(path, dir)\r\n      .then(resp => {\r\n        window.location.href = resp.request.responseURL;\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  let tableData = data.map((item, index) => ({\r\n    callId: item.call_id,\r\n    listen: item.coalesce,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    caller:\r\n      item.src_dn === '-'\r\n        ? item.src_display_name.split(':')[0]\r\n        : item.src_display_name.split(':')[0] + '(' + item.src_dn + ')',\r\n    called: item.dst_dn === '-' ? item.dst_display_name : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    salable1: item.salable1,\r\n    duration: item.duration,\r\n    salable: item.salable,\r\n    id: index,\r\n  }));\r\n\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'callId',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Detail' : 'Detay',\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Listen' : 'Dinle',\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n          {params.value === 'no recording' && (\r\n            <IconButton disabled style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }} size=\"small\" aria-label=\"listen\">\r\n              <Clear />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih',\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Start Time' : 'Başlangıç Zamanı',\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Caller' : 'Kimden',\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Called' : 'Kime',\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable1',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Direction' : 'Yön',\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'Duration' : 'Süre',\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: curentLanguage.locale === 'en-US' ? 'State' : 'Durum',\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'not ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n          {/* <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Call_Log' : 'Cagri_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Hour' : 'Saat'} value=\"hour\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'From' : 'Kimden'} value=\"src_display_name\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Destination' : 'Kime'} value=\"dst_display_name\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Direction' : 'Yön'} value=\"salable1\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Duration' : 'Süre'} value=\"duration\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n            </ExcelSheet>\r\n          </ExcelFile> */}\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px' }}>\r\n          <CallLog2CallDetail callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {data.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {data.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {data.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Call_Log' : 'Cagri_raporu'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={data} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Hour' : 'Saat'} value=\"hour\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'From' : 'Kimden'} value=\"src_display_name\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Destination' : 'Kime'} value=\"dst_display_name\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Direction' : 'Yön'} value=\"salable1\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Duration' : 'Süre'} value=\"duration\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <div style={{ height: '440px', width: '100%' }}>\r\n          <DataGrid\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={{\r\n              toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n              toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n              toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n              columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n              columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n              columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n              columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n              columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n              columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n              noRowsLabel: <IntlMessages id={'norows'} />,\r\n              footerRowSelected: count =>\r\n                curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n            }}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(count[0].cnt)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={data.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      {/* <Paper style={{ marginTop: '20px' }}>\r\n        <NotificationContainer />\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'listen'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.startdate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'caller'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'called'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.diraction'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'state'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map(item => (\r\n                <TableRow>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px' }}>\r\n                    {item.coalesce !== 'no recording' && (\r\n                      <IconButton\r\n                        onClick={() => listenRecord(item.coalesce)}\r\n                        style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n                        size=\"small\"\r\n                        aria-label=\"listen\">\r\n                        <PlayArrow />\r\n                      </IconButton>\r\n                    )}\r\n                    {item.coalesce === 'no recording' && (\r\n                      <IconButton\r\n                        disabled\r\n                        style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }}\r\n                        size=\"small\"\r\n                        aria-label=\"listen\">\r\n                        <Clear />\r\n                      </IconButton>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {getNewDate(item.date)}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: '#009DAE',\r\n                    }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> {item.hour}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#98BAE7' }}>\r\n                      <Person style={{ verticalAlign: '-5px' }} />\r\n                    </span>\r\n                    {item.src_display_name + '(' + item.src_dn + ')'}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#9AE66E' }}>\r\n                      <Person style={{ verticalAlign: '-5px' }} />\r\n                    </span>\r\n                    {item.dst_display_name + '(' + item.dst_dn + ')'}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px' }}>\r\n                    {item.salable1 === 'içeri' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#9AE66E',\r\n                          color: '#34BE82',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'incomingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable1 === 'dışarı' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FF6D6D',\r\n                          color: '#AE431E',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'outgoingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable1 === 'dahili' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FFBC97',\r\n                          color: '#FF7800',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'agentedcall'} />\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: '#548CA8',\r\n                    }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> {item.duration}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'sans-serif' }}>\r\n                    {item.salable === 'ok' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#B1E693',\r\n                          color: '#1C7947',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable === 'not ok' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FF7777',\r\n                          color: '#852747',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                        <IntlMessages id={'notanswered'} />\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={data.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper> */}\r\n\r\n      {totalData.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Call_Log_Summary' : 'Cagri_raporu_ozet'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={totalData} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"to_char\" />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Answered Call Count' : 'Cevaplanmış Çağrı Adedi'}\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Unanswered Call Count' : 'Cevaplanmamış Çağrı Adedi'}\r\n                value=\"not_answered\"\r\n              />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Duration' : 'Süre'} value=\"totalduration\" />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalam Çağrı Süresi'}\r\n                value=\"averageduration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.average.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalData.map(total => (\r\n                <TableRow>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    <b>{total.to_char}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        // backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        // padding: '5px',\r\n                        // borderRadius: '7px',\r\n                        // fontSize: '12px',\r\n                        // fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span\r\n                      style={{\r\n                        // backgroundColor: '#FF7777',\r\n                        color: '#852747',\r\n                        // padding: '5px',\r\n                        // borderRadius: '7px',\r\n                        // fontSize: '12px',\r\n                        // fontWeight: '800',\r\n                      }}>\r\n                      <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.not_answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    {' '}\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalduration}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.averageduration}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{responseTotalSummary.count}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      // backgroundColor: '#B1E693',\r\n                      color: '#1C7947',\r\n                      // padding: '5px',\r\n                      // borderRadius: '7px',\r\n                      // fontSize: '12px',\r\n                      // fontWeight: '800',\r\n                    }}>\r\n                    <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      // backgroundColor: '#FF7777',\r\n                      color: '#852747',\r\n                      // padding: '5px',\r\n                      // borderRadius: '7px',\r\n                      // fontSize: '12px',\r\n                      // fontWeight: '800',\r\n                    }}>\r\n                    <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    <b>{responseTotalSummary.not_answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.totalduration}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.averageduration}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallLog2Filter from './Filter';\r\nimport CallLog2Table from './Table';\r\n\r\nexport default function CallLog2() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllog'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState([{ count: 10 }]);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [responseTotalSummary, setResponseTotalSummary] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calllog'} />} breadcrumbs={breadcrumbs}>\r\n        <CallLog2Filter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setTotalData={setTotalData}\r\n          setCount={setCount}\r\n          setResponseTotalSummary={setResponseTotalSummary}\r\n        />\r\n        <CallLog2Table\r\n          count={count}\r\n          totalData={totalData}\r\n          responseTotalSummary={responseTotalSummary}\r\n          data={data}\r\n          setData={setData}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function CallTransferReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">Tarih Filtresi</InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#2ca7ff' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#2ca7ff' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>Özel Seçim</b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setSelectedStartTime, setSelectedEndTime, agent, setAgent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  function handleClick() {\r\n    console.log('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'calltransferreport.agnet'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'calltransferreport.agnet'} />}\r\n                  value={agent}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.display_name}>\r\n                      {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { getCallTransferReport } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function DataTable({ agent, selectedStartTime, selectedEndTime }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getCallTransferReport(agent, selectedStartTime, selectedEndTime).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      console.log(JSON.parse(resp.data.data));\r\n    });\r\n  }, [agent, selectedStartTime, selectedEndTime]);\r\n\r\n  let rows = data.map((item, index) => ({\r\n    id: index,\r\n    transferer: item.transferer,\r\n    trasfered: item.trasfered,\r\n    caller: item.caller,\r\n    start_time: item.start_time,\r\n    answer_time: item.answer_time,\r\n    end_time: item.end_time,\r\n    ring_time: item.ring_time,\r\n    talk_time: item.talk_time,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'transferer',\r\n      headerName: <IntlMessages id={'calltransferreport.transferfrom'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'trasfered',\r\n      headerName: <IntlMessages id={'calltransferreport.transferto'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'calltransferreport.caller'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'calltransferreport.starttime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'answer_time',\r\n      headerName: <IntlMessages id={'calltransferreport.answertime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'calltransferreport.endtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'ring_time',\r\n      headerName: <IntlMessages id={'calltransferreport.ringingtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'talk_time',\r\n      headerName: <IntlMessages id={'calltransferreport.talktime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{ height: '600px', width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          localeText={{\r\n            toolbarExport: curentLanguage.locale === 'en-US' ? 'Export' : 'Dışa Aktar',\r\n            toolbarExportPrint: curentLanguage.locale === 'en-US' ? 'Print' : 'Yazdır',\r\n            toolbarExportCSV: curentLanguage.locale === 'en-US' ? 'Dowland as CSV' : 'CSV olarak indir',\r\n            columnMenuUnsort: curentLanguage.locale === 'en-US' ? 'Unsort' : 'Sıralamayı Kaldır',\r\n            columnMenuSortAsc: curentLanguage.locale === 'en-US' ? 'Sort by ASC' : 'Azdan çoka sırala',\r\n            columnMenuSortDesc: curentLanguage.locale === 'en-US' ? 'Sort by DESC' : 'Çoktan aza sırala',\r\n            columnMenuFilter: curentLanguage.locale === 'en-US' ? 'Filter' : 'Filtre',\r\n            columnMenuHideColumn: curentLanguage.locale === 'en-US' ? 'Hide' : 'Gizle',\r\n            columnMenuShowColumns: curentLanguage.locale === 'en-US' ? 'Show columns' : 'Sutunları göster',\r\n            noRowsLabel: <IntlMessages id={'norows'} />,\r\n            footerRowSelected: count =>\r\n              curentLanguage.locale === 'en-US' ? `${count} row selected` : `${count} Satır seçildi`,\r\n          }}\r\n          componentsProps={{\r\n            pagination: {\r\n              labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\n\r\nexport default function CallTransferReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calltransferreport'} />, isActive: true },\r\n  ];\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(yesterday) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n  const [agent, setAgent] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calltransferreport'} />} breadcrumbs={breadcrumbs}>\r\n        <GridContainer>\r\n          <Grid item xs={12}>\r\n            <Filter\r\n              agent={agent}\r\n              setAgent={setAgent}\r\n              selectedStartTime={selectedStartTime}\r\n              selectedEndTime={selectedEndTime}\r\n              setSelectedEndTime={setSelectedEndTime}\r\n              setSelectedStartTime={setSelectedStartTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table agent={agent} selectedStartTime={selectedStartTime} selectedEndTime={selectedEndTime} />\r\n          </Grid>\r\n        </GridContainer>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakName } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakNameModal({ id, selectedBreakName, handleBreakNameModalClose }) {\r\n  let [newName, setNewName] = useState(selectedBreakName);\r\n  const handleSubmit = () => {\r\n    setBreakName(newName, id).then(rep => {\r\n      handleBreakNameModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breakname'} />}\r\n        variant=\"outlined\"\r\n        value={newName}\r\n        onChange={event => setNewName(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakNameModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakTime } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakTimeModal({ logouttype, period, handleBreakTimeModalClose }) {\r\n  let [newTime, setNewTime] = useState(period);\r\n  const handleSubmit = () => {\r\n    setBreakTime(newTime, logouttype).then(resp => {\r\n      handleBreakTimeModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breaktime'} />}\r\n        variant=\"outlined\"\r\n        value={newTime}\r\n        onChange={event => setNewTime(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakTimeModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Box, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getBreakName, getBreakTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport BreaksChangeBreakNameModal from './Modals/BreaksChangeBreakNameModal';\r\nimport BreaksChangeBreakTimeModal from './Modals/BreaksChangeBreakTimeModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function EditBreaks() {\r\n  const [breaks, setBreaks] = useState([]);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [breakNameModalopen, setBreakNameModalOpen] = useState(false);\r\n  const handleBreakNameModalOpen = () => setBreakNameModalOpen(true);\r\n  const handleBreakNameModalClose = () => setBreakNameModalOpen(false);\r\n  let [selectedBreakId, setSelectedBreakId] = useState('');\r\n  let [selectedBreakName, setSelectedBreakName] = useState('');\r\n  const handleClickName = (id, name) => {\r\n    setSelectedBreakId(id);\r\n    setSelectedBreakName(name);\r\n    handleBreakNameModalOpen();\r\n  };\r\n\r\n  const [breakTimeModalopen, setBreakTimeModalOpen] = useState(false);\r\n  const handleBreakTimeModalOpen = () => setBreakTimeModalOpen(true);\r\n  const handleBreakTimeModalClose = () => setBreakTimeModalOpen(false);\r\n  let [selectedLogoutType, setSelectedLogoutType] = useState('');\r\n  let [selectedBreakTime, setSelectedBreakTime] = useState('');\r\n  const handleClickTime = (logoutType, time) => {\r\n    setSelectedLogoutType(logoutType);\r\n    setSelectedBreakTime(time);\r\n    handleBreakTimeModalOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBreakTime().then(resp => {\r\n      var mola = JSON.parse(resp.data.data);\r\n      getBreakName().then(res => {\r\n        var molaAdı = JSON.parse(res.data.data);\r\n        for (var i = 0; i < mola.length; i++) {\r\n          for (var z = 0; z < molaAdı.length; z++) {\r\n            if (mola[i].logouttype === molaAdı[z].value) {\r\n              mola[i].name = molaAdı[z].name;\r\n              mola[i].id = molaAdı[z].iddn;\r\n            }\r\n          }\r\n        }\r\n        setBreaks(mola);\r\n      });\r\n    });\r\n  }, [breakNameModalopen, breakTimeModalopen]);\r\n\r\n  console.log(breaks);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakcode'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakname'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breaktime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {breaks.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.logouttype}</TableCell>\r\n                  <TableCell onClick={() => handleClickName(item.id, item.name)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.name}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleClickTime(item.logouttype, item.period)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.period}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Modal\r\n        open={breakNameModalopen}\r\n        onClose={handleBreakNameModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakNameModal\r\n            id={selectedBreakId}\r\n            selectedBreakName={selectedBreakName}\r\n            handleBreakNameModalClose={handleBreakNameModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={breakTimeModalopen}\r\n        onClose={handleBreakTimeModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakTimeModal\r\n            logouttype={selectedLogoutType}\r\n            period={selectedBreakTime}\r\n            handleBreakTimeModalClose={handleBreakTimeModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Error404 from './Pages/404';\r\nimport Login from './Auth/Login';\r\nimport AgentStatus from './Pages/AgentStatus';\r\nimport Register from './Auth/Register';\r\nimport CallLog from './Pages/CallLog';\r\nimport DroppedCall from './Pages/DroppedCall';\r\nimport DidReport from './Pages/DIDReport';\r\nimport ForgotPasswordPage from './Auth/ForgotPassword';\r\nimport { PrivateRouteLogin } from './Private/PrivateRouteLogin';\r\nimport { NotPrivateRoute } from './Private/NotPrivateRoute';\r\nimport ServiceLevel from './Pages/ServiceLevel';\r\nimport { AbandonedQueues } from './Pages/AbandonedQueues';\r\nimport RepetetiveCalls from './Pages/RepetetiveCalls';\r\nimport WallBoard from './Pages/WallBoard';\r\nimport DailyLog from './Pages/DailyLog';\r\nimport CallComparison from './Pages/CallComparison';\r\nimport MonthlyLog from './Pages/MonthlyLog';\r\nimport ReturnedDropCall from './Pages/ReturnedDropCall';\r\nimport AgentCDR from './Pages/AgentSessionReport';\r\nimport IYS from './Pages/IYS';\r\nimport Users from './Pages/MicrosoftTeams/Users';\r\nimport MonthlyDetails from './Pages/MonthlyDetails';\r\nimport QueueAnswerReport from './Pages/QueueAnswerReport';\r\nimport AbondenedCalls from './Pages/AbondenedCalls';\r\nimport AgentCdrReport from './Pages/AgentCdrReport';\r\nimport DailySumaryReport from './Pages/DailySummaryReport';\r\nimport InternalsSummaryReport from './Pages/InternalsSummaryReport';\r\nimport CallLog2 from './Pages/CallLog2';\r\nimport './index.css';\r\nimport CallTransferReport from './Pages/CallTransferReport';\r\nimport EditBreaks from './Pages/EditBreaks';\r\n\r\n// const RestrictedRoute = ({ component: Component, ...rest }) => {\r\n//   const { authUser } = useSelector(({ auth }) => auth);\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={props =>\r\n//         localStorage.getItem('login') === 200 ? (\r\n//           <Component {...props} />\r\n//         ) : (\r\n//           <Redirect\r\n//             to={{\r\n//               pathname: '/signin',\r\n//               state: { from: props.location },\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst Routes = () => {\r\n  const location = useLocation();\r\n\r\n  if (location.pathname === '' || location.pathname === '/') {\r\n    return <Redirect to={'/dashboard'} />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <NotPrivateRoute path=\"/reports/agentcdr\" component={AgentCDR} />\r\n        <NotPrivateRoute path=\"/reports/returned-dropcall\" component={ReturnedDropCall} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <NotPrivateRoute path=\"/wallboard\" component={WallBoard} />\r\n        <NotPrivateRoute path=\"/reports/callLogold\" component={CallLog} />\r\n        <NotPrivateRoute path=\"/reports/calltransferreport\" component={CallTransferReport} />\r\n        <NotPrivateRoute path=\"/reports/callLog\" component={CallLog2} />\r\n        <NotPrivateRoute path=\"/reports/servicelevel\" component={ServiceLevel} />\r\n        <NotPrivateRoute path=\"/reports/agentstatus\" component={AgentStatus} />\r\n        <NotPrivateRoute path=\"/reports/callcomparison\" component={CallComparison} />\r\n        <NotPrivateRoute path=\"/signup\" component={Register} />\r\n        <NotPrivateRoute path=\"/reports/repetetive-calls\" component={RepetetiveCalls} />\r\n        <NotPrivateRoute path=\"/forgot-password\" component={ForgotPasswordPage} />\r\n        <NotPrivateRoute path=\"/reports/abandoned-queues\" component={AbandonedQueues} />\r\n        <NotPrivateRoute path=\"/reports/dailylog\" component={DailyLog} />\r\n        <NotPrivateRoute path=\"/reports/didreport\" component={DidReport} />\r\n        <NotPrivateRoute path=\"/reports/monthlylog\" component={MonthlyLog} />\r\n        <NotPrivateRoute path=\"/reports/droppedcall\" component={DroppedCall} />\r\n        <NotPrivateRoute path=\"/reports/editbreaks\" component={EditBreaks} />\r\n        <NotPrivateRoute path=\"/iys/called-number\" component={IYS} />\r\n        <NotPrivateRoute path=\"/teams/users\" component={Users} />\r\n        <NotPrivateRoute path=\"/reports/monthlyDetails\" component={MonthlyDetails} />\r\n        <NotPrivateRoute path=\"/reports/queueanswerreport\" component={QueueAnswerReport} />\r\n        <NotPrivateRoute path=\"/reports/abondenedcalls\" component={AbondenedCalls} />\r\n        <NotPrivateRoute path=\"/reports/agentcdrreport\" component={AgentCdrReport} />\r\n        <NotPrivateRoute path=\"/reports/internalssummary\" component={InternalsSummaryReport} />\r\n        <NotPrivateRoute path=\"/reports/dailysummaryreport\" component={DailySumaryReport} />\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport configureStore, { history } from './redux/store';\r\nimport AppWrapper from './@jumbo/components/AppWrapper';\r\nimport AppContextProvider from './@jumbo/components/contextProvider/AppContextProvider';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport Routes from './routes';\r\n\r\nexport const store = configureStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <AppContextProvider>\r\n        <AppWrapper>\r\n          <Switch>\r\n            <Routes />\r\n          </Switch>\r\n        </AppWrapper>\r\n      </AppContextProvider>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}