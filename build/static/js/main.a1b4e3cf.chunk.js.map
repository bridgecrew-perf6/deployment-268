{"version":3,"sources":["redux/reducers/Common.js","@jumbo/constants/ActionTypes.js","redux/reducers/Auth.js","redux/reducers/index.js","redux/store/index.js","theme/GlobalCss.js","@jumbo/constants/ThemeOptions.js","theme/defaultTheme.js","@jumbo/components/contextProvider/AppContextProvider/defaultContext.js","@jumbo/components/contextProvider/AppContextProvider/AppContext.js","i18n/entries/en_EN.js","i18n/entries/tr_TR.js","i18n/entries/nl_NL.js","i18n/index.js","i18n/entries/de_DE.js","redux/actions/Common.js","redux/actions/Auth.js","services/auth/index.js","services/auth/Basic/index.js","@coremat/CmtLayouts/LayoutContext.js","@coremat/CmtLayouts/Vertical/LayoutContextProvider/index.js","@coremat/CmtLayouts/Vertical/MainContainer.style.js","@coremat/CmtLayouts/Vertical/MainContainer.js","@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext.js","@coremat/CmtHelpers/JssHelper.js","@coremat/CmtLayouts/SidebarThemeContext/sidebarThemeColors.js","@coremat/CmtLayouts/SidebarThemeContext/index.js","@coremat/CmtLayouts/Vertical/index.js","@coremat/CmtLayouts/Vertical/Header.js","@coremat/CmtLayouts/Vertical/SidebarToggleHandler.js","@coremat/CmtImage/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/data.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/LanguageItem.js","@coremat/CmtCard/index.js","@coremat/CmtTypography/CmtTitle/index.js","@coremat/CmtTypography/CmtSubTitle/index.js","@coremat/CmtTypography/CmtContentHead/index.js","@coremat/CmtDropdownMenu/index.js","@coremat/CmtCard/CmtCardHeader.style.js","@coremat/CmtCard/CmtCardHeader.js","@coremat/CmtList/ListFooter.js","@coremat/CmtList/ListView.js","@coremat/CmtList/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/index.js","@coremat/CmtCard/CmtCardContent.js","@coremat/CmtGridView/GridView.js","@coremat/CmtGridView/GridFooter.js","@coremat/CmtGridView/index.js","@coremat/CmtAvatar/index.style.js","@coremat/CmtAvatar/index.js","@jumbo/components/AppLayout/partials/Header/AppsMenu.js","@coremat/CmtMediaObject/index.style.js","@coremat/CmtMediaObject/index.js","@jumbo/utils/dateHelper.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/NotificationItem.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/index.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/MessageItem.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/index.js","@jumbo/components/AppLayout/partials/Logo.js","@coremat/CmtSearch/index.style.js","@coremat/CmtSearch/index.js","@jumbo/components/AppLayout/partials/SearchPopover.js","@jumbo/components/AppLayout/partials/Header/index.js","@coremat/CmtLayouts/Vertical/Sidebar.style.js","@coremat/CmtDrawer/index.js","@coremat/CmtLayouts/Vertical/Sidebar.js","@jumbo/components/AppLayout/partials/SidebarHeader.js","@coremat/CmtNavigation/Vertical/NavMenuItem.js","@coremat/CmtNavigation/Vertical/NavCollapse.js","@coremat/CmtNavigation/Vertical/NavSection.js","@coremat/CmtNavigation/Vertical/index.js","@jumbo/utils/IntlMessages.js","@jumbo/components/AppLayout/partials/menus.js","@jumbo/components/AppLayout/partials/SideBar/index.js","@coremat/CmtLayouts/Vertical/Content.js","@jumbo/components/PageComponents/PageLoader.js","@jumbo/components/ContentLoader/index.js","@coremat/CmtLayouts/Vertical/Footer.js","@jumbo/components/AppLayout/partials/FooterLogo.js","@jumbo/components/AppLayout/partials/Footer.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalDefault/index.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalMinimal/index.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/Alerts.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/ActionBarDrawer.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/index.js","@coremat/CmtLayouts/Horizontal/LayoutContextProvider/index.js","@coremat/CmtLayouts/Horizontal/MainContainer.style.js","@coremat/CmtLayouts/Horizontal/MainContainer.js","@coremat/CmtLayouts/Horizontal/index.js","@coremat/CmtLayouts/Horizontal/Header/HeaderNav.js","@coremat/CmtLayouts/Horizontal/Header/HeaderTop.js","@coremat/CmtLayouts/Horizontal/Header/HeaderMain.js","@jumbo/components/AppLayout/partials/Header/HeaderLogin/index.js","@coremat/CmtLayouts/Horizontal/SidebarToggleHandler.js","@jumbo/components/AppLayout/partials/UserDropDown.js","@jumbo/components/AppLayout/partials/GlobalSearchForm.js","@jumbo/components/AppLayout/partials/Header/HeaderTop/index.js","@coremat/CmtLayouts/Horizontal/Header/index.js","@coremat/CmtLayouts/Horizontal/Sidebar.js","@coremat/CmtLayouts/Horizontal/Content.js","@coremat/CmtLayouts/Horizontal/Footer.js","@coremat/CmtNavigation/Horizontal/NavMenuItem.js","@coremat/CmtNavigation/Horizontal/NavCollapse.style.js","@coremat/CmtNavigation/Horizontal/NavCollapse.js","@coremat/CmtNavigation/Horizontal/NavMega.style.js","@coremat/CmtNavigation/Horizontal/NavMega.js","@coremat/CmtNavigation/Horizontal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDefault/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/MainHeader.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderTopMenus.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.js","@jumbo/components/AppLayout/index.js","@jumbo/components/AppWrapper/index.js","@jumbo/components/contextProvider/AppContextProvider/index.js","theme/themeColors.js","@jumbo/components/GridContainer/index.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@coremat/CmtCard/CmtCardFooter.js","@coremat/CmtAdvCard/index.style.js","@coremat/CmtAdvCard/index.js","@coremat/CmtAdvCard/CmtAdvCardContent.style.js","@coremat/CmtAdvCard/CmtAdvCardContent.js","@jumbo/components/Common/CryptoCard/CryptoCard.style.js","@jumbo/components/Common/DownloadApps/index.js","@jumbo/components/Common/CryptoCard/index.js","@jumbo/components/Common/CurrenyCalculator/index.js","@jumbo/components/Common/CodeViewerCard/MarkdownElement.js","@jumbo/components/Common/CodeViewerCard/HighlightedCode.js","@jumbo/utils/prism.js","@coremat/CmtCard/CmtCardActions.js","@jumbo/components/Common/CodeViewerCard/index.js","@jumbo/components/Common/StatisticsCard/index.js","routes/Pages/Dashboard/MissedCalls/MissedCallGraph.js","routes/Pages/Dashboard/MissedCalls/index.js","routes/Pages/Dashboard/InboundRules/InboundStyle.js","routes/Pages/Dashboard/InboundRules/InboundGraph.js","routes/Pages/Dashboard/InboundRules/index.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChart.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChartItem.js","routes/Pages/Dashboard/HeaderChartComponent/index.js","routes/Pages/Dashboard/OutboundCall/OutboundGraph.js","routes/Pages/Dashboard/OutboundCall/index.js","@jumbo/components/Common/CounterCard/index.js","api/api.js","routes/Pages/Dashboard/Extensions/index.js","routes/Pages/Dashboard/TrunksUp/index.js","routes/Pages/Dashboard/ActiveCallCount/index.js","services/auth/logout/index.js","routes/Pages/Dashboard/Tops/DashboardTop5AnsweredCalls.js","routes/Pages/Dashboard/Tops/DashboardTop5Inbound.js","routes/Pages/Dashboard/Tops/DashboardTop5Outbound.js","routes/Pages/Dashboard/Tops/DashboardTop5TalkTime.js","routes/Pages/Dashboard/Tops/index.js","routes/Pages/Dashboard/index.js","routes/Pages/404/index.js","@jumbo/components/Common/authComponents/AuthWrapper.js","@jumbo/components/Common/authComponents/SignIn.js","@jumbo/constants/AppConstants.js","routes/Auth/Login.js","@jumbo/utils/DataGridLocales.js","routes/Pages/AgentStatus/Table/index.js","routes/Pages/AgentStatus/index.js","@jumbo/components/Common/authComponents/SignUp.js","routes/Auth/Register.js","routes/Pages/CallManagement/Filter/DateFilter/index.js","routes/Pages/CallManagement/Filter/Filters/index.js","routes/Pages/CallManagement/Filter/index.js","routes/Pages/CallManagement/CallDetails/index.js","routes/Pages/CallManagement/Table/Tag.js","routes/Pages/CallManagement/Table/Score.js","@jumbo/utils/AudioWaveForm.js","routes/Pages/CallManagement/Table/index.js","routes/Pages/CallManagement/index.js","routes/Pages/DroppedCall/Filter/DateFilter/index.js","routes/Pages/DroppedCall/Filter/index.js","routes/Pages/DroppedCall/Table/index.js","routes/Pages/DroppedCall/index.js","routes/Pages/DIDReport/Filter/DateFilter/index.js","routes/Pages/DIDReport/Filter/index.js","routes/Pages/DIDReport/Table/index.js","routes/Pages/DIDReport/index.js","@jumbo/components/Common/authComponents/ForgotPassword.js","routes/Auth/ForgotPassword.js","routes/Private/PrivateRouteLogin.js","routes/Private/NotPrivateRoute.js","routes/Pages/ServiceLevel/Filter/DateFilter/index.js","routes/Pages/ServiceLevel/Filter/index.js","routes/Pages/ServiceLevel/Table/index.js","routes/Pages/ServiceLevel/index.js","routes/Pages/AbandonedQueues/Filter/DateFilter/index.js","routes/Pages/AbandonedQueues/Filter/index.js","routes/Pages/AbandonedQueues/Table/index.js","routes/Pages/AbandonedQueues/Details/index.js","routes/Pages/AbandonedQueues/index.js","routes/Pages/RepetetiveCalls/Filter/DateFilter/index.js","routes/Pages/RepetetiveCalls/Filter/index.js","routes/Pages/RepetetiveCalls/AllCalls/index.js","routes/Pages/RepetetiveCalls/Model/index.js","routes/Pages/RepetetiveCalls/AnsweredCalls/index.js","routes/Pages/RepetetiveCalls/index.js","routes/Pages/WallBoard/QueueList/index.js","routes/Pages/WallBoard/AgentConnection/index.js","routes/Pages/WallBoard/AgentStatus/AgentStatus.js","routes/Pages/WallBoard/CallDetail/index.js","routes/Pages/WallBoard/AgentDetail/index.js","routes/Pages/WallBoard/index.js","routes/Pages/DailyLog/Filter/index.js","routes/Pages/DailyLog/Table/index.js","routes/Pages/DailyLog/Chart/index.js","routes/Pages/DailyLog/index.js","routes/Pages/CallComparison/Table/index.js","routes/Pages/CallComparison/Graph/index.js","routes/Pages/CallComparison/Filter/index.js","routes/Pages/CallComparison/index.js","routes/Pages/MonthlyLog/Filter/index.js","routes/Pages/MonthlyLog/Graph/graph.js","routes/Pages/MonthlyLog/Graph/index.js","routes/Pages/MonthlyLog/Table/index.js","routes/Pages/MonthlyLog/index.js","routes/Pages/ReturnedDropCall/Table/index.js","routes/Pages/ReturnedDropCall/Filter/index.js","routes/Pages/ReturnedDropCall/index.js","routes/Pages/AgentSessionReport/Filter/DateFilter/index.js","routes/Pages/AgentSessionReport/Filter/index.js","routes/Pages/AgentSessionReport/Table/index.js","routes/Pages/AgentSessionReport/Model/index.js","routes/Pages/AgentSessionReport/index.js","routes/Pages/IYS/Filter/index.js","routes/Pages/IYS/Table/index.js","routes/Pages/IYS/index.js","routes/Pages/MicrosoftTeams/Users/index.js","routes/Pages/MonthlyDetails/Filter/index.js","routes/Pages/MonthlyDetails/Table/index.js","routes/Pages/MonthlyDetails/Detail/index.js","routes/Pages/MonthlyDetails/index.js","routes/Pages/QueueAnswerReport/Filter/DateFilter/index.js","routes/Pages/QueueAnswerReport/Filter/index.js","routes/Pages/QueueAnswerReport/Table/index.js","routes/Pages/QueueAnswerReport/index.js","routes/Pages/AbondenedCalls/Filter/DateFilter/index.js","routes/Pages/AbondenedCalls/Filter/index.js","routes/Pages/AbondenedCalls/Table/index.js","routes/Pages/AbondenedCalls/index.js","routes/Pages/AgentCdrReport/Filter/index.js","routes/Pages/AgentCdrReport/Table/index.js","routes/Pages/AgentCdrReport/index.js","routes/Pages/DailySummaryReport/Filter/DateFilter/index.js","routes/Pages/DailySummaryReport/Filter/index.js","routes/Pages/DailySummaryReport/Modals/TotalCallModal.js","routes/Pages/DailySummaryReport/Modals/AnsweredCallModal.js","routes/Pages/DailySummaryReport/Modals/AbondenedCallModal.js","routes/Pages/DailySummaryReport/Modals/TransferCallModal.js","routes/Pages/DailySummaryReport/Modals/OutOfTimeModal.js","routes/Pages/DailySummaryReport/Modals/RonaCallModla.js","routes/Pages/DailySummaryReport/Modals/OutCallModal.js","routes/Pages/DailySummaryReport/Table/index.js","routes/Pages/DailySummaryReport/index.js","routes/Pages/InternalsSummaryReport/Filter/DateFilter/index.js","routes/Pages/InternalsSummaryReport/Filter/index.js","routes/Pages/InternalsSummaryReport/Table/index.js","routes/Pages/InternalsSummaryReport/index.js","routes/Pages/CallLog2/Filter/DateFilter/index.js","routes/Pages/CallLog2/Filter/Filters/index.js","routes/Pages/CallLog2/Filter/index.js","routes/Pages/CallLog2/CallDetails/index.js","routes/Pages/CallLog2/Table/Tag.js","routes/Pages/CallLog2/Table/index.js","routes/Pages/CallLog2/index.js","routes/Pages/QualityReport/Filter/DateFilter/index.js","routes/Pages/QualityReport/Filter/index.js","routes/Pages/QualityReport/Table/index.js","routes/Pages/QualityReport/index.js","routes/Pages/CallTransferReport/Filter/DateFilter/index.js","routes/Pages/CallTransferReport/Filter/index.js","routes/Pages/CallTransferReport/Table/index.js","routes/Pages/CallTransferReport/index.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakNameModal.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakTimeModal.js","routes/Pages/EditBreaks/index.js","routes/Pages/UserSettings/UserDepartmans/UserDepartmans.js","routes/Pages/UserSettings/UserTable/AddUserModal.js","routes/Pages/UserSettings/UserTable/UpdateUserModal.js","routes/Pages/UserSettings/UserTable/UserTable.js","routes/Pages/UserSettings/UserSettings.js","routes/Pages/DepartmansSettingns/TagTable/AddTagModal.js","routes/Pages/DepartmansSettingns/TagTable/UpdateTagModal.js","routes/Pages/DepartmansSettingns/TagTable/TagTable.js","routes/Pages/DepartmansSettingns/DepartmentQueues/DepartmentQueues.js","routes/Pages/DepartmansSettingns/DeportmentTable/AddDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/UpdateDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/DepartmantTable.js","routes/Pages/DepartmansSettingns/DepartmansSettigns.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["INIT_STATE","initialURL","error","message","loading","state","action","type","payload","authUser","loadUser","send_forget_password_email","history","combineReducers","router","connectRouter","common","Common","auth","Auth","createBrowserHistory","routeMiddleware","routerMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","store","createStore","reducers","thunk","HEADER_TYPE","SIDEBAR_TYPE","THEME_TYPES","LAYOUT_TYPES","breakpoints","createBreakpoints","values","xs","sm","md","lg","xl","theme","spacing","direction","palette","black","white","dark","primary","indigo","secondary","pink","sidebar","bgColor","textColor","textDarkColor","textActiveColor","navHoverBgColor","navActiveBgColor","borderColor","horizontalNav","navigationColor","navigationActiveColor","menuHoverBgColor","menuActiveBgColor","background","paper","default","text","disabled","hint","btn","hover","lightBtn","main","popupColor","status","danger","typography","fontFamily","fontWeightExtraLight","fontWeightLight","fontWeightRegular","fontWeightBold","fontWeightExtraBold","overrides","MuiTypography","h1","fontSize","fontWeight","up","h2","h3","h4","h5","h6","letterSpacing","subtitle1","subtitle2","body1","body2","MuiButton","root","MuiToggleButton","borderRadius","MuiCardLg","MuiCard","boxShadow","MuiTab","textColorPrimary","color","MuiPopover","backgroundColor","MuiDialog","defaultLng","localStorage","getItem","navigator","language","languageId","locale","name","icon","getLang","layout","layoutType","themeType","drawerBreakPoint","headerType","sidebarType","isSidebarFixed","sidebarWidth","showFooter","AppContext","React","createContext","defaultContext","setLocale","enLang","messages","enMessages","saLang","saMessages","nlLang","nlMessages","AppLocale","en","tr","trLang","de","deMessages","nl","paddingClasses","marginClasses","count","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","marginRight","marginTop","marginBottom","globalStyles","makeStyles","boxSizing","margin","padding","a","textDecoration","pointerEvents","cursor","down","img","maxWidth","minHeight","overflowX","width","overflowY","border","whiteSpace","flex","display","flexDirection","alignItems","outline","transition","zIndex","flexWrap","darken","alpha","backgroundImage","fetchSuccess","dispatch","fetchError","setAuthUser","user","updateLoadUser","setForgetPassMailSent","AuhMethods","basic","onLogin","email","password","setTimeout","onLogout","removeItem","getAuthUser","loaded","JSON","parse","onForgotPassword","getSocialMediaIcons","Fragment","LayoutContext","LAYOUT_STYLES","SIDEBAR_TYPES","HEADER_TYPES","sidebarFixed","headerFixed","LayoutContextProvider","props","location","useLocation","useState","layoutStyle","setLayoutStyle","setSidebarType","isSidebarOpen","setSidebarOpen","setHeaderType","showHeader","setShowHeader","setShowFooter","setSidebarWidth","setSidebarFixed","miniSidebarWidth","setMiniSidebarWidth","actionSidebarWidth","setActionSidebarWidth","useEffect","params","URLSearchParams","search","get","layoutContextValue","useMemo","showTourOpt","document","body","classList","remove","add","Provider","value","children","useStyles","appRoot","height","position","top","right","left","bottom","borderTopLeftRadius","appMain","appInnerRoot","appMainContainer","overflow","MainContainer","header","footer","className","rest","useContext","footerType","useTheme","isDrawer","useMediaQuery","headerClasses","setHeaderClasses","footerClasses","setFooterClasses","sidebarClasses","setSidebarClasses","classes","newClasses","push","clsx","Box","cloneElement","SidebarThemeContext","getBackgroundStyle","gradientDirection","backgroundRepeat","backgroundPosition","backgroundSize","Array","isArray","length","toString","split","join","getOverLayStyle","overlay","colors","opacity","getSeparatorStyle","separator","topBorder","borderWidth","borderStyle","borderTop","borderBottom","hexToRgba","input","replace","test","Error","first","second","last","toUpperCase","parseInt","isUrlInChildren","parent","url","i","link","includes","themeSidebarColor","light","darkThemeSetting","SidebarThemeProvider","activeTheme","setActiveTheme","sidebarContextValue","backgroundStyle","overlayStyle","sidebarTheme","setSidebarTheme","CmtVerticalLayout","layoutOptions","prototype","PropTypes","object","defaultProps","appHeader","CmtHeader","AppBar","SidebarToggleHandler","restProps","IconButton","onClick","CmtImage","alt","altValue","languageData","flags","LanguageItem","src","ml","cardOverlay","CmtCard","cardProps","backgroundStyles","overlayStyles","headerRef","useRef","childrenWithProps","Children","map","child","isValidElement","render","ref","Card","onMouseEnter","current","onHeaderMouseEntered","onMouseLeave","onHeaderMouseLeft","style","CmtTitle","content","titleProps","Typography","variant","component","CmtSubTitle","subTitleProps","gutterBottom","headRoot","avatar","headerContent","CmtContentHead","title","subTitle","titleStyle","subTitleStyle","memo","CmtDropdownMenu","TriggerComponent","items","onItemClick","anchorEl","setAnchorEl","menuItems","setMenuItems","open","Boolean","closeMenu","event","stopPropagation","currentTarget","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","item","index","MenuItem","key","selectedIndex","updatedItem","hasChange","newMenuItems","handleMenuItemClick","label","headerRoot","separatorStyles","headerAlignCenter","contentWidth","justifyContent","animationTimingFunction","transform","actionMenu","minWidth","actionMenuDefault","actionMenuAbsolute","textAlign","actionMenuHover","showActionMenu","animationName","animationDuration","hideActionMenu","showActionDefaultMenu","hideActionDefaultMenu","contentRef","createRef","ActionsMenu","actions","actionHandler","size","CmtCardHeader","forwardRef","actionMenuClassName","actionHandleIcon","actionsPos","actionsShowOnHover","alignCenter","showActions","setActionsVisibility","setContentWidth","contentHeadProps","showHideActionClass","headerRootClasses","menuRootClasses","menuRootActionsClasses","useImperativeHandle","clientWidth","listFooterRoot","listFooterLoaderRoot","ListFooter","footerText","CircularProgress","bool","string","ListView","renderRow","onEndReached","data","ListFooterComponent","ListEmptyComponent","useBottomScrollListener","getEmptyContainer","getFooterContainer","CmtList","footerProps","cardRoot","perfectScrollbarLanguage","menuItemRoot","popoverRoot","LanguageSwitcher","handleClose","id","undefined","switchLanguage","window","setItem","data-tut","Popover","CmtCardContent","CardContent","gridContainer","columnRow","itemPadding","columnCount","flexGrow","displayColumn","flexBasis","GridView","column","responsive","setDisplayColumn","getColumnCount","withWidth","footerWrapper","GridFooter","CmtGridView","getContrastText","amber","brown","red","green","blue","yellow","grey","orange","deepOrange","purple","customSize","small","medium","large","colorOptions","CmtAvatar","phCharLength","colorClass","Math","floor","random","sizeClass","classNames","placeHolderChar","substr","Avatar","iconRoot","applications","path","AppsMenu","useHistory","onClosePopOver","onClickApp","Tooltip","py","mt","appItem","mediaObject","mediaImageTop","alignSelf","mediaImageCenter","mediaImageBottom","rootAvatar","mediaBody","mediaHeader","mediaHeaderContent","mediaActions","mediaFooter","CmtMediaObject","avatarPos","avatarProps","onBodyClick","actionsComponent","contentProps","footerComponent","footerComponentProps","mr","clone","oneOfType","element","oneOf","func","getNewDate","date_","date","Date","year","getFullYear","month","getMonth","dt","getDate","getDateElements","dateSections","moment","format","day","time","datePart","trim","dateString","feedItemRoot","fade","titleRoot","icons","POSTING","SHARED_POST","INVITATION","BIRTHDAY","NotificationItem","profile_pic","metaData","post","getPostContent","owner","getSharedContent","group","getInvitationContent","getBirthdayContent","getTitle","counterRoot","warning","scrollbarRoot","headerNotifications","HeaderNotifications","counter","setCounter","pr","active","Badge","badgeContent","badge","p","subTitleRoot","textOverflow","MessageItem","HeaderMessages","Logo","Hidden","xsDown","to","smUp","menuButton","shape","align","searchIcon","inputRoot","inputInput","transitions","create","searchIconBox","CmtSearch","placeholder","iconPosition","onlyIcon","containerStyle","inputStyle","iconStyle","inputBaseStyle","inputBaseClasses","InputBase","inputProps","SearchPopover","iconClassName","popoverClassName","searchRoot","langRoot","borderLeft","iconBtn","Header","Toolbar","edge","aria-label","smDown","mdUp","appSidebar","appSidebarContent","actionSidebarWrapper","overlayRoot","drawerContainer","drawerContent","CmtDrawer","Drawer","CmtSidebarContent","CmtDrawerContent","CmtSidebar","actionBar","matches","hasDrawer","userInfo","userTitle","userSubTitle","SidebarHeader","useDispatch","handlePopoverClose","container","Paper","elevation","MenuList","navMenuItem","navMenuLink","borderTopRightRadius","borderBottomRightRadius","navText","NavMenuItem","List","navCollapseBtn","navCollapse","navCollapseBtnInner","navArrow","navCollapseItem","visibility","NavCollapse","isExpandable","setOpen","pathname","renderIcon","useCallback","MenuCollapse","ListItem","button","MenuItemChildren","Collapse","in","timeout","disablePadding","navHeader","textTransform","navSection","NavSection","sideNavMenu","CmtVertical","injectIntl","withRef","sidebarNavs","IntlMessages","Dashboard","Phone","ArrowForward","Assignment","Receipt","process","horizontalDefaultNavs","minimalHorizontalMenus","perfectScrollbarSidebar","SideBar","appMainContent","CmtContent","bgcolor","circularProgressRoot","PageLoader","SlideTransition","Slide","ContentLoader","useSelector","Snackbar","TransitionComponent","Alert","severity","appFooter","appFooterWrapper","CmtFooter","FooterLogo","logoUrl","btnRoot","Footer","showFooterOpt","VerticalDefault","VerticalMinimal","borderBottomLeftRadius","Alerts","iconMapping","success","minimalNoHeader","MinimalNoHeader","lgUp","actionSidebar","borderRight","divider","contentArea","ActionBarDrawer","activeOption","onIconClick","onDrawerClose","anchor","actionsList","initSidebarWidth","isDrawerOpen","setDrawerStatus","setActiveOption","option","sidebarHeader","ModernSideBar","mdDown","CmtHorizontalLayout","headerNav","CmtHeaderNav","headerTop","CmtHeaderTop","headerMain","CmtHeaderMain","loginSection","HeaderLogin","Button","Divider","orientation","isOpen","profileRoot","UserDropDown","inputGroup","inputGroupAppend","GlobalSearchForm","showCategories","setShowCategories","onHideCategories","inputText","endIcon","HeaderTop","appMainContentWrapper","handleClick","from","subCollapse","removeHistoryListening","listen","disableGutters","navMega","navMegaBtn","navMegaBtnInner","navMegaColumnsWrapper","navMegaColumn","navMegaColumnInner","navMegaColumnLabel","RenderIcon","NavMegaColumn","navMegaColumnItems","NavMega","totalItems","MenuItemColumns","horizontalNavMenu","CmtHorizontal","HorizontalDefault","appHeaderDark","borderLeftColor","HeaderMain","HorizontalDark","MainHeader","HorizontalMinimal","HeaderTopMenus","HorizontalTopMenu","AppLayout","showLayoutLoader","setLayoutLoader","jss","plugins","jssPreset","rtl","AppWrapper","muiTheme","createTheme","ThemeProvider","utils","MomentUtils","StylesProvider","CssBaseline","initialThemeValue","otherThemes","AppContextProvider","setTheme","setThemeType","setLayout","cardRadius","setCardRadius","setDirection","showTourGuide","setTourGuideStatus","contextValue","prevState","setAttribute","GridContainer","Grid","pageHeaderRoot","PageHeader","heading","breadcrumbComponent","mb","textSm","linkBlock","PageBreadcrumbs","Breadcrumbs","isActive","pxToRem","contentSidebar","flexShrink","pageFull","PageContainer","breadcrumbs","mountOnEnter","unmountOnExit","footerRoot","CmtCardFooter","advCardRoot","deepPurple","CmtAdvCard","advCardContent","gridOrder1","order","gridOrder2","CmtAdvCardContent","extraContent","columnSizes","reverseDir","alignCenterClass","blockClasses","blockFirst","blockSecond","extraContentRender","cardHeaderRoot","CryptoCard","amount","progress","headerSubTitle","textPrimary","mbSpace","wordBreak","WebkitOverflowScrolling","lineHeight","WebkitFontSmoothing","fill","borderCollapse","borderSpacing","fontWeightMedium","font","verticalAlign","maxHeight","flip","MarkdownElement","renderedMarkdown","other","more","dangerouslySetInnerHTML","__html","code","renderedCode","prismLanguage","prism","languages","tsx","jsx","diff","deleted","highlight","card","cardContent","cardContentInner","actionButtons","collapseStyle","cardHeader","cardBody","chartTitle","chartSubTitle","tooltip","MissedCallGraph","labelStyle","start_time","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeWidth","stackId","stroke","fillOpacity","MissedCall","handleChange","getDay","setParam","param","start","calculateYearOfTheDay","aria-controls","aria-haspopup","aria-expanded","Dehaze","MenuListProps","DateRange","total","InboundGraph","InboundRules","HeaderChart","canvas","ctx","getContext","_stroke","countInbound","countOutbound","countMissed","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","inbound","outbound","missed","labels","datasets","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","options","legend","scales","yAxes","ticks","beginAtZero","HeaderChartItem","searchAction","searchActionBar","cardContentRoot","badgeRoot","optionList","SiteTraffic","list","PhoneForwarded","OutboundGraph","OutboundCall","containerRoot","containerRootCenter","contentRoot","contentRootCenter","CounterCard","number","numberProps","labelProps","counterProps","end","useEasing","appsettings","validationUrl","appUrl","port","appPort","addZero","val","getInboundCalls","query","axios","token","getDidData","getDidDataCount","getDidNumbers","async","getMonthlyDetails","getMonthlyTotal","getAgentList","getMissedCalls","getOutboundCalls","getQueue","getRepetetiveAll","limit","allCallOffset","queue","didNumber","paramStart","paramFinish","getRepetetiveAllCount","getRepetetiveCallerDetails","callerNumber","getReturnedDropCall","agNum","qNum","getMontlyLog","paramMonth","paramBack","getCallComparison","paramDate","getCallComparisonDaily","getDailyLog","getDailyLogTable","getRepetetiveAnswered","answeredCallsOffset","getRepetetiveAnsweredCount","getAbandonedQueueCallsDetails","startDate","endDate","getAbandonedQueueCallsDetailsTotal","getAbondenedCalls","getAbondenedCallDetails","from_userpart","getAbandonedQueueCalls","getServiceLevel","getDropCall","getDropCallSummary","getDropCallCount","getRecording","dir","directory","filename","encodeURIComponent","getPath","getQueueList","getAgentConnection","getAgentStatus","pass","getAgentNumber","getQueueNumber","getDailyCallDetails","mydate","getBreakTime","getBreakName","setBreakName","breakName","breakId","setBreakTime","breakTime","breakNumber","getAgentDetails","agentNum","getAgentSession","getAgentSessionClicked","getInternalBreakTime","getAgentNumberV16","CryptoJS","AES","encrypt","response","getIYSReport","agent","startdate","enddate","getTeamsUsers","getCsOnlineVoiceRoutingPolicy","getCsTenantDialplan","getCsTeamsCallingPolicy","changeCsTeamsCallingPolicy","changeCsVoiceRoutingPolicy","changeCsTenantDiaplan","getUserDetailsByUserId","getQueueAnswerReport","queueNum","getQueueAnswerReportCount","getQueueAnswerReportSummary","getQueueAnswerReportSummaryTotal","getDailySummary","startTime","endTime","getDailySummaryTotal","getInternalsSummary","getInternalsSummaryLongestCalled","getInternalsSummaryLongestCaller","getInternalsSummaryLongestCalledAmount","getInternalsSummaryLongestCallerAmount","getAgentTotalCall","cte","getWallBoardVoiceMail","getWallBoardLongTime","getVersion","getWallBoardWaitingTime","getCallLog2","getCallLog2Total","getCallLog2TotalSummary","getCallLog2Count","getDashboardTops","getCallDetail","callid","getDailySummaryModalTotalCall","getDailySummaryModalAnsweredCall","getDailySummaryModalOutOfTime","getDailySummaryModalAbondenedCall","getDailySummaryModalTransferCall","getDailySummaryModalRonaCall","getCallTransferReport","selectedStartTime","selectedEndTime","getDailySummaryModalOutCall","getUsers","addUser","userName","updateUser","getDepartmants","addDepartmant","updateDepartmant","getQueues","getDepOwnedQueues","depId","addDepOwnedQueues","queueId","deleteDepOwnedQueues","deleteDepOwnedAllQueues","deleteUserAllDepsWithDepId","deleteDepWithDepId","getSupervisors","getUserOwndedDeps","userId","addUserOwndedDeps","deleteUserOwndedDeps","deleteUserOwndedDepsByUserId","deleteUserByUserId","getAgentsRecordListenAuth","setAgentsRecordListenAuthByAgentId","agentId","changeAgentStatus","agentDn","getTagsByCallId","callId","getTagtextByCallId","TagByID","tag","headers","getCallScoresByCallId","ScoreByID","rating","getTagTypes","addTagTypes","depName","tagMessage","setTagTypes","deleteTag","getQualityReport","changeSessionStatus","stringify","qstatus","getBreakNums","TasksCounterCard","extensions","setExtensions","api","then","resp","activeExtension","totalExtension","GroupOutlined","String","Trunks","paramtotal","paramTrunksUp","totalTrunks","setTotalTrunks","trunksUp","setTrunksUp","ActiveCallCount","setactiveCount","Logout","DashboardTop5AnsweredCalls","convertTimeToApiString","timeString","setDate","toLocaleDateString","setStartTime","setEndTime","setData","selectedTime","setSelectedTime","selectTimeString","display_name","dn","LinearProgress","ButtonGroup","DashboardTop5Inbound","DashboardTop5Outbound","DashboardTop5TalkTime","totalseconds","sum","checkDots","QueryBuilder","DashboardTops","orderLg1","SamplePage","totalInbound","totalOutbound","totalMissed","inboundcalls","setInbound","outboundcalls","setOutbound","missedcalls","setMissedCalls","convertToLocalTime","catch","inboundObject","outboundObject","missedObject","times","d","some","fetchData","array","arr","sort","b","slice","max","MissedCalls","Extensions","HeaderChartComponent","errorNumber","textShadow","Error404","authWrap","authCard","AuthWrapper","authThumb","authContent","textFieldRoot","formcontrolLabelRoot","SignIn","method","wrapperVariant","loginState","setLoginState","myDate","onSubmit","console","log","alert","addNotification","setVersion","browser","regexp","userAgent","chrome","version","e","preventDefault","TextField","fullWidth","onChange","target","defaultValue","underline","href","protocol","hostname","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Login","localeText","toolbarExport","toolbarExportPrint","toolbarExportCSV","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnMenuFilter","columnMenuHideColumn","columnMenuShowColumns","noRowsLabel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","AgentTable","rows","setReloadValues","setValue","setAgentId","getTime","curentLanguage","useIntl","field","headerName","renderCell","Switch","checked","res","handleChangeStatus","handleChangeRecordAuth","CloudDownload","columns","pageSize","rowsPerPageOptions","componentsProps","pagination","labelRowsPerPage","AgentList","setResponse","reloadValues","responseStatus","result","recordAuths","j","agentNumber","agent_num","recordAuth","record_listen","dataValue","displayname","agentName","agentState","textCapital","textAcc","alrTextRoot","SignUp","setName","setEmail","setPassword","onRegister","Register","CallLog2DateFilter","setStartTimeApi","setEndTimeApi","dateFilterOpen","setDateFilterOpen","timeFilterValue","setTimeFilterValue","setHours","setStartDate","setEndDate","dateFormat","setMonth","setFullYear","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","labelId","LocalizationProvider","dateAdapter","AdapterDateFns","enLocale","nlLocale","trLocale","deLocale","DatePicker","newValue","renderInput","inputVariant","CallLog2therFilters","setSourceApi","setDestinationApi","setSourceFilterText","setDestinationFilterText","setAnswerStatus","handleSubmitFilter","filtersOpen","setFiltersOpen","sourceSelect","setSourceSelect","sourceFilterSelect","setSourceFilterSelect","sourceFilterTextValue","setSourceFilterTextValue","targetSelect","setTargetSelect","targetFilterSelect","setTargetFilterSelect","targetFilterTextValue","setTargetFilterTextValue","filter3Select","setFilter3Select","helperText","CallLog2Filter","setPage","setCount","startTimeApi","endTimeApi","sourceApi","destinationApi","sourceFilterText","sourceFilterNumber","setSourceNumber","destinationFilterNumber","setDestinationFilterNumber","destinationFilterText","sourceDnMin","setSourceDnMin","sourceDnMax","setSourceDnMax","destinationDnMin","setDestinationDnMin","destinationDnMax","setDestinationDnMax","sourceDnLike","setSourceDnLike","destinationDnLike","setDestinationDnLike","answerStatus","totalString","stringCount","stringTotalSummary","startsWith","setLoading","CallManagementCallDetail","tags","setTags","setRating","tagtext","Chip","Tag","call_id","tagsList","tagValue","setTagValue","tagmassage","Score","callScore","setCallScore","GetScoreName","AudioWaveForm","waveformRef","wavesurfer","playing","setPlay","volume","setVolume","waveColor","progressColor","cursorColor","barWidth","barRadius","barHeight","barGap","WaveSurfer","load","on","destroy","Stack","playPause","sx","htmlColor","Slider","newVolume","min","step","CallManagementTable","setLimit","setOffset","page","setPath","record","setRecord","openAudioModal","setOpenAudioModal","tableData","filter","coalesce","download","caller","src_dn","src_display_name","called","dst_dn","dst_display_name","salable1","duration","salable","isTaggable","score","rightMenu","setRightMenu","callIdEye","setCallIdEye","setTagsList","request","responseURL","NotificationManager","err","PlayArrow","GetApp","AccessTime","Check","PhoneDisabled","Modal","rowHeight","hideFooter","TablePagination","cnt","backIconButtonProps","nextIconButtonProps","rowsPerPage","backIconButtonText","onPageChange","newPage","onRowsPerPageChange","nonTaggableCallTypes","callType","CallManagement","DropCallLogDateFilter","Filter","setResponseSummary","formatDate","hour","getHours","getMinutes","dateDifference","today","round","setParams","queueList","q_num","DataTable","datalist","responseSummary","time_start","end_time","time_end","ringing_time","ring_time","handleDowlandButtonClick","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","to_char","DroppedCall","DidReportDateFilter","setSelectedStartTime","setSelectedEndTime","notFirstReq","setNotFirstReq","setDidNumber","lighten","bullet","pos","didNumbers","setDidNumbers","FormControl","InputLabel","Select","did","conditiondata","CardActions","table","total_did_number","total_did","did_not_answered","did_answered","answered","hourToSecond","secondToTime","currentLanguage","dataGridRows","did_number","act","PhoneInTalk","DIDReport","yesterday","dates","setDates","queryCount","alertRoot","ForgotPassword","timeOutStopper","clearTimeout","Link","ForgotPasswordPage","PrivateRouteLogin","Component","NotPrivateRoute","ServiceLevelDateFilter","queuelist","setQueueList","setQueue","handleChangeQueue","initialValues","queueCheck","handleSubmit","level","createData","ring","parseFloat","toFixed","percent","csvData","row","ServiceLevel","AbondenedQueuesDateFilter","setDetails","setDetailsTotal","setResponseCount","ag_num","que","queues","responseCount","z","call_time","waiting_time","waiting","callerid","from_displayname","Details","details","detailsTotal","date_day","day_abandoned","total_waiting_time","total_waiting","totalcount","totalwaiting","AbandonedQueues","RepadativeCallsDateFilter","setallcalls","setAllCallOffset","setAnsweredCallOffset","setPageAnswered","setAnsweredLimit","answeredLimit","setAnsweredCalls","setResponseCaller","setAllCallCount","setAnsweredCallCount","didList","setDidList","AllCalls","allcalls","setCallerNumber","allCallCount","exportAllOpen","setExpotAllOpen","role","tabIndex","Model","responseCaller","AnsweredCalls","answeredcalls","answeredCallCount","RepetetiveCalls","pageAnswered","answeredCalls","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","QueueList","setQueueAmaunt","setQueueAmauntFunction","queAmaunt","waitingNumber","queueListTimeout","waitingTime","substring","queuName","queueNumber","AgentConnection","setCallAmaunt","setAgentAmaunt","setAgentNum","setAgentName","setValuesFunction","agentConnectionTimeout","callAmaunt","connectionNumber","setAgentNumFunction","connectionTime","AgentStatus","setBreakeAgentAmount","setLoginAgentAmount","now","agentStatusTimeout","breakeAgenAmaunt","loginAgentAmaunt","states","onClickUptateValuesFunction","statustime","CallDetail","queueAmaunt","agentAmaunt","breakeAgentAmaunt","callDetailTimeout","convertTime","totaltime","total_call","agent_to_agent_calls","outbound_calls","answered_inbound_calls","average","AgentDetail","totalcall","answered_call","inbound_call_to_agent","outbound_call_to_agent","inboundtotaltime","outboundtotaltime","inboundaverage","outboundaverage","agentDetail","setAgentDetail","voiceMail","setVoiceMail","longTime","setLongTime","setWaitingTime","Tabs","Tab","a11yProps","TabPanel","hidden","WallBoard","setResponseTable","responseTable","totalCall","hour_log","totalMin","Chart","maximum","o","useScreenshot","quality","takeScreenShot","image","extension","createElement","createFileName","click","domain","angle","strokeDasharray","itemStyle","DailyLog","day_log","unit","hours","minutes","seconds","totalTime","averageTime","timeToSecond","scope","Graph","setGraphData","setResponseDaily","showTime","select","setSelect","choice","tempResponse","respdata","DayLog","Count","TotalHour","TotalMinutes","TotalSeconds","Hour","Act","labelArray","reverse","daylog","totalDataArray","totalMins","totalSeconds","tempgroup","el","CallComparison","responseDaily","graphData","selectedMonth","setSelectedMonth","setSum","months","selectboxdata","resultArray","tempArray","date_trunc","indexOf","customTooltip","ApplicationsGraph","pieData","CustomTooltip","toplam","nameKey","cx","cy","isAnimationActive","outerRadius","entry","aylar","formatDateExcel","toInteger","MonthlyLog","dst_start_time","dst_end_time","setAgent","setQueues","agents","setAgents","ReturnedDropCall","respList","forEach","age","AgentSessionReportDateFilter","setAgentSession","qnum","setQnum","setClickedResponse","clickedAgent","responseBreak","setResponseBreak","break","queueSelect","setQueueSelect","agentSelect","setAgentSelect","breakSelect","setBreakSelect","handleChangeQueueSelect","handleChangeAgentSelect","handleBreakChange","agentSession","setClickedAgent","state_time","escapetime","clickedResponse","keys","Object","logout","m8072","m8073","m8074","m8075","m8076","m8077","m8078","m8079","AgentCDR","DateTimePicker","ampm","disableFuture","getSeconds","issuetime","IYS","Users","users","setUsers","selecetedUser","setSelectedUser","onlineVoiceRoutingPolicy","tenantDialPlan","teamsCallingPolicy","userPrincibleName","selectedUserDetails","setSelectedUserDetails","voiceRoutingPolicys","setVoiceRoutingPolicys","selectedvoiceRoutingPolicy","setSelectedvoiceRoutingPolicy","tenantDiaplans","setTenantDiaplan","selectedTenantDiaplans","setSelectedTenantDiaplans","teamsCallingPolicys","setTeamsCallingPolicy","selectedTeamsCallingPolicy","setSelectedTeamsCallingPolicy","res2","res3","handleChangeUserEmail","callingPolicy","AccordionActions","policyName","voiceRoutingPolicy","tenantDiaplan","teanantDiaPlan","setTotalAgent","setTotalDid","selectedDate","views","setSelectedDate","setCsvData","returnedTime","param1","param2","Param1Array","Param2Array","minute","calculateAverage","timeArray","averageSecond","totaloutbound","totalinbound","answeredinb","durationcalls","durationinbound","durationoutbound","averageTotal","averageInbound","averageOutbound","averageinbound","averageoutbound","inds","Detail","totalAgent","totalDid","src_did","calldid","agentcall","MonthlyDetails","responseTotal","queryTotal","resps","QueueAnswerReportDateFilter","setSummary","setSummaryTotal","setQueueNum","setSrc","setOrder","summed","setRowsPerPage","summaryTotal","dataUnit","talking","QueueAnswerReport","summary","waiting_act","count1","AbondenedCallsDateFilter","setColor","detail","setDetail","setTempArray","call","timeofevent","deta","calltime","AbondenedCalls","AgentCdrRportFilter","AgentCdrReportTable","AgentCdrReport","DailySummaryDateFilter","DailySummaryReportFilter","setDataTotal","TotalCallModal","handleTotalCallClose","answer_time","talk_time","AnsweredCallModal","handleAnsweredCallClose","AbondenedCallModal","handleAbondenedCallClose","TransferCallModal","handleTransferCallClose","transferer","trasfered","OutOfTimeModal","handleOutOfTimeClose","RonaCallModla","handleRonaCallClose","OutCallModal","handleOutCallClose","DailySummaryReportTable","dataTotal","datetime","inboundtime","waitingtime","averageconnection","abondened","transfer","long_time","zdisi","average_abondened_waiting","rona","outbound_time","average_outbound_time","inboundTime","longestTime","outOfTime","averageAbondenedWaiting","outboundTotalTime","outboundAverageTime","totalCallModalOpen","setTotalCallOpen","totalCallDate","setTotalCallDate","handleTotalCallClick","answeredCallModalOpen","setAnsweredCallOpen","answeredCallDate","setAnsweredCallDate","handleAnsweredCallClick","abondenedCallModalOpen","setAbondenedCallOpen","abondenedCallDate","setAbondenedCallDate","handleAbondenedCallClick","transferCallModalOpen","setTransferCallOpen","transferCallDate","setTransferCallDate","handleTransferCallClick","outOfTimeModalOpen","setOutOfTimeModalOpen","outOfTimeDate","setOutOfTimeDate","handleOutOfTimeClick","ronaCallModalOpen","setRonaCallOpen","ronaCallDate","setRonaCallDate","handleRonaCallClick","outCallModalOpen","setOutCallOpen","outCallDate","setOutCallDate","handleOutCallClick","DailySumaryReport","InternalSummaryDateFilter","InternalsSummaryReportFilter","seletAgent","setSelectAgent","marginBlock","InternalsSummaryReportTable","selectedAgent","setSelectedAgent","modalOpen","setModalOpen","handleOpenModal","handleCloseModal","longestCalleds","setLongestCalleds","longestCallers","setLongestCallers","longestCalledAmount","setLongestAmount","longestCallerAmount","setLongestCallerAmount","longestBreakTime","setLongestBreakTime","total_inbound","answered_inbound","unanswered_inbound","total_outbound","answered_outbound","unanswered_outbound","ArrowBack","components","GridToolbarFilterButton","en_uzun_aranan_numara","en_uzun_aranan_süre","en_uzun_arayan_numara","en_cok_aranan_numara","en_cok_arayan_numara","InternalsSummaryReport","setTotalData","setResponseTotalSummary","CallLog2CallDetail","detailContainerStyle","setTotalTime","ms","totalRingTime","setTotalRingTime","totalTalkTime","setTotalTalkTime","tempRingTime","tempTalkTime","callers","calleds","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","px","CallLog2Table","totalData","responseTotalSummary","Clear","not_answered","totalduration","averageduration","CallLog2","QualityReportDateFilter","QualityFilters","setFiltered","agentNo","setAgentNo","setScore","filtered","ani","toLowerCase","timeofinsertion","multiple","MenuProps","renderValue","selected","gap","QualityTable","QualityReport","CallTransferReportDateFilter","CallTransferReport","BreaksChangeBreakNameModal","selectedBreakName","handleBreakNameModalClose","newName","setNewName","rep","BreaksChangeBreakTimeModal","logouttype","period","handleBreakTimeModalClose","newTime","setNewTime","EditBreaks","breaks","setBreaks","breakNameModalopen","setBreakNameModalOpen","selectedBreakId","setSelectedBreakId","setSelectedBreakName","handleClickName","breakTimeModalopen","setBreakTimeModalOpen","selectedLogoutType","setSelectedLogoutType","selectedBreakTime","setSelectedBreakTime","handleClickTime","logoutType","mola","molaAdı","iddn","UserDepartmans","deps","setDeps","userOwnedDeps","setUserOwnedDeps","selectedUserId","setSelectedUserId","tempArr","resArr","department_id","dep","Checkbox","handleCheckboxClick","AddUserModal","addHandleClose","setUserName","showPassword","setShowPassword","userType","setUserType","m","htmlFor","OutlinedInput","endAdornment","InputAdornment","VisibilityOff","UpdateUserModal","updateHandleClose","selectedUser","UserTable","addModal","setAddModal","updateModal","setUpdateModal","handleClickEdit","res1","UserSettings","AddTagModal","setReloadTags","departments","setDepartments","setDepId","setDepName","tagName","setTagName","departmentName","find","prev","UpdateTagModal","selectedTag","department","tagtypes_id","TagTable","reloadTags","setSelectedTag","DepartmentQueues","depOwnedQueues","setDepOwnedQueues","selectedDepId","setSelectedDepId","queue_id","AddDepartmanModal","UpdateDepartmanModal","selectedDep","DepartmantTable","setSelectedDep","DepartmansSettigns","Routes","CallLog","DidReport","App","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1b4e3cf.chunk.js","sourcesContent":["import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  initialURL: '/',\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return { ...state, error: '', message: '', loading: true };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return { ...state, error: '', loading: false, message: action.payload };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return { ...state, loading: false, message: '', error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SHOW_MESSAGE = 'show_message';\r\nexport const HIDE_MESSAGE = 'hide_message';\r\nexport const FETCH_START = 'fetch_start';\r\nexport const FETCH_SUCCESS = 'fetch_success';\r\nexport const FETCH_ERROR = 'fetch_error';\r\n\r\nexport const UPDATE_AUTH_USER = 'update_auth_user';\r\nexport const UPDATE_LOAD_USER = 'update_load_user';\r\nexport const SEND_FORGET_PASSWORD_EMAIL = 'send_forget_password_email';\r\nexport const SIGNIN_GOOGLE_USER_SUCCESS = 'signin_google_user_success';\r\nexport const SIGNIN_FACEBOOK_USER_SUCCESS = 'signin_facebook_user_success';\r\nexport const SIGNIN_TWITTER_USER_SUCCESS = 'signin_twitter_user_success';\r\nexport const SIGNIN_GITHUB_USER_SUCCESS = 'signin_github_user_SUCCESS';\r\nexport const SIGNIN_USER_SUCCESS = 'signin_user_success';\r\nexport const SIGNOUT_USER_SUCCESS = 'signout_user_success';\r\n\r\nexport const SET_DASHBOARD_DATA = 'set_dashboard_data';\r\n\r\nexport const SET_TASK_CURRENT_USER = 'set_task_current_user';\r\nexport const SET_TASKS_DATA = 'set_tasks_data';\r\nexport const SET_TASK_LIST_DATA = 'set_task_list_data';\r\nexport const ADD_TASK = 'add_task';\r\nexport const DELETE_TASK = 'delete_task';\r\nexport const UPDATE_TASK = 'update_task';\r\nexport const SET_FILTER_DATA = 'set_filter_data';\r\nexport const ADD_TASK_LIST = 'add_task_list';\r\nexport const UPDATE_TASK_LIST = 'update_task_list';\r\nexport const DELETE_TASK_LIST = 'delete_task_list';\r\nexport const SET_TASK_DETAIL = 'set_task_detail';\r\nexport const SEND_MESSAGE = 'send_message';\r\nexport const TOGGLE_SIDEBAR_COLLAPSED = 'toggle_sidebar_collapsed';\r\nexport const GET_TASKS_COUNTS = 'get_tasks_counts';\r\n\r\n//mail app\r\nexport const GET_LABELS_LIST = 'get_labels_list';\r\nexport const GET_CONNECTIONS_LIST = 'get_connections_list';\r\nexport const GET_MAILS_LIST = 'get_mails_list';\r\nexport const UPDATE_MAIL_FOLDER = 'update_mail_folder';\r\nexport const UPDATE_MAIL_LABEL = 'upade_mail_label';\r\nexport const UPDATE_FAVORITE_STATUS = 'update_favorite_status';\r\nexport const UPDATE_READ_STATUS = 'update_read_status';\r\nexport const UPDATE_IMPORTANT_STATUS = 'update_important_status';\r\nexport const COMPOSE_MAIL = 'compose_mail';\r\nexport const SET_FILTER_TYPE = 'set_filter_type';\r\nexport const GET_SELECTED_MAIL = 'GET_SELECTED_MAIL';\r\nexport const UPDATE_SELECTED_MAIL = 'update_selected_mail';\r\nexport const NULLIFY_SELECTED_MAIL = 'nullify_selected_mail';\r\nexport const REPLY_TO_MAIL = 'reply_to_mail';\r\nexport const GET_MAIL_COUNTS = 'get_mail_count';\r\nexport const ADD_LABEL = 'add_label';\r\nexport const ADD_CONNECTION = 'add_connection';\r\nexport const REMOVE_CONNECTION = 'remove_connection';\r\n\r\nexport const SET_CHAT_USERS = 'set_chat_users';\r\nexport const SET_CONTACT_USERS = 'set_contact_users';\r\nexport const SET_CURRENT_USER = 'set_current_user';\r\nexport const SET_CONVERSATION_DATA = 'set_conversation_data';\r\nexport const SEND_NEW_CHAT_MESSAGE = 'send_new_chat_message';\r\nexport const SEND_NEW_MEDIA_MESSAGE = 'send_new_media_message';\r\n\r\n//Contact App\r\nexport const GET_CONTACTS_LIST = 'get_contacts_list';\r\nexport const SET_CURRENT_CONTACT = 'set_current_contact';\r\nexport const CREATE_CONTACT = 'create_contact';\r\nexport const UPDATE_STARRED_STATUS = 'update_starred_status';\r\nexport const DELETE_CONTACT = 'delete_contact';\r\nexport const UPDATE_CONTACT_LABEL = 'update_contact_label';\r\nexport const UPDATE_CONTACT = 'update_contact';\r\nexport const GET_CONTACT_COUNTS = 'get_contact_counts';\r\nexport const UPDATE_LABEL_ITEM = 'update_label_item';\r\nexport const DELETE_LABEL_ITEM = 'delete_label_item';\r\n\r\nexport const GET_USER_DETAIL = 'get_user_detail';\r\nexport const GET_FEED_POSTS = 'get_feed_posts';\r\nexport const CREATE_POST = 'create_post';\r\nexport const UPDATE_POST = 'update_post';\r\n\r\n// Users Module\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const DELETE_BULK_USERS = 'DELETE_BULK_USERS';\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  authUser: null,\r\n  loadUser: false,\r\n  send_forget_password_email: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loadUser: true,\r\n      };\r\n    }\r\n    case UPDATE_LOAD_USER: {\r\n      return {\r\n        ...state,\r\n        loadUser: action.payload,\r\n      };\r\n    }\r\n    case SEND_FORGET_PASSWORD_EMAIL: {\r\n      return {\r\n        ...state,\r\n        send_forget_password_email: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport Common from './Common';\r\nimport Auth from './Auth';\r\n\r\nexport default history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    common: Common,\r\n    auth: Auth,\r\n  });\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport reducers from '../reducers';\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const store = createStore(reducers(history), initialState, bindMiddleware([routeMiddleware, thunk]));\r\n  return store;\r\n}\r\nexport default configureStore;\r\nexport { history };\r\n","import { alpha, makeStyles, darken } from '@material-ui/core/styles';\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nlet paddingClasses = {};\r\nlet marginClasses = {};\r\nfor (let count = 1; count <= 8; count++) {\r\n  paddingClasses['.pt-' + count] = { paddingTop: count * 4 + 'px !important' };\r\n  paddingClasses['.pb-' + count] = { paddingBottom: count * 4 + 'px !important' };\r\n  paddingClasses['.pl-' + count] = { paddingLeft: count * 4 + 'px !important' };\r\n  paddingClasses['.pr-' + count] = { paddingRight: count * 4 + 'px !important' };\r\n  marginClasses[`.ml-${count}`] = { marginLeft: `${count * 4}px !important` };\r\n  marginClasses[`.mr-${count}`] = { marginRight: `${count * 4}px !important` };\r\n  marginClasses[`.mt-${count}`] = { marginTop: `${count * 4}px !important` };\r\n  marginClasses[`.mb-${count}`] = { marginBottom: `${count * 4}px !important` };\r\n}\r\n\r\nconst globalStyles = makeStyles(theme => ({\r\n  breakpoints,\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      '&:hover,&:focus': {\r\n        textDecoration: 'none',\r\n      },\r\n      '&.disable-link': {\r\n        pointerEvents: 'none',\r\n        cursor: 'default',\r\n        [theme.breakpoints.down('xs')]: {\r\n          pointerEvents: 'inherit',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n    },\r\n    '.pointer': {\r\n      cursor: 'pointer',\r\n    },\r\n    '.rounded': {\r\n      borderRadius: '50%',\r\n    },\r\n    '.Cmt-table-responsive': {\r\n      minHeight: '.01%',\r\n      overflowX: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n        marginBottom: 15,\r\n        overflowY: 'hidden',\r\n        border: `1px solid ${theme.palette.borderColor.main}`,\r\n        '& > table': {\r\n          marginBottom: 0,\r\n          '& > thead > tr > th': {\r\n            paddingTop: 8,\r\n          },\r\n          '& > thead > tr > th, > tbody > tr > th, > tfoot > tr > th, thead > tr > td, tbody > tr > td, tfoot > tr > td': {\r\n            whiteSpace: 'nowrap',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '.dropzone': {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(10, 5),\r\n      border: `2px dashed ${theme.palette.borderColor.main}`,\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default,\r\n      outline: 'none',\r\n      transition: 'border .24s ease-in-out',\r\n    },\r\n    '.swal2-shown .swal2-container': {\r\n      zIndex: 1104,\r\n    },\r\n    '.swal2-container .swal2-popup, .swal2-container .swal2-popup.swal2-toast': {\r\n      backgroundColor: theme.palette.popupColor.main,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-content, .swal2-container .swal2-title': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-footer a': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '.swal2-container .swal2-close:focus': {\r\n      outline: 'none',\r\n    },\r\n    // React Big Calendar\r\n    '.rbc-calendar': {\r\n      flex: 1,\r\n      minHeight: 'calc(100vh - 200px)',\r\n      [theme.breakpoints.down('xs')]: {\r\n        minHeight: 400,\r\n      },\r\n      [theme.breakpoints.down(710)]: {\r\n        '& .rbc-toolbar': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexWrap: 'nowrap',\r\n          alignItems: 'flex-start',\r\n          '& .rbc-toolbar-label': {\r\n            margin: '8px 0',\r\n            padding: 0,\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down(500)]: {\r\n        '& .rbc-toolbar': {\r\n          fontSize: 12,\r\n          '& button': {\r\n            padding: '5px 10px',\r\n          },\r\n        },\r\n      },\r\n      '& .rbc-event': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        minHeight: 50,\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      '& .rbc-event.rbc-selected': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.3),\r\n      },\r\n      '& .rbc-slot-selection': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.7),\r\n      },\r\n      '& .rbc-toolbar button:active, & .rbc-toolbar button.rbc-active': {\r\n        color: theme.palette.common.white,\r\n        backgroundImage: 'none',\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button:active:hover, & .rbc-toolbar button.rbc-active:hover, & .rbc-toolbar button:active:focus, & .rbc-toolbar button.rbc-active:focus': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n      '& .rbc-toolbar button:focus, & .rbc-toolbar button:hover': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-month-row': {\r\n        minHeight: 100,\r\n      },\r\n      '& .rbc-off-range-bg': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      },\r\n    },\r\n    ...paddingClasses,\r\n    ...marginClasses,\r\n  },\r\n}));\r\n\r\nexport default globalStyles;\r\n","export const DRAWER_BREAK_POINT = {\r\n  SX: 'sx',\r\n  SM: 'sm',\r\n  MD: 'md',\r\n};\r\n\r\nexport const HEADER_TYPE = {\r\n  FIXED: 'fixed',\r\n  STATIC: 'static',\r\n};\r\n\r\nexport const SIDEBAR_TYPE = {\r\n  FULL: 'full',\r\n  MINI: 'mini',\r\n  DRAWER: 'drawer',\r\n};\r\nexport const Fonts = {\r\n  PRIMARY: 'Normal',\r\n};\r\n\r\nexport const THEME_TYPES = {\r\n  DARK: 'dark',\r\n  SEMI_DARK: 'semi-dark',\r\n  LIGHT: 'light',\r\n};\r\n\r\nexport const LAYOUT_STYLES = {\r\n  BOXED: 'boxed',\r\n  FULL_WIDTH: 'full-width',\r\n  FRAMED: 'framed',\r\n};\r\n\r\nexport const LAYOUT_TYPES = {\r\n  VERTICAL_DEFAULT: 'vertical-default',\r\n  VERTICAL_MINIMAL: 'vertical-minimal',\r\n  VERTICAL_MINIMAL_NO_HEADER: 'vertical-minimal-no-header',\r\n  VERTICAL_MODERN_SIDEBAR: 'vertical-modern-sidebar',\r\n  HORIZONTAL_DEFAULT: 'horizontal-default',\r\n  HORIZONTAL_DARK: 'horizontal-dark',\r\n  HORIZONTAL_MINIMAL: 'horizontal-minimal',\r\n  HORIZONTAL_TOP_MENU: 'horizontal-top-menu',\r\n};\r\n\r\nexport const SIDEBAR_WIDTH = {\r\n  SMALL: 280,\r\n  DEFAULT: 304,\r\n  WIDE: 330,\r\n};\r\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\nimport { Fonts } from '../@jumbo/constants/ThemeOptions';\r\nimport { indigo, pink } from '@material-ui/core/colors';\r\n\r\nconst breakpoints = createBreakpoints({\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920,\r\n  },\r\n});\r\n\r\nconst defaultTheme = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  spacing: 4,\r\n  direction: 'ltr',\r\n  palette: {\r\n    type: 'light',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n      dark: '#020202',\r\n    },\r\n    primary: indigo,\r\n    secondary: pink,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    btn: {\r\n      hover: 'rgba(0, 0, 0, 0.08)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n  typography: {\r\n    fontFamily: Fonts.PRIMARY,\r\n    fontWeightExtraLight: 200,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightBold: 'bold',\r\n    fontWeightExtraBold: 800,\r\n  },\r\n  overrides: {\r\n    MuiTypography: {\r\n      h1: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 22,\r\n        },\r\n      },\r\n      h2: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n      h3: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 18,\r\n        },\r\n      },\r\n      h4: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n      },\r\n      h5: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n      },\r\n      h6: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.5,\r\n      },\r\n      subtitle1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.15,\r\n      },\r\n      subtitle2: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.1,\r\n      },\r\n      body1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.5,\r\n      },\r\n      body2: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.25,\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1.25,\r\n        fontSize: 13,\r\n      },\r\n    },\r\n    MuiToggleButton: {\r\n      root: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiCardLg: {\r\n      root: {\r\n        borderRadius: 10,\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: 4,\r\n        boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n      },\r\n    },\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default defaultTheme;\r\n","import defaultTheme from '../../../../theme/defaultTheme';\r\nimport {\r\n  DRAWER_BREAK_POINT,\r\n  HEADER_TYPE,\r\n  LAYOUT_STYLES,\r\n  LAYOUT_TYPES,\r\n  SIDEBAR_TYPE,\r\n  SIDEBAR_WIDTH,\r\n  THEME_TYPES,\r\n} from '../../../constants/ThemeOptions';\r\nconst getLang = () => {\r\n  var defaultLanguage = localStorage.getItem(\"language\") || navigator.language;\r\n  switch (defaultLanguage) {\r\n    case 'tr-TR':\r\n    case 'tr':\r\n    case 'turkish':\r\n      return {\r\n        languageId: 'turkish',\r\n          locale: 'tr',\r\n          name: 'Türkçe',\r\n          icon: 'tr',\r\n      }\r\n      case 'en-US':\r\n      case 'en':\r\n      case 'en-GB':\r\n      case 'english':\r\n        return {\r\n          languageId: 'english',\r\n            locale: 'en',\r\n            name: 'English',\r\n            icon: 'en',\r\n        }\r\n        case 'de-DE':\r\n        case 'de':\r\n        case 'de-AT':\r\n        case 'de-CH':\r\n        case 'de-LI':\r\n        case 'deutsche':\r\n          return {\r\n            languageId: 'deutsche',\r\n              locale: 'de',\r\n              name: 'Deutsche',\r\n              icon: 'de',\r\n          }\r\n          case 'nl':\r\n          case 'dutch':\r\n            return {\r\n              languageId: 'dutch',\r\n                locale: 'nl',\r\n                name: 'Dutch',\r\n                icon: 'nl',\r\n            }\r\n            default:\r\n              return {\r\n                languageId: 'turkish',\r\n                  locale: 'tr',\r\n                  name: 'Turkish',\r\n                  icon: 'tr',\r\n              }\r\n  }\r\n}\r\nvar defaultLng = getLang();\r\nexport default {\r\n  theme: defaultTheme,\r\n  defaultLng,\r\n  layout: LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR,\r\n  layoutType: LAYOUT_STYLES.FULL_WIDTH,\r\n  themeType: THEME_TYPES.LIGHT,\r\n  drawerBreakPoint: DRAWER_BREAK_POINT.MD,\r\n  headerType: HEADER_TYPE.FIXED,\r\n  sidebarType: SIDEBAR_TYPE.FULL,\r\n  isSidebarFixed: true,\r\n  sidebarWidth: SIDEBAR_WIDTH.DEFAULT,\r\n  showFooter: false,\r\n};","import React from 'react';\r\nimport defaultContext from './defaultContext';\r\n\r\nconst AppContext = React.createContext({\r\n  locale: defaultContext.defaultLng,\r\n  setLocale: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import enMessages from '../locales/en_EN.json';\r\n\r\nconst enLang = {\r\n  messages: {\r\n    ...enMessages,\r\n  },\r\n  locale: 'en-EN',\r\n};\r\nexport default enLang;\r\n","import saMessages from '../locales/tr_TR.json';\r\n\r\nconst saLang = {\r\n  messages: {\r\n    ...saMessages,\r\n  },\r\n  locale: 'tr-TR',\r\n};\r\nexport default saLang;\r\n","import nlMessages from '../locales/nl_NL.json';\r\n\r\nconst nlLang = {\r\n  messages: {\r\n    ...nlMessages,\r\n  },\r\n  locale: 'nl-NL',\r\n};\r\nexport default nlLang;\r\n","import enLang from './entries/en_EN';\r\nimport trLang from './entries/tr_TR';\r\nimport nlLang from './entries/nl_NL';\r\nimport deLang from './entries/de_DE';\r\nconst AppLocale = {\r\n  en: enLang,\r\n  tr: trLang,\r\n  de: deLang,\r\n  nl: nlLang,\r\n};\r\n\r\nexport default AppLocale;","import deMessages from '../locales/de_DE.json';\r\n\r\nconst deLang = {\r\n  messages: {\r\n    ...deMessages,\r\n  },\r\n  locale: 'de-DE',\r\n};\r\nexport default deLang;\r\n","import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const fetchSuccess = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_SUCCESS,\r\n      payload: message || '',\r\n    });\r\n  };\r\n};\r\nexport const fetchError = error => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_ERROR,\r\n      payload: error,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStart = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_START,\r\n    });\r\n  };\r\n};\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const setAuthUser = user => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_AUTH_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLoadUser = loading => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_LOAD_USER,\r\n      payload: loading,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setForgetPassMailSent = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SEND_FORGET_PASSWORD_EMAIL,\r\n      payload: status,\r\n    });\r\n  };\r\n};\r\n","/*import Firebase from './firebase';\r\nimport JWTAuth from './jwt';*/\r\nimport BasicAuth from './Basic';\r\n\r\nexport const AuhMethods = {\r\n  /*firebase: Firebase,\r\n  jwtAuth: JWTAuth,*/\r\n  basic: BasicAuth,\r\n};\r\n","import { fetchError, fetchStart, fetchSuccess } from '../../../redux/actions';\r\nimport { setAuthUser, setForgetPassMailSent, updateLoadUser } from '../../../redux/actions/Auth';\r\nimport React from 'react';\r\n\r\nexport const BasicAuth = {\r\n  onLogin: ({ email, password }) => {\r\n    return dispatch => {\r\n      try {\r\n        dispatch(fetchStart());\r\n\r\n        setTimeout(() => {\r\n          const user = { name: 'Admin', email: email, password: password };\r\n          dispatch(fetchSuccess());\r\n          dispatch(setAuthUser(user));\r\n        }, 300);\r\n      } catch (error) {\r\n        dispatch(fetchError(error.message));\r\n      }\r\n    };\r\n  },\r\n  onLogout: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      dispatch(fetchSuccess());\r\n      localStorage.removeItem('login');\r\n      localStorage.removeItem('role');\r\n      localStorage.removeItem('agent');\r\n\r\n      dispatch(setAuthUser(null));\r\n    };\r\n  },\r\n\r\n  getAuthUser: (loaded = false) => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n      dispatch(updateLoadUser(loaded));\r\n\r\n      setTimeout(() => {\r\n        dispatch(fetchSuccess());\r\n        dispatch(setAuthUser(JSON.parse(localStorage.getItem('user'))));\r\n      }, 300);\r\n    };\r\n  },\r\n\r\n  onForgotPassword: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(true));\r\n        dispatch(fetchSuccess());\r\n      }, 300);\r\n    };\r\n  },\r\n  getSocialMediaIcons: () => {\r\n    return <React.Fragment> </React.Fragment>;\r\n  },\r\n};\r\n\r\nexport default BasicAuth;\r\n","import React from 'react';\r\n\r\n//todo set initial value of LayoutContextProvider\r\nconst LayoutContext = React.createContext();\r\n\r\nexport default LayoutContext;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const location = useLocation();\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false); //for both drawer and mini-sidebar\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  const [miniSidebarWidth, setMiniSidebarWidth] = useState(props.miniSidebarWidth ? props.miniSidebarWidth : 0);\r\n  const [actionSidebarWidth, setActionSidebarWidth] = useState(props.actionSidebarWidth ? props.actionSidebarWidth : 0);\r\n\r\n  useEffect(() => {\r\n    sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n    headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setLayoutStyle(params.get('layout-style'));\r\n    }\r\n  }, [location.search, props.headerType, props.isSidebarFixed]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      miniSidebarWidth,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n      setMiniSidebarWidth,\r\n      actionSidebarWidth,\r\n      setActionSidebarWidth,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      miniSidebarWidth,\r\n      actionSidebarWidth,\r\n      props.drawerBreakPoint,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.01s ease',\r\n    '&.Cmt-fixedHeaderLayout': {\r\n      '& $appMain': {\r\n        position: 'relative',\r\n        paddingTop: 72,\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingTop: '64px !important',\r\n        },\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: props.sidebarWidth,\r\n        zIndex: 9,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          left: 0,\r\n        },\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-fullFixedHeaderLayout': {\r\n      marginTop: 72,\r\n      height: 'calc(100vh - 72px)',\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: 64,\r\n        height: 'calc(100vh - 64px)',\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        width: '100%',\r\n      },\r\n    },\r\n    '&.Cmt-sidebar-fixed': {\r\n      '& .Cmt-sidebar': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 999,\r\n      },\r\n      '&.Cmt-drawer-sidebar': {\r\n        '& .Cmt-sidebar': {\r\n          position: 'relative',\r\n        },\r\n      },\r\n      '& .Cmt-actionSidebarWrapper': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 1103,\r\n        '& .Cmt-sidebar': {\r\n          position: 'static',\r\n        },\r\n      },\r\n    },\r\n    '& .Cmt-header .Cmt-toggle-menu': {\r\n      display: 'none',\r\n    },\r\n    '&.Cmt-miniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.miniSidebarWidth,\r\n        width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n        transition: 'all 0.01s ease',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.miniSidebarWidth + 20,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.miniSidebarWidth + 50,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-miniLayout': {\r\n      '& .Cmt-sidebar': {\r\n        width: props.miniSidebarWidth,\r\n      },\r\n    },\r\n    '&.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.sidebarWidth,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-drawerLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: 0,\r\n        width: '100%',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: 20,\r\n            width: 'calc(100% - 57px)',\r\n            right: 37,\r\n            top: 20,\r\n            borderTopLeftRadius: 12,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: 50,\r\n            width: 'calc(100% - 117px)',\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      '& .Cmt-header .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }),\r\n  appMain: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: `calc(100% - ${props.sidebarWidth}px)`,\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth,\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.miniSidebarWidth,\r\n    },\r\n    '.Cmt-drawerLayout &': {\r\n      width: '100%',\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-drawerLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: 0,\r\n    },\r\n    '.Cmt-fullMiniLayout &': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      width: `calc(100% - ${props.sidebarWidth + props.actionSidebarWidth}px)`,\r\n    },\r\n    '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth + props.actionSidebarWidth,\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      width: '100%',\r\n      '.Cmt-miniLayout &': {\r\n        width: '100%',\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: 0,\r\n      },\r\n      '.Cmt-drawerLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-fullMiniLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-modernLayout &': {\r\n        width: `100% !important`,\r\n      },\r\n      '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: '0 !important',\r\n      },\r\n    },\r\n  }),\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '.Cmt-sidebar-fixed &': {\r\n      flexDirection: 'column',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            position: 'sticky',\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout $appMain': {\r\n            paddingTop: 0,\r\n          },\r\n          '&.Cmt-miniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-drawerLayout.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, useContext, useEffect, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport useStyles from './MainContainer.style';\r\nimport { HEADER_TYPE } from '../../../@jumbo/constants/ThemeOptions';\r\n\r\nconst MainContainer = ({ header, sidebar, footer, children, className, ...rest }) => {\r\n  const {\r\n    headerType,\r\n    footerType,\r\n    sidebarType,\r\n    isSidebarOpen,\r\n    isSidebarFixed,\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  } = useContext(LayoutContext);\r\n\r\n  const theme = useTheme();\r\n  const isDrawer = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const [headerClasses, setHeaderClasses] = useState('');\r\n  const [footerClasses, setFooterClasses] = useState('');\r\n  const [sidebarClasses, setSidebarClasses] = useState('');\r\n\r\n  const classes = useStyles({\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!header) setHeaderClasses('');\r\n    else if (headerType === HEADER_TYPE.FIXED) setHeaderClasses('Cmt-fixedHeaderLayout');\r\n    else setHeaderClasses('');\r\n  }, [header, headerType]);\r\n\r\n  useEffect(() => {\r\n    if (!footer) setFooterClasses('');\r\n    else if (footerType === 'fixed') setFooterClasses('Cmt-FixedFooterLayout');\r\n    else setFooterClasses('');\r\n  }, [footer, footerType]);\r\n\r\n  useEffect(() => {\r\n    const newClasses = [];\r\n    if (!sidebar) newClasses.push('');\r\n    else if (sidebarType === 'drawer' || isDrawer) newClasses.push('Cmt-drawerLayout');\r\n    else if (sidebarType === 'mini') newClasses.push(isSidebarOpen ? 'Cmt-fullMiniLayout' : 'Cmt-miniLayout');\r\n\r\n    if (isSidebarFixed) newClasses.push('Cmt-sidebar-fixed');\r\n\r\n    setSidebarClasses(clsx(newClasses));\r\n  }, [sidebarType, isSidebarOpen, isDrawer, isSidebarFixed, sidebar]);\r\n\r\n  return (\r\n    <Box className={clsx(classes.appRoot, headerClasses, sidebarClasses, footerClasses, className)} {...rest}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {header && cloneElement(header, { type: headerType })}\r\n            {children}\r\n            {footer && cloneElement(footer, { type: footerType })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\n//todo set initial value of SidebarThemeContext\r\nconst SidebarThemeContext = React.createContext();\r\n\r\nexport default SidebarThemeContext;\r\n","const pxToRem = (target, context = '10px') => {\r\n  return (target / context) * '1rem';\r\n};\r\n\r\nconst componentColors = [\r\n  'amber',\r\n  'brown',\r\n  'orange',\r\n  'purple',\r\n  'primary',\r\n  'red',\r\n  'green',\r\n  'blue',\r\n  'grey',\r\n  'yellow',\r\n  'secondary',\r\n];\r\n\r\nconst getBackgroundStyle = (backgroundColor, backgroundImage, gradientDirection) => {\r\n  if (backgroundImage)\r\n    return {\r\n      backgroundImage: `url(${backgroundImage})`,\r\n      backgroundRepeat: `no-repeat`,\r\n      backgroundPosition: `center center`,\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n  if (typeof backgroundColor === 'string' || (Array.isArray(backgroundColor) && backgroundColor.length === 1)) {\r\n    return { backgroundColor: backgroundColor.toString() };\r\n  }\r\n\r\n  if (Array.isArray(backgroundColor) && backgroundColor.length > 1) {\r\n    const [firstColor] = backgroundColor[0].split(' ');\r\n    return {\r\n      backgroundColor: firstColor,\r\n      backgroundImage: gradientDirection\r\n        ? `linear-gradient(${gradientDirection}, ${backgroundColor.join(', ')})`\r\n        : `linear-gradient(${backgroundColor.join(', ')})`,\r\n    };\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getOverLayStyle = overlay => {\r\n  if (overlay.colors) {\r\n    if (typeof overlay.colors === 'string' || (Array.isArray(overlay.colors) && overlay.colors.length === 1)) {\r\n      return {\r\n        backgroundColor: overlay.colors.toString(),\r\n        opacity: overlay.opacity,\r\n      };\r\n    } else if (Array.isArray(overlay.colors) && overlay.colors.length > 1) {\r\n      const [firstColor] = overlay.colors[0].split(' ');\r\n      return {\r\n        backgroundColor: firstColor,\r\n        backgroundImage: overlay.direction\r\n          ? `linear-gradient(${overlay.direction}, ${overlay.colors.join(', ')})`\r\n          : `linear-gradient(${overlay.colors.join(', ')})`,\r\n        opacity: overlay.opacity,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getSeparatorStyle = (separator, topBorder = false) => {\r\n  if (separator.color) {\r\n    const borderWidth = separator.borderWidth ? separator.borderWidth : 1;\r\n    const borderStyle = separator.borderStyle ? separator.borderStyle : 'solid';\r\n\r\n    if (topBorder) {\r\n      return {\r\n        borderTop: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n      };\r\n    }\r\n\r\n    return {\r\n      borderBottom: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst hexToRgba = input => {\r\n  input = input + '';\r\n  input = input.replace('#', '');\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error('input is not a valid hex color.');\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return parseInt(first, 16) + ', ' + parseInt(second, 16) + ', ' + parseInt(last, 16);\r\n};\r\n\r\n/**\r\n * Check if the given url can be found\r\n * in one of the given parent's children\r\n *\r\n * @param parent\r\n * @param url\r\n * @returns {boolean}\r\n */\r\nconst isUrlInChildren = (parent, url) => {\r\n  if (!parent.children) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < parent.children.length; i++) {\r\n    if (parent.children[i].children) {\r\n      if (isUrlInChildren(parent.children[i], url)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (parent.children[i].link === url || url.includes(parent.children[i].link)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { hexToRgba, pxToRem, componentColors, getBackgroundStyle, getOverLayStyle, getSeparatorStyle, isUrlInChildren };\r\n","export const sidebarLightTheme = {\r\n  bgColor: '#fff',\r\n  textColor: 'rgba(0, 0, 0, 0.6)',\r\n  textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n  textActiveColor: '#3f51b5',\r\n  navHoverBgColor: 'rgb(229, 229, 229)',\r\n  navActiveBgColor: 'rgb(239, 229, 253)',\r\n  borderColor: 'rgba(33, 33, 33, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarSemiDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nconst themeSidebarColor = {\r\n  light: sidebarLightTheme,\r\n  'semi-dark': sidebarSemiDarkTheme,\r\n  dark: sidebarDarkTheme,\r\n};\r\n\r\nexport default themeSidebarColor;\r\n","import React, { useState, useMemo, useEffect, useContext } from 'react';\r\n\r\nimport SidebarThemeContext from './SidebarThemeContext';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../../CmtHelpers/JssHelper';\r\nimport AppContext from '../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport themeSidebarColor from './sidebarThemeColors';\r\n\r\nconst darkThemeSetting = {\r\n  textColor: 'rgba(255, 255, 255, 0.7)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.3)',\r\n  navActiveBgColor: 'green',\r\n  borderColor: 'rgba(255, 255, 255, 0.2)',\r\n};\r\n\r\nconst SidebarThemeProvider = ({ children }) => {\r\n  const { themeType } = useContext(AppContext);\r\n  const [activeTheme, setActiveTheme] = useState({\r\n    ...themeSidebarColor[themeType],\r\n    backgroundColor: '',\r\n    backgroundImage: '',\r\n    gradientDirection: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activeTheme.backgroundImage) {\r\n      if (!activeTheme.backgroundColor) {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...darkThemeSetting,\r\n          backgroundColor: '#000',\r\n        });\r\n      }\r\n    } else {\r\n      //this means no flat and gradient style and no background image\r\n      if (activeTheme.backgroundColor === '#000') {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...themeSidebarColor[themeType],\r\n          backgroundColor: '',\r\n        });\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTheme.backgroundImage]);\r\n\r\n  useEffect(() => {\r\n    if (!activeTheme.backgroundColor && !activeTheme.backgroundImage) {\r\n      setActiveTheme({\r\n        ...themeSidebarColor[themeType],\r\n      });\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [themeType]);\r\n\r\n  const sidebarContextValue = useMemo(() => {\r\n    const backgroundStyle = getBackgroundStyle(\r\n      activeTheme.backgroundColor,\r\n      activeTheme.backgroundImage,\r\n      activeTheme.gradientDirection,\r\n    );\r\n    const overlayStyle = getOverLayStyle({\r\n      colors: activeTheme.backgroundColor,\r\n      opacity: 0.6,\r\n      direction: '180deg',\r\n    });\r\n\r\n    return {\r\n      sidebarTheme: activeTheme,\r\n      backgroundStyle: backgroundStyle,\r\n      overlayStyle: overlayStyle,\r\n      setSidebarTheme: setActiveTheme,\r\n    };\r\n  }, [activeTheme]);\r\n\r\n  return <SidebarThemeContext.Provider value={sidebarContextValue}>{children}</SidebarThemeContext.Provider>;\r\n};\r\n\r\nexport default SidebarThemeProvider;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtVerticalLayout = ({ layoutOptions, children, header, sidebar, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} sidebar={sidebar} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nCmtVerticalLayout.prototype = {\r\n  layoutOptions: PropTypes.object,\r\n};\r\n\r\nCmtVerticalLayout.defaultProps = {\r\n  layoutOptions: {},\r\n};\r\n\r\nexport default CmtVerticalLayout;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { className, children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={clsx(classes.appHeader, className, 'Cmt-header')}>\r\n      {children}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'LayoutHeader',\r\n};\r\nCmtHeader.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n  fullHeader: PropTypes.bool,\r\n};\r\n\r\nexport default CmtHeader;\r\n","import React, { useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst SidebarToggleHandler = ({ children, ...restProps }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" onClick={() => setSidebarOpen(!isSidebarOpen)} {...restProps}>\r\n      {children || <MenuIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\n\r\nconst CmtImage = ({ alt, ...restProps }) => {\r\n  const altValue = alt ? alt : '';\r\n  return <img alt={altValue} {...restProps} />;\r\n};\r\n\r\nexport default CmtImage;\r\n","export const languageData = [\r\n  {\r\n    languageId: 'turkish',\r\n    locale: 'tr',\r\n    name: 'Türkçe',\r\n    icon: 'tr',\r\n  },\r\n  {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'en',\r\n  },\r\n  {\r\n    languageId: 'dutch',\r\n    locale: 'nl',\r\n    name: 'Dutch',\r\n    icon: 'nl',\r\n  },\r\n  {\r\n    languageId: 'deutsche',\r\n    locale: 'de',\r\n    name: 'Deutsche',\r\n    icon: 'de',\r\n  },\r\n];\r\n\r\nexport const flags = {\r\n  tr: '/images/flag/icons8-tr.png',\r\n  en: '/images/flag/icons8-en.png',\r\n  nl: '/images/flag/icons8-nl.png',\r\n  de: '/images/flag/icons8-de.png',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '12px 24px',\r\n    '& .flag': {\r\n      fontSize: 30,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageItem = ({ language, onClick }) => {\r\n  const { locale, name } = language;\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.root, 'pointer')} onClick={() => onClick(language)}>\r\n      <CmtImage src={flags[locale]} />\r\n      <Box ml={3}>{name}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LanguageItem;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    '& .Cmt-card-content': {\r\n      position: 'relative',\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtCard = ({ backgroundColor, backgroundImage, gradientDirection, overlay, className, children, ...cardProps }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    // Checking isValidElement is the safe way and avoids a TS error too.\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={backgroundStyles}\r\n      {...cardProps}>\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtCard.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default CmtCard;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtTitle = ({ content, ...titleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...titleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'h2',\r\n  component: 'div',\r\n  className: null,\r\n};\r\n\r\nexport default CmtTitle;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtSubTitle = ({ content, ...subTitleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...subTitleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtSubTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtSubTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'subtitle1',\r\n  gutterBottom: true,\r\n};\r\n\r\nexport default CmtSubTitle;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headRoot: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 15,\r\n  },\r\n  headerContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\n/**\r\n * @return {null} or CmtContentHead Component\r\n */\r\nfunction CmtContentHead({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  titleStyle,\r\n  subTitleStyle,\r\n  ...restProps\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.headRoot, 'Cmt-content-head')} {...restProps}>\r\n      {avatar && isValidElement(avatar) ? (\r\n        <div className={clsx(classes.avatar, 'Cmt-avatar')}>{avatar}</div>\r\n      ) : (\r\n        icon && <div className={clsx(classes.avatar, 'Cmt-avatar')}>{icon}</div>\r\n      )}\r\n      <div className={clsx(classes.headerContent, 'Cmt-header-content')}>\r\n        {title && <CmtTitle className={clsx(titleStyle, 'Cmt-title')} content={title} {...titleProps} />}\r\n\r\n        {subTitle && <CmtSubTitle className={clsx(subTitleStyle, 'Cmt-sub-title')} content={subTitle} {...subTitleProps} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCmtContentHead.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n  titleStyle: PropTypes.string,\r\n  subTitleStyle: PropTypes.string,\r\n};\r\n\r\nCmtContentHead.defaultProps = {\r\n  icon: null,\r\n  avatar: null,\r\n  title: null,\r\n  subTitle: null,\r\n  titleStyle: null,\r\n  subTitleStyle: null,\r\n  titleProps: { variant: 'h4', component: 'div' },\r\n  subTitleProps: { variant: 'subtitle2', component: 'p', gutterBottom: false },\r\n};\r\n\r\nexport default React.memo(CmtContentHead);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst CmtDropdownMenu = ({ TriggerComponent, items, onItemClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    setMenuItems(items);\r\n  }, [items]);\r\n\r\n  const openMenu = event => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (item, selectedIndex, event) => {\r\n    event.stopPropagation();\r\n    let updatedItem = { ...item };\r\n\r\n    if (item.onClick && typeof item.onClick === 'function') {\r\n      updatedItem = item.onClick(item);\r\n    } else if (onItemClick && typeof onItemClick === 'function') {\r\n      updatedItem = onItemClick(item);\r\n    }\r\n\r\n    if (updatedItem) {\r\n      let hasChange = false;\r\n      const newMenuItems = menuItems.map((item, index) => {\r\n        if (selectedIndex === index) {\r\n          hasChange = true;\r\n          item = updatedItem;\r\n        }\r\n        return item;\r\n      });\r\n\r\n      if (hasChange) setMenuItems(newMenuItems);\r\n    }\r\n\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pointer\">\r\n        <TriggerComponent.type {...TriggerComponent.props} onClick={openMenu} />\r\n      </div>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n        {menuItems.map((item, index) => {\r\n          return (\r\n            <MenuItem key={index} disabled={item.disabled} onClick={event => handleMenuItemClick({ ...item }, index, event)}>\r\n              {item.icon}\r\n              <div className=\"ml-2\">{item.label}</div>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCmtDropdownMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  TriggerComponent: PropTypes.element.isRequired,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nexport default CmtDropdownMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: 24,\r\n    '&.Cmt-separator': {\r\n      ...props.separatorStyles,\r\n      '& + .Cmt-card-content': {\r\n        paddingTop: 24,\r\n      },\r\n    },\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  }),\r\n  headerAlignCenter: props => ({\r\n    paddingLeft: props.contentWidth + 12,\r\n    '& .Cmt-content-head': {\r\n      justifyContent: 'center',\r\n      '& .Cmt-header-content': {\r\n        flex: '0 0 auto',\r\n      },\r\n    },\r\n  }),\r\n  titleStyle: {\r\n    position: 'relative',\r\n  },\r\n  subTitleStyle: {\r\n    marginBottom: 0,\r\n    marginTop: 4,\r\n    fontSize: 12,\r\n    color: theme.palette.text.disabled,\r\n    letterSpacing: 0.4,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  '@keyframes showHide': {\r\n    '0%': {\r\n      animationTimingFunction: 'ease-in',\r\n      opacity: 0,\r\n      transform: 'scale(0)',\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      transform: 'scale(1)',\r\n    },\r\n  },\r\n  actionMenu: {\r\n    '& button': {\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n    },\r\n  },\r\n  actionMenuDefault: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 10,\r\n    '& .Cmt-action-menu-hover': {\r\n      top: '50%',\r\n    },\r\n  },\r\n  actionMenuAbsolute: {\r\n    position: 'relative',\r\n    paddingTop: 40,\r\n    '& .Cmt-action-menu': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      textAlign: 'center',\r\n      transition: 'all 0.25s ease',\r\n    },\r\n  },\r\n  actionMenuHover: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    transition: 'all 0.25s ease',\r\n  },\r\n  showActionMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -20%)',\r\n  },\r\n  hideActionMenu: {\r\n    transform: 'translate(100% , -100%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n  showActionDefaultMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -50%)',\r\n  },\r\n  hideActionDefaultMenu: {\r\n    transform: 'translate(100% , -50%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useImperativeHandle, useState, useEffect } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nimport useStyles from './CmtCardHeader.style';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst ActionsMenu = ({ actions, actionHandler, icon }) => {\r\n  return (\r\n    <CmtDropdownMenu\r\n      TriggerComponent={<IconButton size=\"small\">{icon || <MoreVertIcon />}</IconButton>}\r\n      items={actions}\r\n      onItemClick={actionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nconst CmtCardHeader = React.forwardRef(function CmtCardHeader(props, ref) {\r\n  const {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n    actions,\r\n    actionMenuClassName,\r\n    actionHandleIcon,\r\n    actionHandler,\r\n    actionsPos,\r\n    actionsShowOnHover,\r\n    backgroundColor,\r\n    gradientDirection,\r\n    separator,\r\n    alignCenter,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [showActions, setActionsVisibility] = useState(false);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const contentHeadProps = {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n  };\r\n\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator);\r\n\r\n  const classes = useStyles({ separatorStyles, contentWidth });\r\n\r\n  let showHideActionClass = showActions ? classes.showActionMenu : classes.hideActionMenu;\r\n  if (actionsPos === 'default') {\r\n    showHideActionClass = showActions ? classes.showActionDefaultMenu : classes.hideActionDefaultMenu;\r\n  }\r\n\r\n  const headerRootClasses = alignCenter\r\n    ? clsx(className, classes.headerRoot, classes.headerAlignCenter, separator.color ? 'Cmt-separator' : '')\r\n    : clsx(className, classes.headerRoot, separator.color ? 'Cmt-separator' : '');\r\n\r\n  const menuRootClasses = actionsShowOnHover\r\n    ? clsx(classes.actionMenu, classes.actionMenuHover, 'Cmt-action-menu-hover', showHideActionClass, actionMenuClassName)\r\n    : clsx(classes.actionMenu, 'Cmt-action-menu', actionMenuClassName);\r\n\r\n  const menuRootActionsClasses = actionsShowOnHover\r\n    ? actionsPos === 'default'\r\n      ? classes.actionMenuDefault\r\n      : ''\r\n    : classes.actionMenuDefault;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onHeaderMouseEntered: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(true);\r\n    },\r\n    onHeaderMouseLeft: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(false);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setContentWidth(contentRef.current ? contentRef.current.clientWidth : 0);\r\n  }, [actionsPos, actionsShowOnHover]);\r\n\r\n  return (\r\n    <div className={clsx(headerRootClasses, 'Cmt-header-root')} style={backgroundStyles} {...rest}>\r\n      {(icon || avatar || title || subTitle) && (\r\n        <CmtContentHead titleStyle={classes.titleStyle} subTitleStyle={classes.subTitleStyle} {...contentHeadProps} />\r\n      )}\r\n\r\n      {(actions.length > 0 || children) && (\r\n        <div ref={contentRef} className={clsx(menuRootActionsClasses, 'Cmt-action-default-menu')}>\r\n          {children}\r\n          {actions.length > 0 && (\r\n            <div style={{ marginLeft: '8px' }} className={menuRootClasses}>\r\n              <ActionsMenu actions={actions} actionHandler={actionHandler} icon={actionHandleIcon} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nCmtCardHeader.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actions: PropTypes.array, //example: [{label: \"Close\", icon: \"icon-slug\", onClick: (func optional), ...}, ...]\r\n  actionMenuClassName: PropTypes.string,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionsPos: PropTypes.oneOf(['default', 'top-corner']),\r\n  actionsShowOnHover: PropTypes.bool,\r\n  actionHandler: PropTypes.func,\r\n  alignCenter: PropTypes.bool,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtCardHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  actions: [],\r\n  actionsPos: 'default',\r\n  actionsShowOnHover: false,\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n  alignCenter: false,\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n  className: '',\r\n};\r\n\r\nexport default CmtCardHeader;\r\n","import React, { useContext } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CircularProgress, makeStyles } from '@material-ui/core';\r\nimport SidebarThemeContext from '../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  listFooterLoaderRoot: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: 'center',\r\n    padding: 8,\r\n    borderTop: props => `1px solid ${props.sidebarTheme.borderColor}`,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst ListFooter = ({ loading, footerText }) => {\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  return loading ? (\r\n    <div className={classes.listFooterLoaderRoot}>\r\n      <CircularProgress size={16} />\r\n      <span className=\"ml-2\">Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nListFooter.prototype = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n\r\nexport default ListFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  return null;\r\n};\r\n\r\nconst ListView = ({ renderRow, onEndReached, data, ListFooterComponent, ListEmptyComponent, ...rest }) => {\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <Box {...rest}>\r\n      {data.length > 0 ? data.map((item, index) => renderRow(item, index)) : getEmptyContainer(ListEmptyComponent)}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n\r\nListView.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\n\r\nListView.defaultProps = {\r\n  data: [],\r\n  onEndReached: () => {},\r\n};\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListFooter from './ListFooter';\r\nimport ListView from './ListView';\r\n\r\nconst CmtList = ({ footerProps, ...props }) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={footerProps && <ListFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CmtList;\r\n\r\nCmtList.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\nCmtList.defaultProps = {\r\n  data: [],\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { IconButton, Popover, useTheme } from '@material-ui/core';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport LanguageItem from './LanguageItem';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags, languageData } from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 14,\r\n      paddingBottom: 14,\r\n    },\r\n  },\r\n  perfectScrollbarLanguage: {\r\n    height: 324,\r\n  },\r\n  menuItemRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 205,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageSwitcher = () => {\r\n  const classes = useStyles();\r\n  const { locale, setLocale } = useContext(AppContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'language' : undefined;\r\n\r\n  const switchLanguage = item => {\r\n    window.localStorage.setItem('language', item.languageId);\r\n    setLocale(item);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem('language') !== null) {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === window.localStorage.getItem('language')) {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === 'english') {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    }\r\n  }, [setLocale]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton size=\"small\" onClick={handleClick} data-tut=\"reactour__localization\">\r\n        <CmtImage src={flags[locale.locale]} />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Language\"\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <PerfectScrollbar className={classes.perfectScrollbarLanguage}>\r\n            <CmtList\r\n              data={languageData}\r\n              renderRow={(item, index) => <LanguageItem key={index} language={item} onClick={switchLanguage} />}\r\n            />\r\n          </PerfectScrollbar>\r\n        </CmtCard>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React from 'react';\r\nimport { CardContent, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: () => ({\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardContent = ({ children, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardContent className={clsx(classes.root, 'Cmt-card-content', className)} {...rest}>\r\n      {children}\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default CmtCardContent;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, makeStyles, withWidth } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridContainer: {\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  columnRow: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: `-${props.itemPadding / 2}px`,\r\n  }),\r\n  columnCount: props => ({\r\n    flexGrow: 0,\r\n    maxWidth: `${100 / props.displayColumn}%`,\r\n    flexBasis: `${100 / props.displayColumn}%`,\r\n    padding: `${props.itemPadding / 2}px`,\r\n    boxSizing: 'border-box',\r\n  }),\r\n}));\r\n\r\nconst getColumnCount = (responsive, width, column) => {\r\n  if (responsive) {\r\n    if (width === 'xs') {\r\n      return responsive.xs || column;\r\n    } else if (width === 'sm') {\r\n      return responsive.sm || responsive.xs || column;\r\n    } else if (width === 'md') {\r\n      return responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'lg') {\r\n      return responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'xl') {\r\n      return responsive.xl || responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    }\r\n  } else {\r\n    return column;\r\n  }\r\n};\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) {\r\n    return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) {\r\n    return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GridView = ({\r\n  width,\r\n  column,\r\n  responsive,\r\n  itemPadding,\r\n  renderRow,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  ...rest\r\n}) => {\r\n  const [displayColumn, setDisplayColumn] = useState(column);\r\n  const classes = useStyles({ displayColumn, itemPadding });\r\n\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisplayColumn(getColumnCount(responsive, width, column));\r\n  }, [width, column, responsive]);\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <div className={classes.gridContainer}>\r\n      <Box className={clsx(classes.columnRow, 'Cmt-column-row')} {...rest}>\r\n        {data.length > 0\r\n          ? data.map((item, index) => (\r\n              <div key={index} className={clsx(classes.columnCount, 'Cmt-column-count')}>\r\n                {renderRow(item, index)}\r\n              </div>\r\n            ))\r\n          : null}\r\n      </Box>\r\n      {data.length === 0 ? getEmptyContainer(ListEmptyComponent) : null}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(GridView);\r\nGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  responsive: PropTypes.object,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\nGridView.defaultProps = {\r\n  data: [],\r\n  itemPadding: 0,\r\n  column: 3,\r\n};\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  footerWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '8px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GridFooter = ({ loading, footerText }) => {\r\n  const classes = useStyles();\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.footerWrapper}>\r\n        <CircularProgress size={16} />\r\n        <span className=\"ml-2\">Loading...</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n        <p>{footerText}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nGridFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nGridFooter.defaultProps = {\r\n  loading: false,\r\n  footerText: '',\r\n};\r\n\r\nexport default GridFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GridView from './GridView';\r\nimport GridFooter from './GridFooter';\r\n\r\nconst CmtGridView = ({ column, itemPadding, ListEmptyComponent, data, onEndReached, renderRow, footerProps, ...rest }) => {\r\n  return (\r\n    <GridView\r\n      {...{\r\n        column,\r\n        itemPadding,\r\n        ListEmptyComponent,\r\n        data,\r\n        onEndReached,\r\n        renderRow,\r\n      }}\r\n      {...rest}\r\n      ListFooterComponent={footerProps && <GridFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nCmtGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\n\r\nCmtGridView.defaultProps = {\r\n  itemPadding: 0,\r\n  column: 3,\r\n  data: [],\r\n};\r\n\r\nexport default CmtGridView;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { amber, blue, brown, deepOrange, green, grey, purple, red, yellow } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n  primary: {\r\n    color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  secondary: {\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  amber: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: amber[500],\r\n  },\r\n  brown: {\r\n    color: '#ffffff',\r\n    backgroundColor: brown[500],\r\n  },\r\n  red: {\r\n    color: '#ffffff',\r\n    backgroundColor: red[500],\r\n  },\r\n  green: {\r\n    color: '#ffffff',\r\n    backgroundColor: green[500],\r\n  },\r\n  blue: {\r\n    color: '#ffffff',\r\n    backgroundColor: blue[500],\r\n  },\r\n  yellow: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: yellow[500],\r\n  },\r\n  grey: {\r\n    color: '#ffffff',\r\n    backgroundColor: grey[400],\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n  },\r\n  customSize: props => ({\r\n    height: props.size,\r\n    width: props.size,\r\n  }),\r\n  small: {\r\n    height: 40,\r\n    width: 40,\r\n  },\r\n  medium: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n  large: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { componentColors } from '../CmtHelpers/JssHelper';\r\nimport useStyles from './index.style';\r\n\r\nconst colorOptions = [...componentColors, 'random'];\r\n\r\nconst getRandomColor = () => {\r\n  return colorOptions[Math.floor(Math.random() * 11)];\r\n};\r\n\r\nconst CmtAvatar = React.forwardRef(({ src, alt, className, color, size, phCharLength, children, ...rest }, ref) => {\r\n  const classes = useStyles({ size: typeof size === 'number' ? size : 0 });\r\n  const colorClass = color === 'random' ? classes[getRandomColor()] : classes[color];\r\n  const sizeClass = typeof size === 'number' ? classes.customSize : classes[size];\r\n\r\n  const classNames = clsx(classes.root, colorClass, 'Cmt-avatar-size', sizeClass, className && className);\r\n\r\n  const placeHolderChar = alt && phCharLength > 0 ? alt.substr(0, phCharLength).toUpperCase() : null;\r\n\r\n  return (\r\n    <Avatar ref={ref} className={classNames} src={src} alt={alt} {...rest}>\r\n      {!src && !children && alt ? placeHolderChar : children}\r\n    </Avatar>\r\n  );\r\n});\r\n\r\nCmtAvatar.propTypes = {\r\n  color: PropTypes.oneOf(colorOptions),\r\n  phCharLength: PropTypes.number,\r\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n};\r\n\r\nCmtAvatar.defaultProps = {\r\n  color: 'grey',\r\n  phCharLength: 1,\r\n  size: 'medium',\r\n};\r\n\r\nexport default CmtAvatar;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CmtGridView from '../../../../../@coremat/CmtGridView';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst applications = [\r\n  {\r\n    name: 'Email',\r\n    icon: <EmailIcon style={{ color: '#0795F4' }} />,\r\n    bgColor: '#CDEAFD',\r\n    path: '/apps/mail',\r\n  },\r\n  {\r\n    name: 'Task',\r\n    icon: <CheckCircleIcon style={{ color: '#FF8C00' }} />,\r\n    bgColor: '#FFE8CC',\r\n    path: '/apps/to-do',\r\n  },\r\n  {\r\n    name: 'Contacts',\r\n    icon: <ContactMailIcon style={{ color: '#8DCD03' }} />,\r\n    bgColor: '#E8F5CD',\r\n    path: '/apps/contact',\r\n  },\r\n  {\r\n    name: 'Chating',\r\n    icon: <ChatIcon style={{ color: '#6200EE' }} />,\r\n    bgColor: '#E0CCFC',\r\n    path: '/apps/chat',\r\n  },\r\n];\r\n\r\nconst appItem = (item, index, onClick) => {\r\n  return (\r\n    <Box\r\n      key={index}\r\n      py={2}\r\n      className=\"pointer\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      onClick={() => onClick(item.path)}>\r\n      <CmtAvatar style={{ backgroundColor: item.bgColor }} size={62}>\r\n        {item.icon}\r\n      </CmtAvatar>\r\n      <Box mt={5} fontSize={16} fontWeight=\"bold\" color=\"#666666\">\r\n        {item.name}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst AppsMenu = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const onClickApp = path => {\r\n    history.push(path);\r\n    onClosePopOver();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Applications\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <AppsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Applications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {applications.length > 0 ? (\r\n              <CmtGridView\r\n                itemPadding={24}\r\n                column={2}\r\n                data={applications}\r\n                renderRow={(item, index) => appItem(item, index, onClickApp)}\r\n              />\r\n            ) : (\r\n              <Typography variant=\"body2\">No applications found</Typography>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mediaObject: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n  },\r\n  mediaImageTop: {\r\n    alignSelf: 'flex-start',\r\n    marginTop: 12,\r\n  },\r\n  mediaImageCenter: {\r\n    alignSelf: 'center',\r\n  },\r\n  mediaImageBottom: {\r\n    marginBottom: 12,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rootAvatar: {\r\n    height: 60,\r\n    width: 60,\r\n  },\r\n  mediaBody: {\r\n    flex: '1 1 0%',\r\n  },\r\n  mediaHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  mediaHeaderContent: {\r\n    flex: 1,\r\n  },\r\n  mediaActions: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  mediaFooter: {\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../CmtTypography';\r\nimport useStyles from './index.style';\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst CmtMediaObject = ({\r\n  avatar,\r\n  avatarPos,\r\n  avatarProps,\r\n  onBodyClick,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  actionsComponent,\r\n  content,\r\n  contentProps,\r\n  footerComponent,\r\n  footerComponentProps,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.mediaObject, className, 'Cmt-media-object')} {...rest}>\r\n      {avatar && (\r\n        <div\r\n          className={clsx(\r\n            {\r\n              [classes.mediaImageTop]: avatarPos === 'top',\r\n              [classes.mediaImageCenter]: avatarPos === 'center',\r\n              [classes.mediaImageBottom]: avatarPos === 'bottom',\r\n            },\r\n            'Cmt-media-image',\r\n          )}>\r\n          <Box mr={3} clone>\r\n            {isValidElement(avatar) ? (\r\n              avatar\r\n            ) : (\r\n              <CmtAvatar className={clsx(classes.rootAvatar, 'Cmt-avatar')} src={avatar} {...avatarProps} />\r\n            )}\r\n          </Box>\r\n        </div>\r\n      )}\r\n      <div className={clsx(classes.mediaBody, 'Cmt-media-body')} onClick={onBodyClick}>\r\n        <div className={clsx(classes.mediaHeader, 'Cmt-media-header')}>\r\n          <div className={clsx(classes.mediaHeaderContent, 'Cmt-media-header-content')}>\r\n            {title && <CmtTitle content={title} {...titleProps} />}\r\n            {subTitle && <CmtSubTitle content={subTitle} {...subTitleProps} />}\r\n          </div>\r\n          {actionsComponent && (\r\n            <div className={clsx(classes.mediaActions, 'Cmt-media-actions', 'ml-3')}>{actionsComponent}</div>\r\n          )}\r\n        </div>\r\n        {content && (\r\n          <div className=\"mb-3\">\r\n            {typeof content === 'string' ? <Typography {...contentProps}>{content}</Typography> : content}\r\n          </div>\r\n        )}\r\n        {children}\r\n      </div>\r\n      {footerComponent && (\r\n        <Box ml={3} className={clsx(classes.mediaFooter, 'Cmt-media-footer')} {...footerComponentProps}>\r\n          {footerComponent}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtMediaObject.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarPos: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n  avatarProps: PropTypes.object,\r\n  onBodyClick: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actionsComponent: PropTypes.element,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  contentProps: PropTypes.object,\r\n  footerComponent: PropTypes.element,\r\n  footerComponentProps: PropTypes.object,\r\n  className: PropTypes.func,\r\n};\r\n\r\nCmtMediaObject.defaultProps = {\r\n  avatar: '',\r\n  avatarPos: 'top',\r\n  title: '',\r\n  titleProps: {\r\n    variant: 'h3',\r\n    component: 'div',\r\n  },\r\n  subTitle: '',\r\n  subTitleProps: {\r\n    component: 'span',\r\n  },\r\n  content: '',\r\n  contentProps: {\r\n    component: 'div',\r\n    variant: 'body2',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtMediaObject);\r\n","import moment from 'moment';\r\n\r\nexport const getTodayDate = (format = 'DD.MM.YYYY') => {\r\n  return moment().format(format);\r\n};\r\n\r\nexport const getYesterdayDate = () => {\r\n  return moment()\r\n    .subtract(1, 'day')\r\n    .format('DD.MM.YYYY');\r\n};\r\n\r\nexport const timeFromNow = date => {\r\n  const timestamp = moment(date).format('X');\r\n  const newDate = moment.unix(timestamp);\r\n  return moment(newDate).fromNow();\r\n};\r\n\r\nexport const isToday = date => {\r\n  return moment().isSame(date, 'day');\r\n};\r\n\r\nexport const getNewDate = date_ => {\r\n  var date = new Date(date_);\r\n  var year = date.getFullYear();\r\n  var month = date.getMonth() + 1;\r\n  var dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return dt + '-' + month + '-' + year;\r\n};\r\n\r\nexport const getDateElements = date => {\r\n  const dateString = moment(date).format('dddd, MMMM DD YYYY, hh:mm A');\r\n  const dateSections = dateString.split(',');\r\n  const day = dateSections[0];\r\n  const time = dateSections[2];\r\n  const datePart = dateSections[1].trim().split(' ');\r\n  return {\r\n    day,\r\n    time,\r\n    date: {\r\n      dateString: dateSections[1],\r\n      month: datePart[0],\r\n      date: datePart[1],\r\n      year: datePart[2],\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTime = date => {\r\n  const dateObj = moment(date, 'dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(dateObj).format('LT');\r\n};\r\n\r\nexport const isDatesSame = (dateA, dateB) => {\r\n  return moment(dateA).isSame(dateB, 'day');\r\n};\r\n\r\nexport const isDateAfter = date => {\r\n  const todayDate = getTodayDate('dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(todayDate).isAfter(date);\r\n};\r\n\r\nexport const getDateinDesiredFormat = (date, format) => {\r\n  return moment(date).format(format);\r\n};\r\n\r\nexport const makeJSDateObject = date => {\r\n  if (date) {\r\n    return new Date(date.getTime());\r\n  }\r\n  return date;\r\n};\r\n\r\n/**\r\n * Get Formatted Date\r\n * @param date\r\n * @param format\r\n * @returns {string}\r\n */\r\nexport const getFormattedDate = (date, format = 'YYYY-MM-DD') => {\r\n  if (moment(date, 'YYYY-MM-DD').isValid()) {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\n/**\r\n * Check Is dateTime of Tomorrow\r\n * @param inputDateTime\r\n * @returns {boolean}\r\n */\r\nexport const isTomorrow = inputDateTime => {\r\n  const tomorrow = moment()\r\n    .add(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(tomorrow, 'day');\r\n};\r\n\r\n/**\r\n * Check Is dateTime of Yesterday\r\n * @param inputDateTime\r\n * @returns {boolean}\r\n */\r\nexport const isYesterday = inputDateTime => {\r\n  const yesterday = moment()\r\n    .subtract(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(yesterday, 'day');\r\n};\r\n\r\n/**\r\n * Get Custom Date Time\r\n * @param value\r\n * @param unit\r\n * @param format\r\n * @returns {string}\r\n */\r\nexport const getCustomDateTime = (value = 0, unit = 'days', format = 'YYYY-MM-DD') => {\r\n  if (value === 0) {\r\n    return moment().format(format);\r\n  } else {\r\n    return moment()\r\n      .add(value, unit)\r\n      .format(format);\r\n  }\r\n};\r\n\r\n/**\r\n * Get Custom Date object\r\n * @param value\r\n * @param unit\r\n * @returns Date object\r\n */\r\nexport const getCustomDateObject = (value = 0, unit = 'days') => {\r\n  if (value === 0) {\r\n    return moment();\r\n  } else {\r\n    return moment().add(value, unit);\r\n  }\r\n};\r\n\r\nexport const getDateText = date => {\r\n  if (isToday(date)) {\r\n    return 'Today';\r\n  } else if (isYesterday(date)) {\r\n    return 'Yesterday';\r\n  } else if (isTomorrow(date)) {\r\n    return 'Tomorrow';\r\n  } else {\r\n    return date;\r\n  }\r\n};\r\n\r\nexport const getTimeDiffString = (date, format = 'DD MMM, YYYY', suffix = '') => {\r\n  const postDate = moment(date, 'ddd MMM DD YYYY kk:mm:ss Z');\r\n  const currentDate = moment();\r\n  const duration = moment.duration(currentDate.diff(postDate));\r\n  const minutes = duration.asMinutes() | 0;\r\n  const hours = duration.asHours() | 0;\r\n\r\n  switch (true) {\r\n    case minutes === 0:\r\n      return 'Just now';\r\n    case minutes < 60:\r\n      return `${minutes} min ${suffix}`;\r\n    case hours < 24:\r\n      return `${hours} hours ${suffix}`;\r\n    default:\r\n      return postDate.format(format);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { fade } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    marginBottom: 6,\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst icons = {\r\n  POSTING: <MessageIcon style={{ color: '#836AFF' }} />,\r\n  SHARED_POST: <ShareIcon style={{ color: '#0795F4' }} />,\r\n  INVITATION: <EmailIcon style={{ color: '#00C4B4' }} />,\r\n  BIRTHDAY: <CakeIcon style={{ color: '#EF933C' }} />,\r\n};\r\n\r\nconst getPostContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has recently posted an\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      {item.metaData.post.type}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getSharedContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has shared\r\n    </Box>\r\n    <Box component=\"span\" ml={1} color=\"primary.main\">\r\n      {`${item.metaData.post.owner.name}'s`}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      post.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getBirthdayContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has birthday today.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getInvitationContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.metaData.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has sent you a group invitation for\r\n    </Box>\r\n    <Box component=\"span\" color=\"blue\" ml={1}>\r\n      {item.metaData.group.name}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst NotificationItem = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const getTitle = (item, classes) => {\r\n    switch (item.type) {\r\n      case 'POSTING':\r\n        return getPostContent(item, classes);\r\n      case 'SHARED_POST':\r\n        return getSharedContent(item, classes);\r\n      case 'INVITATION':\r\n        return getInvitationContent(item, classes);\r\n      case 'BIRTHDAY':\r\n        return getBirthdayContent(item, classes);\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getSubTitle = () => (\r\n    <Box display=\"flex\" alignItems=\"center\" fontSize={12} color=\"text.disabled\">\r\n      <Box fontSize={16} clone>\r\n        {icons[item.type]}\r\n      </Box>\r\n      <Box ml={2}>{getDateElements(item.date).time}</Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={getTitle(item, classes)}\r\n        subTitle={getSubTitle()}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, makeStyles, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\n\r\nimport NotificationItem from './NotificationItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &.active': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst headerNotifications = [];\r\n\r\nconst HeaderNotifications = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCounter(0);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Box pr={2}>\r\n      <Tooltip title=\"Notifications\">\r\n        <IconButton\r\n          onClick={onOpenPopOver}\r\n          className={clsx(classes.iconRoot, 'Cmt-appIcon', {\r\n            active: counter > 0,\r\n          })}>\r\n          <Badge badgeContent={counter} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Notifications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {headerNotifications.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList\r\n                  data={headerNotifications}\r\n                  renderRow={(item, index) => <NotificationItem key={index} item={item} />}\r\n                />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No notifications found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderNotifications;\r\n","import React from 'react';\r\nimport { Box, fade } from '@material-ui/core';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-header-content': {\r\n      width: 'calc(100% - 75px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-actions': {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    fontSize: 14,\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer',\r\n  },\r\n  subTitleRoot: {\r\n    letterSpacing: 0.4,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst MessageItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={item.user.name}\r\n        titleProps={{ className: classes.titleRoot }}\r\n        subTitle={item.message}\r\n        subTitleProps={{ className: classes.subTitleRoot }}\r\n        actionsComponent={\r\n          <Box fontSize={12} color=\"text.disabled\">\r\n            {getDateElements(item.date).time}\r\n          </Box>\r\n        }>\r\n        <Box display=\"flex\" alignItems=\"center\" mt={2} fontSize={12} color=\"text.secondary\">\r\n          <Box display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <ReplyIcon />\r\n            </Box>\r\n            <Box ml={2}>Reply</Box>\r\n          </Box>\r\n          <Box ml={4} display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <CheckCircleOutlineIcon />\r\n            </Box>\r\n            <Box ml={2}>Read</Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtMediaObject>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport MessageItem from './MessageItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst messages = [];\r\nconst HeaderMessages = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Messages\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Messages\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {messages.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList data={messages} renderRow={(item, index) => <MessageItem key={index} item={item} />} />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No messages found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderMessages;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst Logo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n  const logoSymbolUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <Hidden xsDown>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoSymbolUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: props => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    marginLeft: props.align === 'right' ? 'auto' : 0,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }),\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&.right': {\r\n      left: 'auto',\r\n      right: 0,\r\n      '& + $inputRoot $inputInput': {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(2, 2, 2, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: 162,\r\n    height: 35,\r\n    borderRadius: 4,\r\n    boxSizing: 'border-box',\r\n    '&:focus': {\r\n      backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n      width: 235,\r\n    },\r\n  },\r\n  searchIconBox: {\r\n    position: 'relative',\r\n    '& $inputInput': {\r\n      width: 35,\r\n      borderRadius: 4,\r\n      paddingLeft: 27,\r\n      '&:focus': {\r\n        width: 150,\r\n        borderRadius: 4,\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 235,\r\n        },\r\n      },\r\n    },\r\n    '& $searchIcon': {\r\n      paddingLeft: 6,\r\n      paddingRight: 6,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useStyles from './index.style';\r\n\r\nconst CmtSearch = ({\r\n  border,\r\n  placeholder,\r\n  iconPosition,\r\n  align,\r\n  onlyIcon,\r\n  containerStyle,\r\n  inputStyle,\r\n  iconStyle,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ align });\r\n  const inputBaseStyle = {\r\n    border: border ? '1px solid' : '0 none',\r\n    ...inputStyle,\r\n  };\r\n  const inputBaseClasses = {\r\n    root: clsx(classes.inputRoot, 'CmtSearch-input-root'),\r\n    input: clsx(classes.inputInput, 'CmtSearch-input'),\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'CmtSearch-root', className)} style={containerStyle}>\r\n      <div className={clsx(classes.search, onlyIcon ? classes.searchIconBox : null)}>\r\n        <div\r\n          className={clsx(classes.searchIcon, 'CmtSearch-icon-wrapper', {\r\n            right: iconPosition === 'right',\r\n          })}\r\n          style={iconStyle}>\r\n          <SearchIcon style={iconStyle} />\r\n        </div>\r\n        <InputBase\r\n          placeholder={placeholder || 'Search…'}\r\n          style={inputBaseStyle}\r\n          classes={inputBaseClasses}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmtSearch;\r\n\r\nCmtSearch.prototype = {\r\n  border: PropTypes.bool,\r\n  iconPosition: PropTypes.string,\r\n  align: PropTypes.string,\r\n  onlyIcon: PropTypes.bool,\r\n  containerStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  iconStyle: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtSearch.defaultProps = {\r\n  border: true,\r\n  containerStyle: {},\r\n  inputStyle: {\r\n    backgroundColor: 'transparent',\r\n    borderColor: 'grey',\r\n    color: 'grey',\r\n    borderRadius: 4,\r\n  },\r\n  iconPosition: 'left',\r\n  onlyIcon: false,\r\n  align: 'left',\r\n  iconStyle: {\r\n    color: 'grey',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Popover } from '@material-ui/core';\r\nimport CmtSearch from '../../../../@coremat/CmtSearch';\r\n\r\nconst SearchPopover = ({ iconClassName, popoverClassName }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenSearchBar = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSearchBar = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={iconClassName} onClick={handleOpenSearchBar}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Popover\r\n        className={popoverClassName}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleCloseSearchBar}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtSearch />\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPopover;\r\n","import React from 'react';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Box, InputBase } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport LanguageSwitcher from '../LanguageSwitcher';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppsMenu from './AppsMenu';\r\nimport HeaderNotifications from './HeaderNotifications';\r\nimport HeaderMessages from './HeaderMessages';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Logo from '../Logo';\r\nimport SearchPopover from '../SearchPopover';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      minHeight: 72,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 30,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n      color: alpha(theme.palette.common.white, 0.7),\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.58),\r\n        color: alpha(theme.palette.common.white, 0.7),\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    borderLeft: `solid 1px ${alpha(theme.palette.common.dark, 0.15)}`,\r\n    minHeight: 72,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minHeight: 64,\r\n    },\r\n  },\r\n  iconBtn: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo ml={2} color=\"white\" />\r\n      <Box flex={1} />\r\n      <Hidden smDown>\r\n        <Box pr={3} className={classes.searchRoot}>\r\n          <InputBase placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n          <SearchIcon />\r\n        </Box>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <SearchPopover iconClassName={classes.iconBtn} />\r\n      </Hidden>\r\n      <AppsMenu />\r\n      <HeaderMessages />\r\n      <HeaderNotifications />\r\n      <Box className={classes.langRoot}>\r\n        <LanguageSwitcher />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    zIndex: 1103,\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '.Cmt-miniLayout &': {\r\n      width: props => props.miniSidebarWidth,\r\n      '&:hover': {\r\n        width: props => props.sidebarWidth,\r\n      },\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  actionSidebarWrapper: {\r\n    display: 'flex',\r\n    width: props => props.sidebarWidth + props.actionSidebarWidth,\r\n    transition: 'all 0.3s ease',\r\n\r\n    '& .actionSidebar': {\r\n      width: props => props.actionSidebarWidth,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Drawer, makeStyles } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  drawerContent: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtDrawer = ({ backgroundColor, backgroundImage, gradientDirection, children, overlay, ...rest }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer {...rest}>\r\n      <div className={clsx(classes.drawerContainer, 'Cmt-Drawer-container')} style={backgroundStyles}>\r\n        <div className={clsx(classes.drawerContent, 'Cmt-Drawer-content')}>{children}</div>\r\n        {overlay.colors && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyles} />}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nCmtDrawer.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtDrawer.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default React.memo(CmtDrawer);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport useStyles from './Sidebar.style';\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst CmtSidebarContent = ({ children, classes }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtDrawerContent = ({ children, classes }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n  return (\r\n    <CmtDrawer\r\n      variant=\"temporary\"\r\n      open={isSidebarOpen}\r\n      onClose={() => setSidebarOpen(false)}\r\n      classes={{\r\n        paper: 'Cmt-drawer-sidebar',\r\n      }}>\r\n      <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = ({ children, actionBar }) => {\r\n  const { drawerBreakPoint, sidebarWidth, miniSidebarWidth, actionSidebarWidth, sidebarType } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const hasDrawer = sidebarType === 'drawer' || matches;\r\n\r\n  const classes = useStyles({\r\n    sidebarWidth,\r\n    miniSidebarWidth,\r\n    actionSidebarWidth,\r\n    sidebarTheme,\r\n  });\r\n\r\n  if (hasDrawer) {\r\n    return (\r\n      <React.Fragment>\r\n        {actionBar}\r\n        <CmtDrawerContent classes={classes}>{children}</CmtDrawerContent>\r\n      </React.Fragment>\r\n    );\r\n  } else if (actionBar) {\r\n    return (\r\n      <div className={clsx(classes.actionSidebarWrapper, 'Cmt-actionSidebarWrapper')}>\r\n        {actionBar}\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useContext } from 'react';\r\nimport { MenuItem, MenuList, Paper, Popover, Typography } from '@material-ui/core';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarThemeContext from '../../../../@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '25px 24px 24px 24px',\r\n    borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n  },\r\n  userInfo: {\r\n    paddingTop: 56,\r\n    transition: 'all 0.1s ease',\r\n    height: 75,\r\n    opacity: 1,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      height: 0,\r\n      paddingTop: 0,\r\n      opacity: 0,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n  },\r\n  userTitle: {\r\n    color: props => props.sidebarTheme.textDarkColor,\r\n    marginBottom: 8,\r\n  },\r\n  userSubTitle: {\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst SidebarHeader = () => {\r\n  let history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n  const dispatch = useDispatch();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const onLogoutClick = () => {\r\n    handlePopoverClose();\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    history.push('/signin');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ paddingTop: '50px' }}>\r\n      <CmtAvatar src={'https://via.placeholder.com/150'} alt=\"User Avatar\" />\r\n      <div className={classes.userInfo} onClick={handlePopoverOpen}>\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-end',\r\n          }}>\r\n          <div className=\"mr-2\">\r\n            <Typography className={classes.userTitle} component=\"h3\" variant=\"h6\">\r\n              Robert Johnson\r\n            </Typography>\r\n            <Typography className={classes.userSubTitle}>robert.johnson@gmail.com</Typography>\r\n          </div>\r\n          <ArrowDropDownIcon />\r\n        </div>\r\n      </div>\r\n\r\n      {open && (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          container={anchorEl}\r\n          onClose={handlePopoverClose}\r\n          anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}>\r\n          <Paper elevation={8}>\r\n            <MenuList>\r\n              <MenuItem onClick={handlePopoverClose}>\r\n                <PersonIcon />\r\n                <div className=\"ml-2\">Profile</div>\r\n              </MenuItem>\r\n              <MenuItem onClick={onLogoutClick}>\r\n                <ExitToAppIcon />\r\n                <div className=\"ml-2\">Logout</div>\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Paper>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import React, { cloneElement, isValidElement, useContext } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuItem: {\r\n    padding: '0 16px 0 0',\r\n    position: 'relative',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: props => props.sidebarTheme.textColor,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: props => props.sidebarTheme.textActiveColor,\r\n      backgroundColor: props => props.sidebarTheme.navActiveBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-nav-text, & .Cmt-icon-root': {\r\n          color: props => props.sidebarTheme.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      justifyContent: 'center',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: '50%',\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link } = props;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" className={clsx(classes.navMenuItem, 'Cmt-nav-menu-item')}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <span className={clsx(classes.navText, 'Cmt-nav-text')}>{name}</span>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import React, { cloneElement, isValidElement, useEffect, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { Collapse, List, ListItem } from '@material-ui/core';\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess';\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavSection from './NavSection';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '0 16px 0 0',\r\n    '& .MuiTouchRipple-root': {\r\n      display: 'none',\r\n    },\r\n    '&:hover, &:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n    '&.open': {\r\n      '& .Cmt-navCollapseBtn': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n      '& .Cmt-iconRoot': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    '& .Cmt-navHeader': {\r\n      paddingLeft: 36,\r\n    },\r\n  },\r\n\r\n  navCollapseBtnInner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-iconRoot': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      paddingRight: 13,\r\n      paddingLeft: 13,\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      paddingRight: 16,\r\n      paddingLeft: 32,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    whiteSpace: 'nowrap',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navArrow: {\r\n    position: 'absolute',\r\n    left: 8,\r\n    top: '50%',\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    fontSize: 16,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'relative',\r\n    '& .Cmt-icon-root': {\r\n      transition: 'all 0.3s ease',\r\n      transform: 'translateX(-100%)',\r\n      opacity: 0,\r\n      visibility: 'hidden',\r\n      marginRight: 0,\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      transition: 'all 0.35s ease',\r\n      marginLeft: -20,\r\n    },\r\n    '& .Cmt-nav-menu-link': {\r\n      padding: '9px 16px 9px 70px',\r\n      transition: 'all 0.3s ease',\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '&.active': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '.Cmt-miniLayout &': {\r\n        paddingRight: 13,\r\n        paddingLeft: 13,\r\n      },\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n        paddingRight: 16,\r\n        paddingLeft: 70,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const { name, icon, children = [] } = props;\r\n  const isExpandable = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const renderIcon = useCallback(() => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: classes.iconRoot,\r\n      });\r\n    }\r\n    return null;\r\n  }, [icon, classes]);\r\n\r\n  const MenuCollapse = (\r\n    <ListItem className={clsx(classes.navCollapseBtn, 'Cmt-navCollapseBtn')} button onClick={handleClick}>\r\n      <span className={classes.navCollapseBtnInner}>\r\n        {/* Display the expand menu if the item has children */}\r\n        {isExpandable && !open && <IconExpandMore className={classes.navArrow} />}\r\n        {isExpandable && open && <IconExpandLess className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <span className={classes.navText}>{name}</span>\r\n      </span>\r\n    </ListItem>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <Collapse className={classes.navCollapseItem} in={open} timeout=\"auto\">\r\n      <List component=\"div\" disablePadding>\r\n        {children.map((item, index) => {\r\n          switch (item.type) {\r\n            case 'section':\r\n              return <NavSection {...item} key={index} />;\r\n            case 'collapse':\r\n              return <NavCollapse {...item} key={index} />;\r\n            case 'item':\r\n              return <NavMenuItem {...item} key={index} />;\r\n            default:\r\n              return null;\r\n          }\r\n        })}\r\n      </List>\r\n    </Collapse>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={clsx(classes.navCollapse, `${open ? 'open' : ''}`)}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import React, { useContext } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navHeader: {\r\n    position: 'relative',\r\n    padding: '24px 16px 20px 16px',\r\n    textTransform: 'uppercase',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navSection: {\r\n    position: 'relative',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:not(:first-child) .Cmt-navHeader': {\r\n      borderTop: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n      marginTop: 10,\r\n    },\r\n    '&:not(:last-child)': {\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n        borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavSection = props => {\r\n  const { name, children = [] } = props;\r\n  const isExpandable = children && children.length > 0;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const MenuCollapse = (\r\n    <List component=\"div\" className={clsx(classes.navHeader, 'Cmt-navHeader')}>\r\n      {name}\r\n    </List>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          default:\r\n            return <NavMenuItem {...item} key={index} />;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={classes.navSection}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSection;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavSection from './NavSection';\r\nimport NavCollapse from './NavCollapse';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sideNavMenu: {\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst CmtVertical = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={classes.sideNavMenu}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtVertical;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Dashboard, Phone, ArrowForward, Assignment, Receipt } from '@material-ui/icons';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { Badge } from '@material-ui/core';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nexport const sidebarNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n      {\r\n        name: <IntlMessages id={'wallboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/wallboard',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: <IntlMessages id={'reports'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'reports.callcenter'} />,\r\n        type: 'collapse',\r\n        icon: <Phone />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'agent.status'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentstatus',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'main.reports'} />,\r\n        type: 'collapse',\r\n        icon: <Assignment />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'calllog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callLog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'calltransferreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltransferreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'callmanagement'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callmanagement',\r\n          },\r\n          // {\r\n          //   name: 'Call Log 2',\r\n          //   type: 'item',\r\n          //   icon: <ArrowForward />,\r\n          //   link: '/reports/callLog2',\r\n          // },\r\n          {\r\n            name: <IntlMessages id={'internalssummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/internalssummary',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'did.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/didreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailysummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailysummaryreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'queue.answer.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/queueanswerreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abondenedcalls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abondenedcalls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'droppedcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/droppedcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abandoned.queues'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abandoned-queues',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'returneddropcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/returned-dropcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'repetetive.calls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/repetetive-calls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'agent.session.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentcdr',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'service.level'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/servicelevel',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailylog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'call.comparison'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callcomparison',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthly.log'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthlydetails'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlyDetails',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'survey.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/quality-report',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'settings'} />,\r\n        type: 'collapse',\r\n        icon: <SettingsIcon />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'edit.breaks'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/editbreaks',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'usersettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/usersettings',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'departmentsettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/departmentsettings',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'IYS',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                <IntlMessages id={'Called.Numbers'} />\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/iys/called-number',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: `V${process.env.REACT_APP_VERSION}`,\r\n        type: 'section',\r\n      },\r\n      {\r\n        name: 'Teams',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                Microsoft Teams Users\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/teams/users',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const horizontalDefaultNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const minimalHorizontalMenus = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'pages.samplePage'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVertical from '../../../../../@coremat/CmtNavigation/Vertical';\r\nimport { sidebarNavs } from '../menus';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  perfectScrollbarSidebar: {\r\n    height: '100%',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &, .Cmt-Drawer-container &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      height: 'calc(100% - 72px)',\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      height: 'calc(100% - 91px)',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.perfectScrollbarSidebar}>\r\n      <CmtVertical menuItems={sidebarNavs} />\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '30px 15px',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appMainContent, 'Cmt-appMainContent')} bgcolor=\"background.main\">\r\n      {children}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999999,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst PageLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.circularProgressRoot}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { Slide, Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageLoader from '../PageComponents/PageLoader';\r\nimport { fetchError } from '../../../redux/actions';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst ContentLoader = () => {\r\n  const { error, loading, message } = useSelector(({ common }) => common);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(fetchError(''));\r\n    }, 3000);\r\n  }, [dispatch, error, message]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <PageLoader />}\r\n      {\r\n        <Snackbar\r\n          open={Boolean(error)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n      {\r\n        <Snackbar\r\n          open={Boolean(message)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentLoader;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 30px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function LayoutFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')}>\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\n\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst FooterLogo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo-white-symbol.png' : '/images/footer-logo.png';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <NavLink to=\"/\">\r\n        <CmtImage src={logoUrl} alt=\"logo\" />\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterLogo;\r\n","import React, { useContext } from 'react';\r\nimport FooterLogo from './FooterLogo';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppContext from '../../contextProvider/AppContextProvider/AppContext';\r\nimport { THEME_TYPES } from '../../../constants/ThemeOptions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  btnRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '6px 12px',\r\n      fontSize: 11,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = props => {\r\n  const classes = useStyles();\r\n  const { themeType } = useContext(AppContext);\r\n  const date = new Date();\r\n\r\n  return (\r\n    <Box className={classes.root} {...props}>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Hidden xsDown>\r\n          <FooterLogo mr={5} color={themeType === THEME_TYPES.DARK ? 'white' : ''} />\r\n        </Hidden>\r\n        <Box fontSize={{ xs: 12, sm: 14 }} component=\"p\" color=\"text.disabled\">\r\n          Copyright Company Name © {date.getFullYear()}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport Header from '../../partials/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  showTourOpt: true,\r\n  showFooterOpt: true,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n  drawerBreakPoint: defaultContext.drawerBreakPoint,\r\n  sidebarWidth: defaultContext.sidebarWidth,\r\n};\r\n\r\nconst VerticalDefault = ({ children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      className=\"verticalDefaultLayout\"\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter>\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalDefault;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport Header from '../../partials/Header';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport { SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst VerticalMinimal = ({ className, children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalMinimal;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { darken, makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '32px 10px 5px',\r\n    width: '100%',\r\n    '& .MuiAlert-root': {\r\n      padding: '0 20px 0 0',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      '& .MuiAlert-icon': {\r\n        padding: '16px 12px',\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Alerts = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          variant=\"filled\"\r\n          iconMapping={{ success: <CachedIcon fontSize=\"inherit\" /> }}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}>\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }>\r\n          A new version has been arrived, Click here to update jumbo 5.0\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { Hidden } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\n\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport Alerts from './Alerts';\r\nimport { HEADER_TYPE, SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  minimalNoHeader: {\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '& .Cmt-toggle-menu': {\r\n      color: theme.palette.text.primary,\r\n      marginLeft: 15,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  headerType: HEADER_TYPE.STATIC,\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst MinimalNoHeader = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalNoHeaderLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.minimalNoHeader}>\r\n          <Hidden lgUp>\r\n            <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n          </Hidden>\r\n          <Alerts />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        <LanguageSwitcher />\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default MinimalNoHeader;\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtDrawer from '../../../../../../@coremat/CmtDrawer';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  actionSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '24px 5px',\r\n    width: 65,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  contentArea: {\r\n    width: 300,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 557,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: '100vh',\r\n    padding: 30,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.dark, 0.38),\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst ActionBarDrawer = ({ activeOption, onIconClick, onDrawerClose, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtDrawer variant=\"temporary\" anchor=\"left\" onClose={onDrawerClose} {...rest}>\r\n      <Box className={clsx(classes.root)}>\r\n        <Box className={classes.actionSidebar}>\r\n          <IconButton className={classes.iconBtn} onClick={onDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box className={classes.contentArea}>\r\n          <PerfectScrollbar className={classes.scrollbarRoot}> </PerfectScrollbar>\r\n        </Box>\r\n      </Box>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nexport default ActionBarDrawer;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Hidden, IconButton, withWidth } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtDropdownMenu from '../../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport LayoutContext from '../../../../../../@coremat/CmtLayouts/LayoutContext';\r\n\r\nimport { AuhMethods } from '../../../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../../../constants/AppConstants';\r\nimport Logo from '../../../partials/Logo';\r\nimport ActionBarDrawer from './ActionBarDrawer';\r\nimport { useHistory } from 'react-router';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '10px 24px 10px 15px',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'column',\r\n      padding: '16px 5px',\r\n    },\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.9),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: <IntlMessages id={'account'} />,\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: <IntlMessages id={'logout'} />,\r\n  },\r\n];\r\n\r\nlet initSidebarWidth = 0;\r\nconst ActionSideBar = ({ width }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [isDrawerOpen, setDrawerStatus] = useState(false);\r\n  const [activeOption, setActiveOption] = useState(null);\r\n  const { isSidebarOpen, setSidebarOpen, sidebarWidth, setSidebarWidth } = useContext(LayoutContext);\r\n\r\n  useEffect(() => {\r\n    initSidebarWidth = sidebarWidth;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSidebarOpen && (width === 'lg' || width === 'xl')) {\r\n      setSidebarWidth(0);\r\n    } else {\r\n      setSidebarWidth(initSidebarWidth);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSidebarOpen, width]);\r\n\r\n  useEffect(() => {\r\n    if (activeOption && !isDrawerOpen) {\r\n      setDrawerStatus(true);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeOption]);\r\n\r\n  const onItemClick = item => {\r\n    if (item.label.props.id === 'logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  const onIconClick = option => {\r\n    setActiveOption(option);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    setDrawerStatus(false);\r\n    setActiveOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'actionSidebar')}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <SidebarToggleHandler className={classes.iconBtn}>\r\n          {isSidebarOpen && (width === 'lg' || width === 'xl') && <CloseIcon />}\r\n        </SidebarToggleHandler>\r\n        <Hidden lgUp>\r\n          <Logo color=\"white\" ml={{ xs: 3, sm: 6 }} />\r\n        </Hidden>\r\n      </div>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} ml={{ xs: 'auto', lg: 'unset' }}>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('search')}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n\r\n        <IconButton className={classes.iconBtn} onClick={() => onIconClick('messages')}>\r\n          <MessageIcon />\r\n        </IconButton> */}\r\n        <Box className={classes.iconBtn}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('notifications')}>\r\n          <Badge badgeContent={4} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n\r\n        {isSidebarOpen && (width === 'lg' || width === 'xl') && (\r\n          <IconButton className={classes.iconBtn} onClick={() => setSidebarOpen(!isSidebarOpen)}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} mt={{ xs: 'unset', lg: 'auto' }}>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('settings')}>\r\n          <SettingsIcon />\r\n        </IconButton> */}\r\n\r\n        <CmtDropdownMenu\r\n          onItemClick={onItemClick}\r\n          TriggerComponent={<CmtAvatar src={'https://via.placeholder.com/150'} />}\r\n          items={actionsList}\r\n        />\r\n      </Box>\r\n\r\n      <ActionBarDrawer\r\n        activeOption={activeOption}\r\n        open={isDrawerOpen}\r\n        onDrawerClose={onDrawerClose}\r\n        onIconClick={onIconClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(ActionSideBar);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport ActionSideBar from './ActionSideBar';\r\nimport Logo from '../../partials/Logo';\r\nimport { THEME_TYPES } from '../../../../constants/ThemeOptions';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sidebarHeader: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: '60px',\r\n      marginBottom: '35px',\r\n      padding: '10px 20px 20px 20px',\r\n      height: 60,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  actionSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst ModernSideBar = ({ children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  const { themeType } = useContext(AppContext);\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      className={clsx('Cmt-modernLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      sidebar={\r\n        <CmtSidebar actionBar={<ActionSideBar />}>\r\n          <Hidden mdDown>\r\n            <Logo color={themeType !== THEME_TYPES.LIGHT ? 'white' : 'dark'} className={classes.sidebarHeader} />\r\n          </Hidden>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default ModernSideBar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false); //for both drawer and mini-sidebar\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n  headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      showFooterOpt: props.showFooterOpt ? props.showFooterOpt : true,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      props.drawerBreakPoint,\r\n      props.showFooterOpt,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-header': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'none',\r\n        marginRight: 10,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'block !important',\r\n        },\r\n      },\r\n      '& .Cmt-header-nav': {\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  appMain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-customizerBtn': {\r\n      top: 220,\r\n    },\r\n  },\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './MainContainer.style';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst MainContainer = ({ header, footer, sidebar, className, children }) => {\r\n  const { drawerBreakPoint, showFooter, showHeader } = useContext(LayoutContext);\r\n\r\n  const classes = useStyles({ drawerBreakPoint });\r\n\r\n  return (\r\n    <div className={clsx(classes.appRoot, className)}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {showHeader && header}\r\n            {children}\r\n            {showFooter && footer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtHorizontalLayout = ({ layoutOptions, children, header, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontalLayout;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headerNav: {\r\n    width: '100%',\r\n    minHeight: 46,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtHeaderNav = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.headerNav, 'Cmt-header-nav')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderNav;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerTop: {\r\n    width: '100%',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    fontSize: 14,\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderTop = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.headerTop} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderTop;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerMain: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderMain = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.headerMain, 'Cmt-headerMain')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderMain;\r\n","import React from 'react';\r\nimport { Box, Button, Divider } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  loginSection: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > .MuiDivider-root': {\r\n      height: 14,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      backgroundColor: theme.palette.text.secondary,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderLogin = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display=\"flex\" alignItems=\"center\" color=\"warning.main\">\r\n        <CachedIcon fontSize=\"small\" />\r\n        <div className=\"ml-3\">This is primary alert-check it out!</div>\r\n      </Box>\r\n      <div className={classes.loginSection}>\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Login\r\n        </Button>\r\n        <Divider className=\"Cmt-divider\" orientation=\"vertical\" />\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderLogin;\r\n","import React, { useContext, useImperativeHandle } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst SidebarToggleHandler = React.forwardRef(function SidebarToggleHandler(props, ref) {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isOpen: isSidebarOpen,\r\n  }));\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" ref={contentRef} onClick={() => setSidebarOpen(!isSidebarOpen)} {...props}>\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n});\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CmtDropdownMenu from '../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 10,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: 'Account',\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: 'Logout',\r\n  },\r\n];\r\n\r\nconst UserDropDown = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onItemClick = item => {\r\n    if (item.label === 'Logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(classes.profileRoot, 'Cmt-profile-pic')}>\r\n      <CmtDropdownMenu\r\n        onItemClick={onItemClick}\r\n        TriggerComponent={<CmtAvatar size=\"small\" src={'https://via.placeholder.com/150'} />}\r\n        items={actionsList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserDropDown;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, InputBase } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 450,\r\n    },\r\n    '& .Cmt-icon': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      position: 'relative',\r\n      flex: '1 1 auto',\r\n      width: '1%',\r\n      minWidth: 0,\r\n      height: 48,\r\n      borderRadius: '30px 0 0  30px',\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.08),\r\n      color: theme.palette.text.secondary,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n\r\n      '&:not(:last-child) .MuiOutlinedInput-root': {\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n      },\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.12),\r\n      },\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: '0 30px 30px 0',\r\n    height: '100%',\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nconst GlobalSearchForm = () => {\r\n  const classes = useStyles();\r\n  const [showCategories, setShowCategories] = React.useState(null);\r\n\r\n  const onShowCategories = event => {\r\n    setShowCategories(event.currentTarget);\r\n  };\r\n\r\n  const onHideCategories = () => {\r\n    setShowCategories(null);\r\n  };\r\n\r\n  return (\r\n    <Box pr={3} className={clsx(classes.searchRoot, 'Cmt-search')}>\r\n      <Box className={classes.inputGroup}>\r\n        <InputBase className={classes.inputText} placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <SearchIcon className={clsx('Cmt-icon')} />\r\n        <Box className={clsx(classes.inputGroupAppend, 'Cmt-inputGroupAppend')}>\r\n          <Button variant=\"outlined\" className={classes.button} endIcon={<ArrowDropDownIcon />} onClick={onShowCategories}>\r\n            Categories\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={showCategories}\r\n            keepMounted\r\n            open={Boolean(showCategories)}\r\n            onClose={onHideCategories}>\r\n            <MenuItem onClick={onHideCategories}>Option 1</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 2</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 3</MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GlobalSearchForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { alpha, darken, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport AppsMenu from '../AppsMenu';\r\nimport HeaderMessages from '../HeaderMessages';\r\nimport HeaderNotifications from '../HeaderNotifications';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport Logo from '../../Logo';\r\nimport SearchPopover from '../../SearchPopover';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport UserDropDown from '../../UserDropDown';\r\nimport GlobalSearchForm from '../../GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderTop = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderTop;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    boxShadow: '0 1px 8px -1px rgba(0,0,0,.2)',\r\n    position: 'relative',\r\n    zIndex: 99,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { children, className } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return <div className={clsx(classes.appHeader, className, 'Cmt-header')}>{children}</div>;\r\n};\r\n\r\nexport default CmtHeader;\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'Header',\r\n};\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    zIndex: 999,\r\n    '.Cmt-drawer-sidebar &': {\r\n      position: 'relative',\r\n    },\r\n    '& .scrollbar-container': {\r\n      height: '100vh',\r\n      width: '100%',\r\n    },\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtSidebarContent = ({ classes, children }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = props => {\r\n  const { children } = props;\r\n  const { isSidebarOpen, setSidebarOpen, drawerBreakPoint, sidebarWidth } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const classes = useStyles({ sidebarWidth, sidebarTheme });\r\n\r\n  if (matches) {\r\n    return (\r\n      <CmtDrawer\r\n        variant=\"temporary\"\r\n        open={isSidebarOpen}\r\n        onClose={() => setSidebarOpen(false)}\r\n        classes={{\r\n          paper: 'Cmt-drawer-sidebar',\r\n        }}>\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </CmtDrawer>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContentWrapper: {\r\n    position: 'relative',\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.appMainContentWrapper} bgcolor=\"background.main\">\r\n      <Box ref={contentRef} className={classes.appMainContent}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function CmtFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')} bgcolor=\"primary.main\">\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React, { cloneElement, isValidElement } from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link, handleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" disablePadding onClick={handleClick}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={clsx(classes.navText, 'Cmt-nav-text')}>\r\n          {name}\r\n        </Box>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n\r\n    '&.active > .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&.active > .Cmt-navCollapseBtn $subCollapse .Cmt-navCollapseBtn.active': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      '& $navCollapseBtnInner  .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& $navCollapseBtnInner > .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'absolute',\r\n    display: 'none',\r\n    top: 80,\r\n    left: 0,\r\n    zIndex: 2,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 200,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n\r\n    '& $navCollapseItem': {\r\n      top: 50,\r\n      left: '100%',\r\n      right: 'auto',\r\n    },\r\n  },\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n\r\n    '& > $navCollapseItem $navCollapseBtn:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: 0,\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navCollapseBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  subCollapse: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '& .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.textColor,\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n    '&.active .Cmt-nav-menu-link.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavCollapse.style';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const { name, icon, className, children = [] } = props;\r\n  const isExpandable = useMemo(() => children.length, [children]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding className={classes.navCollapseItem}>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} className={classes.subCollapse} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navCollapseBtn, `${open ? 'active' : ''}`, 'Cmt-navCollapseBtn')}>\r\n      <Box component=\"span\" className={classes.navCollapseBtnInner}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={classes.navText}>\r\n          {name}\r\n        </Box>\r\n        {/* Display the expand menu if the item has children */}\r\n        {isExpandable && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {isExpandable && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n      </Box>\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Box className={clsx(classes.navCollapse, 'Cmt-navCollapse', className, `${open ? 'active' : ''}`)}>{MenuCollapse}</Box>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navMega: {\r\n    position: 'static',\r\n    '&.Cmt-navMega-5': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 5)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-4': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 4)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-3': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 530,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 3)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-2': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 460,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 2)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navMegaBtn: {\r\n    position: 'static',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navMegaColumnsWrapper': {\r\n      display: 'flex',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navMegaBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navMegaColumnsWrapper: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 600,\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 80,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    margin: '0 auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  navMegaColumn: {\r\n    width: 'calc(100% / 3)',\r\n  },\r\n  navMegaColumnInner: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'unset',\r\n  },\r\n  navMegaColumnLabel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.text.primary,\r\n\r\n    '& .Cmt-icon-root': {\r\n      marginRight: 16,\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavMega.style';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst RenderIcon = ({ icon }) => {\r\n  const classes = useStyles();\r\n\r\n  if (icon && isValidElement(icon)) {\r\n    return cloneElement(icon, {\r\n      className: clsx(classes.iconRoot, '.Cmt-iconRoot', '.Cmt-icon-root'),\r\n    });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst NavMegaColumn = props => {\r\n  const classes = useStyles();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = useMemo(() => children.length, [children]);\r\n\r\n  const MenuItemChildren = totalItems ? (\r\n    <List component=\"div\" disablePadding className={classes.navMegaColumnItems}>\r\n      {children.map((item, index) => (\r\n        <NavMenuItem {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem component=\"div\" disableGutters className={clsx(classes.navMegaColumnInner, 'Cmt-navMegaColumnInner')}>\r\n      {name && (\r\n        <span className={classes.navMegaColumnLabel}>\r\n          <RenderIcon icon={icon} />\r\n          <span className={classes.navText}>{name}</span>\r\n        </span>\r\n      )}\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return <div className={clsx(classes.navMegaColumn, 'Cmt-navMega-column')}>{MenuCollapse}</div>;\r\n};\r\n\r\nconst NavMega = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const MenuItemColumns = totalItems ? (\r\n    <List component=\"div\" disablePadding className={clsx(classes.navMegaColumnsWrapper, 'Cmt-navMegaColumnsWrapper')}>\r\n      {children.map((item, index) => (\r\n        <NavMegaColumn {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navMegaBtn, 'Cmt-navMegaBtn', `${open ? 'active' : ''}`)}>\r\n      <span className={classes.navMegaBtnInner}>\r\n        <RenderIcon icon={icon} />\r\n        <span className={classes.navText}>{name}</span>\r\n        {/* Display the expand menu if the item has children */}\r\n        {totalItems > 0 && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {totalItems > 0 && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n      </span>\r\n      {MenuItemColumns}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.navMega, 'Cmt-navMega', `Cmt-navMega-${totalItems}`, `${open ? 'active' : ''}`)}>\r\n      {MenuCollapse}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMega;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport NavMega from './NavMega';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  horizontalNavMenu: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    marginLeft: -14,\r\n    marginRight: -14,\r\n  },\r\n}));\r\n\r\nconst CmtHorizontal = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={clsx(classes.horizontalNavMenu, 'Cmt-horizontalNavMenu')}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'mega':\r\n            return <NavMega {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport HeaderTop from '../../partials/Header/HeaderTop';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\n\r\nconst layoutOptions = {\r\n  showFooter: false,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalDefault = ({ className, children }) => {\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalDefaultLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderTop />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain bgcolor=\"primary.main\" color=\"white\">\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDefault;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-search': {\r\n      position: 'relative',\r\n      '& .MuiInputBase-input': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-inputGroupAppend': {\r\n      '& .MuiButton-root': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n        borderLeftColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box, alpha } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport GlobalSearchForm from '../../partials/GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport useStyles from './index.style';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport HeaderMain from './HeaderMain';\r\nimport clsx from 'clsx';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst HorizontalDark = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      className={clsx('Cmt-horizontalDarkLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDark;\r\n","import React from 'react';\r\nimport { Box, darken, Hidden, Toolbar } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Logo from '../../partials/Logo';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { minimalHorizontalMenus } from '../../partials/menus';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    minHeight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n    '& .Cmt-horizontalNavMenu': {\r\n      position: 'static',\r\n      '& .Cmt-navMegaBtn, & > .Cmt-navCollapse > .Cmt-navCollapseBtn': {\r\n        minHeight: 64,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainHeader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden mdDown>\r\n        <CmtHorizontal menuItems={minimalHorizontalMenus} />\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport MainHeader from './MainHeader';\r\nimport useStyles from './index.style';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalMinimal = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderMain>\r\n            <MainHeader />\r\n          </CmtHeaderMain>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalMinimal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { darken, Hidden } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <Hidden lgUp>\r\n          <AppsMenu />\r\n          <HeaderMessages />\r\n          <HeaderNotifications />\r\n        </Hidden>\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst HeaderTopMenus = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderTopMenus;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& > .Cmt-headerMain': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: 4,\r\n\r\n      '& .Cmt-navCollapseBtn': {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n      '& .Cmt-navCollapseBtn, & .Cmt-appIcon': {\r\n        color: theme.palette.horizontalNav.textColor,\r\n        '&:hover, &:focus': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n        '&.active': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '& > .Cmt-header-nav': {\r\n      minHeight: 54,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport HeaderMain from './HeaderMain';\r\nimport HeaderTopMenus from './HeaderTopMenus';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport useStyles from './index.style';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalTopMenu = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalTopMenuLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <HeaderTopMenus />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalTopMenu;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport globalStyles from '../../../theme/GlobalCss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuhMethods } from '../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../constants/AppConstants';\r\nimport { LAYOUT_TYPES } from '../../constants/ThemeOptions';\r\nimport VerticalDefault from './VerticalLayouts/VerticalDefault';\r\nimport VerticalMinimal from './VerticalLayouts/VerticalMinimal';\r\nimport MinimalNoHeader from './VerticalLayouts/MinimalNoHeader';\r\nimport ModernSideBar from './VerticalLayouts/ModernSidebar';\r\nimport HorizontalDefault from './HorizontalLayouts/HorizontalDefault';\r\nimport HorizontalDark from './HorizontalLayouts/HorizontalDark';\r\nimport HorizontalMinimal from './HorizontalLayouts/HorizontalMinimal';\r\nimport HorizontalTopMenu from './HorizontalLayouts/HorizontalTopMenu';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [showLayoutLoader, setLayoutLoader] = useState(true);\r\n  const { layout } = useContext(AppContext);\r\n  const { loadUser } = useSelector(({ auth }) => auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  globalStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(AuhMethods[CurrentAuthMethod].getAuthUser());\r\n    setLayoutLoader(false);\r\n  }, [dispatch]);\r\n\r\n  if (showLayoutLoader || !loadUser) {\r\n    return (\r\n      <div className={classes.circularProgressRoot}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (['/signin', '/signup', '/forgot-password'].includes(location.pathname)) {\r\n    return <div style={{ minHeight: '100vh', width: '100%', display: 'flex' }}>{children}</div>;\r\n  }\r\n\r\n  switch (layout) {\r\n    case LAYOUT_TYPES.VERTICAL_DEFAULT: {\r\n      return <VerticalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL: {\r\n      return <VerticalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL_NO_HEADER: {\r\n      return <MinimalNoHeader children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR: {\r\n      return <ModernSideBar children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DEFAULT: {\r\n      return <HorizontalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DARK: {\r\n      return <HorizontalDark children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_MINIMAL: {\r\n      return <HorizontalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_TOP_MENU: {\r\n      return <HorizontalTopMenu children={children} />;\r\n    }\r\n    default:\r\n      return <VerticalDefault children={children} />;\r\n  }\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useContext, useMemo } from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { createTheme, jssPreset, StylesProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport AppLocale from '../../../i18n';\r\nimport AppLayout from '../AppLayout';\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst AppWrapper = ({ children }) => {\r\n  const { locale, theme } = useContext(AppContext);\r\n\r\n  const muiTheme = useMemo(() => {\r\n    return createTheme(theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <IntlProvider locale={AppLocale[locale.locale].locale} messages={AppLocale[locale.locale].messages}>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <StylesProvider jss={jss}>\r\n            <CssBaseline />\r\n            <AppLayout>{children}</AppLayout>\r\n          </StylesProvider>\r\n        </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AppContext from './AppContext';\r\nimport defaultContext from './defaultContext';\r\nimport { darkTheme, lightTheme, semiDarkTheme } from '../../../../theme/themeColors';\r\n\r\nconst initialThemeValue = defaultContext.theme;\r\nconst otherThemes = {\r\n  light: lightTheme,\r\n  'semi-dark': semiDarkTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  const [locale, setLocale] = useState(defaultContext.defaultLng);\r\n  const [theme, setTheme] = useState(initialThemeValue);\r\n  const [themeType, setThemeType] = useState(defaultContext.themeType);\r\n  const [layout, setLayout] = useState(defaultContext.layout);\r\n  const [cardRadius, setCardRadius] = useState(defaultContext.theme.overrides.MuiCard.root.borderRadius);\r\n  const [direction, setDirection] = useState(initialThemeValue.direction || 'rtl');\r\n  const [showTourGuide, setTourGuideStatus] = useState(false);\r\n\r\n  const contextValue = React.useMemo(() => {\r\n    return {\r\n      locale,\r\n      setLocale,\r\n      theme,\r\n      setTheme,\r\n      layout,\r\n      setLayout,\r\n      themeType,\r\n      setThemeType,\r\n      cardRadius,\r\n      setCardRadius,\r\n      direction,\r\n      setDirection,\r\n      showTourGuide,\r\n      setTourGuideStatus,\r\n    };\r\n  }, [locale, theme, themeType, layout, direction, showTourGuide, cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      palette: {\r\n        ...prevState.palette,\r\n        ...otherThemes[themeType].palette,\r\n      },\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        ...otherThemes[themeType].overrides,\r\n      },\r\n    }));\r\n  }, [themeType]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        MuiCard: {\r\n          ...prevState.overrides.MuiCard,\r\n          root: {\r\n            ...prevState.overrides.MuiCard.root,\r\n            borderRadius: cardRadius,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  }, [cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      direction: direction,\r\n    }));\r\n    document.body.setAttribute('dir', direction);\r\n  }, [direction]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setThemeType(params.get('theme-type'));\r\n    }\r\n\r\n    if (params.get('layout')) {\r\n      setLayout(params.get('layout'));\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import { THEME_TYPES } from '../@jumbo/constants/ThemeOptions';\r\n\r\nexport const semiDarkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const darkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.DARK,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(0, 0, 0, 0.8)',\r\n      menuActiveBgColor: 'rgb(0, 0, 0, 0.5)',\r\n    },\r\n    common: {\r\n      dark: '#fff',\r\n    },\r\n    background: {\r\n      paper: '#121212',\r\n      default: '#2e2e2e',\r\n    },\r\n    text: {\r\n      primary: 'rgba(255, 255, 255, 0.87)',\r\n      secondary: 'rgba(255, 255, 255, 0.6)',\r\n      disabled: 'rgba(255, 255, 255, 0.38)',\r\n      hint: 'rgba(255, 255, 255, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(255, 255, 255, 0.06)',\r\n      dark: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#535151',\r\n      textColor: 'rgba(255, 255, 255, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#363636',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#535050',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#2e2e2e',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const lightTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst GridContainer = ({ children, ...rest }) => {\r\n  return (\r\n    <Grid container spacing={6} {...rest}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GridContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\n\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footerRoot: props => ({\r\n    ...props.separatorStyles,\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardFooter = ({ backgroundColor, gradientDirection, separator, children }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator, true);\r\n\r\n  const classes = useStyles({ separatorStyles });\r\n\r\n  return (\r\n    <Box className={clsx(classes.footerRoot, 'Cmtfooter-root')} style={backgroundStyles}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtCardFooter.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n};\r\n\r\nCmtCardFooter.defaultProps = {\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n};\r\n\r\nexport default CmtCardFooter;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { hexToRgba } from '../CmtHelpers/JssHelper';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  advCardRoot: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    height: '100%',\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  actionMenu: {\r\n    position: 'absolute',\r\n    top: 15,\r\n    right: 15,\r\n    zIndex: 4,\r\n    '& button': {\r\n      backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.5)',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.7)',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\nimport { Box, Card } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport useStyles from './index.style';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CmtAdvCard = ({\r\n  className,\r\n  actions,\r\n  actionHandleIcon,\r\n  actionHandler,\r\n  actionMenuClassName,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  children,\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    // Checking isValidElement is the safe way and avoids a TS error too.\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.advCardRoot, className)}\r\n      style={backgroundStyles}>\r\n      {actions.length > 0 && (\r\n        <Box ml={2} className={clsx(classes.actionMenu, actionMenuClassName)}>\r\n          <CmtDropdownMenu\r\n            TriggerComponent={<IconButton size=\"small\">{actionHandleIcon || <MoreVertIcon fontSize=\"small\" />}</IconButton>}\r\n            items={actions}\r\n            onItemClick={actionHandler}\r\n          />\r\n        </Box>\r\n      )}\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtAdvCard.propTypes = {\r\n  actions: PropTypes.array,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionHandler: PropTypes.func,\r\n  actionMenuClassName: PropTypes.string,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtAdvCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  actions: [],\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n};\r\n\r\nexport default CmtAdvCard;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  advCardContent: props => ({\r\n    ...props.backgroundStyles,\r\n    padding: 24,\r\n    position: 'relative',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '&:before': props.overlayStyles\r\n      ? {\r\n          ...props.overlayStyles,\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0,\r\n          zIndex: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n        }\r\n      : {},\r\n  }),\r\n  alignCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    '& .Cmt-content-head': {\r\n      flexDirection: 'column',\r\n    },\r\n    '& .Cmt-avatar': {\r\n      marginRight: 0,\r\n      marginBottom: 15,\r\n    },\r\n  },\r\n  gridOrder1: {\r\n    order: 1,\r\n  },\r\n  gridOrder2: {\r\n    order: 2,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport useStyles from './CmtAdvCardContent.style';\r\nimport clsx from 'clsx';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst CmtAdvCardContent = ({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  extraContent,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  columnSizes,\r\n  alignCenter,\r\n  reverseDir,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles({ overlayStyles, backgroundStyles, alignCenter });\r\n  const alignCenterClass = alignCenter ? classes.alignCenter : {};\r\n  const blockClasses = reverseDir ? [classes.gridOrder1, classes.gridOrder2] : [classes.gridOrder2, classes.gridOrder1];\r\n  const [blockFirst, blockSecond] = blockClasses;\r\n\r\n  let extraContentRender = null;\r\n  if (extraContent) {\r\n    extraContentRender = typeof extraContent === 'function' ? extraContent() : extraContent;\r\n  }\r\n\r\n  return (\r\n    <Box className={clsx(classes.advCardContent, 'Cmt-card-content', 'CmtAdvCard-Content', className)} {...rest}>\r\n      {extraContentRender || icon || avatar || title || subTitle ? (\r\n        <Grid container spacing={6}>\r\n          <Grid\r\n            item\r\n            xs={alignCenter ? 12 : 12}\r\n            sm={alignCenter ? 12 : columnSizes[0] === 12 ? 12 : 6}\r\n            md={alignCenter ? 12 : columnSizes[0]}\r\n            className={clsx(blockFirst, alignCenterClass)}>\r\n            <Box>\r\n              <CmtContentHead\r\n                icon={icon}\r\n                avatar={avatar}\r\n                title={title}\r\n                titleProps={titleProps}\r\n                subTitle={subTitle}\r\n                subTitleProps={subTitleProps}\r\n              />\r\n            </Box>\r\n            {extraContentRender && <Box>{extraContentRender}</Box>}\r\n          </Grid>\r\n          {children && (\r\n            <Grid\r\n              item\r\n              xs={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 12}\r\n              sm={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 6}\r\n              md={alignCenter ? 12 : columnSizes[1]}\r\n              className={blockSecond}>\r\n              <Box width={1}>{children}</Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} md={12}>\r\n            <Box width={1}>{children}</Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtAdvCardContent.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  extraContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n  reverseDir: PropTypes.bool,\r\n  columnSizes: PropTypes.array,\r\n  alignCenter: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtAdvCardContent.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  reverseDir: false,\r\n  columnSizes: [6, 6],\r\n  alignCenter: false,\r\n  className: '',\r\n};\r\n\r\nexport default CmtAdvCardContent;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeaderRoot: {\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 12,\r\n    marginBottom: 2,\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  iconRoot: {\r\n    fontSize: 14,\r\n    display: 'block',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst apps = [\r\n  {\r\n    label: 'Andrioid App',\r\n    imageURL: '/images/dashboard/google_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n  {\r\n    label: 'IOS App',\r\n    imageURL: '/images/dashboard/apple_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    color: theme.palette.common.white,\r\n    padding: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    marginBottom: 7,\r\n    textTransform: 'uppercase',\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst DownloadApps = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard\r\n      className={classes.cardRoot}\r\n      backgroundColor={['#03DAC5 -18.96%', '#6200EE 108.17%']}\r\n      gradientDirection=\"180deg\">\r\n      <CmtAdvCardContent\r\n        title=\"Download Mobile Apps\"\r\n        titleProps={{\r\n          variant: 'body1',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Now, your account is on your fingers\"\r\n        subTitleProps={{\r\n          variant: 'h1',\r\n          component: 'div',\r\n          className: classes.subTitleRoot,\r\n        }}\r\n        extraContent={\r\n          <Box mt={5} mx={-2} display=\"flex\" alignItems=\"center\">\r\n            {apps.map((app, index) => (\r\n              <Box px={2} key={index}>\r\n                <Link href={app.link}>\r\n                  <CmtImage src={app.imageURL} />\r\n                </Link>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default DownloadApps;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport useStyles from './CryptoCard.style';\r\n\r\nconst CryptoCard = ({ title, amount, progress, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const headerSubTitle = (\r\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n      <div style={{ fontWeight: 'fontWeightBold', fontSize: 20 }}>{amount}</div>\r\n      <Box ml={2} fontSize={16} color={progress.color} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n        {progress.icon}\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CmtCard>\r\n      <CmtCardHeader\r\n        className={classes.cardHeaderRoot}\r\n        titleProps={{\r\n          variant: 'h6',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        title={title}\r\n        subTitle={headerSubTitle}\r\n      />\r\n      {children}\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\n\r\nimport GridContainer from '../../GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mbSpace: {\r\n    marginBottom: 16,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    name: 'USD',\r\n    code: 'usd',\r\n  },\r\n  {\r\n    name: 'INR',\r\n    code: 'inr',\r\n  },\r\n  {\r\n    name: 'EURO',\r\n    code: 'euro',\r\n  },\r\n];\r\n\r\nconst currencyRates = {\r\n  'usd-inr': 74,\r\n  'inr-usd': 0.0135,\r\n  'usd-euro': 0.89,\r\n  'euro-usd': 1.13,\r\n  'inr-euro': 0.0117,\r\n  'euro-inr': 85,\r\n  'inr-inr': 1,\r\n  'usd-usd': 1,\r\n  'euro-euro': 1,\r\n};\r\n\r\nconst ConversionResult = ({ fromCurrency, toCurrency, amount, convertedValue, currencyRate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box component=\"p\" mb={4} fontSize={12} color=\"text.primary\">\r\n        {`${amount} ${fromCurrency.name} equals`}\r\n      </Box>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.textPrimary, classes.mbSpace)}>\r\n        {convertedValue + ' ' + toCurrency.name}\r\n      </Typography>\r\n      <Box component=\"p\" fontSize={12} display=\"flex\" alignItems=\"center\" color=\"text.secondary\" mb={6}>\r\n        <span className=\"mr-2\">\r\n          {`@ 1 ${fromCurrency.name}`} = <span className={classes.textPrimary}>{`${currencyRate} ${toCurrency.name}`}</span>\r\n        </span>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConversionControls = ({ amount, setAmount, fromCurrency, setFromCurrency, toCurrency, setToCurrency }) => {\r\n  return (\r\n    <Box pb={{ xs: 6, md: 10, xl: 16 }}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>From</InputLabel>\r\n            <Select\r\n              label=\"From\"\r\n              value={fromCurrency}\r\n              onChange={event => setFromCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'from',\r\n                id: 'demo-controlled-open-select',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>To</InputLabel>\r\n            <Select\r\n              label=\"To\"\r\n              value={toCurrency}\r\n              onChange={event => setToCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'to',\r\n                id: 'demo-controlled-open-select-to',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Amount\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            fullWidth\r\n            style={{\r\n              marginTop: 0,\r\n              marginBottom: 0,\r\n            }}\r\n            value={amount}\r\n            onChange={e => setAmount(parseFloat(e.target.value))}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CurrencyCalculator = ({ title, titleProps, className }) => {\r\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\r\n  const [toCurrency, setToCurrency] = useState(currencies[1]);\r\n  const [amount, setAmount] = useState(0);\r\n  const [convertedValue, setConvertedValue] = useState(0);\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setCurrencyRate(currencyRates[`${fromCurrency.code}-${toCurrency.code}`]);\r\n    setConvertedValue(amount * currencyRate);\r\n  }, [fromCurrency, toCurrency, amount, currencyRate]);\r\n\r\n  const resetCalculator = () => {\r\n    setFromCurrency(currencies[0]);\r\n    setToCurrency(currencies[1]);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <CmtCard className={className}>\r\n      {title && <CmtCardHeader title={title} titleProps={titleProps} />}\r\n      <CmtCardContent>\r\n        <div>\r\n          <ConversionResult\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              amount,\r\n              convertedValue,\r\n              currencyRate,\r\n            }}\r\n          />\r\n          <ConversionControls\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              setFromCurrency,\r\n              setToCurrency,\r\n              amount,\r\n              setAmount,\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Button variant=\"outlined\" size={'large'} onClick={resetCalculator}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CurrencyCalculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.typography.body1,\r\n    color: theme.palette.text.primary,\r\n    wordBreak: 'break-word',\r\n    '& .anchor-link': {\r\n      marginTop: -96, // Offset for the anchor.\r\n      position: 'absolute',\r\n    },\r\n    '& pre, pre.language-jsx': {\r\n      margin: theme.spacing(0, 'auto'),\r\n      padding: theme.spacing(4),\r\n      backgroundColor: '#272c34',\r\n      direction: 'ltr',\r\n      borderRadius: 0,\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\r\n      maxWidth: 'calc(100vw - 32px)',\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: 'calc(100vw - 32px - 16px)',\r\n      },\r\n    },\r\n    // inline code\r\n    '& code': {\r\n      direction: 'ltr',\r\n      lineHeight: 1.4,\r\n      display: 'inline-block',\r\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n      WebkitFontSmoothing: 'subpixel-antialiased',\r\n      padding: '0 3px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 229, 100, 0.2)' : 'rgba(255, 229, 100, 0.2)',\r\n      fontSize: '.85em',\r\n      borderRadius: 2,\r\n    },\r\n    '& code[class*=\"language-\"]': {\r\n      backgroundColor: '#272c34',\r\n      color: '#fff',\r\n      // Avoid layout jump after hydration (style injected by prism)\r\n      lineHeight: 1.5,\r\n    },\r\n    // code blocks\r\n    '& pre code': {\r\n      fontSize: '.9em',\r\n    },\r\n    '& .token.operator': {\r\n      background: 'transparent',\r\n    },\r\n    '& h1': {\r\n      ...theme.typography.h3,\r\n      fontSize: 40,\r\n      margin: '16px 0',\r\n    },\r\n    '& .description': {\r\n      ...theme.typography.h5,\r\n      margin: '0 0 40px',\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h4,\r\n      fontSize: 30,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h5,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h6,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.subtitle2,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& p, & ul, & ol': {\r\n      marginTop: 0,\r\n      marginBottom: 16,\r\n    },\r\n    '& ul': {\r\n      paddingLeft: 30,\r\n    },\r\n    '& h1, & h2, & h3, & h4': {\r\n      '& code': {\r\n        fontSize: 'inherit',\r\n        lineHeight: 'inherit',\r\n        // Remove scroll on small screens.\r\n        wordBreak: 'break-all',\r\n      },\r\n      '& .anchor-link-style': {\r\n        // To prevent the link to get the focus.\r\n        display: 'none',\r\n      },\r\n      '&:hover .anchor-link-style': {\r\n        display: 'inline-block',\r\n        padding: '0 8px',\r\n        color: theme.palette.text.secondary,\r\n        '&:hover': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n        '& svg': {\r\n          width: '0.7em',\r\n          height: '0.7em',\r\n          fill: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n    '& table': {\r\n      // Trade display table for scroll overflow\r\n      display: 'block',\r\n      wordBreak: 'normal',\r\n      width: '100%',\r\n      overflowX: 'auto',\r\n      WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\r\n      borderCollapse: 'collapse',\r\n      marginBottom: '16px',\r\n      borderSpacing: 0,\r\n      overflow: 'hidden',\r\n      '& .prop-name': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n      },\r\n      '& .required': {\r\n        color: theme.palette.type === 'light' ? '#006500' : '#a5ffa5',\r\n      },\r\n      '& .prop-type': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        color: theme.palette.type === 'light' ? '#932981' : '#ffb6ec',\r\n      },\r\n      '& .prop-default': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        borderBottom: `1px dotted ${theme.palette.divider}`,\r\n      },\r\n    },\r\n    '& td': {\r\n      ...theme.typography.body2,\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& td code': {\r\n      lineHeight: 1.6,\r\n    },\r\n    '& th': {\r\n      lineHeight: theme.typography.pxToRem(24),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      color: theme.palette.text.primary,\r\n      whiteSpace: 'pre',\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n    },\r\n    '& blockquote': {\r\n      borderLeft: '5px solid #ffe564',\r\n      backgroundColor: 'rgba(255,229,100,0.2)',\r\n      padding: '4px 24px',\r\n      margin: '24px 0',\r\n      '& p': {\r\n        marginTop: '16px',\r\n      },\r\n    },\r\n    '& a, & a code': {\r\n      // Style taken from the Link component\r\n      color: theme.palette.secondary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n    '& img, video': {\r\n      maxWidth: '100%',\r\n    },\r\n    '& img': {\r\n      // Avoid layout jump\r\n      display: 'inline-block',\r\n    },\r\n    '& hr': {\r\n      height: 1,\r\n      margin: theme.spacing(6, 0),\r\n      border: 'none',\r\n      flexShrink: 0,\r\n      backgroundColor: theme.palette.divider,\r\n    },\r\n    '& kbd': {\r\n      // Style taken from GitHub\r\n      padding: '2px 5px',\r\n      font: '11px Consolas,Liberation Mono,Menlo,monospace',\r\n      lineHeight: '10px',\r\n      color: '#444d56',\r\n      verticalAlign: 'middle',\r\n      backgroundColor: '#fafbfc',\r\n      border: '1px solid #d1d5da',\r\n      borderRadius: 3,\r\n      boxShadow: 'inset 0 -1px 0 #d1d5da',\r\n    },\r\n    '& .token.property, .token.tag, .token.constant, .token.symbol, .token.deleted': {\r\n      color: 'rgb(252, 146, 158)',\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    maxHeight: 'min(68vh, 1000px)',\r\n  },\r\n});\r\nconst useStyles = makeStyles(styles, { name: 'MarkdownElement', flip: false });\r\n\r\nconst MarkdownElement = React.forwardRef(function MarkdownElement(props, ref) {\r\n  const { className, renderedMarkdown, ...other } = props;\r\n  const classes = useStyles();\r\n  const more = {};\r\n\r\n  if (typeof renderedMarkdown === 'string') {\r\n    // workaround for https://github.com/facebook/react/issues/17170\r\n    // otherwise we could just set `dangerouslySetInnerHTML={undefined}`\r\n    more.dangerouslySetInnerHTML = { __html: renderedMarkdown };\r\n  }\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.scrollbarRoot}>\r\n      <div className={clsx(classes.root, 'markdown-body', className)} {...more} {...other} ref={ref} />\r\n    </PerfectScrollbar>\r\n  );\r\n});\r\n\r\nMarkdownElement.propTypes = {\r\n  className: PropTypes.string,\r\n  renderedMarkdown: PropTypes.string,\r\n};\r\n\r\nexport default MarkdownElement;\r\n","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport MarkdownElement from './MarkdownElement';\r\nimport prism from '../../../utils/prism';\r\n\r\nconst HighlightedCode = React.forwardRef(function HighlightedCode(props, ref) {\r\n  const { code, language, ...other } = props;\r\n  const renderedCode = React.useMemo(() => {\r\n    return prism(code.trim(), language);\r\n  }, [code, language]);\r\n\r\n  return (\r\n    <MarkdownElement ref={ref} {...other}>\r\n      <pre>\r\n        <code\r\n          className={`language-${language}`}\r\n          // eslint-disable-next-line react/no-danger\r\n          dangerouslySetInnerHTML={{ __html: renderedCode }}\r\n        />\r\n      </pre>\r\n    </MarkdownElement>\r\n  );\r\n});\r\n\r\nHighlightedCode.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  language: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HighlightedCode;\r\n","import prism from 'prismjs';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-diff';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\n\r\nexport default function highlight(code, language) {\r\n  let prismLanguage;\r\n  switch (language) {\r\n    case 'ts':\r\n      prismLanguage = prism.languages.tsx;\r\n      break;\r\n\r\n    case 'js':\r\n    case 'sh':\r\n      prismLanguage = prism.languages.jsx;\r\n      break;\r\n\r\n    case 'diff':\r\n      prismLanguage = { ...prism.languages.diff };\r\n      // original `/^[-<].*$/m` matches lines starting with `<` which matches\r\n      // <SomeComponent />\r\n      // we will only use `-` as the deleted marker\r\n      prismLanguage.deleted = /^[-].*$/m;\r\n      break;\r\n\r\n    default:\r\n      prismLanguage = prism.languages[language];\r\n      break;\r\n  }\r\n\r\n  if (!prismLanguage) {\r\n    if (language) {\r\n      throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\r\n    } else {\r\n      prismLanguage = prism.languages.jsx;\r\n    }\r\n  }\r\n\r\n  return prism.highlight(code, prismLanguage);\r\n}\r\n","import React from 'react';\r\n\r\nimport { CardActions, makeStyles } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: '8px 24px',\r\n  },\r\n}));\r\n\r\nconst CmtCardActions = ({ className, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardActions className={clsx(classes.root, className, 'CmtCard-Actions')} {...rest}>\r\n      {children}\r\n    </CardActions>\r\n  );\r\n};\r\n\r\nCmtCardActions.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CmtCardActions;\r\n","import React, { useState } from 'react';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport HighlightedCode from './HighlightedCode';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Collapse, IconButton, Snackbar, Tooltip } from '@material-ui/core';\r\nimport CmtCardActions from '../../../../@coremat/CmtCard/CmtCardActions';\r\nimport copy from 'clipboard-copy';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    overflow: 'unset',\r\n  },\r\n  cardContent: {\r\n    position: 'relative',\r\n    paddingBottom: 0,\r\n  },\r\n  cardContentInner: {\r\n    position: 'relative',\r\n    paddingBottom: 40,\r\n  },\r\n  actionButtons: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  collapseStyle: {\r\n    borderBottomRightRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottomLeftRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottom: `4px solid ${theme.palette.primary.main}`,\r\n    overflow: 'hidden',\r\n  },\r\n}));\r\n\r\nconst CodeViewerCard = ({ code, language, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(undefined);\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleCopyClick = async () => {\r\n    await copy(code);\r\n    setSnackbarMessage('The source code has been copied.');\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const showCodeLabel = collapsed ? 'Hide the source' : 'Show the source';\r\n\r\n  return (\r\n    <CmtCard {...rest} className={classes.card}>\r\n      <CmtCardContent className={classes.cardContent}>\r\n        <Box className={classes.cardContentInner}>\r\n          {children}\r\n          {code && (\r\n            <CmtCardActions className={classes.actionButtons}>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={showCodeLabel} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={() => setCollapsed(!collapsed)}>\r\n                  <CodeIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={'Copy the source'} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={handleCopyClick}>\r\n                  <FileCopyOutlinedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </CmtCardActions>\r\n          )}\r\n        </Box>\r\n      </CmtCardContent>\r\n\r\n      <Collapse className={classes.collapseStyle} in={collapsed}>\r\n        <HighlightedCode code={code} language={language} />\r\n      </Collapse>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={handleSnackbarClose} message={snackbarMessage} />\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CodeViewerCard;\r\n","import React from 'react';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeader: {\r\n    padding: 16,\r\n  },\r\n  cardBody: {\r\n    position: 'relative',\r\n  },\r\n  cardContent: {\r\n    padding: 16,\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    zIndex: 1,\r\n  },\r\n  chartTitle: {\r\n    marginBottom: 6,\r\n  },\r\n  chartSubTitle: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nconst StatisticsCard = ({ backgroundColor, title, titleProps, amount, description, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard backgroundColor={backgroundColor} {...rest}>\r\n      <CmtCardHeader className={classes.cardHeader} title={title} titleProps={titleProps} />\r\n      <Box className={classes.cardBody}>\r\n        <CmtAdvCardContent\r\n          className={classes.cardContent}\r\n          title={amount}\r\n          titleProps={{\r\n            variant: 'h1',\r\n            component: 'div',\r\n            className: classes.chartTitle,\r\n          }}\r\n          subTitle={description}\r\n          subTitleProps={{\r\n            className: classes.chartSubTitle,\r\n          }}\r\n          columnSizes={[12, 0]}\r\n        />\r\n        {children}\r\n      </Box>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default StatisticsCard;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#FA744F',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst MissedCallGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"card-img-bottom overflow-hidden\" width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time}({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color5\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#F79071\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#FA744F\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={0}\r\n          stackId=\"2\"\r\n          stroke=\"#FA744F\"\r\n          fill=\"url(#color5)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MissedCallGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneMissed';\r\nimport MissedGraph from './MissedCallGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst MissedCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.missed'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#8DCD03' }}>\r\n        <MissedGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissedCall;\r\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#8d46ef',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport useStyles from './InboundStyle';\r\n\r\nconst InboundGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className={classes.root} width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time} ({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#6166B3\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#544179\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#6200EE\"\r\n          fill=\"url(#color3)\"\r\n          fillOpacity={1}\r\n          type={'monotone'}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default InboundGraph;\r\n/**\r\n */\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneCallBackIcon from '@material-ui/icons/PhoneCallback';\r\nimport InboundGraph from './InboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst InboundRules = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.inbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ color: '#ffc107', icon: <PhoneCallBackIcon /> }}>\r\n        <InboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboundRules;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst HeaderChart = props => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const _stroke = ctx.stroke;\r\n    let label = [];\r\n    let countInbound = [];\r\n    let countOutbound = [];\r\n    let countMissed = [];\r\n    ctx.stroke = function() {\r\n      ctx.save();\r\n      ctx.shadowColor = '#4C4C4C';\r\n      ctx.shadowBlur = 10;\r\n      ctx.shadowOffsetX = 2;\r\n      ctx.shadowOffsetY = 2;\r\n      _stroke.apply(this, arguments);\r\n      ctx.restore();\r\n    };\r\n    const inbound = props.inbound;\r\n    const outbound = props.outbound;\r\n    const missed = props.missed;\r\n    for (var i = 0; i < inbound.length; i++) {\r\n      label[i] = inbound[i].start_time;\r\n      countInbound[i] = inbound[i].count;\r\n      countOutbound[i] = outbound[i] !== undefined ? outbound[i].count : 0;\r\n      countMissed[i] = missed[i] !== undefined ? missed[i].count : 0;\r\n    }\r\n\r\n    return {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: 'Inbound Calls',\r\n          data: countInbound,\r\n          borderColor: '#7F39FB',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#7F39FB',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#7F39FB',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Outbound Calls',\r\n          data: countOutbound,\r\n          borderColor: '#FF8C00',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#FF8C00',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#FF8C00',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Missed Calls',\r\n          data: countMissed,\r\n          borderColor: '#0795F4',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#0795F4',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#0795F4',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <Line data={data} height={100} options={options} />;\r\n};\r\n\r\nexport default HeaderChart;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    marginRight: 15,\r\n  },\r\n});\r\n\r\nconst HeaderChartItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box bgcolor={item.bgColor} color={item.color} className={classes.avatar}>\r\n        {item.icon}\r\n      </Box>\r\n      <Box fontSize={16} fontWeight={700} color=\"text.primary\">\r\n        {item.label}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default HeaderChartItem;\r\n","import React from 'react';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport SiteTrafficGraph from './HeaderChart';\r\nimport { PhoneCallback, PhoneMissed, PhoneForwarded } from '@material-ui/icons';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Item from './HeaderChartItem';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles(theme => ({\r\n  scrollbarRoot: {\r\n    maxHeight: 350,\r\n  },\r\n  searchAction: {\r\n    position: 'relative',\r\n    width: 38,\r\n    height: 38,\r\n  },\r\n  searchActionBar: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 2,\r\n    zIndex: 1,\r\n  },\r\n  cardContentRoot: {\r\n    '& .MuiGrid-container': {\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.15),\r\n    color: theme.palette.success.main,\r\n    padding: '2px 10px',\r\n    borderRadius: 30,\r\n  },\r\n  optionList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 24,\r\n\r\n    '& > *:not(:last-child)': {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up('md')]: {\r\n        marginRight: 40,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SiteTraffic = props => {\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n  const actions = [\r\n    {\r\n      label: <IntlMessages id={'select.menu.weekly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('weekly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.monthly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('monthly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.yearly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('yearly');\r\n      },\r\n    },\r\n  ];\r\n  const list = [\r\n    {\r\n      icon: <PhoneCallback />,\r\n      label: <IntlMessages id={'dashboard.inbound'} />,\r\n      bgColor: '#C8BDFA',\r\n      color: '#7F39FB',\r\n    },\r\n    {\r\n      icon: <PhoneMissed />,\r\n      label: <IntlMessages id={'dashboard.missed'} />,\r\n      bgColor: '#ADD8E6',\r\n      color: '#0795F4',\r\n    },\r\n    {\r\n      icon: <PhoneForwarded />,\r\n      label: <IntlMessages id={'dashboard.outbound'} />,\r\n      bgColor: '#FBF3D2',\r\n      color: '#FF8C00',\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CmtAdvCard>\r\n        <CmtCardHeader\r\n          className={clsx(classes.headerRoot, 'pt-4')}\r\n          title={<IntlMessages id={'dashboard.statistics'} />}\r\n          actionsPos=\"top-corner\"\r\n          actions={actions}\r\n          style={{ height: '10px' }}></CmtCardHeader>\r\n        <CmtAdvCardContent className={classes.cardContentRoot}>\r\n          <CmtList\r\n            className={classes.optionList}\r\n            data={list}\r\n            style={{ height: '25px' }}\r\n            renderRow={(item, index) => <Item key={index} item={item} />}\r\n          />\r\n          <Box>\r\n            <SiteTrafficGraph inbound={props.inbound} outbound={props.outbound} missed={props.missed} />\r\n          </Box>\r\n        </CmtAdvCardContent>\r\n      </CmtAdvCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteTraffic;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#4E8D7C',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst OutboundGraph = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <Box className={classes.tooltip}>\r\n                {(data.payload[0].payload.start_time)} ({data.payload[0].payload.count})\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color12\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#ADCE74\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#4E8D7C\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#4E8D7C\"\r\n          fill=\"url(#color12)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default OutboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneForwarded';\r\nimport OutboundGraph from './OutboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst OutboundCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.outbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#E00930' }}>\r\n        <OutboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboundCall;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport clsx from 'clsx';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  containerRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  containerRootCenter: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  contentRoot: {\r\n    position: 'relative',\r\n  },\r\n  contentRootCenter: {\r\n    marginLeft: 0,\r\n    marginTop: 13,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n  },\r\n}));\r\n\r\nconst CounterCard = ({\r\n  icon,\r\n  number,\r\n  numberProps,\r\n  label,\r\n  labelProps,\r\n  counterProps,\r\n  color,\r\n  gradientDirection,\r\n  alignCenter,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtCard gradientDirection={gradientDirection} {...rest}>\r\n      <CmtCardContent>\r\n        <Box\r\n          className={clsx(classes.containerRoot, 'container', {\r\n            [classes.containerRootCenter]: alignCenter,\r\n          })}\r\n          color={color}>\r\n          {typeof icon === 'string' ? <CmtImage src={icon} alt={label} /> : icon}\r\n          <Box\r\n            ml={{ xs: 3, xl: 5 }}\r\n            className={clsx(classes.contentRoot, 'content-wrapper', {\r\n              [classes.contentRootCenter]: alignCenter,\r\n            })}>\r\n            <Box component=\"h3\" fontSize={{ xs: 20, xl: 24 }} className={clsx(classes.titleRoot, 'title')} {...numberProps}>\r\n              {typeof number === 'string' ? (\r\n                number\r\n              ) : (\r\n                <CountUp start={0} end={number} useEasing={false} separator={','} {...counterProps} />\r\n              )}\r\n            </Box>\r\n            <Box component=\"p\" {...labelProps}>\r\n              {label}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCounterCard.prototype = {\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  numberProps: PropTypes.object,\r\n  label: PropTypes.string,\r\n  labelProps: PropTypes.object,\r\n  counterProps: PropTypes.object,\r\n  color: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  alignCenter: PropTypes.bool,\r\n};\r\n\r\nCounterCard.defaultProps = {\r\n  color: 'common.white',\r\n  gradientDirection: '180deg',\r\n  alignCenter: false,\r\n};\r\n\r\nexport default CounterCard;\r\n","import axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nconst validationUrl = window.appsettings.validationUrl ||  process.env.REACT_APP_VALIDATION_URL;\r\nconst url = window.appsettings.appUrl || process.env.REACT_APP_URL;\r\nconst port = window.appsettings.appPort || process.env.REACT_APP_PORT;\r\n\r\nconst date = new Date();\r\nconst day = date.getDate();\r\nconst month = date.getMonth() + 1;\r\nconst year = date.getFullYear();\r\n\r\nconst addZero = val => {\r\n  if (val < 0) {\r\n    return '0' + val;\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\nconst param = year + '-' + addZero(month) + '-' + addZero(day);\r\n\r\nexport const getInboundCalls = async param => {\r\n  let query = `SELECT count (distinct(call_id)),\r\n  to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time\r\n  FROM cl_segments_view_new\r\n  where  (date_trunc('day', NOW() - INTERVAL '${param} day') <= start_time) \r\n  and act != 1 \r\n  and dst_dn_type = 0\r\n  and src_dn_type = 1\r\n  group by start_time::timestamp::date\r\n  order by start_time::timestamp::date asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getDidData = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidDataCount = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidNumbers = async => {\r\n  let query = `select \r\nsubstring(conditiondata from '[0-9]+')  as conditiondata\r\nfrom inboundrule\r\nwhere conditiondata != '' \r\nand substring(conditiondata from '[0-9]+') is not null\r\norder by substring(conditiondata from '[0-9]+') asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getMonthlyDetails = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getMonthlyTotal = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getAgentList = async values => {\r\n  return await axios.post(`http://${url}:${port}/agentstatus`, values);\r\n};\r\nexport const getCallLog = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTrunksUp = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getCallLogDetails = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTotalTrunks = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getExtensions = param => {\r\n  return axios.post(`http://${url}:${port}/extension`, param);\r\n};\r\n\r\nexport const getMissedCalls = async param => {\r\n  let query =\r\n    \"select to_char(date_trunc('day',t1.time_start), 'yyyy-mm-dd' ) as times, count(distinct(call_history_id)) from callcent_queuecalls_view t1 where t1.from_userpart != '' and (date_trunc('day', NOW() + INTERVAL '1 day') >=  t1.time_start) and  (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= t1.time_start) and is_answered = false group by times order by times\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getActiveCallCount = param => {\r\n  return axios.post(`http://${url}:${port}/activecallcount`, param);\r\n};\r\n\r\n//query iyileştirilebilir\r\nexport const getOutboundCalls = async param => {\r\n  let query =\r\n    \"SELECT count (start_time::timestamp::date), to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time FROM cl_segments_view where dst_end_time - dst_answer_time != interval '00:00:00' and dst_caller_number like '%' and dst_answer_time is not null  and (date_trunc('day', NOW() + INTERVAL '1 day') >=  start_time) and (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= start_time) and dst_dn_type = 1 and src_dn_type = 0 and act != 0 group by start_time::timestamp::date order by start_time::timestamp::date asc\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getQueue = async () => {\r\n  const query = 'SELECT * FROM queue_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getRepetetiveAll = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(src_display_name) as cnt,\r\n\t  src_display_name \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'\r\n\t  group by src_display_name order by cnt desc\r\n\t  limit ${limit} offset ${allCallOffset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveAllCount = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(distinct(src_display_name)) as cnt \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveCallerDetails = async (param, callerNumber) => {\r\n  const query = `SELECT \r\n  src_display_name,\r\n  src_did,\r\n  dst_display_name,\r\n  to_char(dst_end_time-dst_answer_time ,'HH24h MIm SSs')as talkingtime,\r\n  to_char(dst_answer_time-dst_start_time,'HH24h MIm SSs') as waitingtime\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and src_dn_type = 1\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n  and src_display_name = '${callerNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getReturnedDropCall = async (limit, offset, agNum, qNum) => {\r\n  const string = `with recursive dropped as (\r\n    select \r\n    *\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() + INTERVAL '1 day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '0 day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false  \r\n  )\r\n  select\r\n  cl_segments_view_new.src_dn,\r\n  cl_segments_view_new.src_display_name,\r\n  to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as dst_start_time,\r\n  to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as dst_end_time,\r\n  cl_segments_view_new.dst_dn,\r\n  dropped.q_num,\r\n  to_char(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_start_time,'HH24:MI:SS') as duration\r\n  from dropped\r\n  left outer join cl_segments_view_new on (dropped.from_userpart = cl_segments_view_new.dst_dn)\r\n  where cl_segments_view_new.dst_start_time > dropped.time_start\r\n  and cl_segments_view_new.src_dn like '%${agNum}'\r\n  and dropped.q_num like '%${qNum}'\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getCdr = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMontlyLog = async (paramMonth, paramBack) => {\r\n  const query = `SELECT \r\n    DATE_TRUNC('month',start_time),\r\n    COUNT (distinct(call_id)) as toplam\r\n    FROM cl_segments_view_new\r\n    where (date_trunc('month', NOW() - INTERVAL '${paramBack + paramMonth - 1} month') <= start_time) \r\n    and  date_trunc('month',now() - interval '${paramMonth - 2} month') >= start_time\r\n    GROUP BY DATE_TRUNC('month',start_time)\r\n    ORDER BY DATE_TRUNC('month',start_time) desc`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getCallComparison = async (paramDate, paramBack) => {\r\n  const string =\r\n    \"select count (distinct(call_id)) , cast(sum(end_time-start_time) as text) as total, to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') , 'yyyy-mm-dd HH24:MI:ss') as day_log,date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"') + '- \" +\r\n    paramBack +\r\n    \" day' <= start_time) and (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"')  + '1 day' >= start_time)  and act != 1 and start_time < end_time group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') desc\";\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallComparisonDaily = async (paramDate, paramBack) => {\r\n  const string = `select count (distinct(call_id)),\r\n   sum(end_time-start_time) as total,\r\n   to_char(date_trunc('day',  start_time) , 'yyyy-mm-dd') as day_log,\r\n   date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act\r\n   from cl_segments_view_new\r\n   where (date_trunc('day',  TIMESTAMP '${paramDate}') + '-${paramBack} day' <= start_time) \r\n   and (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)  \r\n   and act != 1 \r\n   and start_time < end_time\r\n   group by date_trunc('day',  start_time) \r\n   order by date_trunc('day',  start_time) desc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLog = async paramDate => {\r\n  const string = `select \r\n  count (distinct(call_id)) ,\r\n  cast(sum(end_time-start_time) as text) as total,\r\n  to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  end_time> start_time\r\n  group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') \r\n  order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT+3') desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLogTable = async paramDate => {\r\n  const string = ` select \r\n  to_char(date_trunc('day',  start_time),'dd-mm-yyyy HH24:MI:SS') as hour_log,\r\n  count (distinct(call_id)) , sum(end_time-start_time) as total,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new\r\n  where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  start_time<end_time\r\n  group by date_trunc('day',  start_time) \r\n  order by date_trunc('day',  start_time) desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getRepetetiveAnswered = async (param, limit, answeredCallsOffset) => {\r\n  const query =\r\n    \"SELECT count( src_display_name) as cnt,src_display_name FROM  cl_segments_view_new as t where dst_end_time - dst_answer_time != interval '00:00:00' and dst_answer_time is not null and src_display_name like '0%' and (date_trunc('day', timestamp '\" +\r\n    param.paramStart +\r\n    \"' - INTERVAL '0 day') <= start_time) and (date_trunc('day', timestamp '\" +\r\n    param.paramFinish +\r\n    \"' + INTERVAL '1 day') >=  start_time) and dst_dn_type = '0' group by src_display_name order by cnt desc limit \" +\r\n    limit +\r\n    ' offset ' +\r\n    answeredCallsOffset;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getRepetetiveAnsweredCount = async param => {\r\n  const string = `SELECT \r\n  count(distinct( src_display_name)) as cnt\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and dst_answer_time is not null\r\n  and src_display_name like '0%'\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time)\r\n  and dst_dn_type = '0'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetails = async (params, queue) => {\r\n  const query = `SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tto_char(sum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*),'HH24:MI:SS') as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >=  timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n\torder by (date_trunc('day' , callcent_ag_dropped_calls.time_start)) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetailsTotal = async (params, queue) => {\r\n  const query = `with recursive cte1 as (\r\n    SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*) as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >= timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n)\r\nselect\r\ncount(cte1.day_abandoned) as day_count,\r\nsum(cte1.cnt) as totalcount,\r\nsum(cte1.total_waiting) as totalwaiting,\r\nto_char(sum(cte1.act)/count(cte1.day_abandoned),'HH24:MI:SS') as act\r\nfrom cte1`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCalls = async (params, queue) => {\r\n  const query = `SELECT \r\n  t1.from_userpart, \r\n  to_char(date_trunc('second',t1.time_start + interval '3 hour'), 'yyyy-mm-dd HH24:MI:SS') as timeofevent, \r\n  count(t1.is_answered), \r\n  queue_view.display_name \r\n  from callcent_queuecalls_view t1  \r\n  inner join queue_view on queue_view.dn = t1.q_num  \r\n  where \r\n  t1.from_userpart != '' \r\n  and \r\n  queue_view.display_name like '%${queue}' \r\n  and \r\n  (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >=  t1.time_start)  \r\n  and \r\n  (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start) \r\n  and \r\n  is_answered = false \r\n  and \r\n  reason_noanswercode != 2\r\n  and \r\n  reason_failcode = 1\r\n  group by t1.from_userpart , timeofevent,queue_view.display_name \r\n  order by timeofevent`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCallDetails = async (params, from_userpart) => {\r\n  const query = `SELECT '<--' as direction,src_dn,to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') AS dst_start_time,to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as dst_end_time,dst_end_time - dst_start_time as calltime from cl_segments_view_new where dst_dn = '${from_userpart}'\r\n  and (date_trunc('second', timestamp '${params}') <=  start_time at time zone 'utc' at time zone 'Etc/GMT+3') \r\n    union \r\n    SELECT  '-->' as direction, \r\n    from_userpart,\r\n    to_char(time_start at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    time_end - time_start as calltime \r\n    from callcent_queuecalls_view where from_userpart like '%${from_userpart}'\r\n    and \r\n    is_answered = true \r\n    and (date_trunc('second', timestamp '${params}') <=  time_start at time zone 'utc' at time zone 'Etc/GMT+3') \r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCalls = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getServiceLevel = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDropCall = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    q_num,\r\n    to_char(time_start,'dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end,'dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    ring_time,\r\n    from_userpart \r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day' ) >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n    order by time_start asc \r\n    LIMIT ${limit} OFFSET ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallSummary = async (paramStart, paramFinish) => {\r\n  const string = `    select\r\n\tto_char(date_trunc('day',time_start) , 'dd-mm-yyyy'),\r\n\tcount(distinct(call_history_id)),\r\n\tto_char(date_trunc('second',sum(ring_time)/count(distinct(call_history_id))),'HH24:MI:SS') as ring_time\r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n\tgroup by date_trunc('day',time_start)\t\r\n\torder by date_trunc('day',time_start) asc\r\n`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallCount = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    count(*)\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - INTERVAL '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day' ) <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n//dosya ismi ve klasör yoluyla birlikte ilgili .wav kaydını getir.\r\nexport const getRecording = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return axios.get(`http://${url}:${port}/downloadrecord/` + query);\r\n};\r\n//kayıt dosyalarının bulunduğu klasörün yolunu getir.\r\nexport const getPath = async () => {\r\n  return axios.get(`http://${url}:${port}/getRecordingPath`);\r\n};\r\n//kayıt dosyalarının bulunduğu klasörün yolunu getir.\r\n// export const getRecordingPath = async () => {\r\n//   let query =\r\n//     \"SELECT instanceparamvalue FROM public.phonesystem_mastertable where instanceparamname = '\" +\r\n//     'INST_RECORDING_PATH' +\r\n//     \"'  ORDER BY instanceparamname ASC \";\r\n//   return axios.post(`http://${url}:${port}/querymaster`, {\r\n//     token: localStorage.getItem('token'),\r\n//     query: query,\r\n//   });\r\n// };\r\n\r\nexport const getValidation = async (param, type) => {\r\n  const response = await axios.get(`http://${validationUrl}:${port}/api/validation/?string=${param}&type=${type}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserAuth = async (username, password) => {\r\n  const response = await axios.get(`http://${url}:${port}/password/${username}/${password}`, {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const getUserPass = async pass => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(`http://${url}:5600/api/userPass/?pass=` + encodeURIComponent(pass), config);\r\n  return response.data;\r\n};\r\n\r\nexport const getQueueList = async () => {\r\n  return axios.post(`http://${url}:${port}/queuewaiting`, {\r\n    token: localStorage.getItem('token'),\r\n  });\r\n};\r\n\r\nexport const getAgentConnection = async () => {\r\n  return axios.post(`http://${url}:${port}/detailconn`, { token: localStorage.getItem('token') });\r\n};\r\n\r\nexport const getActiveCalls = async () =>{\r\n  return axios.get(`http://${url}:${port}/acd`);\r\n}\r\n\r\nexport const getAgentStatus = async pass => {\r\n  let query = `WITH RECURSIVE cte1 as (\r\n    select \r\n    dn.value,\r\n    ivr.name \r\n    from \r\n    dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    ) , \r\n    cte2 as (\r\n    select\r\n    * from callcent_ag_qstatus\r\n    where timeofupdate > date_trunc('day', timestamp '${pass}')\r\n    )\r\n  select\r\n  dn,\r\n  display_name,\r\n  coalesce((\r\n  select \r\n  case \r\n  when cte2.is_loggedin_in_queue = 0 then 'Login' \r\n  when cte2.is_loggedin_in_queue = 1 then 'Logout'\r\n  else cte1.name\r\n  end as status\r\n  from cte2\r\n  left outer join cte1 on cte1.value = cast(cte2.is_loggedin_in_queue as character varying)\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1  \r\n  ),'State') as states,\r\n  date_trunc('second',coalesce(now()- (\r\n  select \r\n  timeofupdate\r\n  from cte2\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1\r\n  ),'10000 hours')) as statusTime\r\n  from users_view t\r\n  order by dn asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getBlock = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:5600/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\nexport const getAgentNumber = async () => {\r\n  let string = 'SELECT * FROM users_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueNumber = async () => {\r\n  let string = 'SELECT * FROM public.queue_view order by dn asc';\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailyCallDetails = async mydate => {\r\n  let query = `WITH RECURSIVE cte1 AS (\r\n    select \r\n    * \r\n    from cl_segments_view_new\r\n    where \r\n    start_time > date_trunc('day', timestamp '${mydate}')\r\n    and\r\n\t  start_time<end_time\r\n    order by start_time desc\r\n    )\r\n    select \r\n    ( select count (distinct call_id) from cte1) as total_call,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 0 and dst_dn_type = 1) as outbound_calls,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 0 and dst_dn_type = 0 ) as agent_to_agent_calls,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 1 and dst_dn_type = 0 and dst_answer_time is not null) as answered_inbound_calls,\r\n    (select sum(end_time-start_time) as totaltime from cte1),\r\n    (select (date_trunc('second',(date_trunc('second', sum(end_time-start_time))/( select count (distinct cte1.call_id) from cte1 ))))as average from cte1)`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakTime = async mydate => {\r\n  let query = `select * from logouts`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakName = async mydate => {\r\n  let query = `select \r\n  dn.value,\r\n  ivr.name,\r\n  dn.iddn \r\n  from dn \r\n  inner join ivr on dn.iddn = ivr.fkiddn\r\n  where cast(substring(dn.value from '[0-9]+') as bigint) >= 8072 \r\n  and cast(substring(dn.value from '[0-9]+') as bigint) <= 8079\r\n  order by dn.value asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakName = async (breakName, breakId) => {\r\n  let query = `update ivr set name = '${breakName}'\r\n  where ivr.fkiddn = ${breakId}`;\r\n  return axios.post(`http://${url}:${port}/insertsingle`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakTime = async (breakTime, breakNumber) => {\r\n  let query = `update logouts set period = ${breakTime}\r\n  where logouttype = '${breakNumber}'`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentDetails = async (agentNum, date) => {\r\n  let query = `\r\n  with recursive cte1 as \r\n\t( \r\n\tselect\r\n\tdst_dn,\r\n\tdst_display_name,\t\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time) as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom \r\n\tcl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\t((dst_dn_type = 0))\r\n\tand\r\n\tdst_dn = '${agentNum}'\t\r\n\tand \r\n\tact != 1\r\n\tgroup by dst_dn,dst_display_name),\r\n  cte2 as (\r\n\tselect\r\n\tsrc_dn,\r\n\tsrc_display_name,\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time)as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom cl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\tsrc_dn = '${agentNum}'\t\r\n\tand\r\n\t((src_dn_type =0) and (dst_dn_type=1))\r\n\t\r\n\tand \r\n\tact != 1\r\n\tgroup by src_dn,src_display_name\r\n) \t\r\n\tselect dst_dn,\r\n\tdst_display_name,\r\n  coalesce(cte1.totalcall,0) as inboundtotalcall,\r\n\tcoalesce(cte2.totalcall,0) as outboundtotalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') as inboundtotaltime,\r\n\tcoalesce(cte2.totaltime ,'0 second') as outboundtotaltime,\r\n\tcoalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0) as totalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second') as totaltime,\r\n\tdate_trunc('second',((coalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second'))/(coalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0)))) as average,\r\n  date_trunc('second',((coalesce(cte1.totaltime,'0 second') /(coalesce(cte1.totalcall,1))))) as inboundaverage,\t\r\n\tdate_trunc('second',((coalesce(cte2.totaltime,'0 second')/(coalesce(cte2.totalcall,1))))) as outboundaverage,\r\n\tcoalesce(cte1.totalcall,0) as inbound_call_to_agent,\r\n\tcoalesce(cte2.totalcall,0) as outbound_call_to_agent,\r\n\t(select count(distinct(call_id)) from cl_segments_view_new \r\n\t where dst_answer_time is not null \r\n\t and dst_dn = cte1.dst_dn\r\n\t and start_time > date_trunc('day',timestamp '${date}')) as answered_call\r\n\tfrom cte1\r\n\tleft outer join cte2 on cte1.dst_dn = cte2.src_dn\r\n  \r\n\r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSession = async (agNum, qNum, breakName, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%${qNum}'\r\n    and\r\n    ag_num like '%${agNum}'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )\r\n    \r\n    select \r\n    cte2.ag_num,\r\n    cte2.q_num,\r\n    case\r\n    when cte2.mainreason = 0 then 'Login'\r\n    when cte2.mainreason = 1 then 'Logout'\r\n    else cte1.name\r\n    end as status,\r\n    to_char(cte2.escapetime , 'dd.HH24:MI:SS') AS escapetime\r\n  \r\n   from cte2\t\r\n   left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n   where cast(cte2.mainreason as text) like '%${breakName}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSessionClicked = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte2.ag_num as Agent,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 1),'0 second')),'DDg HH24h MIm SSs') as Logout,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8072),'0 second')),'DDg HH24h MIm SSs') as \"m8072\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8073),'0 second')),'DDg HH24h MIm SSs') as \"m8073\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8074),'0 second')),'DDg HH24h MIm SSs') as \"m8074\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8075),'0 second')),'DDg HH24h MIm SSs') as \"m8075\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8076),'0 second')),'DDg HH24h MIm SSs') as \"m8076\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8077),'0 second')),'DDg HH24h MIm SSs') as \"m8077\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8078),'0 second')),'DDg HH24h MIm SSs') as \"m8078\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8079),'0 second')),'DDg HH24h MIm SSs') as \"m8079\" \r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n\t  where cte2.ag_num like '%${agNum}'\r\n    group by cte2.ag_num`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getInternalBreakTime = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num \r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte1.name,\r\n\t  to_char(sum(cte2.escapetime),'DDg HH24h MIm SSs')\r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n    where cte2.ag_num = '${agNum}'\r\n\t  and cte1.name is not null\r\n    group by cte1.name\r\n\t  order by sum(cte2.escapetime) desc\r\n\t  limit 5\r\n    `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\n//158 'in apileri/;\r\nexport const getAgentNumberV16 = async () => {\r\n  let string = 'SELECT dn,display_name FROM users_view order by dn asc';\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response.data;\r\n};\r\nexport const getIYSReport = async param => {\r\n  let string = '';\r\n  if (param.agent === 'All') {\r\n    string += `Select * from iysagents where issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  } else {\r\n    string += `Select * from iysagents where agent='${param.agent}' and issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  }\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/postgres/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getTeamsUsers = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamsusers`, values);\r\n};\r\n\r\nexport const getCsOnlineVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getcsonlinevoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const getCsTenantDialplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/gettenantdiaplan`, values);\r\n};\r\n\r\nexport const getCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamscallingpolicys`, values);\r\n};\r\n\r\nexport const changeCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changecallingpolicy`, values);\r\n};\r\n\r\nexport const changeCsVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changeteamsvoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const changeCsTenantDiaplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changetenantdiaplan`, values);\r\n};\r\n\r\nexport const getUserDetailsByUserId = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getuserbyid`, values);\r\n};\r\n\r\nexport const getQueueAnswerReport = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  )\r\n  select \r\n  to_char(cte1.dst_start_time,'yyyy-mm-dd') as dst_start_time,\r\n  sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)) as waiting_time,\r\n  sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time) as talking,\r\n  cte1.src_display_name,\r\n  cte1.dst_dn\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n  ORDER BY cte1.dst_start_time ${order}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportCount = async (startDate, endDate, queueNum, src) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%${src}'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n/*with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '$12-17-2021' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view\r\n  left outer join cte1 on cl_segments_view.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view.dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n  and\r\n  cl_segments_view.dst_start_time<=date_trunc('day', timestamp '12-17-2021' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2\r\n  \r\n*/\r\n\r\nexport const getQueueAnswerReportSummary = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `    \r\n    with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name,\r\n\t  src_did\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n\tand\r\n\tsrc_did != ''\r\n\tand\r\n\tdst_dn_type != 6\r\n  )\r\n  select\r\n  'Total' as total,\r\n  to_char(date_trunc('day' , cte1.dst_start_time), 'dd-mm-yyyy') as date,\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  group by date_trunc('day' , cte1.dst_start_time)\r\n  ORDER BY date_trunc('day' , cte1.dst_start_time)  ASC\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportSummaryTotal = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n    and\r\n    src_did != ''\r\n    and\r\n    dst_dn_type != 6\r\n  )\r\n  select\r\n  count(distinct(date_trunc('day' , cte1.dst_start_time))),\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act  \r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummary = async (startTime, endTime) => {\r\n  let string = `select * from cl_daily_summary_proc('${startTime}','${endTime}')`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryTotal = async (startTime, endTime) => {\r\n  let string = `\r\n  with recursive cte1 as (\r\n  select * from cl_daily_summary_proc('${startTime}','${endTime}')  \r\n  )\r\n  select\r\n'Total' as datetime,\r\nsum(cte1.totalcall) as totalcall,\r\nsum(cte1.answered) as answered,\r\nto_char(sum(cast(cte1.inboundtime as interval)), 'HH24:MI:ss') as inboundtime,\r\nto_char(sum(cast(cte1.waitingtime as interval)), 'HH24:MI:ss') as waitingtime,\r\nto_char(sum(cast(cte1.averageconnection as interval))/count(cte1.averageconnection), 'HH24:MI:ss') as averageconnection,\r\nsum(cte1.abondened) as abondened,\r\nsum(cte1.transfer) as transfer,\r\nto_char(sum(cast(cte1.long_time as interval)), 'HH24:MI:ss') as long_time,\r\nsum(cte1.zdisi) as zdisi,\r\nto_char(sum(cast(cte1.average_abondened_waiting as interval))/count(cte1.average_abondened_waiting), 'HH24:MI:ss') as average_abondened_waiting,\r\nsum(cte1.rona) as rona,\r\nsum(cte1.outbound) as outbound,\r\nto_char(sum(cast(cte1.outbound_time as interval)), 'HH24:MI:ss')as outbound_time,\r\nto_char(sum(cast(cte1.average_outbound_time as interval))/count(cte1.average_outbound_time), 'HH24:MI:ss') as average_outbound_time\r\nfrom cte1\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummary = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by src_dn\r\n  ), answerInb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as ansInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by dst_dn\t\r\n  ), answerOutb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as ansOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n  \r\n  select\r\n    age.dn as id,\r\n    age.display_name,\r\n    coalesce(inb.cntInbound,0) as total_inbound,\r\n    coalesce(outb.cntOutbound,0) as total_outbound,\r\n    coalesce(answerInb.ansInbound,0) as answered_inbound,\r\n    coalesce(answerOutb.ansOutbound,0) as answered_outbound\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn \r\n    left outer join answerInb on answerInb.dst_dn = age.dn\r\n    left outer join answerOutb on answerOutb.src_dn = age.dn\r\n    where age.dn like '%${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalled = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn like '%${agentNum}'\r\n    and dst_dn_type = 1\r\n    and act != 1\r\n  )\r\n  select \r\n  dst_display_name as en_uzun_aranan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n   dst_answer_time is not null\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCaller = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and act!= 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_uzun_arayan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  and\r\n  dst_answer_time is not null\r\n\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalledAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn ='${agentNum}' \r\n    and act != 1\r\n    and dst_dn_type = 1\r\n    order by dst_start_time desc\r\n  )\r\n  select \r\n  dst_display_name as en_cok_aranan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1  \r\n  group by dst_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCallerAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_cok_arayan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  group by src_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAgentTotalCall = (startTime, cte) => {\r\n  let string = `with recursive cte1 as(select * from cl_segments_daily_statics('${startTime}','${startTime}')),cte2 as (select src_did,count(distinct(call_id)) as callDid from cte1 where src_did != '' group by src_did order by count(distinct(call_id)) desc limit 5),cte3 as (select dst_display_name,count(distinct(call_id)) as agentCall from cte1 where dst_dn_type = 0 group by dst_display_name order by count(distinct(call_id)) desc limit 5) select * from ${cte}`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getWallBoardVoiceMail = async agentNum => {\r\n  let string = `SELECT count(distinct(call_id)) \r\n  FROM public.cl_segments_view_new where dst_caller_number = 'Ext.9999' \r\n  and dst_start_time > date_trunc('day',Now()) \r\n  and act != 1\r\n  and src_dn_type = 1 and \r\n  dst_dn = '${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getWallBoardLongTime = async agentNum => {\r\n  let string = `select\r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(dst_end_time - dst_start_time as text) as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  dst_dn = '${agentNum}' --parameter\r\n  and\r\n  dst_answer_time is not null\r\n  order by duration desc\r\n  limit 1`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getVersion = async () => {\r\n  return axios.get(`http://${url}:${port}/version`);\r\n};\r\n\r\nexport const getWallBoardWaitingTime = async agentNum => {\r\n  let string = `select \r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(sum(dst_answer_time - dst_start_time) as text)  as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  dst_answer_time is not null\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn = '${agentNum}'\r\n  group by dst_dn , dst_display_name`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDenemeLogin = param => {\r\n  return axios.post(`http://${url}:${port}/login`, param);\r\n};\r\n\r\nexport const getCallLog2 = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2Total = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2TotalSummary = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2Count = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDashboardTops = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallDetail = async callid => {\r\n  /* OLD\r\nwith recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    )\r\n    select\r\n  */\r\n  let string = `with recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    coalesce(dst_answer_time,dst_end_time) as dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    order by seg_order\r\n    )\r\n    select\r\n    to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','yyyy-mm-dd HH24:MI:SS') as start_time,\r\n    to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3'-dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','HH24h MIm SSs') as ring_time,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3'-dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','HH24h MIm SSs') as duration,\r\n    src_display_name as callers,\r\n    dst_display_name as calleds,\r\n    case when act = 12 then 'Transfer' when act = 10 and act_dn_type != 0 then 'Karşılama' when act = 10 and act_dn_type = 0 then 'Yönlendirme' when act_dn_type = 4 then 'Açılış ' else '-' end as states,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','yyyy-mm-dd HH24:MI:SS') as end_time\r\n    from cte1\r\n    order by dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3' asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalTotalCall = async date => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  order by start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalAnsweredCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and\r\n  dst_dn_type =0 \r\n  and\r\n  dst_answer_time is not null\r\n  order by dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutOfTime = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act=13`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalAbondenedCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 0 and act=15\r\n  order by dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTransferCall = async date => {\r\n  let string = `with recursive cte1 as ( \r\n    select\r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    dst_dn_type =0\r\n    and dst_start_time >= timestamp '${date}'\r\n    and dst_end_time <= timestamp '${date}' + interval '1 day'\r\n    and act = 12 and dst_dn_type = 0 \r\n    )\r\n    select\r\n    cl_segments_view_new.src_display_name as caller,\r\n    cte1.src_display_name as transferer,\r\n    cte1.dst_display_name as trasfered,\r\n    to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    inner join cte1 on cte1.call_id = cl_segments_view_new.call_id\r\n    where cl_segments_view_new.dst_start_time >= timestamp '${date}'\r\n    and cl_segments_view_new.dst_start_time <= timestamp '${date}' + interval '1 day'\r\n    and cl_segments_view_new.act != 1\r\n    and cl_segments_view_new.act != 12\r\n    order by cl_segments_view_new.dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalRonaCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_end_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and dst_dn_type = 0 and dst_answer_time is null\r\n  order by dst_end_time asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n//hata 4\r\nexport const getCallTransferReport = async (agent, selectedStartTime, selectedEndTime) => {\r\n  let string = `select\r\n\tdst_display_name as transferer,\r\n\tact_display_name as trasfered,\r\n\tsrc_display_name as caller,\r\n\tto_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    src_dn_type = 1\r\n    and \r\n\tdst_start_time >= timestamp '${selectedStartTime}'\r\n    and \r\n\tdst_end_time <= timestamp '${selectedEndTime}' + interval '1 day' \r\n    and \r\n\tdst_dn_type = 0 \r\n\tand \r\n\tdst_answer_time is not null\r\n\tand\r\n\tact = 10 -- transfer\r\n\tand\r\n\tact_dn_type != 8 -- not parked\r\n\tand\r\n\tstart_time != end_time\r\n\tand\r\n\tdst_display_name like '%${agent}%'\r\n\torder by call_id,seg_order`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT+3','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 1\r\n  order by dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getUsers = async () => {\r\n  let string = `SELECT * FROM public.users ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUser = async (userName, pass, type) => {\r\n  let string = `INSERT INTO public.users(name, pass, type) VALUES ('${userName}', '${pass}', '${type}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateUser = async (id, userName, pass, type) => {\r\n  let string = `UPDATE public.users\tSET name='${userName}', pass='${pass}', type='${type}' WHERE id = ${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepartmants = async () => {\r\n  let string = `SELECT * FROM public.departments ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepartmant = async name => {\r\n  let string = `INSERT INTO public.departments(name)VALUES ('${name}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateDepartmant = async (id, name) => {\r\n  let string = `UPDATE public.departments SET name='${name}' WHERE id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueues = async () => {\r\n  let string = `SELECT * FROM public.queue_view`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepOwnedQueues = async depId => {\r\n  let string = `SELECT * FROM public.department_queues where department_id = ${depId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `INSERT INTO public.department_queues(department_id, queue_id) VALUES (${depId}, ${queueId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId} and queue_id = ${queueId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedAllQueues = async depId => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserAllDepsWithDepId = async depId => {\r\n  let string = `DELETE FROM public.user_departments WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepWithDepId = async depId => {\r\n  let string = `DELETE FROM public.departments WHERE id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getSupervisors = async () => {\r\n  let string = `SELECT * FROM public.users where type = 'supervisor' ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getUserOwndedDeps = async userId => {\r\n  let string = `SELECT * FROM public.user_departments where user_id = ${userId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUserOwndedDeps = async (userId, depId) => {\r\n  let string = `INSERT INTO public.user_departments(user_id, department_id) VALUES (${userId}, ${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDeps = async (userId, depId) => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId} and department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDepsByUserId = async userId => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserByUserId = async userId => {\r\n  let string = `DELETE FROM public.users WHERE id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAgentsRecordListenAuth = async () => {\r\n  let string = `SELECT * FROM public.agent_auth ORDER BY agent_num ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setAgentsRecordListenAuthByAgentId = async (agentId, auth) => {\r\n  let string = `UPDATE public.agent_auth SET record_listen=${auth} WHERE agent_num = '${agentId}';`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const changeAgentStatus = async (agentId) =>{\r\n  return  axios.post(`http://${url}:${port}/changestatus`,{\r\n    token: localStorage.getItem('token'),\r\n    agentDn:`${agentId}`\r\n  });\r\n};\r\n\r\n//tag tablosunda ilgili çağrıya ait kayıt\r\nexport const getTagsByCallId = async (callId) => {\r\n  let string = `SELECT * from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`,{\r\n    token:localStorage.getItem('token'),\r\n    query:string\r\n  })\r\n};\r\nexport const getTagtextByCallId = async (callId) => {\r\n  let string = `SELECT tagtext from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`,{\r\n    token:localStorage.getItem('token'),\r\n    query:string\r\n  })\r\n};\r\nexport const TagByID = async (tag, id) => {\r\n  const query = `UPDATE tag SET tagtext='${tag}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, tagtext)\r\n         SELECT ${id}, '${tag}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'),\r\n    query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n//sadece skor bilgisi gelsin. * değil. veirler olduğu zaman ilgili fieldı yaz\r\nexport const getCallScoresByCallId = async (callId) => {\r\n  let string = `SELECT rating from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`,{\r\n    token:localStorage.getItem('token'),\r\n    query:string\r\n  })\r\n};\r\nexport const ScoreByID = async (rating, id) => {\r\n  const query = `UPDATE tag SET rating='${rating}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, rating)\r\n         SELECT ${id}, '${rating}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'),\r\n    query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getTagTypes = async () => {\r\n  let string = `SELECT * from public.tagtypes;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`,{\r\n    token:localStorage.getItem('token'),\r\n    query:string\r\n  })\r\n };\r\n\r\nexport const addTagTypes = async (depName,tagMessage,depId) =>{\r\n  let string = `INSERT INTO public.tagtypes(department, tagmassage,department_id) VALUES ('${depName}', '${tagMessage}',${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n}\r\nexport const setTagTypes = async (depName,tagMessage,depId, id) => {\r\n  let string = `UPDATE public.tagtypes SET \r\n  tagmassage='${tagMessage}',\r\n  department='${depName}', \r\n  department_id=${depId} \r\n  WHERE \r\n  tagtypes_id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteTag = async (id) =>{\r\n  let string = `DELETE FROM public.tagtypes WHERE tagtypes_id=${id}`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n}\r\n\r\n//quality-report\r\n//fields ani,agent,score\r\nexport const getQualityReport = async () => {\r\n  let string = `SELECT * from public.csat;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`,{\r\n    token:localStorage.getItem('token'),\r\n    query:string\r\n  })\r\n };\r\n//quality-report\r\n\r\nexport const getQueuesByAgent = async param => {\r\n  const query = `SELECT queue_dn,queue_display_name FROM public.extensions_by_queues_view where extension_dn='${param}'`;\r\n\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const showBreaks = async agent => {\r\n  const query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n  ), cte2 as (SELECT to_char(\r\n        sum(timeofupdate - (select\r\n                  timeofupdate\r\n                  from\r\n                  callcent_ag_qstatus\r\n                  where\r\n                  ag_num = qs.ag_num\r\n                  and\r\n                  q_num = qs.q_num\r\n                  and\r\n                  qs.timeofupdate > timeofupdate\r\n                  order by timeofupdate desc\r\n                  limit 1)) , 'dd - HH24:MI:ss') as escapetime,\r\n        (select\r\n         is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) as mainreason,\r\n        ag_num,\r\n        q_num\r\n        FROM\r\n        callcent_ag_qstatus qs\r\n        where\r\n        ag_num like '${agent}'\r\n        and\r\n        is_loggedin_in_queue = 0\r\n        and\r\n        (select\r\n              is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) is not null\r\n        and\r\n       timeofupdate <= timestamp '${param} 23:59:59'\r\n        and\r\n        timeofupdate >= timestamp '${param} 00:00:00'\r\n        group by mainreason,ag_num,q_num\r\n        order by mainreason asc )\r\n        \r\n        select \r\n        cte2.ag_num,\r\n        cte2.q_num,\r\n        case\r\n        when cte2.mainreason = 0 then 'Login'\r\n        when cte2.mainreason = 1 then 'Logout'\r\n        else cte1.name\r\n        end as status,\r\n        cte2.escapetime\r\n        from cte2\r\n        left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const changeSessionStatus = async agent => {\r\n  const response = await axios.post(`http://${url}:${port}/changestatus`, JSON.stringify({ token: localStorage.getItem('token'), agentDn: agent }), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\nexport const qstatus = async param => {\r\n  const response = await axios.post(`http://${url}:${port}/agentqueues`, JSON.stringify(param), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\nexport const getBreakNums = async () => {\r\n  const query = `select dn.value,ivr.name from dn full join ivr on dn.iddn=ivr.fkiddn  where value in ('8072','8073','8074','8075','8076','8077','8078','8079') order by value asc`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};","import React, { useState, useEffect } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport { GroupOutlined } from '@material-ui/icons';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst TasksCounterCard = () => {\r\n  const [extensions, setExtensions] = useState('');\r\n  const [param] = useState({ token: localStorage.getItem('token') });\r\n  useEffect(() => {\r\n    api\r\n      .getExtensions(param)\r\n      .then(resp => setExtensions(resp.data.data.activeExtension + '/' + resp.data.data.totalExtension));\r\n  }, [param]);\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<GroupOutlined />}\r\n        number={String(extensions)}\r\n        label={<IntlMessages id={'dashboard.extensions'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksCounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cable from '@material-ui/icons/Link';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst Trunks = () => {\r\n  let totalquery = 'select * from public.externalline order by fkiddn ASC';\r\n  let trunksUpQuery = 'SELECT count(ipincontactreg) FROM gateway';\r\n\r\n  const [paramtotal] = useState({ token: localStorage.getItem('token'), query: totalquery });\r\n  const [paramTrunksUp] = useState({ token: localStorage.getItem('token'), query: trunksUpQuery });\r\n  const [totalTrunks, setTotalTrunks] = useState('');\r\n\r\n  const [trunksUp, setTrunksUp] = useState([{ count: 0 }]);\r\n  useEffect(() => {\r\n    api.getTotalTrunks(paramtotal).then(resp => setTotalTrunks(JSON.parse(resp.data.data)));\r\n    api.getTrunksUp(paramTrunksUp).then(resp => setTrunksUp(JSON.parse(resp.data.data)));\r\n  }, [paramtotal, paramTrunksUp]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<Cable />}\r\n        number={String(trunksUp[0].count) + '/' + String(totalTrunks.length)}\r\n        label={<IntlMessages id={'dashboard.trunks'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trunks;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport PhoneIcon from '@material-ui/icons/PhoneOutlined';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nconst ActiveCallCount = () => {\r\n  const [response, setactiveCount] = useState();\r\n  const [param] = useState({\r\n    token: localStorage.getItem('token'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.getActiveCallCount(param).then(resp => setactiveCount(resp.data.data.count));\r\n  }, [param]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<PhoneIcon />}\r\n        number={String(response)}\r\n        label={<IntlMessages id={'dashboard.active'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#EA4C4C -18.96%', '#C14545 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveCallCount;\r\n","export function Logout() {\r\n  localStorage.removeItem('login');\r\n  localStorage.removeItem('token');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5AnsweredCalls() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n        select\r\n        dn,\r\n        display_name\r\n        from\r\n        users_view\r\n      ), inb as (\r\n        select \r\n        dst_dn,\r\n        count(distinct(call_id)) as cntInbound\r\n        from\r\n        cl_segments_view\r\n        where start_time >= date_trunc('day',timestamp '${startTime}')\r\n        and dst_dn_type = 0\r\n        and dst_answer_time is not null\r\n        and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n        group by dst_dn\r\n      )\r\n      \r\n      select\r\n        age.display_name,\r\n        sum(coalesce(inb.cntInbound,0)) as total,\r\n        age.dn\r\n        from age\r\n        left outer join inb on inb.dst_dn = age.dn\r\n        where age.dn like '%'\r\n        group by age.display_name,age.dn\r\n        order by sum(coalesce(inb.cntInbound,0)) desc\r\n        limit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5answercalls'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && parseInt(data[1]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && parseInt(data[2]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && parseInt(data[3]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && parseInt(data[4]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Inbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5inbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name.split(':')[0]} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name.split(':')[0]} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name.split(':')[0]} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name.split(':')[0]} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name.split(':')[0]} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Outbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5outbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { QueryBuilder } from '@material-ui/icons';\r\n\r\nexport default function DashboardTop5TalkTime() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n\tsum(dst_end_time-dst_answer_time) as durationInb,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n\tsum(dst_end_time - dst_answer_time) as duration,  \r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n    select\r\n    age.display_name,\r\n\tage.dn,\r\n\tsum(outb.duration+inb.durationInb)\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn\r\n\twhere outb.duration+inb.durationInb is not null\r\n\tgroup by age.display_name,age.dn\r\n\torder by sum(outb.duration+inb.durationInb) desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  const totalseconds = items => {\r\n    let total = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i]?.sum.includes('.')) {\r\n        total += parseInt(items[i]?.sum.split('.')[0]) * 24 * 60 * 60;\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      } else {\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const checkDots = timeString => {\r\n    if (timeString === undefined) {\r\n      return '';\r\n    }\r\n    if (timeString?.includes('.')) {\r\n      let tempHour = parseInt(timeString.split('.')[0]) * 24 + parseInt(timeString.split('.')[1].split(':')[0]);\r\n      return tempHour + 'h ' + timeString.split(':')[1] + 'm ' + timeString.split(':')[2] + 's';\r\n    } else {\r\n      return timeString?.split(':')[0] + 'h ' + timeString?.split(':')[1] + 'm ' + timeString?.split(':')[2] + 's';\r\n    }\r\n  };\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   console.log(new Date().toLocaleDateString());\r\n  //   let asdad = new Date().setDate(new Date().getDate() - 7);\r\n  //   console.log(convertTimeToApiString(new Date(asdad).toLocaleDateString()));\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5talktime'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[0]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[0]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[1]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[1]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[2]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[2]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[3]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[3]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[4]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[4]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DashboardTop5AnsweredCalls from './DashboardTop5AnsweredCalls';\r\nimport DashboardTop5Inbound from './DashboardTop5Inbound';\r\nimport DashboardTop5Outbound from './DashboardTop5Outbound';\r\nimport DashboardTop5TalkTime from './DashboardTop5TalkTime';\r\n\r\nexport default function DashboardTops() {\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <Grid item md={3}>\r\n          <DashboardTop5TalkTime />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5AnsweredCalls />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Inbound />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Outbound />\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MissedCalls from './MissedCalls';\r\nimport InboundRules from './InboundRules';\r\nimport HeaderChartComponent from './HeaderChartComponent';\r\nimport OutboundCall from './OutboundCall';\r\nimport Extensions from './Extensions';\r\nimport * as api from '../../../api/api';\r\nimport Trunks from './TrunksUp';\r\nimport ActiveCallCount from './ActiveCallCount';\r\nimport { useHistory } from 'react-router';\r\nimport { Logout } from 'services/auth/logout';\r\nimport DashboardTops from './Tops';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nconst breadcrumbs = [\r\n  { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n  { label: <IntlMessages id={'sidebar.dashboard'} />, isActive: true },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  orderLg1: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SamplePage = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  let date = new Date();\r\n\r\n  let totalInbound = 0;\r\n  let totalOutbound = 0;\r\n  let totalMissed = 0;\r\n  const [param, setParam] = useState(date.getDate());\r\n  const [inboundcalls, setInbound] = useState([]);\r\n  const [outboundcalls, setOutbound] = useState([]);\r\n  const [missedcalls, setMissedCalls] = useState([]);\r\n\r\n  // const convertToLocalTimeData = date_ => {\r\n  //   var date = new Date(date_);\r\n  //   var year = date.getFullYear();\r\n  //   var month = date.getMonth() + 1;\r\n  //   var dt = date.getDate();\r\n\r\n  //   if (dt < 10) {\r\n  //     dt = '0' + dt;\r\n  //   }\r\n  //   if (month < 10) {\r\n  //     month = '0' + month;\r\n  //   }\r\n\r\n  //   return year + '-' + dt + '-' + month;\r\n  // };\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n  const sort = array => {\r\n    return array.sort((a, b) => {\r\n      let da = new Date(a.start_time.split('-')[1] + '/' + a.start_time.split('-')[0] + '/' + a.start_time.split('-')[2]);\r\n      let db = new Date(b.start_time.split('-')[1] + '/' + b.start_time.split('-')[0] + '/' + b.start_time.split('-')[2]);\r\n      return da - db;\r\n    });\r\n  };\r\n  if (missedcalls.length > 0) {\r\n    for (let i = 0; i < missedcalls.length; i++) {\r\n      totalMissed += parseInt(missedcalls[i].count);\r\n    }\r\n    // missedcalls.map(Miss => {\r\n    //   totalMissed += parseInt(Miss.count);\r\n    // });\r\n  }\r\n\r\n  if (outboundcalls.length > 0) {\r\n    for (let i = 0; i < outboundcalls.length; i++) {\r\n      totalOutbound += parseInt(outboundcalls[i].count);\r\n    }\r\n    // outboundcalls.map(Out => {\r\n    //   totalOutbound += parseInt(Out.count);\r\n    // });\r\n  }\r\n\r\n  if (inboundcalls.length > 0) {\r\n    for (let i = 0; i < inboundcalls.length; i++) {\r\n      totalInbound += parseInt(inboundcalls[i].count);\r\n    }\r\n    // inboundcalls.map(Inbound => {\r\n    //   totalInbound += parseInt(Inbound.count);\r\n    // });\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMissedCalls(param - 1)\r\n      .then(resp => setMissedCalls(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getOutboundCalls(param - 1)\r\n      .then(resp => setOutbound(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getInboundCalls(param - 1)\r\n      .then(resp => {\r\n        setInbound(JSON.parse(resp.data.data));\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [param, history]);\r\n\r\n  const inboundObject = inboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const outboundObject = outboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const missedObject = missedcalls.map(data => ({\r\n    start_time: data.times,\r\n    count: data.count,\r\n  }));\r\n\r\n  for (let d = new Date(date.getFullYear(), date.getMonth(), 1); d <= date; d.setDate(d.getDate() + 1)) {\r\n    if (!inboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      inboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!outboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      outboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!missedObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      missedObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n  }\r\n\r\n  const fetchData = array => {\r\n    const arr = sort(array);\r\n    if (param <= 7) {\r\n      return arr.slice(Math.max(arr.length - param, 0));\r\n    } else {\r\n      return arr;\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < inboundObject.length; i++) {\r\n    inboundObject[i].start_time = getNewDate(inboundObject[i].start_time);\r\n  }\r\n\r\n  for (let i = 0; i < outboundObject.length; i++) {\r\n    outboundObject[i].start_time = getNewDate(outboundObject[i].start_time);\r\n  }\r\n  for (let i = 0; i < missedObject.length; i++) {\r\n    missedObject[i].start_time = getNewDate(missedObject[i].start_time);\r\n  }\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"sidebar.dashboard\" />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <InboundRules setParam={setParam} date={date} data={fetchData(inboundObject)} total={totalInbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <OutboundCall setParam={setParam} date={date} data={fetchData(outboundObject)} total={totalOutbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <MissedCalls setParam={setParam} date={date} data={fetchData(missedObject)} total={totalMissed} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Grid item xs={12} xl={12} className={classes.orderLg1}>\r\n        <GridContainer>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <ActiveCallCount />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Extensions />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Trunks />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DashboardTops />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <HeaderChartComponent\r\n              date={date}\r\n              setParam={setParam}\r\n              inbound={fetchData(inboundObject)}\r\n              missed={fetchData(missedObject)}\r\n              outbound={fetchData(outboundObject)}\r\n            />\r\n          </Grid>\r\n        </GridContainer>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SamplePage;\r\n","import React from 'react';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, IconButton, InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  },\r\n  errorNumber: {\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 800,\r\n    lineHeight: 1,\r\n    marginBottom: 30,\r\n    textShadow: '10px 6px 8px hsla(0,0%,45.9%,.8)',\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .searchBtn': {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 50px 5px 15px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      '&:focus': {\r\n        boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Error404 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box fontSize={{ xs: 100, sm: 160 }} className={classes.errorNumber}>\r\n        404\r\n      </Box>\r\n      <Box fontSize={{ xs: 16, sm: 24 }} mb={8} color=\"grey.500\">\r\n        <IntlMessages id=\"extraPages.404Msg\" />\r\n      </Box>\r\n      <Box className={classes.searchRoot}>\r\n        <InputBase placeholder={'Search...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <IconButton className=\"searchBtn\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <IntlMessages id=\"extraPages.goHome\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/auth/auth-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authWrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: props => (props.variant === 'bgColor' ? `URL(${bgImage})` : ''),\r\n    backgroundPosition: props => (props.variant === 'bgColor' ? 'center center' : ''),\r\n    backgroundRepeat: props => (props.variant === 'bgColor' ? 'no-repeat' : ''),\r\n    backgroundSize: props => (props.variant === 'bgColor' ? 'cover' : ''),\r\n    position: 'relative',\r\n    padding: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: props => (props.variant === 'bgColor' ? alpha(theme.palette.primary.main, 0.5) : ''),\r\n    },\r\n  },\r\n  authCard: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    maxWidth: props => (props.variant === 'default' ? '850px' : '550px'),\r\n    width: '100%',\r\n    boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.14), 0px 3px 1px rgba(0, 0, 0, 0.12), 0px 1px 5px rgba(0, 0, 0, 0.2)',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: props => (props.variant === 'default' ? '1050px' : '750px'),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AuthWrapper = ({ children, variant }) => {\r\n  const classes = useStyles({ variant });\r\n  return (\r\n    <Box className={classes.authWrap}>\r\n      <Box className={classes.authCard}>{children}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Button,Link } from '@mui/material';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n\r\n  authContent: {\r\n    padding: 30,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  formcontrolLabelRoot: {\r\n    '& .MuiFormControlLabel-label': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  },\r\n}));\r\n//variant = 'default', 'standard'\r\nconst SignIn = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  //7PidcZIBNf\r\n  let history = useHistory();\r\n  const [param, setParam] = useState({\r\n    name: '',\r\n    password: '',\r\n    type: 'console',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [loginState, setLoginState] = useState();\r\n  let data = [];\r\n  var myDate = new Date();\r\n  myDate.setDate(myDate.getDate() + 1);\r\n  data.push(myDate);\r\n\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    api\r\n      .getDenemeLogin(param)\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          setLoginState(resp.status);\r\n          localStorage.setItem('token', resp.data.data.token);\r\n        }\r\n      })\r\n      .catch(response => {\r\n        console.log(response.response.data.message);\r\n        alert(response.response.data.message);\r\n      })\r\n      .then(() => {\r\n        history.push('/dashboard');\r\n      });\r\n  };\r\n\r\n  function addNotification() {\r\n    onSubmit();\r\n  }\r\n\r\n  if (loginState === 200) {\r\n    localStorage.setItem('login', loginState);\r\n  }\r\n\r\n  let [, setVersion] = useState('0.0.0');\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const browser = (function() {\r\n    const test = function(regexp) {\r\n      return regexp.test(window.navigator.userAgent);\r\n    };\r\n    switch (true) {\r\n      case test(/edg/i):\r\n        return 'Edge';\r\n      case test(/opr/i) || test(/opera/i):\r\n        return 'Opera';\r\n      case test(/chrome/i) && !!window.chrome:\r\n        return 'Chrome';\r\n      case test(/MSIE/i):\r\n        return 'Internet Explorer 10-';\r\n      case test(/trident/i):\r\n        return 'Internet Explorer 11';\r\n      case test(/firefox/i):\r\n        return 'Firefox';\r\n      case test(/safari/i):\r\n        return 'Safari';\r\n      default:\r\n        return 'Other';\r\n    }\r\n  })();\r\n\r\n  useEffect(() => {\r\n    if (browser === 'Chrome' || browser === 'Opera') {\r\n      handleClose();\r\n    }\r\n    api.getVersion().then(response => {\r\n      setVersion(response.data.version);\r\n    });\r\n  }, [browser]);\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      <NotificationContainer />\r\n\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/login-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={1}>\r\n          <CmtImage src={'/images/favicon.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot} style={{ fontFamily: 'Roboto' }}>\r\n          <IntlMessages id={'login'} />\r\n        </Typography>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addNotification(e);\r\n          }}>\r\n          <Box mb={1}>\r\n            <TextField\r\n              label={<IntlMessages id={'username'} />}\r\n              fullWidth\r\n              onChange={event => {\r\n                setParam({\r\n                  name: event.target.value,\r\n                  password: param.password,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id={'password'} />}\r\n              fullWidth\r\n              id=\"pass\"\r\n              onChange={event => {\r\n                setParam({\r\n                  name: param.name,\r\n                  password: event.target.value,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <IntlMessages id={'language'} />:\r\n            <LanguageSwitcher />\r\n          </div>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n            <Button\r\n              type=\"submit\"\r\n              // onClick={() => {\r\n              //   addNotification();\r\n              // }}\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              <IntlMessages id={'login'} />\r\n            </Button>\r\n            <Link \r\n            underline=\"none\"\r\n             href={`${window.location.protocol}//${window.location.hostname}:3005`}\r\n             ><IntlMessages id={'userNagentLogin'} /></Link>\r\n          </Box>\r\n        </form>\r\n        <p style={{ textAlign: 'center' }}>V{process.env.REACT_APP_VERSION}</p>\r\n\r\n        {dispatch(AuhMethods[method].getSocialMediaIcons())}\r\n\r\n        <ContentLoader />\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{'Google Chrome kullanmanızı tavsiye ediyoruz'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Şuanda <b style={{ fontWeight: '800' }}>{browser}</b> tarayıcısını kullanıyorsunuz.\r\n            <hr style={{ marginTop: '15px', marginBottom: '10px' }} />\r\n            <p>Tavsiye edilen tarayıcılar</p>\r\n            <p>- Google Chrome</p>\r\n            <p>- Opera</p>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Kapat\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const AppHeaderHeight = 72;\r\nexport const AppHeaderHeightSm = 64;\r\nexport const AppFooterHeight = 72;\r\nexport const AppFooterHeightSm = 64;\r\nexport const AppMainContentPadding = 60;\r\nexport const InBuildAppHeaderHeight = 70;\r\n\r\nexport const InBuildAppSidebarHeaderHeight = 86;\r\nexport const MailAppContentHeaderHeight = 78;\r\n\r\nexport const TaskDetailHeaderHeight = 72;\r\nexport const TaskDetailAddCommentHeight = 72;\r\n\r\nexport const ChatSidebarHeaderHeight = 124;\r\nexport const ChatSidebarTabContainerHeight = 49;\r\nexport const ChatFooterHeight = 70;\r\nexport const CurrentAuthMethod = 'basic'; //jwtAuth,firebase,basic\r\n\r\nexport const getAppSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppHeaderHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getMailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getContactContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskDetailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getWallHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport SignIn from '../../@jumbo/components/Common/authComponents/SignIn';\r\n\r\nconst Login = () => <SignIn variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n// import { useIntl } from 'react-intl';\r\n// let curentLanguage = useIntl();\r\nexport const localeText ={\r\n    toolbarExport: <IntlMessages id={'export'} />,\r\n    toolbarExportPrint: <IntlMessages id={'print'} />,\r\n    toolbarExportCSV: <IntlMessages id={'downloadasCSV'} />,\r\n    columnMenuUnsort: <IntlMessages id={'unsort'} />,\r\n    columnMenuSortAsc: <IntlMessages id={'sortbyASC'} />,\r\n    columnMenuSortDesc: <IntlMessages id={'sortbyDESC'} />,\r\n    columnMenuFilter: <IntlMessages id={'filter'} />,\r\n    columnMenuHideColumn: <IntlMessages id={'hide'} />,\r\n    columnMenuShowColumns: <IntlMessages id={'showcolumns'} />,\r\n    noRowsLabel: <IntlMessages id={'norows'} />,\r\n    columnsPanelTextFieldLabel: <IntlMessages id={'findColumn'} />,\r\n    columnsPanelTextFieldPlaceholder: <IntlMessages id={'columnTitle'} />,\r\n    columnsPanelDragIconLabel: <IntlMessages id={'reorderColumn'} />,\r\n    columnsPanelShowAllButton: <IntlMessages id={'showAll'} />,\r\n    columnsPanelHideAllButton: <IntlMessages id={'hideAll'} />,\r\n    // filterPanelAddFilter: <IntlMessages id={'addFilter'} />,\r\n    // filterPanelDeleteIconLabel: <IntlMessages id={'delete'} />,\r\n    // filterPanelLinkOperator:<IntlMessages id={'logicOperator'} />,\r\n    // filterPanelOperators: <IntlMessages id={'operator'} />,\r\n    // filterPanelOperatorAnd: <IntlMessages id={'and'} />,\r\n    // filterPanelOperatorOr: <IntlMessages id={'or'} />,\r\n    // filterPanelColumns: <IntlMessages id={'columns'} />,\r\n    // filterPanelInputLabel: <IntlMessages id={'value'} />,\r\n    // filterPanelInputPlaceholder: <IntlMessages id={'filterValue'} />,\r\n    // filterOperatorContains: <IntlMessages id={'contains'} />,\r\n    // filterOperatorEquals: <IntlMessages id={'equals'} />,\r\n    // filterOperatorStartsWith: <IntlMessages id={'startsWith'} />,\r\n    // filterOperatorEndsWith: <IntlMessages id={'endsWith'} />,\r\n    // filterOperatorIsEmpty: <IntlMessages id={'isEmpty'} />,\r\n    // filterOperatorIsNotEmpty: <IntlMessages id={'isNotEmpty'} />,\r\n}\r\n/*    curentLanguage.locale === 'en-EN'\r\n    ? 'Abondened_queues'\r\n    : curentLanguage.locale === 'tr-TR'\r\n    ? 'Kuyruk_terk_raporu'\r\n    : curentLanguage.locale === 'de-DE'\r\n    ? 'Verlassene Warteschlangen'\r\n    : curentLanguage.locale === 'nl-NL'\r\n    ? 'Verlaten wachtrijen'\r\n    : ' ', */","import React,{useEffect,useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { Switch, Menu, MenuItem } from '@mui/material';\r\nimport * as api from 'api/api';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function AgentTable({ rows, setReloadValues }) {\r\n  //menu açılması mola seçimi\r\n  const [value, setValue] = useState([]);\r\n  const [anchorEl,setAnchorEl] = useState(null);\r\n  const [agentId,setAgentId] = useState(\"\");\r\n  useEffect(() => {\r\n    api.getBreakNums().then(resp => setValue([...JSON.parse(resp.data)]));\r\n  }, []);\r\n  const handleChangeRecordAuth = (event, agentId) => {\r\n    api.setAgentsRecordListenAuthByAgentId(agentId, event.target.checked).then(res => {\r\n      setReloadValues(agentId + event + new Date().getTime());\r\n    });\r\n  };\r\n\r\n  const handleChangeStatus = (event,agentId)=>{\r\n    if(!event.target.checked){\r\n      setAgentId(agentId);\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n    else{\r\n      api.changeAgentStatus(agentId).then(res => {\r\n        setReloadValues(agentId + event + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n  const handleClose = value => {\r\n    setAnchorEl(null);\r\n    const reg = /^\\d+$/;\r\n    if (reg.test(value)) {\r\n      api.changeSessionStatus(agentId).then(resp =>{\r\n        setReloadValues(agentId + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n    //mesai sonu seçimi\r\n    const handleEndOfShift = () => {\r\n      setAnchorEl(null);\r\n      api.changeSessionStatus(agentId).then(() => {\r\n        api.qstatus({ agentDn: agentId, token: localStorage.getItem('token') });\r\n        setReloadValues(agentId + new Date().getTime());\r\n      });\r\n    };\r\n\r\n  let curentLanguage = useIntl();\r\n  const column = [\r\n    { field: 'id', headerName: <IntlMessages id={'agentnumber'} />, width: 300 },\r\n    { field: 'displayname', headerName: <IntlMessages id={'agentname'} />, width: 500 },\r\n    { \r\n      field: 'status', \r\n      headerName: <IntlMessages id={'stateRow'} />, \r\n      width: 250,\r\n      renderCell: params =>(\r\n        <span>\r\n          <Switch \r\n          checked={params.value === \"Active\" ? true : false} \r\n          onChange={event => handleChangeStatus(event,params.id)}\r\n          />\r\n        </span>\r\n      ) \r\n    },\r\n    {\r\n      field: 'recordAuth',\r\n      headerName: <IntlMessages id={'reacordlistenauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeRecordAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Agent Status'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Agent Durum'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Agentstatus'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Agentenstatus'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"rows\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam Agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Name des Agenten'\r\n                    : ''\r\n                }\r\n                value=\"displayname\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Status'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Statusagent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenstatus'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n        <MenuItem onClick={() => handleEndOfShift()}>\r\n          <IntlMessages id={'shift.end'} />\r\n        </MenuItem>\r\n        {value.map((item, index) => (\r\n          <MenuItem key={index} onClick={() => handleClose(item.value)}>\r\n            {item.value} {item.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n        <div style={{ height: 700, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={column}\r\n            pageSize={100}\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            localeText={localeText}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </>\r\n    // <TableContainer component={Paper} className={classes.root}>\r\n    //   <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n    //     <TableHead>\r\n    //       <TableRow>\r\n    //         {column.map(column => (\r\n    //           <TableCell key={column.id} style={{ width: column.width }}>\r\n    //             {column.headerName}\r\n    //           </TableCell>\r\n    //         ))}\r\n    //       </TableRow>\r\n    //     </TableHead>\r\n    //     <TableBody>\r\n    //       {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n    //         return (\r\n    //           <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n    //             {column.map(column => {\r\n    //               const value = row[column.id];\r\n\r\n    //               return <TableCell key={column.id}>{value}</TableCell>;\r\n    //             })}\r\n    //           </TableRow>\r\n    //         );\r\n    //       })}\r\n    //     </TableBody>\r\n    //   </Table>\r\n    //   <TablePagination\r\n    //     rowsPerPageOptions={[10, 20, 50, 100]}\r\n    //     component=\"div\"\r\n    //     count={rows.length}\r\n    //     rowsPerPage={rowsPerPage}\r\n    //     page={page}\r\n    //     onPageChange={handleChangePage}\r\n    //     labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n    //     onRowsPerPageChange={handleChangeRowsPerPage}\r\n    //   />\r\n    // </TableContainer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport default function AgentList() {\r\n  const [response, setResponse] = useState([]);\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  useEffect(() => {\r\n    api.getAgentList({ token: localStorage.getItem('token') }).then(resp => {\r\n      let responseStatus = resp.data.data;\r\n      api.getAgentsRecordListenAuth().then(result => {\r\n        let recordAuths = JSON.parse(result.data.data);\r\n        for (let i = 0; i < responseStatus.length; i++) {\r\n          for (let j = 0; j < recordAuths.length; j++) {\r\n            if (responseStatus[i].agentNumber === recordAuths[j].agent_num) {\r\n              responseStatus[i].recordAuth = recordAuths[j].record_listen === 'True';\r\n            }\r\n          }\r\n        }\r\n        setResponse(responseStatus);\r\n      });\r\n    });\r\n  }, [reloadValues]);\r\n  const createData = (id, displayname, status, recordAuth) => {\r\n    return { id, displayname, status, recordAuth };\r\n  };\r\n  const rows = response.map(dataValue =>\r\n    createData(\r\n      dataValue.agentNumber,\r\n      dataValue.agentName,\r\n      dataValue.agentState === 'True' ? 'Active' : 'Passive',\r\n      dataValue.recordAuth,\r\n    ),\r\n  );\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'reports.callcenter'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.status'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.status'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Table rows={rows} setReloadValues={setReloadValues} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  textCapital: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  textAcc: {\r\n    textAlign: 'center',\r\n    '& a': {\r\n      marginLeft: 4,\r\n    },\r\n  },\r\n  alrTextRoot: {\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('sm')]: {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n}));\r\n\r\n//variant = 'default', 'standard', 'bgColor'\r\nconst SignUp = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const [name, setName] = useState('Demo User');\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const [password, setPassword] = useState('demo#123');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onRegister({ name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/sign-up-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={7}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          Create an account\r\n        </Typography>\r\n        <form>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.name\" />}\r\n              fullWidth\r\n              onChange={event => setName(event.target.value)}\r\n              defaultValue={name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id=\"appModule.password\" />}\r\n              fullWidth\r\n              onChange={event => setPassword(event.target.value)}\r\n              defaultValue={password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection={{ xs: 'column', sm: 'row' }}\r\n            alignItems={{ sm: 'center' }}\r\n            justifyContent={{ sm: 'space-between' }}\r\n            mb={3}>\r\n            <Box mb={{ xs: 2, sm: 0 }}>\r\n              <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n                <IntlMessages id=\"appModule.regsiter\" />\r\n              </Button>\r\n            </Box>\r\n\r\n            <Typography className={classes.alrTextRoot}>\r\n              <NavLink to=\"/signin\">\r\n                <IntlMessages id=\"signUp.alreadyMember\" />\r\n              </NavLink>\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n\r\n        <Box mb={3}>{dispatch(AuhMethods[method].getSocialMediaIcons())}</Box>\r\n\r\n        <Typography className={classes.textAcc}>\r\n          Have an account?\r\n          <NavLink to=\"/signin\">Sign In</NavLink>\r\n        </Typography>\r\n        <ContentLoader />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignUp from '../../@jumbo/components/Common/authComponents/SignUp';\r\n\r\nconst Register = () => <SignUp variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Register;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLog2DateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nexport default function CallLog2therFilters({\r\n  setSourceApi,\r\n  setDestinationApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus,\r\n  handleSubmitFilter,\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setSourceApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setSourceApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setSourceApi('0');\r\n    }\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetSelect, setTargetSelect] = useState('');\r\n  const handleChangeTargetSelect = event => {\r\n    setTargetSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setDestinationApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setDestinationApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setDestinationApi('0');\r\n    }\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [filter3Select, setFilter3Select] = useState('');\r\n  const handleChangeFilter3Select = event => {\r\n    setFilter3Select(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setAnswerStatus('');\r\n    } else if (event.target.value === 'answered') {\r\n      setAnswerStatus('-');\r\n    } else if (event.target.value === 'unanswered') {\r\n      setAnswerStatus('~');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'caller'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.source'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.source'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' || sourceFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneCallbackIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destination'} />}\r\n                  onChange={handleChangeTargetSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' || targetFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={filter3Select}\r\n                  label={<IntlMessages id={'calllog2.filter.filter3'} />}\r\n                  onChange={handleChangeFilter3Select}>\r\n                  <MenuItem value={'all'}>\r\n                  <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'calllog2.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'unanswered'}>\r\n                    <IntlMessages id={'calllog2.filter.unanswered'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleSubmitFilter();\r\n            }}\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog2, getCallLog2Total, getCallLog2Count, getCallLog2TotalSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLog2DateFilter from './DateFilter';\r\nimport CallLog2therFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLog2Filter({\r\n  setData,\r\n  limit,\r\n  offset,\r\n  setPage,\r\n  setCount,\r\n}) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd'));\r\n  let [sourceApi, setSourceApi] = useState('');\r\n  let [destinationApi, setDestinationApi] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select      \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  )  \r\n  SELECT   \r\n  call_id, \r\n  case \r\n  when src_dn_type = 1 then src_display_name else src_dn end as src_dn,  \r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,  \r\n  split_part(to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour,  \r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording'),    \r\n  case when cl_segments_view_new.dst_answer_time is not null then 'ok' else 'not ok' end as Salable,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' end as Salable \r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+0', 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cast(src_dn_type as text) like '%${sourceApi}'   \r\n  and  \r\n  cast(dst_dn_type as text) like '%${destinationApi}'  \r\n  and  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'  \r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time,seg_order asc   \r\n  limit ${limit} offset ${offset}\r\n  `;\r\n\r\n  let totalString = `with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  to_char((date_trunc('day',answered.dst_start_time)),'dd-mm-yyyy'),\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  group by date_trunc('day',answered.dst_start_time) \r\n  order by date_trunc('day',answered.dst_start_time) asc`;\r\n\r\n  let stringCount = `SELECT\r\n\tcast(count(*) as integer) as cnt\r\n\tFROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new\r\n\twhere\r\n\tcast(src_dn_type as text) like '%${sourceApi}'\r\n\tand\r\n\tcast(dst_dn_type as text) like '%${destinationApi}'\r\n\tand \r\n\t(dst_dn_type =0 \r\n\tor  dst_dn_type = 1)\r\n  \tand\r\n\tact != 1\r\n\tand\r\n\tdst_display_name like '%${destinationFilterNumber}%'\r\n\tand\r\n\tsrc_display_name like '%${sourceFilterNumber}%'\r\n\tand\r\n\tcoalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n  and \r\n  act_dn_type is null\r\n\tand(\r\n\t(dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n \tand\r\n \t(cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n    and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <=${destinationDnMax})`;\r\n\r\n  let stringTotalSummary = `\r\n  with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        // setSourceDnMin(sourceFilterText.split('-')[0]);\r\n        // setSourceDnMax(sourceFilterText.split('-')[1]);\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        // setDestinationDnMin(destinationFilterText.split('-')[0]);\r\n        // setDestinationDnMax(destinationFilterText.split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmitFilter = () => {\r\n    setLoading(true);\r\n    setPage(0);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Total(totalString).then(result => {\r\n      setLoading(false);\r\n    });\r\n  }, [totalString]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2TotalSummary(stringTotalSummary).then(result => {\r\n      setLoading(false);\r\n    });\r\n  }, [stringTotalSummary]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Count(stringCount).then(result => {\r\n      setCount(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n\r\n  return (\r\n    <div>\r\n      <CallLog2DateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLog2therFilters\r\n        setSourceApi={setSourceApi}\r\n        setDestinationApi={setDestinationApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        handleSubmitFilter={handleSubmitFilter}\r\n        setLoading={setLoading}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { InputLabel, MenuItem, Select, FormControl, Chip, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {getTagsByCallId, ScoreByID } from 'api/api';\r\n\r\nexport default function CallManagementCallDetail({ callId }) {\r\n  //çağrıya ait etiket bilgileri \r\n  const [tags,setTags] = useState([]);\r\n  //forms\r\n  const [rating,setRating] = useState(\"-1\");\r\n  useEffect(()=>{\r\n    getTagsByCallId(callId).then(resp => {\r\n      setTags(JSON.parse(resp.data.data));\r\n      setRating(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n    })\r\n  },[callId]);\r\n  //puan verildiğinde tetikenir. ilgili puanı çağrının puanına yazar\r\n  const handleRating = (event) =>{\r\n    ScoreByID(event.target.value,callId).then(()=>setRating(event.target.value));\r\n  }\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\">\r\n        <IntlMessages id={'calllog2.detail.callinfo'}/>\r\n      </Typography>\r\n      <hr/>\r\n      {\r\n        tags.length > 0 && (\r\n          tags[0]?.tagtext !== \"\" &&(\r\n          <Typography variant=\"h6\">\r\n          <IntlMessages id={'tag'}/> :\r\n            <Chip color=\"info\" label={tags[0]?.tagtext} /> \r\n          </Typography>\r\n        ))\r\n      }\r\n      <FormControl variant=\"standard\" fullWidth>\r\n            <InputLabel id=\"score\">\r\n              <IntlMessages id={'score'} />\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"score\"\r\n              label={<IntlMessages id={'score'} />}\r\n              value={rating}\r\n              onChange={handleRating}>\r\n              <MenuItem value=\"-1\"><em>none</em></MenuItem>\r\n              <MenuItem value=\"5\"><IntlMessages id={'score.rating5'} /></MenuItem>\r\n              <MenuItem value=\"4\"><IntlMessages id={'score.rating4'} /></MenuItem>\r\n              <MenuItem value=\"3\"><IntlMessages id={'score.rating3'} /></MenuItem>\r\n              <MenuItem value=\"2\"><IntlMessages id={'score.rating2'} /></MenuItem>\r\n              <MenuItem value=\"1\"><IntlMessages id={'score.rating1'} /></MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    </div>\r\n  );\r\n}","import { FormControl, InputLabel, MenuItem, Select, Chip } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTagtextByCallId, TagByID } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Tag({call_id,tagsList}) {\r\n  const [tagValue, setTagValue] = useState('');\r\n\r\n  const handleChangeTag = event => {\r\n    TagByID(event.target.value,call_id).then(() =>{\r\n      setTagValue(event.target.value);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    if(call_id !== \"\"){\r\n      getTagtextByCallId(call_id).then(resp => {\r\n        setTagValue(JSON.parse(resp.data.data)[0]?.tagtext || '');\r\n    });\r\n    }\r\n\r\n  },[call_id]);\r\n\r\n  return (\r\n    <>\r\n    {\r\n      call_id === \"\"?(<small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'nontaggable'} /></small>):(\r\n        <>\r\n        {\r\n          // tagValue !== '' ? <span style={tagStyle}>{tagValue}</span> : \r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label11\"><IntlMessages id={'tag'} /></InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label11\"\r\n              id=\"demo-simple-select222\"\r\n              value={tagValue}\r\n              label={<IntlMessages id={'tag'} />}\r\n              style={{ width: '100%' }}\r\n              onChange={handleChangeTag}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n                {\r\n                  tagsList.map((item,index)=>(\r\n                  <MenuItem key={index} value={item.tagmassage}>\r\n                    <Chip color=\"info\" size=\"small\" label={item.tagmassage} />\r\n                  </MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        </> \r\n      )\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {getCallScoresByCallId } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Score({call_id}) {\r\n    const [callScore, setCallScore] = useState('-1');\r\n    useEffect(()=>{\r\n        getCallScoresByCallId(call_id).then(resp => {\r\n            setCallScore(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n        });\r\n    },[call_id]);\r\n  return (\r\n      <>\r\n      {\r\n          callScore !== '-1' ? (\r\n            <div>\r\n            {\r\n                GetScoreName(callScore)\r\n            }\r\n            {` (${callScore})`}\r\n            </div>\r\n          ) : (\r\n            <small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'noscore'} /></small>\r\n          )\r\n      }\r\n      </>\r\n  );\r\n}\r\n\r\nfunction GetScoreName(rating){\r\n    switch (rating) {\r\n        case \"5\":\r\n            return <IntlMessages id={'score.rating5'} />\r\n        case \"4\":\r\n            return <IntlMessages id={'score.rating4'} />\r\n        case \"3\":\r\n            return <IntlMessages id={'score.rating3'} />\r\n        case \"2\":\r\n            return <IntlMessages id={'score.rating2'} />\r\n        case \"1\":\r\n            return <IntlMessages id={'score.rating1'} />\r\n        default:\r\n            return <IntlMessages id={'noscore'} /> \r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport VolumeDown from '@mui/icons-material/VolumeDown';\r\nimport VolumeUp from '@mui/icons-material/VolumeUp';\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport PauseRounded from '@mui/icons-material/PauseRounded';\r\nimport PlayArrowRounded from '@mui/icons-material/PlayArrowRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst formWaveSurferOptions = ref => ({\r\n  container: ref,\r\n  waveColor: '#9cceff',\r\n  progressColor: '#1976d2',\r\n  cursorColor: '#1976d2',\r\n  barWidth: 2,\r\n  barRadius: 3,\r\n  barHeight:1,\r\n  barGap:2,\r\n  responsive: true,\r\n});\r\n\r\nexport default function AudioWaveForm({ url }) {\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n\r\n  useEffect(() => {\r\n    setPlay(false);\r\n\r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n\r\n    wavesurfer.current.load(url);\r\n\r\n    wavesurfer.current.on(\"ready\", function() {\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(volume);\r\n        setVolume(volume);\r\n      }\r\n    });\r\n    return () => wavesurfer.current.destroy();\r\n  }, [url]);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n  const onVolumeChange = e => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"waveform\" ref={waveformRef} />\r\n      <Stack spacing={2} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n      <IconButton\r\n          aria-label={!playing ? 'play' : 'pause'}\r\n          onClick={handlePlayPause}\r\n          >\r\n            {!playing ? (\r\n              <PlayArrowRounded\r\n                sx={{ fontSize: '3rem' }}\r\n                htmlColor=\"#000\"\r\n              />\r\n            ) : (\r\n              <PauseRounded sx={{ fontSize: '3rem' }} htmlColor=\"#000\" />\r\n            )}\r\n        </IconButton>\r\n        <Stack width={300} spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n        <VolumeDown />\r\n        <Slider \r\n        id=\"volume\"\r\n        name=\"volume\"\r\n        aria-label=\"Volume\" \r\n        value={volume} \r\n        onChange={onVolumeChange} \r\n        min={0.01}\r\n        max={1}\r\n        step={.025}/>\r\n        <VolumeUp />\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport { AccessTime, Check, CloudDownload, DateRange, Person, PhoneDisabled, PlayArrow,GetApp } from '@material-ui/icons';\r\nimport { getRecording, getPath, getTagTypes } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallManagementCallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Tag from './Tag';\r\nimport Score from './Score';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\n\r\nexport default function CallManagementTable({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  count\r\n}) {\r\n  let [path, setPath] = useState('');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow:\"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\r\n    borderRadius:\"8px\",\r\n    position:\"absolute\",\r\n    left:\"50%\",\r\n    top:\"50%\",\r\n    transform: 'translate(-50%, -50%)',\r\n    padding:\"12px 8px\",\r\n    border:\"2px solid #ededed\",\r\n    backgroundColor:\"#ededed\",\r\n    width:\"600px\"\r\n  }\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  //audio player için\r\n  const [record,setRecord] = useState(\"\");\r\n  const [openAudioModal,setOpenAudioModal] = useState(false);\r\n  const listenRecord = dir => {\r\n    getRecording(path, dir)\r\n      .then(resp => {\r\n        if(resp !== null){\r\n          setRecord(resp.request.responseURL);\r\n          setOpenAudioModal(true);\r\n        }\r\n        else{\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  const downloadRecord = dir => {\r\n    getRecording(path, dir)\r\n      .then(resp => {\r\n        if(resp !== null){\r\n          window.location.href = resp.request.responseURL;\r\n        }\r\n        else{\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000)\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  let tableData = data.filter((item)=> item.coalesce !== \"no recording\");\r\n  tableData = tableData.map((item, index) => ({\r\n    callId: item.call_id,\r\n    listen: item.coalesce,\r\n    download:item.coalesce,\r\n    date: getNewDate(item.date),\r\n    caller:\r\n      item.src_dn === '-'\r\n        ? item.src_display_name.split(':')[0]\r\n        : item.src_display_name.split(':')[0] + '(' + item.src_dn + ')',\r\n    called: item.dst_dn === '-' ? item.dst_display_name : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    salable1: item.salable1,\r\n    duration: item.duration,\r\n    salable: item.salable,\r\n    id: index,\r\n    Tag: isTaggable(item.salable1, item.salable) ? item.call_id: \"\",\r\n    score:item.call_id\r\n  }));\r\n  \r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const [tagsList,setTagsList] = useState([]);\r\n  useEffect(()=>{\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)))\r\n  },[]);\r\n  const columns = [\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'download',\r\n      headerName: <IntlMessages id={'download'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => downloadRecord(params.value)}\r\n              style={{ backgroundColor: '#1769aa', color: '#fff' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <GetApp />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable1',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          )}\r\n\r\n          {params.value === 'not ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'Tag',\r\n      headerName: <IntlMessages id={'tag'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Tag call_id={params.value} tagsList={params.value !== \"\"? tagsList : []}/>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: 'score',\r\n      headerName: <IntlMessages id={'score'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Score call_id={params.value}/>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {tableData.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          {\r\n            <ExcelFile\r\n              filename={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? 'Call_Log'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Cagri_raporu'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Oproep_Log'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Anrufliste'\r\n                  : ''\r\n              }\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={tableData} name=\"data\">\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Date'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Tarih'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Datum'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Datum'\r\n                      : ''\r\n                  }\r\n                  value=\"date\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'From'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kimden'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Van'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Von'\r\n                      : ''\r\n                  }\r\n                  value=\"caller\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Destination'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Hedef'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Bestemming'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Ziel'\r\n                      : ''\r\n                  }\r\n                  value=\"called\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Direction'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Yön'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Richting'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Genaamd'\r\n                      : ''\r\n                  }\r\n                  value=\"salable1\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Duration'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Süre'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Looptijd'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Dauer'\r\n                      : ''\r\n                  }\r\n                  value=\"duration\"\r\n                />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          }\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px',padding:\"2rem 1.5rem\" }}>\r\n          <CallManagementCallDetail callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={openAudioModal}\r\n        onClose={() => setOpenAudioModal(false)}\r\n        aria-labelledby=\"Audio\"\r\n        aria-describedby=\"Audio Player Modal\"\r\n      >\r\n        <Box style={audioModalStyle}>\r\n        <AudioWaveForm url={record}/>\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <div style={{ height: '440px', width: '100%' }}>\r\n          <DataGrid\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(count[0].cnt)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(data.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nconst nonTaggableCallTypes = [\"dahili\",\"\"]\r\nconst isTaggable = (callType, status) =>{\r\n  if(status === \"ok\"){\r\n    if(!nonTaggableCallTypes.includes(callType)){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallManagementFilter from './Filter';\r\nimport CallManagementTable from './Table';\r\n\r\nexport default function CallManagement() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'callmanagement'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState([{ count: 10 }]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'callmanagement'} />} breadcrumbs={breadcrumbs}>\r\n        <CallManagementFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setCount={setCount}\r\n        />\r\n        <CallManagementTable\r\n          count={count}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DropCallLogDateFilter({ setStartTimeApi, setEndTimeApi, handleClick }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        //start.setHours(23, 59, 59);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate());\r\n        //end.setHours(23, 59, 59);\r\n        end.setHours(0, 0, 0);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getDropCall, getDropCallCount, getDropCallSummary, getQueueNumber } from 'api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport DropCallLogDateFilter from './DateFilter';\r\nfunction Filter({ setResponse, setLimit, setPage, setOffset, limit, offset, setCount, setResponseSummary }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    console.log('Yıl ' + paramDate.getFullYear());\r\n    console.log('aY ' + paramDate.getMonth() + 1);\r\n    console.log('Gün ' + paramDate.getDate());\r\n    console.log('Today Time ' + today.getTime());\r\n    console.log('Param Time ' + paramDate.getTime());\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: dateDifference(formatDate(today)),\r\n    paramFinish: dateDifference(formatDate(today)),\r\n  });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDropCall(params.paramStart, params.paramFinish, limit, offset).then(resp => {\r\n      var list = JSON.parse(resp.data.data);\r\n      getQueueNumber().then(queueList => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          // let tempQueueList = JSON.parse(queueList.data.data);\r\n          // for (let j = 0; j < tempQueueList.length; i++) {\r\n          //   if (list[i]?.q_num === tempQueueList[j].dn) {\r\n          //     list[i]?.q_num = tempQueueList[j].dn + '-' + tempQueueList[j].display_name;\r\n          //   }\r\n          // }\r\n          // tempQueueList = [];\r\n          JSON.parse(queueList.data.data).map(queue => {\r\n            if (list[i].q_num === queue.dn) {\r\n              list[i].q_num = queue.dn + '-' + queue.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n      });\r\n      setLoading(false);\r\n    });\r\n\r\n    getDropCallSummary(params.paramStart, params.paramFinish).then(resp => {\r\n      setResponseSummary(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getDropCallCount(params.paramStart, params.paramFinish).then(resp => {\r\n      setCount(JSON.parse(resp.data.data)[0]);\r\n    });\r\n  }, [params, offset, limit, setCount, setResponse, setResponseSummary]);\r\n  const handleClick = () => {\r\n    setOffset(0);\r\n    setLimit(10);\r\n    setPage(0);\r\n    setParams({\r\n      paramStart: dateDifference(startDate),\r\n      paramFinish: dateDifference(endDate),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <DropCallLogDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { Check, CloudDownload, DateRange } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport RingVolumeIcon from '@mui/icons-material/RingVolume';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, count, responseSummary }) {\r\n  const columns = [\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'filter.menu.enddate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#DE834D' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'from'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#5584AC' }} />{' '}\r\n          <b style={{ color: '#5584AC' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'q_num',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#064635' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'ringing_time',\r\n      headerName: <IntlMessages id={'ringingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <RingVolumeIcon style={{ verticalAlign: '-5px', color: '#A3423C' }} />{' '}\r\n          <b style={{ color: '#781D42' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(id, q_num, start_time, end_time, ringing_time, from_userpart) {\r\n    return { id, q_num, start_time, end_time, ringing_time, from_userpart };\r\n  }\r\n\r\n  console.log(responseSummary);\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.time_end,\r\n      data.ring_time\r\n        .split('.')[0]\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_userpart,\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(count.count);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Dropped_call'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kacan_cagri_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Afgebroken oproep'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Aufgelegter Anruf'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"q_num\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'End Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bitiş Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Eindtijd'\r\n                          : ''\r\n                      }\r\n                      value=\"end_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Ringing Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Çalma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Beltijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Klingelzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"ringing_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'From Userpart'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Van gebruikersgedeelte'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Vom Benutzerteil'\r\n                          : ''\r\n                      }\r\n                      value=\"from_userpart\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        {/* <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(count.count)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(count.count)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'average_ring_time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {responseSummary.map(total => (\r\n                <TableRow>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {total.to_char}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {total.count}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        padding: '5px',\r\n                        borderRadius: '7px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      {total.ring_time}\r\n                    </span>{' '}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction DroppedCall() {\r\n  const [responseSummary, setResponseSummary] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [count, setCount] = useState({ count: 0 });\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'droppedcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'droppedcall'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            limit={limit}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setCount={setCount}\r\n            setResponseSummary={setResponseSummary}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            count={count}\r\n            responseSummary={responseSummary}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default DroppedCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DidReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({\r\n  setSelectedStartTime,\r\n  selectedStartTime,\r\n  selectedEndTime,\r\n  setSelectedEndTime,\r\n  setParams,\r\n  setLimit,\r\n  setPage,\r\n  setOffset,\r\n  notFirstReq,\r\n  setNotFirstReq,\r\n  setDidNumber,\r\n  didNumber,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  const [didNumbers, setDidNumbers] = useState([]);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setOffset(0);\r\n    setLimit(10);\r\n    setPage(0);\r\n    setParams({\r\n      paramStart: formatDate(selectedStartTime),\r\n      paramFinish: formatDate(selectedEndTime),\r\n    });\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.getDidNumbers().then(resp => {\r\n      setDidNumbers(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'mountlydetails.didnumber'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'mountlydetails.didnumber'} />}\r\n                  value={didNumber}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {didNumbers.map((did, index) => (\r\n                    <MenuItem key={index} value={did.conditiondata}>\r\n                      {did.conditiondata}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { AccessTime, CloudDownload, ContactPhone, Phone, PhoneInTalk, PhoneMissed } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DataTable({ response, setLimit, limit, setOffset, setPage, page, count, setResponse }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const column = [\r\n    { id: 'did_number', headerName: <IntlMessages id={'did.number'} />, width: '60px' },\r\n    { id: 'total_did', headerName: <IntlMessages id={'wallboard.total.call'} />, width: '100px' },\r\n    { id: 'did_not_answered', headerName: <IntlMessages id={'wallboard.unanswered'} />, width: '30px' },\r\n    { id: 'did_answered', headerName: <IntlMessages id={'wallboard.answered'} />, width: '30px' },\r\n    { id: 'duration', headerName: <IntlMessages id={'Duration'} />, width: '30px' },\r\n    { id: 'act', headerName: <IntlMessages id={'average'} />, width: '30px' },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    total_did_number: 0,\r\n    total_did: 0,\r\n    did_not_answered: 0,\r\n    did_answered: 0,\r\n    duration: 0,\r\n  };\r\n\r\n  for (let i = 0; i < response.length; i++) {\r\n    total.total_did_number++;\r\n    total.total_did += parseInt(response[i].total_did);\r\n    total.did_not_answered += parseInt(response[i].did_not_answered);\r\n    total.did_answered += parseInt(response[i].answered);\r\n    total.duration += parseInt(hourToSecond(response[i].duration));\r\n  }\r\n  // response.map(resp => {\r\n  //   total.total_did_number++;\r\n  //   total.total_did += parseInt(resp.total_did);\r\n  //   total.did_not_answered += parseInt(resp.did_not_answered);\r\n  //   total.did_answered += parseInt(resp.answered);\r\n  //   total.duration += parseInt(hourToSecond(resp.duration));\r\n  // });\r\n  function hourToSecond(param) {\r\n    var second =\r\n      parseInt(param.split(' ')[0].slice(0, -1)) * 3600 +\r\n      parseInt(param.split(' ')[1].slice(0, -1)) * 60 +\r\n      parseInt(param.split(' ')[2].slice(0, -1));\r\n    return second;\r\n  }\r\n\r\n  function secondToTime(param) {\r\n    let time =\r\n      addZero(Math.floor(param / 60 / 60)) +\r\n      'h ' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      'm ' +\r\n      addZero(Math.floor((param % 3600) % 60)) +\r\n      's';\r\n    return time;\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = response.map((item, index) => ({\r\n    id: index,\r\n    did_number: item.did_number,\r\n    total_did: parseInt(item.total_did),\r\n    did_not_answered: parseInt(item.did_not_answered),\r\n    answered: parseInt(item.answered),\r\n    duration: item.duration,\r\n    act: item.act,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'did_number',\r\n      headerName: <IntlMessages id={'dıdnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhone style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_did',\r\n      headerName: <IntlMessages id={'totalcallcount'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <Phone style={{ verticalAlign: '-5px', color: '#6998AB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#6998AB' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'did_not_answered',\r\n      headerName: <IntlMessages id={'unansweredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PhoneMissed style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#F05454' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'answeredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PhoneInTalk style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#D47AE8' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'act',\r\n      headerName: <IntlMessages id={'average'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#7267CB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(parseInt(count));\r\n    setPage(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {response.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {response.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {response.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {response.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'DID_report'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'DID_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'DID_rapport'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'DID_report'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={response} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'DID Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Did Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'DID-Nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'DID-Nummer'\r\n                          : ''\r\n                      }\r\n                      value=\"did_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Total Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Toplam Arama Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Totaal aantal gesprekken'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesamtzahl der Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"total_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Unanswered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmamış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal onbeantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anzahl unbeantworteter Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"did_not_answered\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Answered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal beantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Zählung angenommener Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"answered\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n        {/* <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'DID_report' : 'DID_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={response} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'DID Number' : 'Did Numarası'} value=\"did_number\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Total Call Count' : 'Toplam Arama Sayısı'}\r\n                value=\"total_did\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Unanswered Calls' : 'Cevaplanmamış Çağrılar'}\r\n                value=\"did_not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Answered Calls' : 'Cevaplanmış Çağrılar'}\r\n                value=\"answered\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile> */}\r\n      </div>\r\n      <Paper style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, count].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <TableContainer component={Paper} className={classes.root} style={{ fontFamily: 'Roboto' }}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map(column => (\r\n                <TableCell key={column.id} style={{ width: column.width }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          {response.length > 0 && (\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                {count + ' '} <IntlMessages id={'did.number'} />\r\n              </TableCell>\r\n              <TableCell>{total.total_did}</TableCell>\r\n              <TableCell>{total.did_not_answered}</TableCell>\r\n              <TableCell>{total.did_answered}</TableCell>\r\n              <TableCell>{secondToTime(total.duration)}</TableCell>\r\n              <TableCell>{secondToTime(total.duration / total.total_did)}</TableCell>\r\n            </TableRow>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DIDReport = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'did.report'} />, isActive: true },\r\n  ];\r\n\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(yesterday) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n\r\n  const [dates, setDates] = useState({\r\n    paramStart: formatDate(yesterday) + ' 00:00:00',\r\n    paramFinish: formatDate(today) + ' 23:59:00',\r\n  });\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${dates.paramStart}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${dates.paramFinish}' + interval '1 day') >= start_time)\r\n    and src_did != ''\r\n  \tand\r\n\t  dst_answer_time is not null\r\n    )\r\n\t,\r\n\tcte2 as (\r\n    select\r\n\t sum(dst_end_time-dst_answer_time) as duration,\r\n    src_did,\t\r\n    count(distinct(call_id)) as total_call\r\n    from cte1 \t\r\n    -- where dst_dn_type = 0\r\n    --  and act != 1\r\n    group by src_did\r\n    )\r\n\t,\t\r\n\tcte3 as (\r\n    select\r\n    src_did,\t\r\n    count(distinct(call_id)) as did_not_asnwered\r\n    from cte1 \t\r\n    where dst_answer_time is  null\t\r\n    and act!= 1\r\n    group by src_did\r\n    )\r\n    select\r\n    cte2.src_did as did_number,\r\n    cte2.total_call as total_did,\r\n    coalesce(cte3.did_not_asnwered,0) as did_not_answered,\r\n    cte2.total_call - coalesce(cte3.did_not_asnwered,0) as answered,\r\n\tto_char(coalesce(cte2.duration,'0 second'),'HH24h MIm SSs') as duration,\r\n\tto_char((coalesce(cte2.duration/cte2.total_call,'0 second')),'HH24h MIm SSs') as act\r\n    from\r\n    cte2\r\n    left outer join cte3 on cte2.src_did = cte3.src_did\r\n    where (cte2.src_did like '%${didNumber}' or cte2.src_did like '%${didNumber}')\r\n    limit ${limit} offset ${offset}\t\t\r\n`;\r\n\r\n  let queryCount = ` select \r\n    count(distinct(src_did))\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${dates.paramStart}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${dates.paramFinish}' + interval '1 day') >= start_time)\r\n    and src_did != ''`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(dates.paramStart, dates.paramFinish)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        api.getDidData(query).then(resp => {\r\n          setResponse(JSON.parse(resp.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        api.getDidDataCount(queryCount).then(resp => {\r\n          setCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [query, notFirstReq, didNumber, queryCount]);\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'did.report'} />} breadcrumbs={breadcrumbs}>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            didNumber={didNumber}\r\n            setDidNumber={setDidNumber}\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setParams={setDates}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setNotFirstReq={setNotFirstReq}\r\n            notFirstReq={notFirstReq}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            response={response}\r\n            count={count}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default DIDReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Collapse, IconButton, Link } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { setForgetPassMailSent } from '../../../../redux/actions/Auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      order: 1,\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  alertRoot: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\n//variant = 'default', 'standard', 'bgColor'\r\nconst ForgotPassword = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const { send_forget_password_email } = useSelector(({ auth }) => auth);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let timeOutStopper = null;\r\n    if (send_forget_password_email) {\r\n      setOpen(true);\r\n\r\n      timeOutStopper = setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(false));\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n\r\n    return () => {\r\n      if (timeOutStopper) clearTimeout(timeOutStopper);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [send_forget_password_email]);\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onForgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <div className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/forgot-img.png'} />\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.authContent}>\r\n        <div className={'mb-7'}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </div>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          ForgotPassword\r\n        </Typography>\r\n        <Collapse in={open}>\r\n          <Alert\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n            className={classes.alertRoot}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}>\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }>\r\n            A mail has been sent on your email address with reset password link.\r\n          </Alert>\r\n        </Collapse>\r\n        <form>\r\n          <div className={'mb-5'}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </div>\r\n          <div className={'mb-5'}>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n              <IntlMessages id=\"appModule.resetPassword\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography>\r\n              Don't remember your email?\r\n              <span className={'ml-2'}>\r\n                <Link href=\"#\">\r\n                  <IntlMessages id=\"appModule.contactSupport\" />\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </form>\r\n        <ContentLoader />\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport ForgotPassword from '../../@jumbo/components/Common/authComponents/ForgotPassword';\r\n\r\nconst ForgotPasswordPage = () => <ForgotPassword variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouteLogin = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) !== 200 && localStorage.getItem('validation') !== true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const NotPrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) === 200 ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/signin', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function ServiceLevelDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getQueue, getServiceLevel } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ServiceLevelDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [params, setParams] = useState({ startDate: formatDate(yesterday), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT '10' as ring,count(q_num) as cnt FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59'\r\n    and ring_time > interval '0 seconds' and ring_time < interval '10 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '20' as ring,count(q_num) FROM callcent_queuecalls_view where \r\n    time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '10 seconds' and ring_time < interval '20 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union\r\n    SELECT '30' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and\r\n    ring_time > interval '20 seconds' and ring_time < interval '30 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '40' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00'\r\n    and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '30 seconds' and ring_time < interval '40 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '50' as ring,count(q_num) FROM \r\n    callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '40 seconds' and ring_time < interval '50 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '60' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '50 seconds'\r\n    and ring_time < interval '60 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` order by ring asc`;\r\n  useEffect(() => {\r\n    getServiceLevel(string).then(response => setResponse(JSON.parse(response.data.data)));\r\n  }, [string, setResponse]);\r\n  useEffect(() => {\r\n    getQueue().then(response => setQueueList(JSON.parse(response.data.data)));\r\n  }, []);\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  };\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <ServiceLevelDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(startDate)}\r\n                        onChange={setStartDate}\r\n                        label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(endDate)}\r\n                        onChange={setEndDate}\r\n                        label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                      />\r\n                    </Grid> */}\r\n                    <Grid item md={3} xs={3}>\r\n                      {/* <Field disabled={false} name=\"queueCheck\" as=\"select\" component={Select}>\r\n                        <MenuItem value=\"All\">\r\n                          <IntlMessages id={'all'} />\r\n                        </MenuItem>\r\n                        {queuelist.map((queue, index) => (\r\n                          <MenuItem key={index} value={queue.dn}>\r\n                            {queue.dn} {queue.display_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Field> */}\r\n                      <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                        <InputLabel id=\"queue-select-label\">\r\n                          <IntlMessages id={'queue.answer.report.queues'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((queue, index) => (\r\n                            <MenuItem key={index} value={queue.dn}>\r\n                              {queue.dn} {queue.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\nfunction createData(level, cnt) {\r\n  return { level, cnt };\r\n}\r\n\r\nfunction DataTable({ response }) {\r\n  const classes = useStyles();\r\n\r\n  let total = 0;\r\n  for (var i = 0; i < response.length; i++) {\r\n    total = total + parseInt(response[i].cnt);\r\n  }\r\n  function percent(cnt) {\r\n    var result = 0;\r\n    result = parseInt(cnt) / total;\r\n    return (parseFloat(result) * 100).toFixed(2);\r\n  }\r\n  const rows = response.map(data => createData(data.ring, percent(data.cnt)));\r\n\r\n  const csvData = rows.map(row => ({\r\n    level: row.level,\r\n    cnt: `%${row.cnt === 'NaN' ? '00.00' : row.cnt}`,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-EN'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Servis Seviyesi'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Service Level'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Seconds'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Saniye'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Seconden'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Sekunden'\r\n                  : ''\r\n              }\r\n              value=\"level\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Servis Seviyesi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Service Level'\r\n                  : ''\r\n              }\r\n              value=\"cnt\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'seconds'} />\r\n              </TableCell>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'service.level'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.level}>\r\n                <TableCell align=\"center\">{row.level}</TableCell>\r\n                <TableCell align=\"center\">%{row.cnt === 'NaN' ? '00.00' : row.cnt}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction ServiceLevel() {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'service.level'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'service.level'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item xs={12} xl={12}>\r\n          <Table response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Alert style={{ marginTop: '20px' }} severity=\"info\">\r\n        <IntlMessages id={'servicelevel.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default ServiceLevel;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedQueuesDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CircularProgress, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport {\r\n  getAbandonedQueueCalls,\r\n  getAbandonedQueueCallsDetails,\r\n  getQueue,\r\n  getAbandonedQueueCallsDetailsTotal,\r\n  getAgentNumber,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AbondenedQueuesDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setResponse,\r\n  limit,\r\n  offset,\r\n  setQueueList,\r\n  queuelist,\r\n  setDetails,\r\n  setPage,\r\n  setOffset,\r\n  setDetailsTotal,\r\n  setResponseCount,\r\n}) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n\r\n  const [params, setParams] = useState({ startDate: formatDate(today), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT callcent_ag_dropped_calls.q_num, callcent_ag_dropped_calls.ag_num, to_char(callcent_ag_dropped_calls.time_start,'dd-mm-yyyy HH24:MI:SS') as time_start, to_char(callcent_ag_dropped_calls.time_end,'dd-mm-yyyy HH24:MI:SS') as time_end,callcent_ag_dropped_calls.q_call_history_id,callcent_queuecalls.from_userpart, callcent_queuecalls.from_displayname, callcent_ag_dropped_calls.reason_noanswerdesc,callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start as waiting FROM callcent_ag_dropped_calls inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id where  callcent_ag_dropped_calls.time_start >= '\r\n\t${params.startDate}' \r\n\t and callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled' ${\r\n    queue === '' ? '' : \"and callcent_ag_dropped_calls.q_num = '\" + queue + \"'\"\r\n  } limit ${limit} offset ${offset}`;\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  let stringCount = `SELECT \r\n  count(*)\r\n  FROM callcent_ag_dropped_calls \r\n  inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id\r\n  where  callcent_ag_dropped_calls.time_start >= '${params.startDate}' \r\n  and\r\n  callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day' \r\n  and \r\n  callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n  `;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAbandonedQueueCalls(string).then(response => {\r\n      getAgentNumber().then(resp => {\r\n        var list = JSON.parse(response.data.data);\r\n        for (let i = 0; i < list.length; i++) {\r\n          JSON.parse(resp.data.data).map(res => {\r\n            if (list[i].ag_num === res.dn) {\r\n              list[i].ag_num = res.dn + '-' + res.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n        setLoading(false);\r\n      });\r\n    });\r\n\r\n    getAbandonedQueueCalls(stringCount).then(response => {\r\n      setResponseCount(JSON.parse(response.data.data)[0].count);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [string]);\r\n  useEffect(() => {\r\n    getQueue().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    getAbandonedQueueCallsDetails(params, queue).then(response => {\r\n      setDetails(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n\r\n  useEffect(() => {\r\n    getAbandonedQueueCallsDetailsTotal(params, queue).then(response => {\r\n      setDetailsTotal(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    event.target.value === '' ? setQueue('') : setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <AbondenedQueuesDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <DatePicker\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(startDate)}\r\n                        onChange={setStartDate}\r\n                        label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <DatePicker\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(endDate)}\r\n                        onChange={setEndDate}\r\n                        label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                      />\r\n                    </Grid> */}\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={''}>All</MenuItem>\r\n                          {queuelist.map((que, index) => (\r\n                            <MenuItem key={index} value={que.dn}>\r\n                              {que.dn} - {que.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\"\r\n                    variant=\"contained\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, queues, responseCount }) {\r\n  // const columns = [\r\n  //   { id: 'call_time', label: <IntlMessages id={'filter.menu.startdate'} />, minWidth: 60, align: 'center' },\r\n  //   {\r\n  //     id: 'callerid',\r\n  //     label: <IntlMessages id={'caller.id'} />,\r\n  //     minWidth: 70,\r\n  //     align: 'center',\r\n  //   },\r\n  //   { id: 'queue', label: <IntlMessages id={'queue'} />, minWidth: 60, align: 'center' },\r\n  //   {\r\n  //     id: 'waiting_time',\r\n  //     label: <IntlMessages id={'waiting.time'} />,\r\n  //     minWidth: 60,\r\n  //     align: 'center',\r\n  //   },\r\n  //   {\r\n  //     id: 'agent',\r\n  //     label: <IntlMessages id={'agent.number'} />,\r\n  //     minWidth: 60,\r\n  //     align: 'center',\r\n  //   },\r\n  // ];\r\n  const columns = [\r\n    {\r\n      field: 'call_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#30475E' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'callerid',\r\n      headerName: <IntlMessages id={'caller.id'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'queue',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'agent',\r\n      headerName: <IntlMessages id={'agent.number'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#AE431E' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'waiting.time'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(id, queue, call_time, waiting_time, callerid, agent) {\r\n    return { id, queue, call_time, waiting_time, callerid, agent };\r\n  }\r\n\r\n  for (var i = 0; i < datalist.length; i++) {\r\n    for (var z = 0; z < queues.length; z++) {\r\n      if (datalist[i].q_num === queues[z].dn) {\r\n        datalist[i].q_num = queues[z].dn + '  ' + queues[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.waiting\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_displayname,\r\n      data.ag_num,\r\n    ),\r\n  );\r\n\r\n  console.log(rows);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(responseCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Abondened_queues'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_terk_raporu'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Verlassene Warteschlangen'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Verlaten wachtrijen'\r\n                      : ' '\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Saati'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Caller Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Bellernummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anrufernummer'\r\n                          : ''\r\n                      }\r\n                      value=\"caller_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Sıra'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrij'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlange'\r\n                          : ''\r\n                      }\r\n                      value=\"queue\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Agent Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Agent Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Agent nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Agentennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"agent_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n        {/* {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Abondened_queues' : 'Kuyruk_terk_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Start Time' : 'Başlangıç Zamanı'} value=\"call_time\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Caller Number' : 'Arayan Numara'} value=\"callerid\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Queue' : 'Kuyruk'} value=\"queue\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Agent Number' : 'Agent Numarası'} value=\"agent\" />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale == 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                value=\"waiting_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )} */}\r\n      </div>\r\n      <Paper>\r\n        {/* <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(responseCount)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(responseCount)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nfunction Details({ details, detailsTotal }) {\r\n  const columns = [\r\n    { id: 'date_day', label: <IntlMessages id={'filter.menu.date'} />, minWidth: 100, align: 'center' },\r\n    { id: 'cnt', label: <IntlMessages id={'wallboard.total.call'} />, minWidth: 170, align: 'center' },\r\n\r\n    {\r\n      id: 'total_waiting_time',\r\n      label: <IntlMessages id={'waiting.time'} />,\r\n      minWidth: 170,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'act',\r\n      label: <IntlMessages id={'average'} />,\r\n      minWidth: 170,\r\n      align: 'center',\r\n    },\r\n  ];\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  // const returnTime = time => {\r\n  //   if (typeof time === 'undefined') {\r\n  //     time = '00';\r\n  //   } else {\r\n  //     if (time < 10) {\r\n  //       time = '0' + time;\r\n  //     } else {\r\n  //       time = time;\r\n  //     }\r\n  //   }\r\n  //   return time;\r\n  // };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(cnt, date_day, total_waiting_time, act) {\r\n    return { cnt, date_day, total_waiting_time, act };\r\n  }\r\n\r\n  const rows = details.map(data =>\r\n    createData(\r\n      data.cnt,\r\n      data.day_abandoned,\r\n      data.total_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n      data.act.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>\r\n          <IntlMessages id={'summery'} />\r\n        </caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"center\">{getNewDate(row.date_day)}</TableCell>\r\n              <TableCell align=\"center\">{row.cnt}</TableCell>\r\n              <TableCell align=\"center\">{row.total_waiting_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n              <TableCell align=\"center\">{row.act}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {detailsTotal.map((row, index) => (\r\n            <TableRow key={index} style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'total'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.totalcount}</TableCell>\r\n              <TableCell align=\"center\">{row.totalwaiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n              <TableCell align=\"center\">{row.act.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>{' '}\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n/**  */\r\n","import React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport Details from './Details';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport const AbandonedQueues = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [detailsTotal, setDetailsTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abandoned.queues'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abandoned.queues'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setDetails={setDetails}\r\n            setResponse={setResponse}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setQueueList={setQueueList}\r\n            queuelist={queuelist}\r\n            limit={limit}\r\n            offset={offset}\r\n            setDetailsTotal={setDetailsTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            page={page}\r\n            queues={queuelist}\r\n            setPage={setPage}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Details details={details} detailsTotal={detailsTotal} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function RepadativeCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  getQueueNumber,\r\n  getRepetetiveAll,\r\n  getRepetetiveAnswered,\r\n  getDidNumbers,\r\n  getRepetetiveAllCount,\r\n  getRepetetiveAnsweredCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getRepetetiveCallerDetails } from 'api/api';\r\nimport RepadativeCallsDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setallcalls,\r\n  setPage,\r\n  setAllCallOffset,\r\n  limit,\r\n  allCallOffset,\r\n  setAnsweredCallOffset,\r\n  setPageAnswered,\r\n  setAnsweredLimit,\r\n  answeredLimit,\r\n  answeredCallsOffset,\r\n  setAnsweredCalls,\r\n  setLimit,\r\n  callerNumber,\r\n  setResponseCaller,\r\n  setAllCallCount,\r\n  setAnsweredCallCount,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: formatDate(yesterday),\r\n    paramFinish: formatDate(today),\r\n  });\r\n\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [didList, setDidList] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRepetetiveAll(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setallcalls(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n    getRepetetiveAllCount(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setAllCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, limit, allCallOffset, queue, setallcalls, setAllCallCount, didNumber]);\r\n  useEffect(() => {\r\n    getRepetetiveAnswered(params, answeredLimit, answeredCallsOffset, queue).then(response =>\r\n      setAnsweredCalls(JSON.parse(response.data.data)),\r\n    );\r\n\r\n    getRepetetiveAnsweredCount(params).then(response => {\r\n      setAnsweredCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, answeredLimit, answeredCallsOffset, setAnsweredCalls, setAnsweredCallCount, queue]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDidNumbers().then(resp => {\r\n      setDidList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRepetetiveCallerDetails(params, callerNumber).then(resp => {\r\n      setResponseCaller(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params, callerNumber, setQueueList, setDidList, setResponseCaller]);\r\n\r\n  const handleClick = () => {\r\n    setAllCallOffset(0);\r\n    setAnsweredCallOffset(0);\r\n    setLimit(10);\r\n    setAnsweredLimit(10);\r\n    setPage(0);\r\n    setPageAnswered(0);\r\n    setParams({\r\n      paramStart: formatDate(startDate),\r\n      paramFinish: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  const handleChangeQueueNumber = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeDidNumber = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RepadativeCallsDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <GridContainer>\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={queue}\r\n                    onChange={handleChangeQueueNumber}\r\n                    label={<IntlMessages id={'queue'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {queuelist.map((queue, index) => (\r\n                      <MenuItem key={index} value={queue.dn}>\r\n                        {queue.dn} - {queue.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={didNumber}\r\n                    onChange={handleChangeDidNumber}\r\n                    label={<IntlMessages id={'mountlydetails.didnumber'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {didList.map((did, index) => (\r\n                      <MenuItem key={index} value={did.conditiondata}>\r\n                        {did.conditiondata}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </GridContainer>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              onClick={() => {\r\n                handleClick();\r\n              }}\r\n              size=\"small\"\r\n              variant=\"contained\">\r\n              <IntlMessages id={'filter.menu.search'} />\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AllCalls = ({\r\n  allcalls,\r\n  setallcalls,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  setCallerNumber,\r\n  setOpen,\r\n  allCallCount,\r\n}) => {\r\n  const columns = [\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(cnt, src_display_name) {\r\n    return { cnt, src_display_name };\r\n  }\r\n\r\n  const rows = allcalls.map(data => createData(data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClick = number => {\r\n    setCallerNumber(number);\r\n    setOpen(true);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [exportAllOpen, setExpotAllOpen] = useState(false);\r\n  const handleExportAllOpen = () => setExpotAllOpen(true);\r\n  const handleExportAllClose = () => setExpotAllOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(allCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setallcalls([]);\r\n    handleExportAllOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={exportAllOpen}\r\n        onClose={handleExportAllClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      {/* {rows.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )} */}\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'allcalls'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell>\r\n                  <IntlMessages id={'details'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell style={{ cursor: 'pointer' }} onClick={() => handleClick(row.src_display_name)}>\r\n                      <VisibilityIcon style={{ color: '#F05454' }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, allCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={allCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={allcalls.length < limit || allcalls.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCalls;\r\n/** */\r\n/***/\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ responseCaller }) => {\r\n  const columns = [\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n    { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n    { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n    { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {responseCaller.map((row, index) => {\r\n            return (\r\n              <TableRow style={{ cursor: 'pointer' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                {columns.map(column => {\r\n                  const value = row[column.id];\r\n                  return <TableCell>{value}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AnsweredCalls = ({\r\n  answeredcalls,\r\n  setAnsweredCalls,\r\n  setAnsweredLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  answeredCallCount,\r\n}) => {\r\n  const columns = [\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(cnt, src_display_name) {\r\n    return { cnt, src_display_name };\r\n  }\r\n\r\n  const rows = answeredcalls.map(data => createData(data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setAnsweredLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setAnsweredLimit(answeredCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setAnsweredCalls([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      {/* {rows.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )} */}\r\n\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'wallboard.answered'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, answeredCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={answeredCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={\r\n            answeredcalls.length < limit || answeredcalls.length === 0 ? { disabled: true } : { disabled: false }\r\n          }\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnsweredCalls;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport CallTable from './AllCalls';\r\nimport Model from './Model';\r\nimport AnsweredCalls from './AnsweredCalls';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box, Button } from '@mui/material';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst RepetetiveCalls = () => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [answeredLimit, setAnsweredLimit] = useState(10);\r\n  const [allCallOffset, setAllCallOffset] = useState(0);\r\n  const [answeredCallsOffset, setAnsweredCallOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [pageAnswered, setPageAnswered] = useState(0);\r\n  const [allcalls, setallcalls] = useState([]);\r\n  const [answeredCalls, setAnsweredCalls] = useState([]);\r\n  const [callerNumber, setCallerNumber] = useState('');\r\n  const [responseCaller, setResponseCaller] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [allCallCount, setAllCallCount] = useState(10);\r\n  const [answeredCallCount, setAnsweredCallCount] = useState(10);\r\n  let curentLanguage = useIntl();\r\n\r\n  const handleClose = event => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'repetetive.calls'} />, isActive: true },\r\n  ];\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'repetetive.calls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <Filter\r\n            setResponseCaller={setResponseCaller}\r\n            setAnsweredCallCount={setAnsweredCallCount}\r\n            setallcalls={setallcalls}\r\n            callerNumber={callerNumber}\r\n            setPage={setPage}\r\n            setAllCallOffset={setAllCallOffset}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            answeredLimit={answeredLimit}\r\n            limit={limit}\r\n            setPageAnswered={setPageAnswered}\r\n            setLimit={setLimit}\r\n            allCallOffset={allCallOffset}\r\n            setAnsweredCallOffset={setAnsweredCallOffset}\r\n            answeredCallsOffset={answeredCallsOffset}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            setAllCallCount={setAllCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<AddIcCallIcon />}\r\n                    number={allCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'allcalls'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<PhoneInTalkIcon />}\r\n                    number={answeredCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'wallboard.answered'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <CallTable\r\n            setOpen={setOpen}\r\n            responseCaller={responseCaller}\r\n            offset={allCallOffset}\r\n            setOffset={setAllCallOffset}\r\n            allcalls={allcalls}\r\n            setallcalls={setallcalls}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setCallerNumber={setCallerNumber}\r\n            setPage={setPage}\r\n            page={page}\r\n            allCallCount={allCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <AnsweredCalls\r\n            answeredcalls={answeredCalls}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            answeredCallCount={answeredCallCount}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            setPage={setPageAnswered}\r\n            page={pageAnswered}\r\n            limit={answeredLimit}\r\n            setOffset={setAnsweredCallOffset}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model responseCaller={responseCaller} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <ExcelFile\r\n              filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls_Detail' : 'Mükerrer_arama_Detay'}\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={responseCaller} name=\"responseCaller\">\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'DID Number' : 'DID Numarası'} value=\"src_did\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Called' : 'Hedef DN'} value=\"dst_display_name\" />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Talk Time' : 'Konuşma Süresi'}\r\n                  value=\"talkingtime\"\r\n                />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                  value=\"waitingtime\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginLeft: '10px' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default RepetetiveCalls;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst QueueList = ({ setQueueAmaunt }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getQueueList().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n      setQueueAmauntFunction();\r\n    }\r\n    var queueListTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(queueListTimeout);\r\n    }\r\n  };\r\n\r\n  const setQueueAmauntFunction = () => {\r\n    let queAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].waitingNumber !== '-') {\r\n        queAmaunt++;\r\n      }\r\n    }\r\n    // response.map(queue => {\r\n    //   if (queue.waitingNumber !== '-') {\r\n    //     queAmaunt++;\r\n    //   }\r\n    // });\r\n\r\n    setQueueAmaunt(queAmaunt);\r\n  };\r\n\r\n  setQueueAmauntFunction();\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.waiting'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue'} />\r\n            </TableCell>\r\n            {/* <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.number'} />\r\n            </TableCell> */}\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.length >= 1\r\n            ? response.map((row, index) => {\r\n                return row.waitingNumber !== '-' ? (\r\n                  <TableRow style={{ backgroundColor: '#FFFD95' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.waitingNumber}</b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                      <b>\r\n                        {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                          ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                              .toString()\r\n                              .replace(':', 'h ')\r\n                              .replace(':', 'm ') + 's'\r\n                          : null}\r\n                      </b>\r\n                    </TableCell>\r\n                    {/* <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> {row.queueNumber}\r\n                    </TableCell> */}\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : null;\r\n              })\r\n            : null}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.waitingNumber === '-' ? (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                  <b>\r\n                    <IntlMessages id={'no.waiting'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                  <b>\r\n                    {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n                {/* <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> {row.queueNumber}\r\n                </TableCell> */}\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default QueueList;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport Chip from '@mui/material/Chip';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentConnection = ({ setCallAmaunt, setAgentAmaunt, setAgentNum, setAgentName }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentConnection().then(resp => {\r\n        setResponse(resp.data.data);\r\n        console.log(\"resp\",resp.data.data);\r\n      });\r\n      setValuesFunction();\r\n    }\r\n\r\n    var agentConnectionTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentConnectionTimeout);\r\n    }\r\n  };\r\n\r\n  const setValuesFunction = () => {\r\n    let callAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].connectionNumber !== '-') {\r\n        callAmaunt++;\r\n      }\r\n    }\r\n\r\n    setCallAmaunt(callAmaunt);\r\n    setAgentAmaunt(response.length);\r\n  };\r\n  setValuesFunction();\r\n\r\n  const setAgentNumFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const column = [\r\n    { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'agent'} />, width: '30px' },\r\n    { id: 'direction', headerName: <IntlMessages id={'direction'} />, width: '100px' },\r\n    { id: 'connection_number', headerName: <IntlMessages id={'connection.number'} />, width: '60px' },\r\n    { id: 'connection_time', headerName: <IntlMessages id={'connection.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'internals.summary.agent'} />\r\n            </TableCell>{' '}\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'direction'} />\r\n            </TableCell>{' '}\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.number'} />\r\n            </TableCell>{' '}\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.time'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber !== '-' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}\r\n                hover\r\n                role=\"checkbox\"\r\n                tabIndex={-1}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                    {row.direction.includes(\"outbound\") ? (\r\n                      <Chip color=\"error\" label={<IntlMessages id={'outgoingcall'} />}/>\r\n                      ) : (\r\n                        <Chip color=\"success\" label={<IntlMessages id={'incomingcall'} />}/>\r\n                          )} \r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber === '-' ? (\r\n              <TableRow key={index} hover role=\"checkbox\" tabIndex={-1} style={{ cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentConnection;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentStatus = ({ setBreakeAgentAmount, setLoginAgentAmount, setAgentNum, setAgentName }) => {\r\n  var now = new Date();\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  // const addZero = param => {\r\n  //   if (param < 10) {\r\n  //     return '0' + param;\r\n  //   } else {\r\n  //     return param;\r\n  //   }\r\n  // };\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentStatus(convertToLocalTime(now)).then(resp => {\r\n        setResponse(JSON.parse(resp.data.data));\r\n      });\r\n      setValuesFunction();\r\n    }\r\n    var agentStatusTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentStatusTimeout);\r\n    }\r\n  };\r\n\r\n  //response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout'\r\n\r\n  const setValuesFunction = () => {\r\n    let breakeAgenAmaunt = 0;\r\n    let loginAgentAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout') {\r\n        breakeAgenAmaunt++;\r\n      } else if (response[i].states === 'Login') {\r\n        loginAgentAmaunt++;\r\n      }\r\n    }\r\n    // response.map(agent => {\r\n    //   if (agent.states !== 'Login' && agent.states !== 'State' && agent.states !== 'Logout') {\r\n    //     breakeAgenAmaunt++;\r\n    //   } else if (agent.states === 'Login') {\r\n    //     loginAgentAmaunt++;\r\n    //   }\r\n    // });\r\n    setBreakeAgentAmount(breakeAgenAmaunt);\r\n    setLoginAgentAmount(loginAgentAmaunt);\r\n  };\r\n  setValuesFunction();\r\n\r\n  const onClickUptateValuesFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const column = [\r\n    // { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'internals.summary.agent'} />, width: '30px' },\r\n    { id: 'states', headerName: <IntlMessages id={'state'} />, width: '60px' },\r\n    { id: 'statustime', headerName: <IntlMessages id={'state.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '33vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map(column => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={{\r\n                  paddingTop: '8px',\r\n                  paddingBottom: '8px',\r\n                  fontFamily: 'Roboto',\r\n                  color: 'white',\r\n                  backgroundColor: '#FA744F',\r\n                }}>\r\n                {column.headerName}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Login' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states !== 'Login' && res.states !== 'State' && res.states !== 'Logout' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{\r\n                  backgroundColor:\r\n                    res.states === 'YEMEK' && parseInt(res.statustime.split(':')[0]) >= 1\r\n                      ? '#DD4A48'\r\n                      : res.states === 'WC' && parseInt(res.statustime.split(':')[1]) >= 5\r\n                      ? '#DD4A48'\r\n                      : '#F3950D',\r\n                  cursor: 'pointer',\r\n                }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Logout' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#DE834D', cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'State' ? (\r\n              <TableRow key={index} style={{ cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />{' '}\r\n                  <b>{res.states === 'State' ? <IntlMessages id={'passive'} /> : res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PhonePausedIcon from '@mui/icons-material/PhonePaused';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport PhoneMissedIcon from '@mui/icons-material/PhoneMissed';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\n\r\nexport default function CallDetail({ queueAmaunt, callAmaunt, agentAmaunt, breakeAgentAmaunt, loginAgentAmaunt }) {\r\n  const mydate = new Date();\r\n  let history = useHistory();\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api\r\n        .getDailyCallDetails(convertToLocalTime(mydate))\r\n        .then(resp => {\r\n          setResponse(JSON.parse(resp.data.data)[0]);\r\n        })\r\n        .catch(resp => {\r\n          if (resp.response?.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }\r\n    var callDetailTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(callDetailTimeout);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const convertTime = timeString => {\r\n    if (timeString !== undefined) {\r\n      if (timeString.includes('.')) {\r\n        let tempHour = parseInt(timeString.split('.')[0]) * 24;\r\n        return (\r\n          tempHour +\r\n          parseInt(timeString.split('.')[1].split(':')[0]) +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[1] +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[2]\r\n        );\r\n      } else {\r\n        return timeString;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: '1px', fontFamily: 'Roboto' }}>\r\n      <GridContainer>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00') !== undefined\r\n                  ? (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.call.time'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AddIcCallIcon />}\r\n              number={response.total_call}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.total.call'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneCallbackIcon />}\r\n              number={(\r\n                parseInt(response.total_call) -\r\n                parseInt(response.agent_to_agent_calls) -\r\n                parseInt(response.outbound_calls)\r\n              ).toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.inbound'} />}\r\n              labelProps={{\r\n                fontSize: 11,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.outbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.outbound'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={response.answered_inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.answered'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#EA4C4C  -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneMissedIcon />}\r\n              number={String(\r\n                response.total_call -\r\n                  response.agent_to_agent_calls -\r\n                  response.answered_inbound_calls -\r\n                  response.outbound_calls <\r\n                  0\r\n                  ? '0'\r\n                  : response.total_call -\r\n                      response.agent_to_agent_calls -\r\n                      response.answered_inbound_calls -\r\n                      response.outbound_calls,\r\n              )}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.unanswered'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhonePausedIcon />}\r\n              number={queueAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.waiting.queue'} />}\r\n              labelProps={{\r\n                fontSize: 11,\r\n              }}\r\n              backgroundColor={['#EA4C4C -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={callAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.call'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PersonIcon />}\r\n              number={agentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<TimerIcon />}\r\n              number={breakeAgentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.inbreak'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<GroupIcon />}\r\n              number={String(loginAgentAmaunt - callAmaunt < 0 ? 0 : loginAgentAmaunt - callAmaunt)}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.available'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                (response.average !== '' ? response.average : '00:00:00') !== undefined\r\n                  ? (response.average !== '' ? response.average : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.average.time'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Tab, Tabs, Typography } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AgentDetail({ agentNum, agentName }) {\r\n  const [agentDetail, setAgentDetail] = useState({\r\n    dst_display_name: '-',\r\n    totalcall: '0',\r\n    answered_call: '0',\r\n    inbound_call_to_agent: '0',\r\n    outbound_call_to_agent: '0',\r\n    totaltime: '00:00:00',\r\n    average: '00:00:00',\r\n    inboundtotaltime: '00:00:00',\r\n    outboundtotaltime: '00:00:00',\r\n    inboundaverage: '00:00:00',\r\n    outboundaverage: '00:00:00',\r\n  });\r\n  let [voiceMail, setVoiceMail] = useState('0');\r\n  let [longTime, setLongTime] = useState('00:00:00');\r\n  let [waitingTime, setWaitingTime] = useState('00:00:00');\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getAgentDetails(agentNum, convertToLocalTime(Date.now())).then(res => {\r\n        if (JSON.parse(res.data.data).length === 0) {\r\n          setAgentDetail({\r\n            dst_display_name: agentName,\r\n            totalcall: '0',\r\n            answered_call: '0',\r\n            inbound_call_to_agent: '0',\r\n            outbound_call_to_agent: '0',\r\n            totaltime: '00:00:00',\r\n            average: '00:00:00',\r\n            inboundtotaltime: '00:00:00',\r\n            outboundtotaltime: '00:00:00',\r\n            inboundaverage: '00:00:00',\r\n            outboundaverage: '00:00:00',\r\n          });\r\n        } else {\r\n          setAgentDetail(JSON.parse(res.data.data)[0]);\r\n        }\r\n      });\r\n    }\r\n  }, [agentNum, agentName]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardVoiceMail(agentNum).then(response => {\r\n        setVoiceMail(JSON.parse(response.data.data)[0].count);\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardLongTime(agentNum).then(response => {\r\n        setLongTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardWaitingTime(agentNum).then(response => {\r\n        setWaitingTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  // const addZero = param => {\r\n  //   if (param < 10) {\r\n  //     return '0' + param;\r\n  //   } else {\r\n  //     return param;\r\n  //   }\r\n  // };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <Paper>\r\n        <div style={{ height: '33vh', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Box style={{ width: '100%' }}>\r\n            <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n              <Tabs value={value} onChange={handleChange}>\r\n                {/* <Tab label={<IntlMessages id={'wallboard.agentdetail.calldetails'} />} {...a11yProps(0)} />\r\n                <Tab label={<IntlMessages id={'wallboard.agentdetail.timedetails'} />} {...a11yProps(1)} /> */}\r\n                <Tab style={{ borderRight: '3px solid #a1bf6e' }} label={<IntlMessages id={'Total'} />} {...a11yProps(0)} />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Inbound'} />}\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Outbound'} />}\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Box>\r\n            {/* <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.inbound.call.agent'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.outbound.call.agent'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel> */}\r\n            <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n          </Box>\r\n          {/* <div>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'agent.number'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentNum}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.dst_display_name}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.totalcall}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.inbound.call.agent'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.inbound_call_to_agent}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.answered_call}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'total.time'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.totaltime?.hours === undefined\r\n                    ? agentDetail?.totaltime?.minutes === undefined\r\n                      ? agentDetail?.totaltime?.seconds === undefined\r\n                        ? '00:00:00'\r\n                        : '00:00:' + addZero(agentDetail?.totaltime?.seconds)\r\n                      : agentDetail?.totaltime?.seconds === undefined\r\n                      ? '00:' + addZero(agentDetail?.totaltime?.minutes) + ':00'\r\n                      : '00:' + addZero(agentDetail?.totaltime?.minutes) + ':' + addZero(agentDetail?.totaltime?.seconds)\r\n                    : agentDetail?.totaltime?.minutes === undefined\r\n                    ? agentDetail?.totaltime?.seconds === undefined\r\n                      ? addZero(agentDetail?.totaltime?.hours) + ':00:00'\r\n                      : addZero(agentDetail?.totaltime?.hours) + ':00:' + addZero(agentDetail?.totaltime?.seconds)\r\n                    : agentDetail?.totaltime?.seconds === undefined\r\n                    ? addZero(agentDetail?.totaltime?.hours) + ':' + addZero(agentDetail?.totaltime?.minutes) + ':00'\r\n                    : addZero(agentDetail?.totaltime?.hours) +\r\n                      ':' +\r\n                      addZero(agentDetail?.totaltime?.minutes) +\r\n                      ':' +\r\n                      addZero(agentDetail?.totaltime?.seconds)}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'average'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.average?.hours === undefined\r\n                    ? agentDetail?.average?.minutes === undefined\r\n                      ? agentDetail?.average?.seconds === undefined\r\n                        ? '00:00:00'\r\n                        : '00:00:' + addZero(agentDetail?.average?.seconds)\r\n                      : agentDetail?.average?.seconds === undefined\r\n                      ? '00:' + addZero(agentDetail?.average?.minutes) + ':00'\r\n                      : '00:' + addZero(agentDetail?.average?.minutes) + ':' + addZero(agentDetail?.average?.seconds)\r\n                    : agentDetail?.average?.minutes === undefined\r\n                    ? agentDetail?.average?.seconds === undefined\r\n                      ? addZero(agentDetail?.average?.hours) + ':00:00'\r\n                      : addZero(agentDetail?.average?.hours) + ':00:' + addZero(agentDetail?.average?.seconds)\r\n                    : agentDetail?.average?.seconds === undefined\r\n                    ? addZero(agentDetail?.average?.hours) + ':' + addZero(agentDetail?.average?.minutes) + ':00'\r\n                    : addZero(agentDetail?.average?.hours) +\r\n                      ':' +\r\n                      addZero(agentDetail?.average?.minutes) +\r\n                      ':' +\r\n                      addZero(agentDetail?.average?.seconds)}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'wallboard.outbound.call.agent'} />\r\n                </p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {agentDetail?.outbound_call_to_agent}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>Voice Mail</p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {voiceMail}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>Longest Time</p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {longTime}\r\n                </div>\r\n              </Grid>\r\n              <Grid item md={4} style={{ marginTop: '10px' }}>\r\n                <p style={{ opacity: '.5' }}>Total Waiting Time</p>\r\n                <div\r\n                  style={{\r\n                    borderColor: 'black',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '3px',\r\n                    padding: '10px',\r\n                  }}>\r\n                  {waitingTime}\r\n                </div>\r\n              </Grid>\r\n            </GridContainer>\r\n          </div> */}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport QueueList from './QueueList';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport AgentConnection from './AgentConnection';\r\nimport AgentStatus from './AgentStatus/AgentStatus';\r\nimport CallDetail from './CallDetail';\r\nimport AgentDetail from './AgentDetail';\r\n\r\nconst WallBoard = () => {\r\n  let [queueAmaunt, setQueueAmaunt] = useState(0);\r\n  let [callAmaunt, setCallAmaunt] = useState(0);\r\n  let [agentAmaunt, setAgentAmaunt] = useState(0);\r\n  let [breakeAgentAmaunt, setBreakeAgentAmount] = useState(0);\r\n  let [loginAgentAmaunt, setLoginAgentAmount] = useState(0);\r\n  let [agentNum, setAgentNum] = useState('0');\r\n  let [agentName, setAgentName] = useState('-');\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n    { label: <IntlMessages id={'wallboard'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"wallboard\" />} breadcrumbs={breadcrumbs}>\r\n      <div>\r\n        <CallDetail\r\n          queueAmaunt={queueAmaunt}\r\n          callAmaunt={callAmaunt}\r\n          agentAmaunt={agentAmaunt}\r\n          breakeAgentAmaunt={breakeAgentAmaunt}\r\n          loginAgentAmaunt={loginAgentAmaunt}\r\n        />\r\n      </div>\r\n      <GridContainer>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#EA4C4C   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queuelist'} />\r\n            </div>\r\n            <QueueList queueAmaunt={queueAmaunt} setQueueAmaunt={setQueueAmaunt} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#2978B5   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.connection'} />\r\n            </div>\r\n            <AgentConnection\r\n              setCallAmaunt={setCallAmaunt}\r\n              setAgentAmaunt={setAgentAmaunt}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#FA744F',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agent.status'} />\r\n            </div>\r\n            <AgentStatus\r\n              setBreakeAgentAmount={setBreakeAgentAmount}\r\n              setLoginAgentAmount={setLoginAgentAmount}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#ADCE74',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.detail'} />\r\n            </div>\r\n            <AgentDetail agentNum={agentNum} agentName={agentName} />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default WallBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDailyLog, getDailyLogTable } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, setResponseTable }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyLog(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  useEffect(() => {\r\n    getDailyLogTable(params.date).then(resp => {\r\n      setResponseTable(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params.date, setResponseTable]);\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst DataTable = ({ response, responseTable }) => {\r\n  let date;\r\n  let totalCall = 0;\r\n  let total = 0;\r\n  let act = 0;\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  // const returnTime = time => {\r\n  //   if (typeof time === 'undefined') {\r\n  //     time = 0;\r\n  //   } else {\r\n  //     time = time;\r\n  //   }\r\n  //   return time;\r\n  // };\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  for (let i = 0; i < responseTable.length; i++) {\r\n    date = responseTable[i].hour_log !== 'undefined' ? responseTable[i].hour_log.split(' ')[0] : '-';\r\n    totalCall += parseInt(responseTable[i].count);\r\n    total = responseTable[i].total;\r\n\r\n    act = responseTable[i].act;\r\n  }\r\n  // responseTable.map(data => {\r\n  //   date = data.hour_log !== 'undefined' ? data.hour_log.split(' ')[0] : '-';\r\n  //   totalCall += parseInt(data.count);\r\n  //   total = data.total;\r\n\r\n  //   act = data.act;\r\n  // });\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function createData(date, totalCall, totalMin, act) {\r\n    return { date, totalCall, totalMin, act };\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const rows = [createData(date, totalCall, total, act)];\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"totalCall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalMin\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalam Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Duration'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b>{row.date !== undefined ? row.date : '-'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.totalCall}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.totalMin.length > 0\r\n                      ? row.totalMin.split(':')[0].length > 2\r\n                        ? parseInt(row.totalMin?.split(':')[0].split('.')[0]) * 24 +\r\n                          parseInt(row.totalMin?.split(':')[0].split('.')[1]).toString() +\r\n                          ':' +\r\n                          row.totalMin.split(':')[1] +\r\n                          ':' +\r\n                          row.totalMin.split(':')[2]\r\n                        : row.totalMin\r\n                      : row.totalMin\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {row.act\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis, Label } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst Chart = ({ response }) => {\r\n  // const returnhour = time => {\r\n  //   const date = new Date(time);\r\n  //   return date.getHours();\r\n  // };\r\n  // let count = [];\r\n  let datalist = [];\r\n  datalist = response.map(data => ({\r\n    count: data.count,\r\n    hour: parseInt(data.hour_log.split(' ')[1].split(':')[0]),\r\n  }));\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    const found = datalist.some(data => parseInt(data.hour) === i);\r\n    if (!found) {\r\n      datalist.push({ count: 0, hour: i });\r\n    }\r\n  }\r\n  datalist.sort(function(a, b) {\r\n    return parseInt(a.hour) - parseInt(b.hour);\r\n  });\r\n  var maximum = Math.max.apply(\r\n    Math,\r\n    datalist.map(function(o) {\r\n      return o.count;\r\n    }),\r\n  );\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\">\r\n                <Label\r\n                  value={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunden'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : 'Hour'\r\n                  }\r\n                  position=\"insideBottomRight\"\r\n                  offset={0}\r\n                />\r\n              </XAxis>\r\n              <YAxis\r\n                domain={[0, maximum]}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={data => {\r\n                  return data.payload[0] ? (\r\n                    <div style={{ backgroundColor: 'white' }}>\r\n                      <p>\r\n                        <IntlMessages id={'hour'} />: {data.payload[0].payload.hour}\r\n                      </p>\r\n                      <p>\r\n                        <IntlMessages id={'call.time'} />: {data.payload[0].payload.count}\r\n                      </p>\r\n                    </div>\r\n                  ) : null;\r\n                }}\r\n              />\r\n              <Legend />\r\n              <defs>\r\n                <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                  <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                </linearGradient>\r\n              </defs>\r\n\r\n              <Bar dataKey=\"count\" fill=\"url(#color1)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DailyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTable, setResponseTable] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailylog'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'dailylog'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse} setResponseTable={setResponseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <DataTable response={response} responseTable={responseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyLog;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(date, count, total, act) {\r\n    return { date, count, total, act };\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n  const rows = response.map(data => createData(data.day_log, data.count, data.total, data.act));\r\n\r\n  let data = rows.map(unit => ({\r\n    date: unit.date.split('T')[0],\r\n    count: unit.count,\r\n    total:\r\n      unit.total.hours === undefined\r\n        ? unit.total.minutes === undefined\r\n          ? unit.total.seconds === undefined\r\n            ? '00:00:00'\r\n            : '00:00:' + addZero(unit.total.seconds)\r\n          : unit.total.seconds === undefined\r\n          ? '00:' + addZero(unit.total.minutes) + ':00'\r\n          : '00:' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds)\r\n        : unit.total.minutes === undefined\r\n        ? unit.total.seconds === undefined\r\n          ? addZero(unit.total.hours) + ':00:00'\r\n          : addZero(unit.total.hours) + ':00:' + addZero(unit.total.seconds)\r\n        : unit.total.seconds === undefined\r\n        ? addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':00'\r\n        : addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds),\r\n    act:\r\n      unit.act !== undefined\r\n        ? unit.act.hours === undefined\r\n          ? unit.act.minutes === undefined\r\n            ? unit.act.seconds === undefined\r\n              ? '00:00:00'\r\n              : '00:00:' + addZero(unit.act.seconds)\r\n            : unit.act.seconds === undefined\r\n            ? '00:' + addZero(unit.act.minutes) + ':00'\r\n            : '00:' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n          : unit.act.minutes === undefined\r\n          ? unit.act.seconds === undefined\r\n            ? addZero(unit.act.hours) + ':00:00'\r\n            : addZero(unit.act.hours) + ':00:' + addZero(unit.act.seconds)\r\n          : unit.act?.seconds === undefined\r\n          ? addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':00'\r\n          : addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n        : '00:00:00',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    day: 0,\r\n    count: 0,\r\n    totalTime: 0,\r\n    averageTime: 0,\r\n  };\r\n\r\n  function timeToSecond(param) {\r\n    let second = parseInt(param.hours) * 3600 + parseInt(param.minutes) * 60 + parseInt(param.seconds);\r\n    return second;\r\n  }\r\n  for (let i = 0; i < rows.length; i++) {\r\n    total.count += parseInt(rows[i].count);\r\n    total.day = rows.length;\r\n    total.totalTime += timeToSecond(rows[i].total);\r\n    total.averageTime += timeToSecond(rows[i].act);\r\n  }\r\n\r\n  // rows.map(row => {\r\n  //   total.count += parseInt(row.count);\r\n  //   total.day = rows.length;\r\n  //   total.totalTime += timeToSecond(row.total);\r\n  //   total.averageTime += timeToSecond(row.act);\r\n  // });\r\n\r\n  function secondToTime(param, day) {\r\n    param = param / parseInt(day);\r\n    let string =\r\n      addZero(Math.floor(param / 3600)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) % 60));\r\n    return string;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily log report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk yuk raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell>\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.date.split('T')[0]}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.count}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.total.hours === undefined\r\n                      ? row.total.minutes === undefined\r\n                        ? row.total.seconds === undefined\r\n                          ? '00:00:00'\r\n                          : '00:00:' + addZero(row.total.seconds)\r\n                        : row.total.seconds === undefined\r\n                        ? '00:' + addZero(row.total.minutes) + ':00'\r\n                        : '00:' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                      : row.total.minutes === undefined\r\n                      ? row.total.seconds === undefined\r\n                        ? addZero(row.total.hours) + ':00:00'\r\n                        : addZero(row.total.hours) + ':00:' + addZero(row.total.seconds)\r\n                      : row.total.seconds === undefined\r\n                      ? addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':00'\r\n                      : addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b style={{ color: '#FF87CA' }}>\r\n                    {(row.act !== undefined\r\n                      ? row.act.hours === undefined\r\n                        ? row.act.minutes === undefined\r\n                          ? row.act.seconds === undefined\r\n                            ? '00:00:00'\r\n                            : '00:00:' + addZero(row.act.seconds)\r\n                          : row.act.seconds === undefined\r\n                          ? '00:' + addZero(row.act.minutes) + ':00'\r\n                          : '00:' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                        : row.act.minutes === undefined\r\n                        ? row.act.seconds === undefined\r\n                          ? addZero(row.act.hours) + ':00:00'\r\n                          : addZero(row.act.hours) + ':00:' + addZero(row.act.seconds)\r\n                        : row.act?.seconds === undefined\r\n                        ? addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':00'\r\n                        : addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                      : '00:00:00'\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <b>\r\n                  {total.day + ' '} <IntlMessages id={'day'} />{' '}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.totalTime, 1)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.averageTime, total.day)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TableContainer } from '@material-ui/core';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = props => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const data = {\r\n    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\r\n    datasets: [\r\n      {\r\n        label: typeof props.array[0] === 'undefined' ? [] : props.array[0].date,\r\n        data: typeof props.array[0] === 'undefined' ? [] : props.array[0].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 206, 86, 0.8)',\r\n        borderColor: 'rgba(255, 206, 86, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[1] === 'undefined' ? [] : props.array[1].date,\r\n        data: typeof props.array[1] === 'undefined' ? [] : props.array[1].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[2] === 'undefined' ? [] : props.array[2].date,\r\n        data: typeof props.array[2] === 'undefined' ? [] : props.array[2].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        borderColor: 'rgba(54, 162, 235, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[3] === 'undefined' ? [] : props.array[3].date,\r\n        data: typeof props.array[3] === 'undefined' ? [] : props.array[3].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n      {\r\n        label: typeof props.array[4] === 'undefined' ? [] : props.array[4].date,\r\n        data: typeof props.array[4] === 'undefined' ? [] : props.array[4].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderColor: 'rgba(153, 102, 255, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n\r\n      <TableContainer className={classes.root} component={Paper} ref={ref}>\r\n        <Line data={data} options={options} />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getCallComparison, getCallComparisonDaily } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, response, setGraphData, setResponseDaily }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const showTime = date => {\r\n    const date_ = new Date(date);\r\n    return date_.getHours();\r\n  };\r\n  const today = new Date();\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [select, setSelect] = useState(1);\r\n  const [, setParams] = useState({ date: formatDate(today), choice: '' });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let array = [];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallComparisonDaily(formatDate(endDate), select).then(resp => {\r\n      let tempResponse = JSON.parse(resp.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          'T00:00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours:\r\n            tempResponse[i].total.split(':')[0].length > 2\r\n              ? parseInt(tempResponse[i].total.split(':')[0].split('.')[0]) * 24 +\r\n                parseInt(tempResponse[i].total.split(':')[0].split('.')[1]).toString()\r\n              : tempResponse[i].total.split(':')[0].startsWith('0')\r\n              ? tempResponse[i].total.split(':')[0].substring(1)\r\n              : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponseDaily(tempResponse);\r\n      setGraphData(array);\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  useEffect(() => {\r\n    getCallComparison(formatDate(endDate), select).then(response => {\r\n      let tempResponse = JSON.parse(response.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          'T' +\r\n          tempResponse[i].day_log.split(' ')[1].split(':')[0] +\r\n          ':00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours: tempResponse[i].total.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[0].substring(1)\r\n            : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponse(tempResponse);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  const respdata = response.map(data => ({\r\n    DayLog: formatDate(data.day_log),\r\n    Count: data.count,\r\n    TotalHour: data.total.hours === undefined || data.total.hour === 0 ? 0 : data.total.hour,\r\n    TotalMinutes: data.total.minutes === undefined || data.total.minutes === 0 ? 0 : data.total.minutes,\r\n    TotalSeconds: data.total.seconds === undefined || data.total.seconds === 0 ? 0 : data.total.seconds,\r\n    Hour: showTime(data.day_log),\r\n    Act: data.act.seconds === undefined || data.act.seconds === 0 ? 0 : data.act.seconds,\r\n  }));\r\n\r\n  let labelArray = [];\r\n\r\n  for (let i = select; i >= 0; i--) {\r\n    var date = new Date(formatDate(endDate));\r\n    date.setDate(date.getDate() - i);\r\n    labelArray.push(formatDate(date));\r\n  }\r\n  labelArray.reverse();\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    if (!respdata.some(daylog => daylog.DayLog === labelArray[i])) {\r\n      respdata.push({\r\n        DayLog: labelArray[i],\r\n        Count: 0,\r\n        TotalHour: 0,\r\n        TotalMinutes: 0,\r\n        TotalSeconds: 0,\r\n        Hour: 0,\r\n        Act: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    let group = [];\r\n    let totalDataArray = [];\r\n    let totalMins = [];\r\n    let totalSeconds = [];\r\n    let act = [];\r\n    group = respdata.filter(function(el) {\r\n      return !(el.DayLog !== labelArray[i]);\r\n    });\r\n\r\n    let tempgroup = group.map(data => {\r\n      for (let j = 0; j < 24; j++) {\r\n        if (j === data.Hour) {\r\n          totalDataArray[j] = data.Count;\r\n          act[j] = data.Act;\r\n          totalSeconds[j] = data.TotalSeconds;\r\n          totalMins[j] = data.TotalMinutes;\r\n        } else {\r\n          if (typeof totalDataArray[j] === 'undefined') {\r\n            totalDataArray[j] = 0;\r\n            act[j] = 0;\r\n            totalSeconds[j] = 0;\r\n            totalMins[j] = 0;\r\n          }\r\n        }\r\n      }\r\n      array[i] = {\r\n        date: labelArray[i],\r\n        count: totalDataArray,\r\n        totalSeconds: totalSeconds,\r\n        totalMins: totalMins,\r\n        act: act,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tempgroup);\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleClick = () => {\r\n    setParams({ date: formatDate(endDate), choice: select });\r\n    setGraphData(array);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'days.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"* days ago\"\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport DataTable from './Table';\r\nimport { Grid } from '@material-ui/core';\r\nimport Graph from './Graph';\r\nimport Filter from './Filter';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst CallComparison = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseDaily, setResponseDaily] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'call.comparison'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'call.comparison'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n          <Filter\r\n            setGraphData={setGraphData}\r\n            response={response}\r\n            setResponse={setResponse}\r\n            setResponseDaily={setResponseDaily}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <DataTable response={responseDaily} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Graph array={graphData} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CallComparison;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getMontlyLog } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nfunction Filter({ setResponse }) {\r\n  const today = new Date();\r\n  const [selectedMonth, setSelectedMonth] = useState(1);\r\n  const [select, setSelect] = useState(1);\r\n  const [sum, setSum] = useState(0);\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let selectboxdata = [];\r\n\r\n  for (var i = 6; i >= 0; i -= 1) {\r\n    var date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n\r\n    selectboxdata.push({\r\n      data: months[date.getMonth()] + ' ' + date.getFullYear(),\r\n      year: date.getFullYear(),\r\n      month: <IntlMessages id={`${months[date.getMonth()]}`} />,\r\n    });\r\n  }\r\n  selectboxdata.reverse();\r\n\r\n  const handleChange = event => {\r\n    setSum(event.target.value - 1);\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleMonthChange = event => {\r\n    setSelectedMonth(event.target.value);\r\n    setSum(select - 1);\r\n  };\r\n  const handleClick = () => {\r\n    setSum(select - 1);\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      setLoading(true);\r\n      getMontlyLog(selectedMonth, sum).then(response => {\r\n        let resultArray = JSON.parse(response.data.data);\r\n        for (let i = 0; i < resultArray.length; i++) {\r\n          let tempArray = resultArray[i].date_trunc.split(' ')[0].split('.');\r\n          resultArray[i].date_trunc = tempArray[2] + '-' + tempArray[1] + '-0' + tempArray[0];\r\n        }\r\n        setResponse(resultArray);\r\n        // setResponse(response);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [sum, selectedMonth, notFirstReq, setResponse]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                  value={selectedMonth}\r\n                  onChange={handleMonthChange}>\r\n                  <MenuItem value={' '}>\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {selectboxdata.map((data, index) => (\r\n                    <MenuItem key={index} value={selectboxdata.indexOf(data) + 1}>\r\n                      {data.month} {data.year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'months.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={'* ' + <IntlMessages id={'months.ago'} />}\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={5}>\r\n                    5 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={6}>\r\n                    6 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  customTooltip: {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: 5,\r\n  },\r\n}));\r\nconst formatDate = date => {\r\n  let d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  let year = d.getFullYear();\r\n  let hour = d.getHours();\r\n  let min = d.getMinutes();\r\n\r\n  if (month < 10) month = '0' + month;\r\n  if (day < 10) day = '0' + day;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n\r\n  return year + '-' + month;\r\n};\r\nconst ApplicationsGraph = ({ pieData }) => {\r\n  const classes = useStyles();\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      return (\r\n        <Box className={classes.customTooltip}>\r\n          <label>{`${payload[0].name} : ${payload[0].value}`}</label>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const data = pieData.map(data => ({\r\n    name: formatDate(data.date_trunc),\r\n    value: parseInt(data.toplam),\r\n  }));\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n  return (\r\n    <PieChart width={194} height={194}>\r\n      <Pie\r\n        data={data}\r\n        color=\"#000000\"\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        isAnimationActive={true}\r\n        outerRadius={95}\r\n        fill=\"#8884d8\">\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip content={<CustomTooltip />} />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default ApplicationsGraph;\r\n","import React, { createRef } from 'react';\r\nimport CmtCard from '@coremat/CmtCard';\r\nimport CmtCardHeader from '@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '@coremat/CmtCard/CmtCardContent';\r\nimport Chart from './graph';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = ({ response }) => {\r\n  const useStyles = makeStyles({\r\n    cardRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative',\r\n      '& .Cmt-card-content': {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n      <div ref={ref}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader className=\"pt-5\" title={<IntlMessages id={'monthly.log'} />}></CmtCardHeader>\r\n          <CmtCardContent>\r\n            <Chart pieData={response} />\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { toInteger } from 'lodash';\r\n\r\nconst DataTable = ({ response }) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  let aylar = [\r\n    'Ocak',\r\n    'Şubat',\r\n    'Mart',\r\n    'Nisan',\r\n    'Mayıs',\r\n    'Haziran',\r\n    'Temmuz',\r\n    'Ağustos',\r\n    'Eylül',\r\n    'Ekim',\r\n    'Kasım',\r\n    'Aralık',\r\n  ];\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 200,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + d.getMonth();\r\n\r\n    return { month: <IntlMessages id={`${months[parseInt(month)]}`} />, year: d.getFullYear() };\r\n  };\r\n  function createData(date, total) {\r\n    return { date, total };\r\n  }\r\n  const rows = response.map(data => createData(formatDate(data.date_trunc), data.toplam));\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  function formatDateExcel(param) {\r\n    let d = new Date(param);\r\n    let month = parseInt(d.getMonth());\r\n\r\n    let returnedMonth = currentLanguage.locale === 'en-US' ? months[month] : aylar[month];\r\n\r\n    return returnedMonth + '-' + d.getFullYear();\r\n  }\r\n\r\n  let data = response.map(unit => ({\r\n    date: formatDateExcel(unit.date_trunc),\r\n    total: unit.toplam,\r\n  }));\r\n\r\n  let totalCall = 0;\r\n  for (let i = 0; i < rows.length; i++) {\r\n    totalCall += toInteger(rows[i].total);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Monthly_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Aylık_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Maandelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Monatlicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5', color: 'white' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow style={{ backgroundColor: colors[index] }} key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>\r\n                    {row.date.month}-{row.date.year}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.total}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {rows.length > 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px' }} /> <b>{totalCall}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Graph from './Graph';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst MonthlyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthly.log'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthly.log'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xs={12} lg={12}>\r\n          <Filter setResponse={setResponse}/>\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <Graph response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default MonthlyLog;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst DataTable = ({ response, page, setPage, setLimit, setOffset, offset, limit, setResponse }) => {\r\n  const columns = [\r\n    {\r\n      id: 'dst_start_time',\r\n      label: <IntlMessages id={'filter.menu.startdate'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'dst_end_time',\r\n      label: <IntlMessages id={'filter.menu.enddate'} />,\r\n      minWidth: 70,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'q_num',\r\n      label: <IntlMessages id={'queue'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'src_dn',\r\n      label: <IntlMessages id={'internals.summary.agent'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      id: 'dst_dn',\r\n      label: <IntlMessages id={'Called.Numbers'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      id: 'duration',\r\n      label: <IntlMessages id={'Duration'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  function createData(src_dn, src_display_name, dst_start_time, dst_end_time, dst_dn, q_num, duration) {\r\n    return {\r\n      src_dn,\r\n      src_display_name,\r\n      dst_start_time,\r\n      dst_end_time,\r\n      dst_dn,\r\n      q_num,\r\n      duration,\r\n    };\r\n  }\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.src_dn,\r\n      data.src_display_name,\r\n      data.dst_start_time,\r\n      data.dst_end_time,\r\n      data.dst_dn,\r\n      data.q_num,\r\n      data.duration,\r\n    ),\r\n  );\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Returned_drop_call'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Geri_donulmus_kacan_cagrilar'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Teruggestuurde drop-call'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Zurückgegebener Drop-Call'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Start Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Başlangıç Saati'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Starttijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Startzeit'\r\n                    : ''\r\n                }\r\n                value=\"dst_start_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'End Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Bitiş Zamanı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Eindtijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Endzeit'\r\n                    : ''\r\n                }\r\n                value=\"dst_end_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Queue Number'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk Numarası'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachtrijnummer'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Warteschlangennummer'\r\n                    : ''\r\n                }\r\n                value=\"q_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"src_dn\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Caller Number'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arayan Numara'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Bellernummer'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufernummer'\r\n                    : ''\r\n                }\r\n                value=\"dst_dn\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"duration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={(page + 1) * limit}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit || response.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n/** */\r\n/** */\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueue } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Filter({ agent, queue, setAgent, setQueue }) {\r\n  const [queues, setQueues] = useState([]);\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeAgent = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Typography>\r\n        <IntlMessages id={'filters'} />\r\n      </Typography>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"agent-select-label\">\r\n                <IntlMessages id={'internals.summary.agent'} />\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"agent-select-label\"\r\n                id=\"agent-select\"\r\n                value={agent}\r\n                onChange={handleChangeAgent}\r\n                label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                <MenuItem value={''}>\r\n                  <IntlMessages id={'all'} />\r\n                </MenuItem>\r\n                {agents.map((agent, index) => (\r\n                  <MenuItem key={index} value={agent.dn}>\r\n                    {agent.dn + '-' + agent.display_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"agent-select-label\">\r\n                <IntlMessages id={'queue'} />\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"agent-select-label\"\r\n                id=\"agent-select\"\r\n                value={queue}\r\n                onChange={handleChangeQueue}\r\n                label={<IntlMessages id={'queue'} />}>\r\n                <MenuItem value={''}>\r\n                  <IntlMessages id={'all'} />\r\n                </MenuItem>\r\n                {queues.map((queue, index) => (\r\n                  <MenuItem key={index} value={queue.dn}>\r\n                    {queue.dn + '-' + queue.display_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions></CardActions>\r\n    </Card>\r\n  );\r\n}\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getReturnedDropCall,getQueue,getAgentNumber } from 'api/api';\r\nimport DataTable from './Table';\r\nimport Filter from './Filter'\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Alert from '@mui/material/Alert';\r\nconst ReturnedDropCall = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queue,setQueue] = useState('')\r\n  const [agent,setAgent] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getReturnedDropCall(limit, offset,agent,queue).then((response) =>{\r\n       var respList = JSON.parse(response.data.data)\r\n       getQueue().then(resp=>{\r\n        var list = JSON.parse(resp.data.data);\r\n        list.forEach(que => {\r\n        for(var i =0;i<respList.length;i++) {      \r\n          if(respList[i].q_num === que.dn) {\r\n            respList[i].q_num = que.dn + \" - \" + que.display_name\r\n          }\r\n        }\r\n        });\r\n        getAgentNumber().then(resp=>{\r\n          var list = JSON.parse(resp.data.data);\r\n          list.forEach(age => {\r\n          for(var i =0;i<respList.length;i++) {      \r\n            if(respList[i].src_dn === age.dn) {\r\n              respList[i].src_dn = age.dn + \" - \" + age.display_name\r\n            }\r\n          }\r\n          });\r\n          setResponse(respList) \r\n        })        \r\n      })     \r\n      });\r\n  }, [limit, offset,agent,queue]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'returneddropcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'returneddropcall'} />} breadcrumbs={breadcrumbs} >\r\n      <GridContainer>\r\n       <Grid item xs={12}>\r\n       <Filter\r\n          queue={queue}\r\n          setQueue={setQueue}\r\n          agent={agent}\r\n          setAgent={setAgent}\r\n        />\r\n       </Grid>\r\n        <Grid item md={12} lg={12} sm={12}>\r\n          <DataTable\r\n            page={page}\r\n            setPage={setPage}\r\n            response={response}\r\n            limit={limit}\r\n            setLimit={setLimit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n\r\n      <Alert style={{ marginTop: '15px' }} severity=\"info\">\r\n        <IntlMessages id={'returneddropcall.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ReturnedDropCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AgentSessionReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  MenuItem,\r\n  Grid,\r\n  CardActions,\r\n  CardContent,\r\n  Card,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueueNumber, getAgentSession, getBreakName, getAgentSessionClicked } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AgentSessionReportDateFilter from './DateFilter';\r\nfunction Filter({\r\n  setAgentSession,\r\n  qnum,\r\n  agent,\r\n  setQnum,\r\n  setAgent,\r\n  setClickedResponse,\r\n  clickedAgent,\r\n  responseBreak,\r\n  setResponseBreak,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n\r\n  const [params, setParams] = useState({\r\n    agent: '',\r\n    queue: '',\r\n    break: '',\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      agent: agentSelect === 'all' ? '' : agentSelect,\r\n      queue: queueSelect === 'all' ? '' : queueSelect,\r\n      break: breakSelect === 'all' ? '' : breakSelect,\r\n      paramFinish: dateDifference(startTime),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => setQnum(JSON.parse(response.data.data)));\r\n    getAgentNumber().then(response => setAgent(JSON.parse(response.data.data)));\r\n    getBreakName().then(response => {\r\n      setResponseBreak(JSON.parse(response.data.data));\r\n    });\r\n  }, [setQnum, setAgent, setResponseBreak]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let [startTime, setStartTime] = useState(formatDate(today));\r\n  let [endTime, setEndTime] = useState(formatDate(today));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAgentSession(params.agent, params.queue, params.break, startTime, endTime).then(response => {\r\n      setAgentSession(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getAgentSessionClicked(clickedAgent, startTime, endTime).then(resp => {\r\n      setClickedResponse(JSON.parse(resp.data.data));\r\n    });\r\n  }, [clickedAgent, params, endTime, startTime, setAgentSession, setClickedResponse]);\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  let [agentSelect, setAgentSelect] = useState('');\r\n  const [breakSelect, setBreakSelect] = useState('');\r\n\r\n  const handleChangeQueueSelect = event => {\r\n    setQueueSelect(event.target.value);\r\n  };\r\n  const handleChangeAgentSelect = event => {\r\n    setAgentSelect(event.target.value);\r\n  };\r\n  const handleBreakChange = event => {\r\n    setBreakSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '15px' }}>\r\n        <AgentSessionReportDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card className={classes.root}>\r\n        <Formik initialValues={{ queue: '', agent: '' }} onSubmit={values => {}}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          inputVariant=\"outlined\"\r\n                          format=\"DD-MM-YYYY\"\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                          renderInput={params => <TextField {...params} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid> */}\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"queue-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          value={queueSelect}\r\n                          onChange={handleChangeQueueSelect}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {qnum.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">\r\n                          <IntlMessages id={'internals.summary.agent'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={agentSelect}\r\n                          onChange={handleChangeAgentSelect}\r\n                          label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {agent.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n\r\n                      {/* <Field disabled={false} name=\"agent\" as=\"select\" component={Select}>\r\n                        <MenuItem value=\"\">\r\n                          <IntlMessages id={'all'} />\r\n                        </MenuItem>\r\n                        {agent.map((data, index) => (\r\n                          <MenuItem key={index} value={data.dn}>\r\n                            {data.display_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Field> */}\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"break-select-label\">\r\n                          <IntlMessages id={'breaks'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"break-select-label\"\r\n                          id=\"break-select\"\r\n                          value={breakSelect}\r\n                          onChange={handleBreakChange}\r\n                          label={<IntlMessages id={'breaks'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {responseBreak.map((data, index) => (\r\n                            <MenuItem key={index} value={data.value}>\r\n                              {data.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\"\r\n                    variant=\"contained\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nexport default function DataTable({ qnum, agent, agentSession, setClickedAgent, setOpen }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < agent.length; z++) {\r\n      if (agentSession[i].ag_num === agent[z].dn) {\r\n        agentSession[i].ag_num = agentSession[i].ag_num + '-' + agent[z].display_name;\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < qnum.length; z++) {\r\n      if (agentSession[i].q_num === qnum[z].dn) {\r\n        agentSession[i].q_num = qnum[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  let csvData = agentSession.map(row => ({\r\n    ag_num: row.ag_num,\r\n    q_num: row.q_num,\r\n    status: row.status,\r\n    state_time:\r\n      row.escapetime\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  const handleClick = ag_num => {\r\n    setClickedAgent(ag_num.split('-')[0]);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {agentSession.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Agent_Session_Report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Agent_Oturum_Raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Agentsessierapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Agentensitzungsbericht'\r\n                : ' '\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"ag_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Queue Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachtrijnaam'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Warteschlangenname'\r\n                    : ''\r\n                }\r\n                value=\"q_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Staat'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Bundesland'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Status Tijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Staatszeit'\r\n                    : ''\r\n                }\r\n                value=\"state_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'detail'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {' '}\r\n                <IntlMessages id={'wallboard.queue.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state.time'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {agentSession.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => handleClick(row.ag_num)}>\r\n                  <VisibilityIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />\r\n                  <b>{row.ag_num.split('-')[1] + ' (' + row.ag_num.split('-')[0] + ')'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <b>{row.q_num}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n                  <b style={{ color: '#F05454' }}>{row.status}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b style={{ color: '#F2789F' }}>\r\n                    {' '}\r\n                    {row.escapetime\r\n                      .replace('.', 'd ')\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ clickedResponse, responseBreak }) => {\r\n  // const columns = [\r\n  //   { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  // ];\r\n  let keys = [];\r\n\r\n  if (clickedResponse.length > 0) {\r\n    keys = Object.keys(clickedResponse[0]);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      for (let j = 0; j < responseBreak.length; j++) {\r\n        if (keys[i].substring(1) === responseBreak[j].value) {\r\n          keys[i] = responseBreak[j].name;\r\n        }\r\n      }\r\n      // responseBreak.map(breaks => {\r\n      //   if (keys[i].substring(1) === breaks.value) {\r\n      //     keys[i] = breaks.name;\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  // style={{ minWidth: column.minWidth }}\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Agent</TableCell>\r\n            <TableCell>Logout</TableCell>\r\n            <TableCell>{keys[2]}</TableCell>\r\n            <TableCell>{keys[3]}</TableCell>\r\n            <TableCell>{keys[4]}</TableCell>\r\n            <TableCell>{keys[5]}</TableCell>\r\n            <TableCell>{keys[6]}</TableCell>\r\n            <TableCell>{keys[7]}</TableCell>\r\n            <TableCell>{keys[8]}</TableCell>\r\n            <TableCell>{keys[9]}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clickedResponse.map((row, index) => {\r\n            return (\r\n              <TableRow>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.agent}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.logout}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8072}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8073}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8074}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8075}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8076}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8077}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8078}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8079}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Model from './Model';\r\nimport { Modal } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box } from '@mui/material';\r\n\r\nconst AgentCDR = () => {\r\n  const [agentSession, setAgentSession] = useState([]);\r\n  const [qnum, setQnum] = useState([]);\r\n  const [agent, setAgent] = useState([]);\r\n  const [clickedAgent, setClickedAgent] = useState('');\r\n  const [clickedResponse, setClickedResponse] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  // let token = localStorage.getItem('role');\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.session.report'} />, isActive: true },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const [responseBreak, setResponseBreak] = useState([]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.session.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <Filter\r\n            responseBreak={responseBreak}\r\n            setResponseBreak={setResponseBreak}\r\n            setAgentSession={setAgentSession}\r\n            qnum={qnum}\r\n            agent={agent}\r\n            setQnum={setQnum}\r\n            setAgent={setAgent}\r\n            setClickedResponse={setClickedResponse}\r\n            clickedAgent={clickedAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <DataTable\r\n            qnum={qnum}\r\n            agent={agent}\r\n            agentSession={agentSession}\r\n            setClickedAgent={setClickedAgent}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model clickedResponse={clickedResponse} responseBreak={responseBreak} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AgentCDR;\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getAgentNumberV16 } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Filter({ selectedStartTime, selectedEndTime, setSelectedEndTime, setSelectedStartTime, setParams }) {\r\n  const [agent, setAgent] = React.useState('All');\r\n  const [menuItems, setMenuItems] = React.useState([]);\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  useEffect(() => {\r\n    getAgentNumberV16().then(response => setMenuItems(response));\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setParams({\r\n      startdate: formatDate(selectedStartTime),\r\n      enddate: formatDate(selectedEndTime),\r\n      agent: agent,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          <IntlMessages id={'filter'} />\r\n        </Typography>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedStartTime}\r\n              onChange={setSelectedStartTime}\r\n              label={<IntlMessages id={'filter.menu.startdate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedEndTime}\r\n              onChange={setSelectedEndTime}\r\n              label={<IntlMessages id={'filter.menu.enddate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Agent</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={agent}\r\n                  label=\"Agent\"\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"All\">\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {menuItems.map((data, index) => (\r\n                    <MenuItem value={data.dn} key={index}>\r\n                      {data.dn} {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Table, TableHead, TableBody, TableContainer, TableCell, Paper, TableRow } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n    let seconds = d.getSeconds();\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + seconds;\r\n  };\r\n  function createData(agent, called, date, key) {\r\n    return { agent, called, date, key };\r\n  }\r\n  const rows = response.map(data => createData(data.agent, data.called, formatDate(data.issuetime), data.key));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'agent.number'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'called'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'filter.menu.date'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell align=\"center\">{row.agent}</TableCell>\r\n              <TableCell align=\"center\">{row.called}</TableCell>\r\n              <TableCell align=\"center\">{row.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { getIYSReport } from 'api/api';\r\n\r\nconst IYS = () => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const today = new Date();\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(today) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n  const [response, setResponse] = useState([]);\r\n  const [params, setParams] = useState({\r\n    agent: 'All',\r\n    startdate: formatDate(today) + ' 00:00:00',\r\n    enddate: formatDate(today) + ' 23:59:00',\r\n  });\r\n  useEffect(() => {\r\n    getIYSReport(params).then(response => setResponse(response.data));\r\n  }, [params]);\r\n\r\n  return (\r\n    <GridContainer>\r\n      <Grid item sm={12} md={12} lg={12}>\r\n        <Filter\r\n          selectedStartTime={selectedStartTime}\r\n          selectedEndTime={selectedEndTime}\r\n          setSelectedEndTime={setSelectedEndTime}\r\n          setSelectedStartTime={setSelectedStartTime}\r\n          setParams={setParams}\r\n        />\r\n      </Grid>\r\n      <Grid item sm={12} md={12} lg={12}>\r\n        <DataTable response={response} />\r\n      </Grid>\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\nexport default IYS;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTeamsUsers,\r\n  getCsOnlineVoiceRoutingPolicy,\r\n  getCsTenantDialplan,\r\n  getCsTeamsCallingPolicy,\r\n  changeCsTeamsCallingPolicy,\r\n  changeCsVoiceRoutingPolicy,\r\n  getUserDetailsByUserId,\r\n  changeCsTenantDiaplan,\r\n} from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Button,\r\n  AccordionActions,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Users() {\r\n  let [users, setUsers] = useState([]);\r\n  let [selecetedUser, setSelectedUser] = useState('');\r\n  let [selectedUserDetails, setSelectedUserDetails] = useState({\r\n    onlineVoiceRoutingPolicy: '-',\r\n    tenantDialPlan: '-',\r\n    teamsCallingPolicy: '-',\r\n    userPrincibleName: '-',\r\n  });\r\n\r\n  let [voiceRoutingPolicys, setVoiceRoutingPolicys] = useState([]);\r\n  let [selectedvoiceRoutingPolicy, setSelectedvoiceRoutingPolicy] = useState('');\r\n\r\n  let [tenantDiaplans, setTenantDiaplan] = useState([]);\r\n  let [selectedTenantDiaplans, setSelectedTenantDiaplans] = useState('');\r\n\r\n  let [teamsCallingPolicys, setTeamsCallingPolicy] = useState([]);\r\n  let [selectedTeamsCallingPolicy, setSelectedTeamsCallingPolicy] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getTeamsUsers({ token: localStorage.getItem('token') })\r\n      .then(result => {\r\n        setUsers(result.data.data);\r\n        getCsOnlineVoiceRoutingPolicy({\r\n          token: localStorage.getItem('token'),\r\n        }).then(res => {\r\n          setVoiceRoutingPolicys(res.data.data);\r\n          getCsTenantDialplan({\r\n            token: localStorage.getItem('token'),\r\n          }).then(res2 => {\r\n            setTenantDiaplan(res2.data.data);\r\n            getCsTeamsCallingPolicy({\r\n              token: localStorage.getItem('token'),\r\n            }).then(res3 => {\r\n              setTeamsCallingPolicy(res3.data.data);\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (selecetedUser !== '') {\r\n      getUserDetailsByUserId({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n      }).then(result => {\r\n        setSelectedUserDetails(result.data.data);\r\n      });\r\n    }\r\n  }, [selecetedUser]);\r\n\r\n  const handleChangeUserEmail = event => {\r\n    setSelectedUser(event.target.value);\r\n  };\r\n  const handleChangeVoiceRoutingPolicy = event => {\r\n    setSelectedvoiceRoutingPolicy(event.target.value);\r\n  };\r\n  const handleChangeTenantDiaplans = event => {\r\n    setSelectedTenantDiaplans(event.target.value);\r\n  };\r\n  const handleChangeTeamsCallingPolicy = event => {\r\n    setSelectedTeamsCallingPolicy(event.target.value);\r\n  };\r\n\r\n  const handleSubmitChangeTeamsCallingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTeamsCallingPolicy === '') {\r\n      NotificationManager.error('Teams Calling Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTeamsCallingPolicy !== '') {\r\n      changeCsTeamsCallingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        policyName: selectedTeamsCallingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeVoiceRoutingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedvoiceRoutingPolicy === '') {\r\n      NotificationManager.error('Voice Routing Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedvoiceRoutingPolicy !== '') {\r\n      changeCsVoiceRoutingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        voiceRoutingPolicy: selectedvoiceRoutingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeTenantDiaplan = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTenantDiaplans === '') {\r\n      NotificationManager.error('Tenant Diaplan must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTenantDiaplans !== '') {\r\n      changeCsTenantDiaplan({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        tenantDiaplan: selectedTenantDiaplans,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <NotificationContainer />\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Teams Calling Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"teamsCallingPolicy-label\">Teams Calling Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"teamsCallingPolicy-label\"\r\n                  id=\"teamsCallingPolicy\"\r\n                  value={selectedTeamsCallingPolicy}\r\n                  onChange={handleChangeTeamsCallingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>Teams Calling Policy</em>\r\n                  </MenuItem>\r\n                  {teamsCallingPolicys.map((teamsCallingPolicy, index) => (\r\n                    <MenuItem key={index} value={teamsCallingPolicy.callingPolicy}>\r\n                      {teamsCallingPolicy.callingPolicy}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTeamsCallingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Voice Routing Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"voiceRoutingPolicy-label\">Voice Routing Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"voiceRoutingPolicy-label\"\r\n                  id=\"voiceRoutingPolicy\"\r\n                  value={selectedvoiceRoutingPolicy}\r\n                  onChange={handleChangeVoiceRoutingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>VoiceRoutingPolicy</em>\r\n                  </MenuItem>\r\n                  {voiceRoutingPolicys.map((voiceRoutingPolicy, index) => (\r\n                    <MenuItem key={index} value={voiceRoutingPolicy.policyName}>\r\n                      {voiceRoutingPolicy.policyName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeVoiceRoutingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Tenant Diaplan</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"tenantDiaplan-label\">Tenant Diaplan</InputLabel>\r\n                <Select\r\n                  labelId=\"tenantDiaplan-label\"\r\n                  id=\"tenantDiaplan\"\r\n                  value={selectedTenantDiaplans}\r\n                  onChange={handleChangeTenantDiaplans}>\r\n                  <MenuItem value=\"\">\r\n                    <em>TenantDiaplan</em>\r\n                  </MenuItem>\r\n                  {tenantDiaplans.map((tenantDiaplan, index) => (\r\n                    <MenuItem key={index} value={tenantDiaplan.teanantDiaPlan}>\r\n                      {tenantDiaplan.teanantDiaPlan}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTenantDiaplan}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n        Değişim işlemlerinin sonuca yansıması biraz zaman alabilir.\r\n      </div>\r\n      <Card style={{ marginTop: '20px' }}>\r\n        <p style={{ textAlign: 'center', fontSize: '20px', padding: '10px' }}>Selected User Details</p>\r\n        <div style={{ padding: '10px' }}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>User Email</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.userPrincibleName}\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Teams Calling Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.teamsCallingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>Voice Routing Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.onlineVoiceRoutingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Tenant Diaplan</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.tenantDialPlan}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </div>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getAgentTotalCall } from 'api/api';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function Filter({\r\n  selectedEndTime,\r\n  setSelectedEndTime,\r\n  setNotFirstReq,\r\n  notFirstReq,\r\n  setTotalAgent,\r\n  setTotalDid,\r\n  selectedDate,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setSelectedEndTime(selectedEndTime);\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  // const formatDate2 = date => {\r\n  //   let dateArray = date.split('-');\r\n  //   return dateArray[2] + '-' + dateArray[1] + '-' + dateArray[0];\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte3').then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setTotalAgent(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte2').then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setTotalDid(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider\r\n              dateAdapter={AdapterDateFns}\r\n              locale={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? enLocale\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? nlLocale\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? trLocale\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? deLocale\r\n                  : enLocale\r\n              }>\r\n              {' '}\r\n              <DatePicker\r\n                value={selectedEndTime}\r\n                views={['year', 'month']}\r\n                onChange={newValue => setSelectedEndTime(dateFormat(newValue,'yyyy-mm-dd'))}\r\n                renderInput={params => <TextField {...params} />}\r\n                inputVariant=\"outlined\"\r\n                format=\"MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function DataTable({ response, limit, setOffset, setPage, setCsvData, setSelectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  //   setOffset(limit * newPage);\r\n  // };\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  function returnedTime(param1, param2) {\r\n    let Param1Array = param1.split(':');\r\n    let Param2Array = param2.split(':');\r\n    if (param1.includes('.')) {\r\n      Param1Array[0] = parseInt(Param1Array[0]) + parseInt(param1.split('.')[0]) * 24;\r\n    }\r\n    if (param2.includes('.')) {\r\n      Param2Array[0] = parseInt(Param2Array[0]) + parseInt(param2.split('.')[0]) * 24;\r\n    }\r\n\r\n    let hour = parseInt(Param1Array[0]) + parseInt(Param2Array[0]);\r\n    let minute = parseInt(Param1Array[1]) + parseInt(Param2Array[1]);\r\n    let second = parseInt(Param1Array[2]) + parseInt(Param2Array[2]);\r\n    return (\r\n      addZero(hour + Math.floor(minute / 60)) +\r\n      ':' +\r\n      addZero((minute % 60) + Math.floor(second / 60)) +\r\n      ':' +\r\n      addZero(second % 60)\r\n    );\r\n  }\r\n\r\n  function calculateAverage(totalCall, totalTime) {\r\n    let timeArray;\r\n    if (totalTime.includes('.')) {\r\n      let tempHour = parseInt(totalTime.split('.')[0]) * 24 + parseInt(totalTime.split('.')[1].split(':')[0]);\r\n      let tempTime = tempHour + ':' + totalTime.split('.')[1].split(':')[1] + ':' + totalTime.split('.')[1].split(':')[2];\r\n      timeArray = tempTime.split(':');\r\n    } else {\r\n      timeArray = totalTime.split(':');\r\n    }\r\n    // let timeArray = totalTime.split(':');\r\n    let time = parseInt(timeArray[0]) * 60 * 60 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);\r\n    let averageSecond = time / (parseInt(totalCall) !== 0 ? parseInt(totalCall) : 1);\r\n\r\n    return totalCall !== 0\r\n      ? addZero(Math.floor(averageSecond / 3600)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) / 60)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) % 60))\r\n      : '00:00:00';\r\n  }\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n\r\n  const column = [\r\n    {\r\n      id: 'd',\r\n      headerName: <IntlMessages id={'filter.menu.date'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalcall',\r\n      headerName: <IntlMessages id={'wallboard.total.call'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalinbound',\r\n      headerName: <IntlMessages id={'dashboard.inbound'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'answeredinb',\r\n      headerName: <IntlMessages id={'wallboard.answered'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationcalls',\r\n      headerName: <IntlMessages id={'total.time'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationinbound',\r\n      headerName: <IntlMessages id={'durationinbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'totaloutbound',\r\n      headerName: <IntlMessages id={'dashboard.outbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationoutbound',\r\n      headerName: <IntlMessages id={'durationoutbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageTotal',\r\n      headerName: <IntlMessages id={'Act'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageInbound',\r\n      headerName: <IntlMessages id={'avIn'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageOutbound',\r\n      headerName: <IntlMessages id={'avOut'} />,\r\n      width: '30px',\r\n    },\r\n  ];\r\n  const createData = (\r\n    d,\r\n    totalcall,\r\n    totalinbound,\r\n    answeredinb,\r\n    durationcalls,\r\n    durationinbound,\r\n    totaloutbound,\r\n    durationoutbound,\r\n    averageTotal,\r\n    averageInbound,\r\n    averageOutbound,\r\n  ) => {\r\n    return {\r\n      d,\r\n      totalcall,\r\n      totalinbound,\r\n      answeredinb,\r\n      durationcalls,\r\n      durationinbound,\r\n      totaloutbound,\r\n      durationoutbound,\r\n      averageTotal,\r\n      averageInbound,\r\n      averageOutbound,\r\n    };\r\n  };\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.d !== 'Total Call' ? getNewDate(data.d.split(' ')[0]) : data.d,\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      data.totalinbound,\r\n      data.answeredinb,\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.totaloutbound,\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(\r\n        parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n        returnedTime(data.durationinbound, data.durationoutbound),\r\n      )\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const csvData = response.map(data => ({\r\n    date: data.d !== 'Total Call' ? data.d.split(' ')[0] : data.d,\r\n    totalcall: parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n    totalinbound: data.totalinbound,\r\n    answeredinb: data.answeredinb,\r\n    durationcalls:\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n\r\n    durationinbound:\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    totaloutbound: data.totaloutbound,\r\n    durationoutbound:\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageTotal: calculateAverage(\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      returnedTime(data.durationinbound, data.durationoutbound),\r\n    ),\r\n    averageinbound:\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageoutbound:\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-US'\r\n              ? 'Monthly_Details'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Aylik_Detaylar'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Maandelijkse details'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Monatliche Details'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Date'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Tarih'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Datum'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Datum'\r\n                  : ''\r\n              }\r\n              value=\"date\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Arama Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal aantal gesprekken'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamtzahl der Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"totalcall\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Aramalar'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal inkomend'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamteingang'\r\n                  : ''\r\n              }\r\n              value=\"totalinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Answered Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Cevaplanmış Çağrı Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Aantal beantwoorde oproepen'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Zählung angenommener Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"answeredinb\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Duration'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Süre'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Looptijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Dauer'\r\n                  : ''\r\n              }\r\n              value=\"durationcalls\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Inbound Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Çağrı Süresi Toplamı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Inkomende tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Eingangszeit'\r\n                  : ''\r\n              }\r\n              value=\"durationinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Giden Çağrı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamt ausgehend'\r\n                  : ''\r\n              }\r\n              value=\"totaloutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Outbound Total Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Giden Çağrı toplam süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Uitgaande totale tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Ausgehend Gesamtzeit'\r\n                  : ''\r\n              }\r\n              value=\"durationoutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Total'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Toplam Arama'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld totaal'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittliche Summe'\r\n                  : ''\r\n              }\r\n              value=\"averageTotal\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddelde inkomende'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher Eingang'\r\n                  : ''\r\n              }\r\n              value=\"averageinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher ausgehender'\r\n                  : ''\r\n              }\r\n              value=\"averageoutbound\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root} style={{ maxHeight: '550px' }}>\r\n        <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column,index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  style={{\r\n                    width: column.width,\r\n                    opacity: '.9',\r\n                    backgroundColor: '#4E9F3D',\r\n                    color: 'white',\r\n                  }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return row.d !== 'Total Call' ? (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column,inds) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell\r\n                        onClick={() => setSelectedDate(row.d)}\r\n                        key={inds}\r\n                        style={{ padding: '0px', textAlign: 'center', cursor: 'pointer' }}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ) : (\r\n                null\r\n              );\r\n            })}\r\n\r\n            {rows.map((row, index) => {\r\n              return row.d === 'Total Call' ? (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={index}\r\n                  style={{ backgroundColor: '#4E9F3D', opacity: '.9' }}>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    <IntlMessages id={'Total'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.totalcall}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.totalinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.answeredinb}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationcalls}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.totaloutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationoutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageTotal}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageInbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageOutbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (null\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function Detail({ totalAgent, totalDid }) {\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <GridContainer>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalDid.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'DID_top_5' : 'DID_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalDid} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'DID number' : 'DID Numarası'}\r\n                      value=\"src_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"calldid\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.src_did !== undefined ? totalDid[0]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.calldid !== undefined ? totalDid[0]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.src_did !== undefined ? totalDid[1]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.calldid !== undefined ? totalDid[1]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.src_did !== undefined ? totalDid[2]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.calldid !== undefined ? totalDid[2]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.src_did !== undefined ? totalDid[3]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.calldid !== undefined ? totalDid[3]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.src_did !== undefined ? totalDid[4]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.calldid !== undefined ? totalDid[4]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalAgent.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'Agent_top_5' : 'Agent_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalAgent} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'}\r\n                      value=\"dst_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"agentcall\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.agentnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.dst_display_name !== undefined ? totalAgent[0]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.agentcall !== undefined ? totalAgent[0]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.dst_display_name !== undefined ? totalAgent[1]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.agentcall !== undefined ? totalAgent[1]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.dst_display_name !== undefined ? totalAgent[2]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.agentcall !== undefined ? totalAgent[2]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.dst_display_name !== undefined ? totalAgent[3]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.agentcall !== undefined ? totalAgent[3]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.dst_display_name !== undefined ? totalAgent[4]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.agentcall !== undefined ? totalAgent[4]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n        </GridContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Detail from './Detail';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst MonthlyDetails = () => {\r\n  const [, setCsvData] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTotal] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate(),\r\n  );\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthlydetails'} />, isActive: true },\r\n  ];\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedTime, setSelectedTime] = useState(dateFormat(new Date(),'yyyy-mm-dd'));\r\n  const [totalAgent, setTotalAgent] = useState([]);\r\n  const [totalDid, setTotalDid] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `select * from cl_get_daily_statics_proc('${selectedTime}')`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  function lastDay(date) {\r\n    return dateFormat(date, 'yyyy-mm-dd');\r\n  }\r\n\r\n  let queryTotal = `with recursive cte1 as (\r\n    select * from cl_get_daily_statics_proc('${selectedTime}')\r\n      )\r\n  select \r\n  'Total Call' as d,\r\n  (sum(totalinbound)) as totalinbound,\r\n  (sum(answeredinb)) as answeredinb,\r\n  (sum(durationinbound)) as durationinbound ,\r\n  (sum(totaloutbound)) as totaloutbound,\r\n  (sum(durationoutbound)) as durationoutbound\r\n  from cte1`;\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      setLoading(true);\r\n      setSelectedTime(lastDay(selectedTime));\r\n      api\r\n        .getMonthlyDetails({ token: localStorage.getItem('token'), query: query })\r\n        .then(resp => {\r\n          setResponse(JSON.parse(resp.data.data));\r\n          api.getMonthlyTotal({ token: localStorage.getItem('token'), query: queryTotal }).then(resps => {\r\n            setResponse([...JSON.parse(resp.data.data), ...JSON.parse(resps.data.data)]);\r\n            setLoading(false);\r\n          });\r\n        })\r\n        .catch(resp => {\r\n          if (resp.response?.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }\r\n  }, [query, notFirstReq, selectedTime, history, queryTotal]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthlydetails'} />} breadcrumbs={breadcrumbs}>\r\n      <Filter\r\n        selectedEndTime={selectedTime}\r\n        setSelectedEndTime={setSelectedTime}\r\n        setOffset={setOffset}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        notFirstReq={notFirstReq}\r\n        setNotFirstReq={setNotFirstReq}\r\n        setTotalAgent={setTotalAgent}\r\n        setTotalDid={setTotalDid}\r\n        selectedDate={selectedDate}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {notFirstReq && (\r\n        <Table\r\n          page={page}\r\n          setPage={setPage}\r\n          setLimit={setLimit}\r\n          setResponse={setResponse}\r\n          setCsvData={setCsvData}\r\n          limit={limit}\r\n          setOffset={setOffset}\r\n          responseTotal={responseTotal}\r\n          offset={offset}\r\n          response={response}\r\n          setSelectedDate={setSelectedDate}\r\n        />\r\n      )}\r\n      <Detail totalAgent={totalAgent} totalDid={totalDid} />\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default MonthlyDetails;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QueueAnswerReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  FormControl,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  getQueueAnswerReport,\r\n  getQueueAnswerReportSummary,\r\n  getQueueNumber,\r\n  getQueueAnswerReportSummaryTotal,\r\n  getQueueAnswerReportCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport QueueAnswerReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setData, rowsPerPage, page, setSummary, setSummaryTotal, setResponseCount }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startDate, setStartDate] = useState(formatDate(new Date()));\r\n  let [endDate, setEndDate] = useState(formatDate(new Date()));\r\n  let [queueNum, setQueueNum] = useState('');\r\n  let [src, setSrc] = useState('');\r\n  let [order, setOrder] = useState('ASC');\r\n  let [queues, setQueues] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(startDate, endDate)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n          setData(JSON.parse(resp.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        getQueueAnswerReportCount(startDate, endDate, queueNum, src).then(resp => {\r\n          setResponseCount(JSON.parse(resp.data.data)[0].summed);\r\n        });\r\n\r\n        getQueueAnswerReportSummary(startDate, endDate, queueNum).then(resp => {\r\n          setSummary(JSON.parse(resp.data.data));\r\n        });\r\n\r\n        getQueueAnswerReportSummaryTotal(startDate, endDate, queueNum).then(resp => {\r\n          setSummaryTotal(JSON.parse(resp.data.data));\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [\r\n    startDate,\r\n    endDate,\r\n    queueNum,\r\n    src,\r\n    order,\r\n    rowsPerPage,\r\n    page,\r\n    notFirstReq,\r\n    setData,\r\n    setResponseCount,\r\n    setSummary,\r\n    setSummaryTotal,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueues(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmitButttonClick = () => {\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n    // getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n    //   setData(resp.data);\r\n    // });\r\n  };\r\n\r\n  // const handleChangeStartTime = event => {\r\n  //   setStartDate(formatDate(event._d));\r\n  // };\r\n  // const handleChangeEndTime = event => {\r\n  //   setEndDate(formatDate(event._d));\r\n  // };\r\n  const handleChangeQueueNum = event => {\r\n    setQueueNum(event.target.value);\r\n  };\r\n  const handleChangeOrder = event => {\r\n    setOrder(event.target.value);\r\n  };\r\n  const handleChangeCaller = event => {\r\n    setSrc(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <QueueAnswerReportDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            {/* <Grid item md={2}>\r\n              <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={startDate}\r\n                onChange={handleChangeStartTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n              />\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                minDate={startDate}\r\n                value={endDate}\r\n                onChange={handleChangeEndTime}\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n              />\r\n            </Grid> */}\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'queue.answer.report.queues'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                  value={queueNum}\r\n                  onChange={handleChangeQueueNum}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {queues.map(que => (\r\n                    <MenuItem key={que.id} value={que.dn}>\r\n                      {que.dn} - {que.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"distinct-label\">\r\n                  <IntlMessages id={'queue.answer.report.orderby'} />\r\n                </InputLabel>\r\n                <Select\r\n                  label={<IntlMessages id={'queue.answer.report.orderby'} />}\r\n                  labelId=\"distinct-label\"\r\n                  id=\"distinct\"\r\n                  value={order}\r\n                  onChange={handleChangeOrder}>\r\n                  <MenuItem value=\"ASC\">\r\n                    <IntlMessages id={'oldtonew'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"DESC\">\r\n                    <IntlMessages id={'newtoold'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-basic\"\r\n                label={<IntlMessages id={'caller'} />}\r\n                onChange={handleChangeCaller}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button onClick={handleSubmitButttonClick} variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { getQueueNumber } from 'api/api';\r\nimport { Button } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DataTable({\r\n  data,\r\n  setData,\r\n  rowsPerPage,\r\n  setRowsPerPage,\r\n  page,\r\n  setPage,\r\n  summaryTotal,\r\n  responseCount,\r\n}) {\r\n  const [queueList, setQueueList] = useState([]);\r\n  // const column = [\r\n  //   { id: 'dst_start_time', headerName: <IntlMessages id={'queueanswerreport.date'} />, width: '60px' },\r\n  //   { id: 'waiting_time', headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />, width: '100px' },\r\n  //   { id: 'talking', headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />, width: '30px' },\r\n  //   { id: 'src_display_name', headerName: <IntlMessages id={'queueanswerreport.caller'} />, width: '30px' },\r\n  //   { id: 'dst_dn', headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />, width: '30px' },\r\n  // ];\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(resp => {\r\n      setQueueList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  //get queue name\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < queueList.length; j++) {\r\n      if (queueList[j].dn === data[i].dst_dn) {\r\n        data[i].dst_dn = queueList[j].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // data.map(dataUnit => {\r\n  //   queueList.map(queue => {\r\n  //     if (queue.dn === dataUnit.dst_dn) {\r\n  //       dataUnit.dst_dn = queue.display_name;\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  const rows = data.map((dataUnit, index) => ({\r\n    id: index,\r\n    dst_start_time: getNewDate(dataUnit.dst_start_time),\r\n    waiting_time: dataUnit.waiting_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    talking:\r\n      dataUnit.talking\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    src_display_name: dataUnit.src_display_name,\r\n    dst_dn: dataUnit.dst_dn,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleDowlandButtonClick = () => {\r\n    setRowsPerPage(responseCount);\r\n    setPage(0);\r\n    setData([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'dst_start_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.date'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'talking',\r\n      headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'src_display_name',\r\n      headerName: <IntlMessages id={'queueanswerreport.caller'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#F05454' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'dst_dn',\r\n      headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Queue_answer_report'\r\n                      : currentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_cevap_raporu'\r\n                      : currentLanguage.locale === 'nl-NL'\r\n                      ? 'Rapport voor antwoord in wachtrij'\r\n                      : currentLanguage.locale === 'de-DE'\r\n                      ? 'Warteschlangen-Antwortbericht'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Date'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Tarih'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Datum'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Datum'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi Toplamı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Talking Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Konuşma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Gesprekstijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesprächszeit'\r\n                          : ''\r\n                      }\r\n                      value=\"talking\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Caller'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Beller'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Anruferin'\r\n                          : ''\r\n                      }\r\n                      value=\"src_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_dn\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n\r\n        {/* // <ExcelFile\r\n          //   filename={curentLanguage.locale === 'en-US' ? 'Queue_answer_report' : 'Kuyruk_cevap_raporu'}\r\n          //   element={\r\n          //     <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n          //       <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          //     </Button>\r\n          //   }>\r\n          //   <ExcelSheet data={rows} name=\"Data\">\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Date' : 'Tarih'} value=\"dst_start_time\" />\r\n          //     <ExcelColumn\r\n          //       label={currentLanguage.locale == 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n          //       value=\"waiting_time\"\r\n          //     />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Talking Time' : 'Konuşma Süresi'} value=\"talking\" />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Queue Number' : 'Kuyruk Numarası'} value=\"dst_dn\" />\r\n          //   </ExcelSheet>\r\n          // </ExcelFile> */}\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50, 100, responseCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column, index) => (\r\n                <TableCell key={index} style={{ width: column.width, textAlign: 'center' }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column, index) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell key={index} style={{ textAlign: 'center' }}>\r\n                        {value}{' '}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50, 100]}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={'Rows Per Page'}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n          */}\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nexport default function QueueAnswerReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'queue.answer.report'} />, isActive: true },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [summary, setSummary] = useState([]);\r\n  const [summaryTotal, setSummaryTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  let classes = useStyles();\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'queue.answer.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            setSummary={setSummary}\r\n            setSummaryTotal={setSummaryTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            data={data}\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            setRowsPerPage={setRowsPerPage}\r\n            page={page}\r\n            setPage={setPage}\r\n            summaryTotal={summaryTotal}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {summaryTotal.length > 0 && (\r\n            <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n              <ExcelFile\r\n                filename={`Queue Answer Report Summary`}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={summary} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"count\" />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                    value=\"waiting_time\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Talking Time' : 'Konuşma Süresi'}\r\n                    value=\"talking\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Görüşme Süresi'}\r\n                    value=\"act\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            </div>\r\n          )}\r\n          <TableContainer component={Paper} className={classes.root}>\r\n            {summary.length > 0 && (\r\n              <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.date'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.total.call'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'waiting.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.talkingtime'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.average.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'average.waiting'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {summary.map(sum => (\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.date}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.count}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_time}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.talking}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.act}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_act}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  {summaryTotal.map((row, index) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                        <TableCell style={{ textAlign: 'center' }}>\r\n                          <IntlMessages id={'total'} />\r\n                        </TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.count1}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_time}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.talking}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.act}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_act}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            )}\r\n          </TableContainer>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedCallsDateFilter({ setStartTimeApi, setEndTimeApi, handleClick }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        //start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport AbondenedCallsDateFilter from './DateFilter';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getQueue } from 'api/api';\r\n\r\nfunction Filter({ setParams, setColor, color, queue, setQueue }) {\r\n  let [loading] = useState(false);\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  };\r\n\r\n  const colors = [\r\n    {\r\n      name: 'Green',\r\n      value: <IntlMessages id={'returned'} />,\r\n    },\r\n    {\r\n      name: 'Red',\r\n      value: <IntlMessages id={'notreturned'} />,\r\n    },\r\n  ];\r\n\r\n  const handleChangeColor = event => {\r\n    setColor(event.target.value);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const [queues, setQueues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <div>\r\n        <AbondenedCallsDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n        {loading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'returnfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={color}\r\n                  onChange={handleChangeColor}\r\n                  label={<IntlMessages id={'returnfilter'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {colors.map((color, index) => (\r\n                    <MenuItem key={index} value={color.name}>\r\n                      {color.value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'queue'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={queue}\r\n                  onChange={handleChangeQueue}\r\n                  label={<IntlMessages id={'queue'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {queues.map((queue, index) => (\r\n                    <MenuItem key={index} value={queue.display_name}>\r\n                      {queue.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Box, Button, CircularProgress, Collapse, Typography } from '@material-ui/core';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nexport default function DataTable({ params, color, queue }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 580,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  const columns = [\r\n    { id: 'timeofevent', label: <IntlMessages id={'abondenedcalls.timeofevent'} />, minWidth: 60, align: 'center' },\r\n    { id: 'from_userpart', label: <IntlMessages id={'abondenedcalls.fromuserpart'} />, minWidth: 60, align: 'center' },\r\n    {\r\n      id: 'display_name',\r\n      label: <IntlMessages id={'abondenedcalls.displayname'} />,\r\n      minWidth: 70,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'count',\r\n      label: <IntlMessages id={'abondenedcalls.count'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [detail, setDetail] = useState([]);\r\n  let [tempArray, setTempArray] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //  if (checkBetween(params.params.startDate, params.params.endDate)) {\r\n    if (true) {\r\n      setLoading(true);\r\n      api.getAbondenedCalls(params, queue).then(call => {\r\n        setTempArray([]);\r\n        for (let i = 0; i < JSON.parse(call.data.data).length; i++) {\r\n          api\r\n            .getAbondenedCallDetails(JSON.parse(call.data.data)[i].timeofevent, JSON.parse(call.data.data)[i].from_userpart)\r\n            .then(resp => {\r\n              let data = JSON.parse(resp.data.data);\r\n              tempArray.push({ i, data });\r\n            });\r\n        }\r\n        setResponse(JSON.parse(call.data.data));\r\n        setTimeout(() => {\r\n          setDetail(tempArray.sort((a, b) => (a.i > b.i ? 1 : b.i > a.i ? -1 : 0)));\r\n          setLoading(false);\r\n        }, 1000);\r\n      });\r\n    } else {\r\n      NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let res = [];\r\n  for (let i = 0; i < response.length; i++) {\r\n    res.push({\r\n      from_userpart: response[i].from_userpart,\r\n      timeofevent: getNewDate(response[i].timeofevent.split(' ')[0]) + ' ' + response[i].timeofevent.split(' ')[1],\r\n      count: response[i].count,\r\n      display_name: response[i].display_name,\r\n    });\r\n  }\r\n  // response.map(resp => {\r\n  //   res.push({\r\n  //     from_userpart: resp.from_userpart,\r\n  //     timeofevent: getNewDate(resp.timeofevent.split(' ')[0]) + ' ' + resp.timeofevent.split(' ')[1],\r\n  //     count: resp.count,\r\n  //     display_name: resp.display_name,\r\n  //   });\r\n  // });\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {res.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n          <Button\r\n            style={{ backgroundColor: '#3f51b5', color: 'white', marginRight: '10px' }}\r\n            onClick={() => {\r\n              setOpen(!open);\r\n            }}>\r\n            {open ? <IntlMessages id={'abondenedcalls.hidedetails'} /> : <IntlMessages id={'abondenedcalls.showdetails'} />}\r\n          </Button>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Abondened_calls'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cevaplanmayan_cagrilar'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Verlaten oproepen'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Abgebrochene Anrufe'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={res} name=\"res\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Time of Event'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Etkinlik Zamanı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Tijd van evenement'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zeitpunkt des Ereignisses'\r\n                    : ''\r\n                }\r\n                value=\"timeofevent\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"from_userpart\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Display Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ekran adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Weergavenaam'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzeigename'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Adet'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Graaf'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column,index) => (\r\n                  <TableCell key={index} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {res.map((row, index) => {\r\n                return detail[index] !== undefined ? (\r\n                  detail[index].data !== undefined &&\r\n                  detail[index].data.length > 0 &&\r\n                  (color === 'Green' || color === '') ? (\r\n                    <>\r\n                      <TableRow style={{ backgroundColor: '#4E9F3D' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n\r\n                      {open && (\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            <Collapse in={true}>\r\n                              <Box sx={{ margin: 1 }}>\r\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                  <IntlMessages id={'abondenedcalls.detail'} />\r\n                                </Typography>\r\n                                <Table size=\"medium\">\r\n                                  <TableHead>\r\n                                    <TableRow>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.diraction'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.srcdn'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.dststarttime'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.dstendtime'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.time'} />\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  </TableHead>\r\n                                  <TableBody>\r\n                                    {detail[index].data.map(deta => (\r\n                                      <TableRow>\r\n                                        <TableCell>\r\n                                          {deta.direction === '-->' ? (\r\n                                            <span\r\n                                              style={{\r\n                                                padding: '5px',\r\n                                                backgroundColor: '#4E9F3D',\r\n                                                color: '#125C13',\r\n                                                borderRadius: '10px',\r\n                                                fontWeight: '600',\r\n                                              }}>\r\n                                              <IntlMessages id={'incomingcall'} />\r\n                                            </span>\r\n                                          ) : (\r\n                                            <span\r\n                                              style={{\r\n                                                padding: '5px',\r\n                                                backgroundColor: '#FF7777',\r\n                                                color: '#852747',\r\n                                                borderRadius: '10px',\r\n                                                fontWeight: '600',\r\n                                              }}>\r\n                                              <IntlMessages id={'outgoingcall'} />\r\n                                            </span>\r\n                                          )}\r\n                                        </TableCell>\r\n                                        <TableCell>{deta.src_dn}</TableCell>\r\n                                        <TableCell>{deta.dst_start_time}</TableCell>\r\n                                        <TableCell>{deta.dst_end_time}</TableCell>\r\n                                        <TableCell>{deta.calltime}</TableCell>\r\n                                      </TableRow>\r\n                                    ))}\r\n                                  </TableBody>\r\n                                </Table>\r\n                              </Box>\r\n                            </Collapse>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    (color === 'Red' || color === '') && (\r\n                      <TableRow style={{ backgroundColor: '#FF5C58' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    )\r\n                  )\r\n                ) : null;\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Alert, Stack } from '@mui/material';\r\n\r\nexport default function AbondenedCalls() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abondenedcalls'} />, isActive: true },\r\n  ];\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [queue,setQueue] = useState('')\r\n\r\n  let [params, setParams] = useState({\r\n    startDate: formatDate(today),\r\n    endDate: formatDate(today),\r\n  });\r\n\r\n  const [color, setColor] = useState('');\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abondenedcalls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setParams={setParams} setColor={setColor} color={color} queue={queue} setQueue={setQueue} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table params={params} color={color} queue={queue}/>\r\n        </Grid>\r\n      </GridContainer>\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Stack sx={{ width: '100%' }} spacing={2}>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.red'} />\r\n          </Alert>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.green'} />\r\n          </Alert>\r\n        </Stack>\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Button, Card, CardActions, CardContent, Grid } from '@material-ui/core';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport React from 'react';\r\n\r\nexport default function AgentCdrRportFilter() {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"Start Time\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"End Time\"\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button>Search</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AgentCdrReportTable() {\r\n  return <div />;\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React from 'react';\r\nimport AgentCdrRportFilter from './Filter';\r\nimport AgentCdrReportTable from './Table';\r\n\r\nexport default function AgentCdrReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'Agent CDR Report'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'Agent CDR Report'} />} breadcrumbs={breadcrumbs}>\r\n        <AgentCdrRportFilter />\r\n        <AgentCdrReportTable />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DailySummaryDateFilter({ setStartTimeApi, setEndTimeApi, handleSubmit }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button onClick={handleSubmit} variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getDailySummary, getDailySummaryTotal } from 'api/api';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport DailySummaryDateFilter from './DateFilter';\r\n\r\nexport default function DailySummaryReportFilter({ setData, setDataTotal }) {\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  // const handleStartTimeChange = event => {\r\n  //   setStartTime(formatDate(event._d));\r\n  // };\r\n  // const handleEndTimeChange = event => {\r\n  //   setEndTime(formatDate(event._d));\r\n  // };\r\n\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(startTime, endTime)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        getDailySummary(startTime, endTime).then(response => {\r\n          setData(JSON.parse(response.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        getDailySummaryTotal(startTime, endTime).then(response => {\r\n          setDataTotal(JSON.parse(response.data.data));\r\n          setLoading(false);\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [startTime, endTime, notFirstReq, setData, setDataTotal]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <DailySummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} handleSubmit={handleSubmit} />\r\n      {/* <GridContainer>\r\n            <Grid item md={3}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                maxDate={endTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                value={startTime}\r\n                onChange={handleStartTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                minDate={startTime}\r\n                format=\"DD-MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                value={endTime}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Grid>\r\n          </GridContainer> */}\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDailySummaryModalTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TotalCallModal({ date, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTotalCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAnsweredCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AnsweredCallModal({ date, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAnsweredCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAbondenedCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AbondenedCallModal({ date, handleAbondenedCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAbondenedCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAbondenedCallClose()}>\r\n          CLOSE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalTransferCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TransferCallModal({ date, handleTransferCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTransferCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transferer'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transfered'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.caller}</TableCell>\r\n                <TableCell>{item.transferer}</TableCell>\r\n                <TableCell>{item.trasfered}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTransferCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutOfTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function OutOfTimeModal({ date, handleOutOfTimeClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutOfTime(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutOfTimeClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalRonaCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function RonaCallModla({ date, handleRonaCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalRonaCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleRonaCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function OutCallModal({ date, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport { Box, Modal } from '@mui/material';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport AbondenedCallModal from '../Modals/AbondenedCallModal';\r\nimport TransferCallModal from '../Modals/TransferCallModal';\r\nimport OutOfTimeModal from '../Modals/OutOfTimeModal';\r\nimport RonaCallModla from '../Modals/RonaCallModla';\r\nimport OutCallModal from '../Modals/OutCallModal';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DailySummaryReportTable({ data, dataTotal }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    datetime: formatDate(dataUnit.datetime),\r\n    totalcall: dataUnit.totalcall,\r\n    answered: dataUnit.answered,\r\n    inboundtime: dataUnit.inboundtime,\r\n    waitingtime: dataUnit.waitingtime,\r\n    averageconnection: dataUnit.averageconnection,\r\n    abondened: dataUnit.abondened,\r\n    transfer: dataUnit.transfer,\r\n    long_time: dataUnit.long_time,\r\n    zdisi: dataUnit.zdisi,\r\n    average_abondened_waiting: dataUnit.average_abondened_waiting,\r\n    rona: dataUnit.rona,\r\n    outbound: dataUnit.outbound,\r\n    outbound_time: dataUnit.outbound_time,\r\n    average_outbound_time: dataUnit.average_outbound_time,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = data.map((row, index) => ({\r\n    id: index,\r\n    date: getNewDate(row.datetime.split(' ')[0]),\r\n    totalCall: parseInt(row.totalcall),\r\n    answered: parseInt(row.answered),\r\n    inboundTime: row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    waitingTime: row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    averageTime: row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    abondened: parseInt(row.abondened),\r\n    transfer: parseInt(row.transfer),\r\n    longestTime: row.long_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outOfTime: parseInt(row.zdisi),\r\n    averageAbondenedWaiting: row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    rona: parseInt(row.rona),\r\n    outbound: parseInt(row.outbound),\r\n    outboundTotalTime: row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outboundAverageTime: row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [totalCallDate, setTotalCallDate] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = date => {\r\n    setTotalCallDate(date);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const [answeredCallDate, setAnsweredCallDate] = useState('');\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = date => {\r\n    setAnsweredCallDate(date);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [abondenedCallModalOpen, setAbondenedCallOpen] = useState(false);\r\n  const [abondenedCallDate, setAbondenedCallDate] = useState('');\r\n  const handleAbondenedCallOpen = () => setAbondenedCallOpen(true);\r\n  const handleAbondenedCallClose = () => setAbondenedCallOpen(false);\r\n  const handleAbondenedCallClick = date => {\r\n    setAbondenedCallDate(date);\r\n    handleAbondenedCallOpen();\r\n  };\r\n  const [transferCallModalOpen, setTransferCallOpen] = useState(false);\r\n  const [transferCallDate, setTransferCallDate] = useState('');\r\n  const handleTransferCallOpen = () => setTransferCallOpen(true);\r\n  const handleTransferCallClose = () => setTransferCallOpen(false);\r\n  const handleTransferCallClick = date => {\r\n    setTransferCallDate(date);\r\n    handleTransferCallOpen();\r\n  };\r\n\r\n  const [outOfTimeModalOpen, setOutOfTimeModalOpen] = useState(false);\r\n  const [outOfTimeDate, setOutOfTimeDate] = useState('');\r\n  const handleOutOfTimeOpen = () => setOutOfTimeModalOpen(true);\r\n  const handleOutOfTimeClose = () => setOutOfTimeModalOpen(false);\r\n  const handleOutOfTimeClick = date => {\r\n    setOutOfTimeDate(date);\r\n    handleOutOfTimeOpen();\r\n  };\r\n  const [ronaCallModalOpen, setRonaCallOpen] = useState(false);\r\n  const [ronaCallDate, setRonaCallDate] = useState('');\r\n  const handleRonaCallOpen = () => setRonaCallOpen(true);\r\n  const handleRonaCallClose = () => setRonaCallOpen(false);\r\n  const handleRonaCallClick = date => {\r\n    setRonaCallDate(date);\r\n    handleRonaCallOpen();\r\n  };\r\n  const [outCallModalOpen, setOutCallOpen] = useState(false);\r\n  const [outCallDate, setOutCallDate] = useState('');\r\n  const handleOutCallOpen = () => setOutCallOpen(true);\r\n  const handleOutCallClose = () => setOutCallOpen(false);\r\n  const handleOutCallClick = date => {\r\n    setOutCallDate(date);\r\n    handleOutCallOpen();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'dailysummary.date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span>\r\n          <CalendarTodayIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'totalCall',\r\n      headerName: <IntlMessages id={'dailysummary.totalcall'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTotalCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ color: '#406882' }}>{params.row.totalCall}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'dailysummary.answered'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAnsweredCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <PermPhoneMsgIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'inboundTime',\r\n      headerName: <IntlMessages id={'dailysummary.inboundtime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waitingTime',\r\n      headerName: <IntlMessages id={'dailysummary.waitingtime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageTime',\r\n      headerName: <IntlMessages id={'dailysummary.avaragetime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'abondened',\r\n      headerName: <IntlMessages id={'dailysummary.abondened'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAbondenedCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#DD4A48' }}>\r\n          <PersonOffIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'transfer',\r\n      headerName: <IntlMessages id={'dailysummary.transfer'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTransferCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#396EB0' }}>\r\n          <TransferWithinAStationIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'longestTime',\r\n      headerName: <IntlMessages id={'dailysummary.longesttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outOfTime',\r\n      headerName: <IntlMessages id={'dailysummary.outoftime'} />,\r\n      width: 230,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutOfTimeClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageAbondenedWaiting',\r\n      headerName: <IntlMessages id={'dailysummary.averageabondenedwaiting'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rona',\r\n      headerName: <IntlMessages id={'dailysummary.rona'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleRonaCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outbound',\r\n      headerName: <IntlMessages id={'dailysummary.outboundcount'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#519259', cursor: 'pointer' }}>\r\n          <CallIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundTotalTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundtotaltime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundAverageTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundaveragetime'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      {csvData.length > 0 && (\r\n        <div style={{ marginBottom: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Daily_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijkse samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Tägliche Zusammenfassung'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"datetime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Çağrı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal gesprek'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anruf insgesamt'\r\n                    : ''\r\n                }\r\n                value=\"totalcall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Inbound Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Gelen Çağrı Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomende tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingangszeit'\r\n                    : ''\r\n                }\r\n                value=\"inboundtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Waiting Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Bekleme Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachttijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Wartezeit'\r\n                    : ''\r\n                }\r\n                value=\"waitingtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Zeit'\r\n                    : ''\r\n                }\r\n                value=\"averageconnection\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Abandoned'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Terkeden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Verlaten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Verlassen'\r\n                    : ''\r\n                }\r\n                value=\"abondened\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Transfer'\r\n                    : ''\r\n                }\r\n                value=\"transfer\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Longest Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'En uzun süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Langste tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Längste Zeit'\r\n                    : ''\r\n                }\r\n                value=\"long_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Out Of Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk dışı taşanlar'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Geen tijd meer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Außerhalb der Zeit'\r\n                    : ''\r\n                }\r\n                value=\"zdisi\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Abadoned Waiting'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Terkeden Bekleme'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddeld verlaten wachten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliches verlassenes Warten'\r\n                    : ''\r\n                }\r\n                value=\"average_abondened_waiting\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Rona'\r\n                    : ''\r\n                }\r\n                value=\"rona\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı Sayısı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande telling'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehender Zähler'\r\n                    : ''\r\n                }\r\n                value=\"outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Total Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı toplam süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande totale tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend Gesamtzeit'\r\n                    : ''\r\n                }\r\n                value=\"outbound_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden çağrı ortalama süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd uitgaan'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche ausgehende Zeit'\r\n                    : ''\r\n                }\r\n                value=\"average_outbound_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.totalcall'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.answered'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.inboundtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.waitingtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.avaragetime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.abondened'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.transfer'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.longesttime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 230 }}>\r\n                  <IntlMessages id={'dailysummary.outoftime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 260 }}>\r\n                  <IntlMessages id={'dailysummary.averageabondenedwaiting'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.rona'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.outboundcount'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.outboundtotaltime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 220 }}>\r\n                  <IntlMessages id={'dailysummary.outboundaveragetime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {data.map(row => (\r\n                <TableRow>\r\n                  <TableCell>{getNewDate(row.datetime.split(' ')[0])}</TableCell>\r\n                  <TableCell>{row.totalcall}</TableCell>\r\n                  <TableCell>{row.answered}</TableCell>\r\n                  <TableCell>{row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.abondened}</TableCell>\r\n                  <TableCell>{row.transfer}</TableCell>\r\n                  <TableCell>{row.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.zdisi}</TableCell>\r\n                  <TableCell>{row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.rona}</TableCell>\r\n                  <TableCell>{row.outbound}</TableCell>\r\n                  <TableCell>{row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))} */}\r\n              {dataTotal.map(data => (\r\n                <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n                  <TableCell>\r\n                    {' '}\r\n                    <IntlMessages id={'total'} />{' '}\r\n                  </TableCell>\r\n                  <TableCell>{data.totalcall}</TableCell>\r\n                  <TableCell>{data.answered}</TableCell>\r\n                  <TableCell>{data.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.abondened}</TableCell>\r\n                  <TableCell>{data.transfer}</TableCell>\r\n                  <TableCell>{data.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.zdisi}</TableCell>\r\n                  <TableCell>{data.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.rona}</TableCell>\r\n                  <TableCell>{data.outbound}</TableCell>\r\n                  <TableCell>{data.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TotalCallModal date={totalCallDate} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AnsweredCallModal date={answeredCallDate} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={abondenedCallModalOpen}\r\n        onClose={handleAbondenedCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AbondenedCallModal date={abondenedCallDate} handleAbondenedCallClose={handleAbondenedCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outOfTimeModalOpen}\r\n        onClose={handleOutOfTimeClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutOfTimeModal date={outOfTimeDate} handleOutOfTimeClose={handleOutOfTimeClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={ronaCallModalOpen}\r\n        onClose={handleRonaCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <RonaCallModla date={ronaCallDate} handleRonaCallClose={handleRonaCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={transferCallModalOpen}\r\n        onClose={handleTransferCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TransferCallModal date={transferCallDate} handleTransferCallClose={handleTransferCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outCallModalOpen}\r\n        onClose={handleOutCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutCallModal date={outCallDate} handleOutCallClose={handleOutCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DailySummaryReportFilter from './Filter';\r\nimport DailySummaryReportTable from './Table';\r\n\r\nexport default function DailySumaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailysummary'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  let [dataTotal, setDataTotal] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'dailysummary'} />} breadcrumbs={breadcrumbs}>\r\n        <DailySummaryReportFilter setData={setData} setDataTotal={setDataTotal} />\r\n        <DailySummaryReportTable data={data} dataTotal={dataTotal} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function InternalSummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getInternalsSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InternalSummaryDateFilter from './DateFilter';\r\n\r\nexport default function InternalsSummaryReportFilter({ setData, startTime, setStartTime, endTime, setEndTime }) {\r\n  let [agents, setAgents] = useState([]);\r\n  let [seletAgent, setSelectAgent] = useState('');\r\n\r\n  const handleChangeAgentSelect = event => {\r\n    setSelectAgent(event.target.value === 'all' ? '' : event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAgentNumber().then(response => {\r\n      setAgents(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n  const handleSerachClick = () => {\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(startTime, endTime)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        getInternalsSummary(startTime, endTime, seletAgent).then(result => {\r\n          setData(JSON.parse(result.data.data));\r\n          setLoading(false);\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [startTime, endTime, seletAgent, notFirstReq, setData]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBlock: '10px' }}>\r\n        <InternalSummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            {/* <Grid item md={4}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                maxDate={endTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                value={startTime}\r\n                onChange={handleStartTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                minDate={startTime}\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                value={endTime}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Grid> */}\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={seletAgent}\r\n                  onChange={handleChangeAgentSelect}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.dn}>\r\n                      {agent.dn} - {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button onClick={handleSerachClick} variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload, ArrowForward, ArrowBack, Person, PhoneMissed, PhoneInTalk, Phone } from '@material-ui/icons';\r\nimport { DataGrid, GridToolbarFilterButton } from '@mui/x-data-grid';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport {\r\n  getInternalsSummaryLongestCalled,\r\n  getInternalsSummaryLongestCaller,\r\n  getInternalsSummaryLongestCalledAmount,\r\n  getInternalsSummaryLongestCallerAmount,\r\n  getInternalBreakTime,\r\n} from 'api/api';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n// import CallIcon from '@mui/icons-material/Call';\r\n\r\nexport default function InternalsSummaryReportTable({ data, startTime, endTime }) {\r\n  let [selectedAgent, setSelectedAgent] = useState('');\r\n  const handleAgentClick = agentNum => {\r\n    setSelectedAgent(agentNum);\r\n    handleOpenModal();\r\n  };\r\n\r\n  let [modalOpen, setModalOpen] = useState(false);\r\n  const handleOpenModal = () => setModalOpen(true);\r\n  const handleCloseModal = () => setModalOpen(false);\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  let [longestBreakTime, setLongestBreakTime] = useState([]);\r\n  useEffect(() => {\r\n    if (selectedAgent !== '') {\r\n      getInternalsSummaryLongestCalled(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCaller(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCalledAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestAmount(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCallerAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallerAmount(JSON.parse(result.data.data));\r\n      });\r\n\r\n      getInternalBreakTime(selectedAgent, startTime, endTime).then(result => {\r\n        console.log(JSON.parse(result.data.data));\r\n        setLongestBreakTime(JSON.parse(result.data.data));\r\n      });\r\n    }\r\n  }, [selectedAgent, startTime, endTime]);\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    details: dataUnit.id,\r\n    id: dataUnit.id,\r\n    display_name: dataUnit.display_name,\r\n    total_inbound: parseInt(dataUnit.total_inbound),\r\n    answered_inbound: parseInt(dataUnit.answered_inbound),\r\n    unanswered_inbound: dataUnit.total_inbound - dataUnit.answered_inbound,\r\n    total_outbound: parseInt(dataUnit.total_outbound),\r\n    answered_outbound: parseInt(dataUnit.answered_outbound),\r\n    unanswered_outbound: dataUnit.total_outbound - dataUnit.answered_outbound,\r\n  }));\r\n  let curentLanguage = useIntl();\r\n  const columns = [\r\n    {\r\n      field: 'details',\r\n      headerName: <IntlMessages id={'details'} />,\r\n      renderCell: params => (\r\n        <span onClick={() => handleAgentClick(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF5959', verticalAlign: '-5px' }} />{' '}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'id',\r\n      headerName: <IntlMessages id={'agentnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <b style={{ color: '#406882' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: <IntlMessages id={'agentname'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <span style={{ verticalAlign: '-5px', color: '#5584AC' }}>\r\n            <Person />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_inbound',\r\n      headerName: <IntlMessages id={'totalinbound'} />,\r\n      width: 225,\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_inbound',\r\n      headerName: <IntlMessages id={'answeredinbound'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_inbound',\r\n      headerName: <IntlMessages id={'unansweredinbound'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_outbound',\r\n      headerName: <IntlMessages id={'totaloutbound'} />,\r\n      width: 225,\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_outbound',\r\n      headerName: <IntlMessages id={'answeredoutbound'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_outbound',\r\n      headerName: <IntlMessages id={'unansweredoutbound'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = selectedAgent, extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'ınternal_summary_report'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'dahili özet raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'ıintern samenvattend rapport'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'interner zusammenfassender Bericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamteingang'\r\n                    : ''\r\n                }\r\n                value=\"total_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomend beantwoord'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord Inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantworteter Eingang'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamt ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"total_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande beantwoording'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantwortet ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_outbound\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginTop: '20px', height: '700px' }}>\r\n        <DataGrid\r\n          rows={csvData}\r\n          columns={columns}\r\n          pageSize={100}\r\n          rowsPerPageOptions={[100]}\r\n          components={{ Toolbar: GridToolbarFilterButton }}\r\n          localeText={localeText}\r\n        />\r\n        {/* <TableContainer style={{ maxHeight: '40vh' }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.agentnumber'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.agentname'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.totalinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.answeredinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.unansweredinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.totaloutbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.answeredoutbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.unansweredoutbound'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((dataunit, index) => (\r\n                <TableRow\r\n                  style={{\r\n                    backgroundColor: dataunit.dn === selectedAgent ? '#D1E8E4' : '',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  key={index}>\r\n                  <TableCell onClick={() => handleAgentClick(dataunit.dn)} style={{ padding: '7px', textAlign: 'center' }}>\r\n                    <Person fontSize=\"small\" style={{ verticalAlign: '-5px' }} style={{ color: '#396EB0' }} /> {dataunit.dn}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleAgentClick(dataunit.dn)} style={{ padding: '7px', textAlign: 'center' }}>\r\n                    <Person fontSize=\"small\" style={{ verticalAlign: '-5px' }} style={{ color: '#396EB0' }} />{' '}\r\n                    {dataunit.display_name}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#009DAE' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <AddCircle fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> {dataunit.total_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#34BE82' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <Call fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    {dataunit.answered_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#FF5151' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <CallEnd fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    {dataunit.total_inbound - dataunit.answered_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#009DAE' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <AddCircle fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> {dataunit.total_outbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#34BE82' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <Call fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    {dataunit.answered_outbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#FF5151' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <CallEnd fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    {dataunit.total_outbound - dataunit.answered_outbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n      </Card>\r\n\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <div style={{ padding: '10px' }} ref={ref}>\r\n            <GridContainer>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined\r\n                            ? longestCalleds[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined ? longestCalleds[1].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined\r\n                            ? longestCalleds[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined ? longestCalleds[2].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined\r\n                            ? longestCalleds[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined ? longestCalleds[3].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined\r\n                            ? longestCalleds[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined ? longestCalleds[4].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined\r\n                            ? longestCalleds[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined\r\n                            ? longestCallers[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined ? longestCallers[1].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined\r\n                            ? longestCallers[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined ? longestCallers[2].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined\r\n                            ? longestCallers[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined ? longestCallers[3].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined\r\n                            ? longestCallers[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined ? longestCallers[4].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined\r\n                            ? longestCallers[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4}></Grid>\r\n              <Grid item md={4} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestbreaketimes'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={4}></Grid>\r\n            </GridContainer>\r\n          </div>\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white', marginRight: '10px' }} onClick={downloadScreenshot}>\r\n              <IntlMessages id={'dowlandimage'} />\r\n            </Button>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleCloseModal()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport InternalsSummaryReportFilter from './Filter';\r\nimport InternalsSummaryReportTable from './Table';\r\n\r\nexport default function InternalsSummaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'internalssummary'} />, isActive: true },\r\n  ];\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [data, setData] = useState([]);\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'internalssummary'} />} breadcrumbs={breadcrumbs}>\r\n      <InternalsSummaryReportFilter\r\n        setData={setData}\r\n        startTime={startTime}\r\n        setStartTime={setStartTime}\r\n        endTime={endTime}\r\n        setEndTime={setEndTime}\r\n      />\r\n      <InternalsSummaryReportTable data={data} startTime={startTime} endTime={endTime} />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLog2DateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nexport default function CallLog2therFilters({\r\n  setSourceApi,\r\n  setDestinationApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus,\r\n  handleSubmitFilter,\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setSourceApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setSourceApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setSourceApi('0');\r\n    }\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetSelect, setTargetSelect] = useState('');\r\n  const handleChangeTargetSelect = event => {\r\n    setTargetSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setDestinationApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setDestinationApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setDestinationApi('0');\r\n    }\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [filter3Select, setFilter3Select] = useState('');\r\n  const handleChangeFilter3Select = event => {\r\n    setFilter3Select(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setAnswerStatus('');\r\n    } else if (event.target.value === 'answered') {\r\n      setAnswerStatus('-');\r\n    } else if (event.target.value === 'unanswered') {\r\n      setAnswerStatus('~');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'caller'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.source'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.source'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' || sourceFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneCallbackIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destination'} />}\r\n                  onChange={handleChangeTargetSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' || targetFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={filter3Select}\r\n                  label={<IntlMessages id={'calllog2.filter.filter3'} />}\r\n                  onChange={handleChangeFilter3Select}>\r\n                  <MenuItem value={'all'}>\r\n                  <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'calllog2.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'unanswered'}>\r\n                    <IntlMessages id={'calllog2.filter.unanswered'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleSubmitFilter();\r\n            }}\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog2, getCallLog2Total, getCallLog2Count, getCallLog2TotalSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLog2DateFilter from './DateFilter';\r\nimport CallLog2therFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLog2Filter({\r\n  setData,\r\n  limit,\r\n  offset,\r\n  setPage,\r\n  setTotalData,\r\n  setCount,\r\n  setResponseTotalSummary,\r\n}) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd'));\r\n  let [sourceApi, setSourceApi] = useState('');\r\n  let [destinationApi, setDestinationApi] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select      \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  )  \r\n  SELECT   \r\n  call_id, \r\n  case \r\n  when src_dn_type = 1 then src_display_name else src_dn end as src_dn,  \r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,  \r\n  split_part(to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+3', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour,  \r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording'),    \r\n  case when cl_segments_view_new.dst_answer_time is not null then 'ok' else 'not ok' end as Salable,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' end as Salable \r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT+0', 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cast(src_dn_type as text) like '%${sourceApi}'   \r\n  and  \r\n  cast(dst_dn_type as text) like '%${destinationApi}'  \r\n  and  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'  \r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time,seg_order asc   \r\n  limit ${limit} offset ${offset}\r\n  `;\r\n\r\n  let totalString = `with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  to_char((date_trunc('day',answered.dst_start_time)),'dd-mm-yyyy'),\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  group by date_trunc('day',answered.dst_start_time) \r\n  order by date_trunc('day',answered.dst_start_time) asc`;\r\n\r\n  let stringCount = `SELECT\r\n\tcast(count(*) as integer) as cnt\r\n\tFROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new\r\n\twhere\r\n\tcast(src_dn_type as text) like '%${sourceApi}'\r\n\tand\r\n\tcast(dst_dn_type as text) like '%${destinationApi}'\r\n\tand \r\n\t(dst_dn_type =0 \r\n\tor  dst_dn_type = 1)\r\n  \tand\r\n\tact != 1\r\n\tand\r\n\tdst_display_name like '%${destinationFilterNumber}%'\r\n\tand\r\n\tsrc_display_name like '%${sourceFilterNumber}%'\r\n\tand\r\n\tcoalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n  and \r\n  act_dn_type is null\r\n\tand(\r\n\t(dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n \tand\r\n \t(cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n    and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <=${destinationDnMax})`;\r\n\r\n  let stringTotalSummary = `\r\n  with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        // setSourceDnMin(sourceFilterText.split('-')[0]);\r\n        // setSourceDnMax(sourceFilterText.split('-')[1]);\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        // setDestinationDnMin(destinationFilterText.split('-')[0]);\r\n        // setDestinationDnMax(destinationFilterText.split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmitFilter = () => {\r\n    setLoading(true);\r\n    setPage(0);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Total(totalString).then(result => {\r\n      setTotalData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [totalString, setTotalData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2TotalSummary(stringTotalSummary).then(result => {\r\n      setResponseTotalSummary(JSON.parse(result.data.data)[0]);\r\n      setLoading(false);\r\n    });\r\n  }, [stringTotalSummary, setResponseTotalSummary]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Count(stringCount).then(result => {\r\n      setCount(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n\r\n  return (\r\n    <div>\r\n      <CallLog2DateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLog2therFilters\r\n        setSourceApi={setSourceApi}\r\n        setDestinationApi={setDestinationApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        handleSubmitFilter={handleSubmitFilter}\r\n        setLoading={setLoading}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Grid, Tab, Tabs, Typography } from '@mui/material';\r\nimport { getCallDetail } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineOppositeContent,\r\n  TimelineSeparator,\r\n} from '@material-ui/lab';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function CallLog2CallDetail({ callId }) {\r\n  let [data, setData] = useState([]);\r\n  const detailContainerStyle={borderBottom:\"1px solid rgba(0, 0, 0, 0.87)\", margin:\"10px 0\", width:\"100%\"};\r\n\r\n  useEffect(() => {\r\n    getCallDetail(callId).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      setTotalTime(\r\n        new Date(JSON.parse(resp.data.data)[JSON.parse(resp.data.data).length - 1]?.end_time).getTime() -\r\n          new Date(JSON.parse(resp.data.data)[0]?.start_time).getTime(),\r\n      );\r\n    });\r\n  }, [callId]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let [totalTime, setTotalTime] = useState(0);\r\n\r\n  const secondToTime = ms => {\r\n    let seconds = ms / 1000;\r\n    const hours = parseInt(seconds / 3600);\r\n    seconds = seconds % 3600;\r\n    const minutes = parseInt(seconds / 60);\r\n    seconds = seconds % 60;\r\n    let hourString = hours.toString().length === 1 ? '0' : '';\r\n    let minutesString = minutes.toString().length === 1 ? '0' : '';\r\n    let secondsString = seconds.toString().length === 1 ? '0' : '';\r\n    let string = hourString + hours + 'h ' + minutesString + minutes + 'm ' + secondsString + seconds + 's ';\r\n    return string;\r\n  };\r\n\r\n  let [totalRingTime, setTotalRingTime] = useState(0);\r\n  let [totalTalkTime, setTotalTalkTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let tempRingTime = 0;\r\n    let tempTalkTime = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].ring_time !== '') {\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n      if (data[i].duration !== '') {\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n    }\r\n    setTotalRingTime(tempRingTime);\r\n    setTotalTalkTime(tempTalkTime);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ background: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)' }}>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              background: 'rgb(173,206,116)',\r\n              height: '200px',\r\n              marginRight: '0px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#89a658',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.callers}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ width: '100%', height: '200px' }}>\r\n            <div\r\n              style={{\r\n                width: 0,\r\n                height: 0,\r\n                borderTop: '100px solid transparent',\r\n                borderLeft: '200px solid',\r\n                borderLeftColor: 'rgb(173,206,116)',\r\n                borderBottom: '100px solid transparent',\r\n              }}></div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)',\r\n              height: '200px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#2978B5',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.calleds}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <hr style={{ marginTop: '0px', height: '5px', color: 'gray' }} />\r\n      <div>\r\n        <Box sx={{ width: '100%' }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'calllog2.detail.callinfo'} />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'calllog2.datail.detail'} />}\r\n                {...a11yProps(1)}\r\n              />\r\n            </Tabs>\r\n          </Box>\r\n          <TabPanel value={value} index={0}>\r\n            <Timeline position=\"alternate\">\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#2978B5' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[0]?.start_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"primary\">\r\n                    <DateRangeIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n              {data.map((item, index) => (\r\n                <TimelineItem key={index}>\r\n                  <TimelineOppositeContent\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ marginTop: '80px' }}>\r\n                    <Typography variant=\"h6\" component=\"span\" style={{ marginTop: '45px' }}>\r\n                      <b>{item.calleds}</b>\r\n                    </Typography>\r\n                    <Typography>{item.states}</Typography>\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color=\"secondary\">\r\n                      <CallIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography style={{ marginTop: '20px' }}>\r\n                        <IntlMessages id={'calllog2.datail.starttime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#A6CF98', borderRadius: '10px', color: '#557C55' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.start_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'calllog2.datail.ringtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#EEC373', borderRadius: '10px', color: '#EA5C2B' }}>\r\n                        <NotificationsActiveIcon style={{ verticalAlign: '-5px' }} /> <b>{item.ring_time}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'calllog2.datail.talktime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#6998AB', borderRadius: '10px', color: '#1A374D' }}>\r\n                        <PhoneInTalkIcon style={{ verticalAlign: '-5px' }} /> <b>{item.duration}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'calllog2.datail.endtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#FF7272', borderRadius: '10px', color: '#9B0000' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.end_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))}\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#EA4C4C' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[data.length - 1]?.end_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"secondary\">\r\n                    <CallEndIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n          <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>Call Id:</b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <p style={{ fontSize: '16px' }}>{callId}</p>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.from'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#086E7D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.callers}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.to'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.calleds}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.duration'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{secondToTime(totalTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.talktime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#406882' }}>{secondToTime(totalTalkTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.ringtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#EF2F88' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#EF2F88' }}>{secondToTime(totalRingTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.date'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.start_time.split(' ')[0]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.starttime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[0]?.start_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.endtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[data.length - 1]?.end_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n          </TabPanel>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTagtextByCallId, TagByID } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Tag({call_id,tagsList}) {\r\n  const [tagValue, setTagValue] = useState('');\r\n\r\n  const handleChangeTag = event => {\r\n    TagByID(event.target.value,call_id).then(() =>{\r\n      setTagValue(event.target.value);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    if(call_id !== \"\"){\r\n      getTagtextByCallId(call_id).then(resp => {\r\n        setTagValue(JSON.parse(resp.data.data)[0]?.tagtext || '');\r\n    });\r\n    }\r\n\r\n  },[call_id]);\r\n\r\n  // const tagStyle = {\r\n  //   \"borderRadius\":\"10px\",\r\n  //   \"color\":\"#fff\",\r\n  //   \"backgroundColor\":\"#99038f\",\r\n  //   \"fontWeight\":\"300\",\r\n  //   \"padding\":\"4px 8px\",\r\n  //   \"margin\":\"0 4px\"\r\n  // }\r\n  return (\r\n    <>\r\n    {\r\n      call_id === \"\"?(<small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'nontaggable'} /></small>):(\r\n        <>\r\n        {\r\n          // tagValue !== '' ? <span style={tagStyle}>{tagValue}</span> : \r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label11\"><IntlMessages id={'tag'} /></InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label11\"\r\n              id=\"demo-simple-select222\"\r\n              value={tagValue}\r\n              label={<IntlMessages id={'tag'} />}\r\n              style={{ width: '100%' }}\r\n              onChange={handleChangeTag}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n                {\r\n                  tagsList.map((item,index)=>(<MenuItem key={index} value={item.tagmassage}>{item.tagmassage}</MenuItem>))\r\n                }\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { AccessTime, Check, Clear, CloudDownload, DateRange, Person, PhoneDisabled, PlayArrow } from '@material-ui/icons';\r\nimport { getRecording, getPath, getTagTypes } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallLog2CallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Tag from './Tag';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function CallLog2Table({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  totalData,\r\n  count,\r\n  responseTotalSummary,\r\n  setData,\r\n}) {\r\n  let [path, setPath] = useState('');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  //const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  // const handleDowlandButtonClick = () => {\r\n  //   setLimit(parseInt(count[0].cnt));\r\n  //   setPage(0);\r\n  //   setData([]);\r\n  //   handleOpen();\r\n  // };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const listenRecord = dir => {\r\n    getRecording(path, dir)\r\n      .then(resp => {\r\n        if(resp !== null){\r\n          window.location.href = resp.request.responseURL;\r\n        }\r\n        else{\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000)\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  let tableData = data.map((item, index) => ({\r\n    callId: item.call_id,\r\n    listen: item.coalesce,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    caller:\r\n      item.src_dn === '-'\r\n        ? item.src_display_name.split(':')[0]\r\n        : item.src_display_name.split(':')[0] + '(' + item.src_dn + ')',\r\n    called: item.dst_dn === '-' ? item.dst_display_name : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    salable1: item.salable1,\r\n    duration: item.duration,\r\n    salable: item.salable,\r\n    id: index,\r\n    Tag: isTaggable(item.salable1, item.salable) ? item.call_id: \"\",\r\n  }));\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const [tagsList,setTagsList] = useState([]);\r\n  useEffect(()=>{\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)))\r\n  },[]);\r\n  const columns = [\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n          {params.value === 'no recording' && (\r\n            <IconButton disabled style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }} size=\"small\" aria-label=\"listen\">\r\n              <Clear />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable1',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          )}\r\n\r\n          {params.value === 'not ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'Tag',\r\n      headerName: <IntlMessages id={'tag'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Tag call_id={params.value} tagsList={params.value !== \"\"? tagsList : []}/>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          {\r\n            <ExcelFile\r\n              filename={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? 'Call_Log'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Cagri_raporu'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Oproep_Log'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Anrufliste'\r\n                  : ''\r\n              }\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={data} name=\"data\">\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Date'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Tarih'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Datum'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Datum'\r\n                      : ''\r\n                  }\r\n                  value=\"date\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunde'\r\n                      : ''\r\n                  }\r\n                  value=\"hour\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'From'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kimden'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Van'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Von'\r\n                      : ''\r\n                  }\r\n                  value=\"src_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Destination'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Hedef'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Bestemming'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Ziel'\r\n                      : ''\r\n                  }\r\n                  value=\"dst_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Direction'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Yön'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Richting'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Genaamd'\r\n                      : ''\r\n                  }\r\n                  value=\"salable1\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Duration'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Süre'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Looptijd'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Dauer'\r\n                      : ''\r\n                  }\r\n                  value=\"duration\"\r\n                />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          }\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px' }}>\r\n          <CallLog2CallDetail callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {data.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {data.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {data.length > 0 && (\r\n              <ExcelFile\r\n                filename={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Call_Log'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cagri_raporu'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Oproep_Log'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufliste'\r\n                    : ''\r\n                }\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={data} name=\"data\">\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Date'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Tarih'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Datum'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Datum'\r\n                        : ''\r\n                    }\r\n                    value=\"date\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Hour'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Saat'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Uur'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Stunde'\r\n                        : ''\r\n                    }\r\n                    value=\"hour\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Caller'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Arayan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Beller'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Anruferin'\r\n                        : ''\r\n                    }\r\n                    value=\"src_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Called'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Aranan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Genaamd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Namens'\r\n                        : ''\r\n                    }\r\n                    value=\"dst_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Direction'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Yön'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Richting'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Genaamd'\r\n                        : ''\r\n                    }\r\n                    value=\"salable1\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Duration'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Süre'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Looptijd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Dauer'\r\n                        : ''\r\n                    }\r\n                    value=\"duration\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'State'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Durum'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Staat'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Bundesland'\r\n                        : ''\r\n                    }\r\n                    value=\"salable\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <div style={{ height: '440px', width: '100%' }}>\r\n          <DataGrid\r\n            rows={tableData}\r\n            columns={columns}\r\n            rowHeight={38}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(count[0].cnt)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(data.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      {/* <Paper style={{ marginTop: '20px' }}>\r\n        <NotificationContainer />\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'listen'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.startdate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'caller'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'called'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.diraction'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'state'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map(item => (\r\n                <TableRow>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px' }}>\r\n                    {item.coalesce !== 'no recording' && (\r\n                      <IconButton\r\n                        onClick={() => listenRecord(item.coalesce)}\r\n                        style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n                        size=\"small\"\r\n                        aria-label=\"listen\">\r\n                        <PlayArrow />\r\n                      </IconButton>\r\n                    )}\r\n                    {item.coalesce === 'no recording' && (\r\n                      <IconButton\r\n                        disabled\r\n                        style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }}\r\n                        size=\"small\"\r\n                        aria-label=\"listen\">\r\n                        <Clear />\r\n                      </IconButton>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {getNewDate(item.date)}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: '#009DAE',\r\n                    }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> {item.hour}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#98BAE7' }}>\r\n                      <Person style={{ verticalAlign: '-5px' }} />\r\n                    </span>\r\n                    {item.src_display_name + '(' + item.src_dn + ')'}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#9AE66E' }}>\r\n                      <Person style={{ verticalAlign: '-5px' }} />\r\n                    </span>\r\n                    {item.dst_display_name + '(' + item.dst_dn + ')'}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px' }}>\r\n                    {item.salable1 === 'içeri' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#9AE66E',\r\n                          color: '#34BE82',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'incomingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable1 === 'dışarı' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FF6D6D',\r\n                          color: '#AE431E',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'outgoingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable1 === 'dahili' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FFBC97',\r\n                          color: '#FF7800',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'agentedcall'} />\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: '#548CA8',\r\n                    }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> {item.duration}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'sans-serif' }}>\r\n                    {item.salable === 'ok' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#B1E693',\r\n                          color: '#1C7947',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable === 'not ok' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FF7777',\r\n                          color: '#852747',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                        <IntlMessages id={'notanswered'} />\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={data.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper> */}\r\n\r\n      {totalData.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log Samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Zusammenfassung des Anrufprotokolls'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={totalData} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"to_char\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmamış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal onbeantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl unbeantworteter Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalduration\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"averageduration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.average.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalData.map((total,index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    <b>{total.to_char}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        // backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        // padding: '5px',\r\n                        // borderRadius: '7px',\r\n                        // fontSize: '12px',\r\n                        // fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span\r\n                      style={{\r\n                        // backgroundColor: '#FF7777',\r\n                        color: '#852747',\r\n                        // padding: '5px',\r\n                        // borderRadius: '7px',\r\n                        // fontSize: '12px',\r\n                        // fontWeight: '800',\r\n                      }}>\r\n                      <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.not_answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    {' '}\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalduration}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.averageduration}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{responseTotalSummary.count}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      // backgroundColor: '#B1E693',\r\n                      color: '#1C7947',\r\n                      // padding: '5px',\r\n                      // borderRadius: '7px',\r\n                      // fontSize: '12px',\r\n                      // fontWeight: '800',\r\n                    }}>\r\n                    <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      // backgroundColor: '#FF7777',\r\n                      color: '#852747',\r\n                      // padding: '5px',\r\n                      // borderRadius: '7px',\r\n                      // fontSize: '12px',\r\n                      // fontWeight: '800',\r\n                    }}>\r\n                    <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    <b>{responseTotalSummary.not_answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.totalduration}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.averageduration}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nconst nonTaggableCallTypes = [\"dahili\",\"\"];\r\nconst isTaggable = (callType, status) =>{\r\n  if(status === \"ok\"){\r\n    if(!nonTaggableCallTypes.includes(callType)){\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallLog2Filter from './Filter';\r\nimport CallLog2Table from './Table';\r\n\r\nexport default function CallLog2() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllog'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState([{ count: 10 }]);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [responseTotalSummary, setResponseTotalSummary] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calllog'} />} breadcrumbs={breadcrumbs}>\r\n        <CallLog2Filter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setTotalData={setTotalData}\r\n          setCount={setCount}\r\n          setResponseTotalSummary={setResponseTotalSummary}\r\n        />\r\n        <CallLog2Table\r\n          count={count}\r\n          totalData={totalData}\r\n          responseTotalSummary={responseTotalSummary}\r\n          data={data}\r\n          setData={setData}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QualityReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography, Box, Chip } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAgentNumber } from 'api/api';\r\nimport QualityReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function QualityFilters({data,setFiltered}) {\r\n\r\n  const [agentNo,setAgentNo] = useState(\"\");\r\n  const [agentName,setAgentName] = useState([]);\r\n  const [score,setScore] = useState(\"\");\r\n  const [agents,setAgents] = useState([]);\r\n  //tarihler başlangıç-bitiş\r\n  const [startTimeApi,setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0),'dd/mm/yyyy HH:MM:ss'));\r\n  const [endTimeApi,setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59),'dd/mm/yyyy HH:MM:ss'));\r\n  useState(()=>{\r\n    getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  },[]);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  useEffect(()=>{\r\n  var filtered = [...data];\r\n  if(agentNo !== \"\"){\r\n    filtered = filtered.filter((item) => {\r\n      return Object.keys(item).some(() => {\r\n          return item.ani\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(agentNo.toLowerCase());\r\n      })\r\n  });\r\n  }\r\n  if(agentName.length > 0){\r\n    filtered = filtered.filter((item) => {\r\n     return agentName.includes(item.agent);\r\n  });\r\n  }\r\n  if(score !== \"\"){\r\n    filtered = filtered.filter((item) => {\r\n      return Object.keys(item).some(() => {\r\n          return item.score\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(score.toLowerCase());\r\n      })\r\n  });\r\n  }\r\n  filtered = filtered.filter((item)=>{\r\n    return new Date(item.timeofinsertion).getTime() <= new Date(endTimeApi).getTime() &&\r\n     new Date(item.timeofinsertion).getTime() >= new Date(startTimeApi).getTime();\r\n  })\r\n  if(agentName === \"\" && agentNo === \"\" && score === \"\"){\r\n    setFiltered(data)\r\n  }\r\n  else{\r\n    setFiltered(filtered);\r\n  }\r\n  },[agentNo,agentName,score,data,setFiltered,startTimeApi,endTimeApi]);\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <QualityReportDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi}/>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.number'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <TextField\r\n                id='agentNo'\r\n                type=\"text\"\r\n                name=\"agentNo\"\r\n                value={agentNo}\r\n                placeholder=\"Agent Number\"\r\n                onChange={(e) =>{setAgentNo(e.target.value)}}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl variant='standard' fullWidth style={{ marginTop: '8px' }}>\r\n              <InputLabel id=\"agentName\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </InputLabel>\r\n                <Select\r\n                multiple\r\n                  labelId=\"agentName\"\r\n                  label={<IntlMessages id={'agent.name'} />}\r\n                  value={agentName}\r\n                  MenuProps={{ style: { maxHeight:300 } }}\r\n                  renderValue={(selected) => (\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                      {selected.map((value) => (\r\n                        <Chip key={value} label={value} />\r\n                      ))}\r\n                    </Box>\r\n                  )}\r\n                  onChange={(e) => {\r\n                    const {target:{value}} = e;\r\n                    if(value[value.length-1] === \"\"){\r\n                      setAgentName([]);\r\n                    }\r\n                    else{\r\n                      setAgentName(typeof value === 'string' ? value.split(','):value)\r\n                    }\r\n                  }}>\r\n                  <MenuItem value=\"\"><IntlMessages id={'calllog2.filter.all'} /></MenuItem>\r\n                  {agents && agents.map((item,index)=>(\r\n                  <MenuItem key={index} value={item.dn}>\r\n                    {item.dn + '-' + item.display_name}\r\n                  </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'score'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl  variant=\"standard\" fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"score\">\r\n                  <IntlMessages id={'score'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"score\"\r\n                  label={<IntlMessages id={'score'} />}\r\n                  value={score}\r\n                  onChange={(e) => setScore(e.target.value)}>\r\n                  <MenuItem value=\"\"><IntlMessages id={'calllog2.filter.all'} /></MenuItem>\r\n                  <MenuItem value=\"5\">5</MenuItem>\r\n                  <MenuItem value=\"4\">4</MenuItem>\r\n                  <MenuItem value=\"3\">3</MenuItem>\r\n                  <MenuItem value=\"2\">2</MenuItem>\r\n                  <MenuItem value=\"1\">1</MenuItem>\r\n                  <MenuItem value=\"0\">0</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport dateFormat from 'dateformat';\r\nexport default function QualityTable({filtered}) {\r\n  return (\r\n    <>\r\n      <TableContainer sx={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'date'}/>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'agent.number'} />\r\n              </TableCell>\r\n              <TableCell>\r\n              <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'score'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filtered !== undefined && filtered.map((item,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{dateFormat(item.timeofinsertion,'dd/mm/yyyy HH:MM:ss')}</TableCell>\r\n                <TableCell>{item.ani}</TableCell>\r\n                <TableCell>{item.agent}</TableCell>\r\n                <TableCell>{item.score}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState, useEffect } from 'react';\r\nimport QualityFilter from './Filter';\r\nimport QualityTable from './Table';\r\nimport {getQualityReport} from '../../../api/api';\r\nexport default function QualityReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'survey.report'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [filtered,setFiltered] = useState([]);\r\n  useEffect(()=>{\r\n    getQualityReport().then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    })\r\n  },[]);\r\n  \r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'survey.report'} />} breadcrumbs={breadcrumbs}>\r\n        <QualityFilter\r\n        data={data}\r\n        setFiltered={setFiltered}\r\n        />\r\n        <QualityTable\r\n          filtered={filtered}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallTransferReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last60days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last60days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setSelectedStartTime, setSelectedEndTime, agent, setAgent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  function handleClick() {\r\n    console.log('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'calltransferreport.agnet'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'calltransferreport.agnet'} />}\r\n                  value={agent}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.display_name}>\r\n                      {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { getCallTransferReport } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function DataTable({ agent, selectedStartTime, selectedEndTime }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getCallTransferReport(agent, selectedStartTime, selectedEndTime).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      console.log(JSON.parse(resp.data.data));\r\n    });\r\n  }, [agent, selectedStartTime, selectedEndTime]);\r\n\r\n  let rows = data.map((item, index) => ({\r\n    id: index,\r\n    transferer: item.transferer,\r\n    trasfered: item.trasfered,\r\n    caller: item.caller,\r\n    start_time: item.start_time,\r\n    answer_time: item.answer_time,\r\n    end_time: item.end_time,\r\n    ring_time: item.ring_time,\r\n    talk_time: item.talk_time,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'transferer',\r\n      headerName: <IntlMessages id={'calltransferreport.transferfrom'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'trasfered',\r\n      headerName: <IntlMessages id={'calltransferreport.transferto'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'calltransferreport.caller'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'calltransferreport.starttime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'answer_time',\r\n      headerName: <IntlMessages id={'calltransferreport.answertime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'calltransferreport.endtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'ring_time',\r\n      headerName: <IntlMessages id={'calltransferreport.ringingtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'talk_time',\r\n      headerName: <IntlMessages id={'calltransferreport.talktime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{ height: '600px', width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          localeText={localeText}\r\n          componentsProps={{\r\n            pagination: {\r\n              labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallTransferReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calltransferreport'} />, isActive: true },\r\n  ];\r\n\r\n  const [selectedStartTime, setSelectedStartTime] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd'));\r\n  const [selectedEndTime, setSelectedEndTime] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd'));\r\n  const [agent, setAgent] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calltransferreport'} />} breadcrumbs={breadcrumbs}>\r\n        <GridContainer>\r\n          <Grid item xs={12}>\r\n            <Filter\r\n              agent={agent}\r\n              setAgent={setAgent}\r\n              selectedStartTime={selectedStartTime}\r\n              selectedEndTime={selectedEndTime}\r\n              setSelectedEndTime={setSelectedEndTime}\r\n              setSelectedStartTime={setSelectedStartTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table agent={agent} selectedStartTime={selectedStartTime} selectedEndTime={selectedEndTime} />\r\n          </Grid>\r\n        </GridContainer>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakName } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakNameModal({ id, selectedBreakName, handleBreakNameModalClose }) {\r\n  let [newName, setNewName] = useState(selectedBreakName);\r\n  const handleSubmit = () => {\r\n    setBreakName(newName, id).then(rep => {\r\n      handleBreakNameModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breakname'} />}\r\n        variant=\"outlined\"\r\n        value={newName}\r\n        onChange={event => setNewName(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakNameModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakTime } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakTimeModal({ logouttype, period, handleBreakTimeModalClose }) {\r\n  let [newTime, setNewTime] = useState(period);\r\n  const handleSubmit = () => {\r\n    setBreakTime(newTime, logouttype).then(resp => {\r\n      handleBreakTimeModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breaktime'} />}\r\n        variant=\"outlined\"\r\n        value={newTime}\r\n        onChange={event => setNewTime(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakTimeModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Box, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getBreakName, getBreakTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport BreaksChangeBreakNameModal from './Modals/BreaksChangeBreakNameModal';\r\nimport BreaksChangeBreakTimeModal from './Modals/BreaksChangeBreakTimeModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function EditBreaks() {\r\n  const [breaks, setBreaks] = useState([]);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [breakNameModalopen, setBreakNameModalOpen] = useState(false);\r\n  const handleBreakNameModalOpen = () => setBreakNameModalOpen(true);\r\n  const handleBreakNameModalClose = () => setBreakNameModalOpen(false);\r\n  let [selectedBreakId, setSelectedBreakId] = useState('');\r\n  let [selectedBreakName, setSelectedBreakName] = useState('');\r\n  const handleClickName = (id, name) => {\r\n    setSelectedBreakId(id);\r\n    setSelectedBreakName(name);\r\n    handleBreakNameModalOpen();\r\n  };\r\n\r\n  const [breakTimeModalopen, setBreakTimeModalOpen] = useState(false);\r\n  const handleBreakTimeModalOpen = () => setBreakTimeModalOpen(true);\r\n  const handleBreakTimeModalClose = () => setBreakTimeModalOpen(false);\r\n  let [selectedLogoutType, setSelectedLogoutType] = useState('');\r\n  let [selectedBreakTime, setSelectedBreakTime] = useState('');\r\n  const handleClickTime = (logoutType, time) => {\r\n    setSelectedLogoutType(logoutType);\r\n    setSelectedBreakTime(time);\r\n    handleBreakTimeModalOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBreakTime().then(resp => {\r\n      var mola = JSON.parse(resp.data.data);\r\n      getBreakName().then(res => {\r\n        var molaAdı = JSON.parse(res.data.data);\r\n        for (var i = 0; i < mola.length; i++) {\r\n          for (var z = 0; z < molaAdı.length; z++) {\r\n            if (mola[i].logouttype === molaAdı[z].value) {\r\n              mola[i].name = molaAdı[z].name;\r\n              mola[i].id = molaAdı[z].iddn;\r\n            }\r\n          }\r\n        }\r\n        setBreaks(mola);\r\n      });\r\n    });\r\n  }, [breakNameModalopen, breakTimeModalopen]);\r\n\r\n  console.log(breaks);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakcode'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakname'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breaktime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {breaks.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.logouttype}</TableCell>\r\n                  <TableCell onClick={() => handleClickName(item.id, item.name)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.name}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleClickTime(item.logouttype, item.period)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.period}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Modal\r\n        open={breakNameModalopen}\r\n        onClose={handleBreakNameModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakNameModal\r\n            id={selectedBreakId}\r\n            selectedBreakName={selectedBreakName}\r\n            handleBreakNameModalClose={handleBreakNameModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={breakTimeModalopen}\r\n        onClose={handleBreakTimeModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakTimeModal\r\n            logouttype={selectedLogoutType}\r\n            period={selectedBreakTime}\r\n            handleBreakTimeModalClose={handleBreakTimeModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { addUserOwndedDeps, deleteUserOwndedDeps, getDepartmants, getSupervisors, getUserOwndedDeps } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserDepartmans({ reloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  let [deps, setDeps] = useState([]);\r\n  let [userOwnedDeps, setUserOwnedDeps] = useState([]);\r\n  let [selectedUserId, setSelectedUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getSupervisors().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserOwndedDeps(selectedUserId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].department_id);\r\n      }\r\n      setUserOwnedDeps(tempArr);\r\n    });\r\n  }, [selectedUserId]);\r\n\r\n  const handleCheckboxClick = (depId, event) => {\r\n    if (event.target.checked) {\r\n      //ekleme\r\n      addUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      //silme\r\n      deleteUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'supervisors'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users.map(user => (\r\n                    <TableRow key={user.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedUserId === user.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedUserId(user.id)}>\r\n                        {user.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={userOwnedDeps.includes(dep.id)}\r\n                          onChange={event => handleCheckboxClick(dep.id, event)}\r\n                        />\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addUser } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddUserModal({ setReloadValues, addHandleClose }) {\r\n  let [userName, setUserName] = useState('');\r\n  const handleChangeUserName = event => {\r\n    // setUserName(userName + event.nativeEvent.data);\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState('');\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState('admin');\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      addUser(userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(userName);\r\n        addHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    //   onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'admin'}>Admin</MenuItem>\r\n          <MenuItem value={'supervisor'}>Supervisor</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateUser } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateUserModal({ setReloadValues, updateHandleClose, selectedUser }) {\r\n  let [userName, setUserName] = useState(selectedUser.name);\r\n  const handleChangeUserName = event => {\r\n    // setUserName(userName + event.nativeEvent.data);\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState(selectedUser.pass);\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState(selectedUser.type);\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateUser(selectedUser.id, userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Güncellendi', '', 3000);\r\n        setReloadValues(userName);\r\n        updateHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    //   onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'admin'}>Admin</MenuItem>\r\n          <MenuItem value={'supervisor'}>Supervisor</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteUserByUserId, deleteUserOwndedDepsByUserId, getUsers } from '../../../../api/api';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport UpdateUserModal from './UpdateUserModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserTable({ reloadValues, setReloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    getUsers().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({ id: '0', name: '', pass: '', type: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = user => {\r\n    setSelectedUser(user);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = userId => {\r\n    deleteUserOwndedDepsByUserId(userId).then(res1 => {\r\n      deleteUserByUserId(userId).then(res2 => {\r\n        setReloadValues(userId.toString());\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adduser'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'username'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'password'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'usertype'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map(user => (\r\n              <TableRow key={user.id}>\r\n                <TableCell>{user.name}</TableCell>\r\n                <TableCell>********</TableCell>\r\n                <TableCell>{user.type}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(user)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(user.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddUserModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateUserModal\r\n            selectedUser={selectedUser}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport UserDepartmans from './UserDepartmans/UserDepartmans';\r\nimport UserTable from './UserTable/UserTable';\r\n\r\nexport default function UserSettings() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'usersettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'usersettings'} />} breadcrumbs={breadcrumbs}>\r\n        <UserTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <UserDepartmans reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\n\r\nexport default function AddTagModal({ setReloadTags, addHandleClose }) {\r\n\r\n  //departmanlar\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  //departmanları getir\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  //form bilgileri\r\n  const [depId, setDepId] = useState(\"\");\r\n  const [depName, setDepName] = useState(\"\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n\r\n  //selecten department seçilirse\r\n  const handleDepChange = (e) => {\r\n    //value ver texti al id ve name olarak geç\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value)\r\n  }\r\n\r\n  //submit edilirse\r\n  const handleSubmit = () => {\r\n\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n        addTagTypes(depName,tagName,depId).then(() => {\r\n          NotificationManager.success('Etiket Eklendi', '', 3000);\r\n          setReloadTags((prev) =>prev+1);\r\n          addHandleClose();\r\n        });\r\n      }else{\r\n        NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\"><IntlMessages id={'tag'} /></InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={(e) => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\" />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n      <InputLabel id=\"depNameAddLbl\"><IntlMessages id={'departmentname'} /></InputLabel>\r\n          <Select\r\n            labelId='depNameAddLbl'\r\n            fullWidth\r\n            value={depId}\r\n            onChange={handleDepChange}\r\n          >\r\n            {departments && \r\n            departments.map((item, index) => (\r\n            <MenuItem key={index} value={item.id}>{item.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n          <Button sx={{ width: '100%',marginTop:'1rem' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n            <IntlMessages id={'add'} />\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { setTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\n\r\nexport default function UpdateTagModal({ selectedTag,setReloadTags, updateHandleClose }) {\r\n\r\n  //departmanlar\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  //departmanları getir\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  //form bilgileri\r\n  const [depId, setDepId] = useState(selectedTag.department_id);\r\n  const [depName, setDepName] = useState(selectedTag.department);\r\n  const [tagName, setTagName] = useState(selectedTag.tagmassage);\r\n\r\n  //selecten department seçilirse\r\n  const handleDepChange = (e) => {\r\n    //value ver texti al id ve name olarak geç\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value)\r\n  }\r\n\r\n  //submit edilirse\r\n  const handleSubmit = () => {\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n        setTagTypes(depName,tagName,depId,selectedTag.tagtypes_id).then(() => {\r\n          NotificationManager.success('Etiket Güncellendi', '', 3000);\r\n          setReloadTags((prev) =>prev+1);\r\n          updateHandleClose();\r\n        });\r\n      }else{\r\n        NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\"><IntlMessages id={'tag'} /></InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={(e) => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\" />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n      <InputLabel htmlFor=\"depNameUpdateLbl\"><IntlMessages id={'departmentname'} /></InputLabel>\r\n          <Select\r\n            labelId='depNameUpdateLbl'\r\n            fullWidth\r\n            value={depId}\r\n            onChange={handleDepChange}\r\n          >\r\n            {departments && \r\n            departments.map((item, index) => (\r\n            <MenuItem key={index} value={item.id}>{item.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n          <Button sx={{ width: '100%',marginTop:'1rem' }} color=\"warning\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n            <IntlMessages id={'update'} />\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getTagTypes, deleteTag } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddTagModal from './AddTagModal';\r\nimport UpdateTagModal from './UpdateTagModal';\r\n// import UpdateDepartmanModal from './UpdateDepartmanModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TagTable() {\r\n  let [tags, setTags] = useState([]);\r\n  let [reloadTags,setReloadTags] = useState(0);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => {\r\n        setTags(JSON.parse(resp.data.data));\r\n    });\r\n  }, [reloadTags]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n   let [selectedTag, setSelectedTag] = useState({ department: '', department_id: '',tagmassage:'' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = tag => {\r\n    setSelectedTag(tag);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = (tag) => {\r\n    deleteTag(tag).then(() => {\r\n      setReloadTags((prev)=> prev+1);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex',alignItems:\"center\",justifyContent:\"space-between\", margin: '10px 0' }}>\r\n        <h3><IntlMessages id={'tag'} /></h3>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'addtag'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer sx={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n              <IntlMessages id={'tag'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tags.map((item,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{item.department}</TableCell>\r\n                <TableCell>{item.tagmassage}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(item)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(item.tagtypes_id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddTagModal addHandleClose={addHandleClose} setReloadTags={setReloadTags} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateTagModal\r\n            selectedTag={selectedTag}\r\n            setReloadTags={setReloadTags}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { addDepOwnedQueues, deleteDepOwnedQueues, getDepartmants, getDepOwnedQueues, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TagTable from '../TagTable/TagTable';\r\n\r\nexport default function DepartmentQueues({ reloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  let [queues, setQueues] = useState([]);\r\n  let [depOwnedQueues, setDepOwnedQueues] = useState([]);\r\n  let [selectedDepId, setSelectedDepId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n  useEffect(() => {\r\n    getQueues().then(result => {\r\n      setQueues(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getDepOwnedQueues(selectedDepId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].queue_id);\r\n      }\r\n      setDepOwnedQueues(tempArr);\r\n    });\r\n  }, [selectedDepId]);\r\n\r\n  const handleCheckboxClick = (queueId, event) => {\r\n    if (event.target.checked) {\r\n      //ekleme\r\n      addDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      //silme\r\n      deleteDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    }\r\n    console.log(event.target.checked);\r\n    console.log(queueId);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedDepId === dep.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedDepId(dep.id)}>\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n\r\n          <TagTable/>\r\n\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'queue.answer.report.queues'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {queues.map(queue => (\r\n                    <TableRow key={queue.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={depOwnedQueues.includes(queue.id)}\r\n                          onChange={event => handleCheckboxClick(queue.id, event)}\r\n                        />\r\n\r\n                        {queue.display_name}\r\n                        <b> ({queue.dn})</b>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddDepartmanModal({ setReloadValues, addHandleClose }) {\r\n  let [name, setName] = useState('');\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      addDepartmant(name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        addHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateDepartmanModal({ selectedDep, setReloadValues, updateHandleClose }) {\r\n  let [name, setName] = useState(selectedDep.name);\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateDepartmant(selectedDep.id, name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        updateHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { deleteDepOwnedAllQueues, deleteDepWithDepId, deleteUserAllDepsWithDepId, getDepartmants } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddDepartmanModal from './AddDepartmanModal';\r\nimport UpdateDepartmanModal from './UpdateDepartmanModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DepartmantTable({ reloadValues, setReloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  let [selectedDep, setSelectedDep] = useState({ id: 0, name: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = dep => {\r\n    setSelectedDep(dep);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = depId => {\r\n    deleteDepOwnedAllQueues(depId).then(res1 => {\r\n      deleteUserAllDepsWithDepId(depId).then(res2 => {\r\n        deleteDepWithDepId(depId).then(res3 => {\r\n          setReloadValues(depId.toString());\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adddepartment'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deps.map(dep => (\r\n              <TableRow key={dep.id}>\r\n                <TableCell>{dep.name}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(dep)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(dep.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddDepartmanModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateDepartmanModal\r\n            selectedDep={selectedDep}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DepartmentQueues from './DepartmentQueues/DepartmentQueues';\r\nimport DepartmantTable from './DeportmentTable/DepartmantTable';\r\n\r\nexport default function DepartmansSettigns() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'departmentsettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'departmentsettings'} />} breadcrumbs={breadcrumbs}>\r\n        <DepartmantTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <DepartmentQueues reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Error404 from './Pages/404';\r\nimport Login from './Auth/Login';\r\nimport AgentStatus from './Pages/AgentStatus';\r\nimport Register from './Auth/Register';\r\nimport CallLog from './Pages/CallLog';\r\nimport CallManagement from './Pages/CallManagement';\r\nimport DroppedCall from './Pages/DroppedCall';\r\nimport DidReport from './Pages/DIDReport';\r\nimport ForgotPasswordPage from './Auth/ForgotPassword';\r\nimport { PrivateRouteLogin } from './Private/PrivateRouteLogin';\r\nimport { NotPrivateRoute } from './Private/NotPrivateRoute';\r\nimport ServiceLevel from './Pages/ServiceLevel';\r\nimport { AbandonedQueues } from './Pages/AbandonedQueues';\r\nimport RepetetiveCalls from './Pages/RepetetiveCalls';\r\nimport WallBoard from './Pages/WallBoard';\r\nimport DailyLog from './Pages/DailyLog';\r\nimport CallComparison from './Pages/CallComparison';\r\nimport MonthlyLog from './Pages/MonthlyLog';\r\nimport ReturnedDropCall from './Pages/ReturnedDropCall';\r\nimport AgentCDR from './Pages/AgentSessionReport';\r\nimport IYS from './Pages/IYS';\r\nimport Users from './Pages/MicrosoftTeams/Users';\r\nimport MonthlyDetails from './Pages/MonthlyDetails';\r\nimport QueueAnswerReport from './Pages/QueueAnswerReport';\r\nimport AbondenedCalls from './Pages/AbondenedCalls';\r\nimport AgentCdrReport from './Pages/AgentCdrReport';\r\nimport DailySumaryReport from './Pages/DailySummaryReport';\r\nimport InternalsSummaryReport from './Pages/InternalsSummaryReport';\r\nimport CallLog2 from './Pages/CallLog2';\r\nimport QualityReport from './Pages/QualityReport';\r\nimport './index.css';\r\nimport CallTransferReport from './Pages/CallTransferReport';\r\nimport EditBreaks from './Pages/EditBreaks';\r\nimport UserSettings from './Pages/UserSettings/UserSettings';\r\nimport DepartmansSettigns from './Pages/DepartmansSettingns/DepartmansSettigns';\r\n\r\n// const RestrictedRoute = ({ component: Component, ...rest }) => {\r\n//   const { authUser } = useSelector(({ auth }) => auth);\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={props =>\r\n//         localStorage.getItem('login') === 200 ? (\r\n//           <Component {...props} />\r\n//         ) : (\r\n//           <Redirect\r\n//             to={{\r\n//               pathname: '/signin',\r\n//               state: { from: props.location },\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst Routes = () => {\r\n  const location = useLocation();\r\n\r\n  if (location.pathname === '' || location.pathname === '/') {\r\n    return <Redirect to={'/dashboard'} />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <NotPrivateRoute path=\"/reports/agentcdr\" component={AgentCDR} />\r\n        <NotPrivateRoute path=\"/reports/returned-dropcall\" component={ReturnedDropCall} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <NotPrivateRoute path=\"/wallboard\" component={WallBoard} />\r\n        <NotPrivateRoute path=\"/reports/callLogold\" component={CallLog} />\r\n        <NotPrivateRoute path=\"/reports/calltransferreport\" component={CallTransferReport} />\r\n        <NotPrivateRoute path=\"/reports/callLog\" component={CallLog2} />\r\n        <NotPrivateRoute path=\"/reports/callmanagement\" component={CallManagement}/>\r\n        <NotPrivateRoute path=\"/reports/servicelevel\" component={ServiceLevel} />\r\n        <NotPrivateRoute path=\"/reports/agentstatus\" component={AgentStatus} />\r\n        <NotPrivateRoute path=\"/reports/callcomparison\" component={CallComparison} />\r\n        <NotPrivateRoute path=\"/signup\" component={Register} />\r\n        <NotPrivateRoute path=\"/reports/repetetive-calls\" component={RepetetiveCalls} />\r\n        <NotPrivateRoute path=\"/forgot-password\" component={ForgotPasswordPage} />\r\n        <NotPrivateRoute path=\"/reports/abandoned-queues\" component={AbandonedQueues} />\r\n        <NotPrivateRoute path=\"/reports/dailylog\" component={DailyLog} />\r\n        <NotPrivateRoute path=\"/reports/didreport\" component={DidReport} />\r\n        <NotPrivateRoute path=\"/reports/monthlylog\" component={MonthlyLog} />\r\n        <NotPrivateRoute path=\"/reports/droppedcall\" component={DroppedCall} />\r\n        <NotPrivateRoute path=\"/settings/editbreaks\" component={EditBreaks} />\r\n        <NotPrivateRoute path=\"/settings/usersettings\" component={UserSettings} />\r\n        <NotPrivateRoute path=\"/settings/departmentsettings\" component={DepartmansSettigns} />\r\n        <NotPrivateRoute path=\"/iys/called-number\" component={IYS} />\r\n        <NotPrivateRoute path=\"/teams/users\" component={Users} />\r\n        <NotPrivateRoute path=\"/reports/monthlyDetails\" component={MonthlyDetails} />\r\n        <NotPrivateRoute path=\"/reports/quality-report\" component={QualityReport}/>\r\n        <NotPrivateRoute path=\"/reports/queueanswerreport\" component={QueueAnswerReport} />\r\n        <NotPrivateRoute path=\"/reports/abondenedcalls\" component={AbondenedCalls} />\r\n        <NotPrivateRoute path=\"/reports/agentcdrreport\" component={AgentCdrReport} />\r\n        <NotPrivateRoute path=\"/reports/internalssummary\" component={InternalsSummaryReport} />\r\n        <NotPrivateRoute path=\"/reports/dailysummaryreport\" component={DailySumaryReport} />\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport configureStore, { history } from './redux/store';\r\nimport AppWrapper from './@jumbo/components/AppWrapper';\r\nimport AppContextProvider from './@jumbo/components/contextProvider/AppContextProvider';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport Routes from './routes';\r\n\r\nexport const store = configureStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <AppContextProvider>\r\n        <AppWrapper>\r\n          <Switch>\r\n            <Routes />\r\n          </Switch>\r\n        </AppWrapper>\r\n      </AppContextProvider>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}