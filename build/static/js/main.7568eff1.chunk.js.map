{"version":3,"sources":["redux/reducers/Common.js","@jumbo/constants/ActionTypes.js","redux/reducers/Auth.js","redux/reducers/index.js","redux/store/index.js","theme/GlobalCss.js","@jumbo/constants/ThemeOptions.js","theme/defaultTheme.js","@jumbo/components/contextProvider/AppContextProvider/defaultContext.js","@jumbo/components/contextProvider/AppContextProvider/AppContext.js","i18n/entries/en_EN.js","i18n/entries/tr_TR.js","i18n/entries/nl_NL.js","i18n/index.js","i18n/entries/de_DE.js","redux/actions/Common.js","redux/actions/Auth.js","services/auth/index.js","services/auth/Basic/index.js","@coremat/CmtLayouts/LayoutContext.js","@coremat/CmtLayouts/Vertical/LayoutContextProvider/index.js","@coremat/CmtLayouts/Vertical/MainContainer.style.js","@coremat/CmtLayouts/Vertical/MainContainer.js","@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext.js","@coremat/CmtHelpers/JssHelper.js","@coremat/CmtLayouts/SidebarThemeContext/sidebarThemeColors.js","@coremat/CmtLayouts/SidebarThemeContext/index.js","@coremat/CmtLayouts/Vertical/index.js","@coremat/CmtLayouts/Vertical/Header.js","@coremat/CmtLayouts/Vertical/SidebarToggleHandler.js","@coremat/CmtImage/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/data.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/LanguageItem.js","@coremat/CmtCard/index.js","@coremat/CmtTypography/CmtTitle/index.js","@coremat/CmtTypography/CmtSubTitle/index.js","@coremat/CmtTypography/CmtContentHead/index.js","@coremat/CmtDropdownMenu/index.js","@coremat/CmtCard/CmtCardHeader.style.js","@coremat/CmtCard/CmtCardHeader.js","@coremat/CmtList/ListFooter.js","@coremat/CmtList/ListView.js","@coremat/CmtList/index.js","@jumbo/components/AppLayout/partials/LanguageSwitcher/index.js","@coremat/CmtCard/CmtCardContent.js","@coremat/CmtGridView/GridView.js","@coremat/CmtGridView/GridFooter.js","@coremat/CmtGridView/index.js","@coremat/CmtAvatar/index.style.js","@coremat/CmtAvatar/index.js","@jumbo/components/AppLayout/partials/Header/AppsMenu.js","@coremat/CmtMediaObject/index.style.js","@coremat/CmtMediaObject/index.js","@jumbo/utils/dateHelper.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/NotificationItem.js","@jumbo/components/AppLayout/partials/Header/HeaderNotifications/index.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/MessageItem.js","@jumbo/components/AppLayout/partials/Header/HeaderMessages/index.js","@jumbo/components/AppLayout/partials/Logo.js","@coremat/CmtSearch/index.style.js","@coremat/CmtSearch/index.js","@jumbo/components/AppLayout/partials/SearchPopover.js","@jumbo/components/AppLayout/partials/Header/index.js","@coremat/CmtLayouts/Vertical/Sidebar.style.js","@coremat/CmtDrawer/index.js","@coremat/CmtLayouts/Vertical/Sidebar.js","@jumbo/components/AppLayout/partials/SidebarHeader.js","@coremat/CmtNavigation/Vertical/NavMenuItem.js","@coremat/CmtNavigation/Vertical/NavCollapse.js","@coremat/CmtNavigation/Vertical/NavSection.js","@coremat/CmtNavigation/Vertical/index.js","@jumbo/utils/IntlMessages.js","@jumbo/components/AppLayout/partials/menus.js","@jumbo/components/AppLayout/partials/SideBar/index.js","@coremat/CmtLayouts/Vertical/Content.js","@jumbo/components/PageComponents/PageLoader.js","@jumbo/components/ContentLoader/index.js","@coremat/CmtLayouts/Vertical/Footer.js","@jumbo/components/AppLayout/partials/FooterLogo.js","@jumbo/components/AppLayout/partials/Footer.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalDefault/index.js","@jumbo/components/AppLayout/VerticalLayouts/VerticalMinimal/index.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/Alerts.js","@jumbo/components/AppLayout/VerticalLayouts/MinimalNoHeader/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/ActionBarDrawer.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/ActionSideBar/index.js","@jumbo/components/AppLayout/VerticalLayouts/ModernSidebar/index.js","@coremat/CmtLayouts/Horizontal/LayoutContextProvider/index.js","@coremat/CmtLayouts/Horizontal/MainContainer.style.js","@coremat/CmtLayouts/Horizontal/MainContainer.js","@coremat/CmtLayouts/Horizontal/index.js","@coremat/CmtLayouts/Horizontal/Header/HeaderNav.js","@coremat/CmtLayouts/Horizontal/Header/HeaderTop.js","@coremat/CmtLayouts/Horizontal/Header/HeaderMain.js","@jumbo/components/AppLayout/partials/Header/HeaderLogin/index.js","@coremat/CmtLayouts/Horizontal/SidebarToggleHandler.js","@jumbo/components/AppLayout/partials/UserDropDown.js","@jumbo/components/AppLayout/partials/GlobalSearchForm.js","@jumbo/components/AppLayout/partials/Header/HeaderTop/index.js","@coremat/CmtLayouts/Horizontal/Header/index.js","@coremat/CmtLayouts/Horizontal/Sidebar.js","@coremat/CmtLayouts/Horizontal/Content.js","@coremat/CmtLayouts/Horizontal/Footer.js","@coremat/CmtNavigation/Horizontal/NavMenuItem.js","@coremat/CmtNavigation/Horizontal/NavCollapse.style.js","@coremat/CmtNavigation/Horizontal/NavCollapse.js","@coremat/CmtNavigation/Horizontal/NavMega.style.js","@coremat/CmtNavigation/Horizontal/NavMega.js","@coremat/CmtNavigation/Horizontal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDefault/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalDark/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/MainHeader.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalMinimal/index.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderMain.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/HeaderTopMenus.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.style.js","@jumbo/components/AppLayout/HorizontalLayouts/HorizontalTopMenu/index.js","@jumbo/components/AppLayout/index.js","@jumbo/components/AppWrapper/index.js","theme/themeColors.js","api/api.js","@jumbo/components/contextProvider/AppContextProvider/index.js","@jumbo/components/GridContainer/index.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","@coremat/CmtCard/CmtCardFooter.js","@coremat/CmtAdvCard/index.style.js","@coremat/CmtAdvCard/index.js","@coremat/CmtAdvCard/CmtAdvCardContent.style.js","@coremat/CmtAdvCard/CmtAdvCardContent.js","@jumbo/components/Common/CryptoCard/CryptoCard.style.js","@jumbo/components/Common/DownloadApps/index.js","@jumbo/components/Common/CryptoCard/index.js","@jumbo/components/Common/CurrenyCalculator/index.js","@jumbo/components/Common/CodeViewerCard/MarkdownElement.js","@jumbo/components/Common/CodeViewerCard/HighlightedCode.js","@jumbo/utils/prism.js","@coremat/CmtCard/CmtCardActions.js","@jumbo/components/Common/CodeViewerCard/index.js","@jumbo/components/Common/StatisticsCard/index.js","routes/Pages/Dashboard/MissedCalls/MissedCallGraph.js","routes/Pages/Dashboard/MissedCalls/index.js","routes/Pages/Dashboard/InboundRules/InboundStyle.js","routes/Pages/Dashboard/InboundRules/InboundGraph.js","routes/Pages/Dashboard/InboundRules/index.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChart.js","routes/Pages/Dashboard/HeaderChartComponent/HeaderChartItem.js","routes/Pages/Dashboard/HeaderChartComponent/index.js","routes/Pages/Dashboard/OutboundCall/OutboundGraph.js","routes/Pages/Dashboard/OutboundCall/index.js","@jumbo/components/Common/CounterCard/index.js","routes/Pages/Dashboard/Extensions/index.js","routes/Pages/Dashboard/TrunksUp/index.js","routes/Pages/Dashboard/ActiveCallCount/index.js","services/auth/logout/index.js","routes/Pages/Dashboard/Tops/DashboardTop5AnsweredCalls.js","routes/Pages/Dashboard/Tops/DashboardTop5Inbound.js","routes/Pages/Dashboard/Tops/DashboardTop5Outbound.js","routes/Pages/Dashboard/Tops/DashboardTop5TalkTime.js","routes/Pages/Dashboard/Tops/index.js","routes/Pages/Dashboard/index.js","routes/Pages/404/index.js","@jumbo/components/Common/authComponents/AuthWrapper.js","@jumbo/components/Common/authComponents/SignIn.js","@jumbo/constants/AppConstants.js","routes/Auth/Login.js","@jumbo/utils/DataGridLocales.js","routes/Pages/AgentStatus/Table/index.js","routes/Pages/AgentStatus/index.js","@jumbo/components/Common/authComponents/SignUp.js","routes/Auth/Register.js","routes/Pages/CallManagement/Filter/DateFilter/index.js","routes/Pages/CallManagement/Filter/Filters/index.js","routes/Pages/CallManagement/Filter/index.js","routes/Pages/CallManagement/CallDetails/index.js","routes/Pages/CallManagement/Table/Tag.js","routes/Pages/CallManagement/Table/Score.js","@jumbo/utils/AudioWaveForm.js","routes/Pages/CallManagement/Table/index.js","routes/Pages/CallManagement/index.js","routes/Pages/DroppedCall/Filter/DateFilter/index.js","routes/Pages/DroppedCall/Filter/index.js","routes/Pages/DroppedCall/Table/index.js","routes/Pages/DroppedCall/index.js","routes/Pages/DIDReport/Filter/DateFilter/index.js","routes/Pages/DIDReport/Filter/index.js","routes/Pages/DIDReport/Table/index.js","routes/Pages/DIDReport/index.js","@jumbo/components/Common/authComponents/ForgotPassword.js","routes/Auth/ForgotPassword.js","routes/Private/PrivateRouteLogin.js","routes/Private/NotPrivateRoute.js","routes/Pages/ServiceLevel/Filter/DateFilter/index.js","routes/Pages/ServiceLevel/Filter/index.js","routes/Pages/ServiceLevel/Table/index.js","routes/Pages/ServiceLevel/index.js","routes/Pages/AbandonedQueues/Filter/DateFilter/index.js","routes/Pages/AbandonedQueues/Filter/index.js","routes/Pages/AbandonedQueues/Table/index.js","routes/Pages/AbandonedQueues/Details/index.js","routes/Pages/AbandonedQueues/index.js","routes/Pages/RepetetiveCalls/Filter/DateFilter/index.js","routes/Pages/RepetetiveCalls/Filter/index.js","routes/Pages/RepetetiveCalls/AllCalls/index.js","routes/Pages/RepetetiveCalls/Model/index.js","routes/Pages/RepetetiveCalls/AnsweredCalls/index.js","routes/Pages/RepetetiveCalls/index.js","routes/Pages/WallBoard/QueueList/index.js","routes/Pages/WallBoard/AgentConnection/index.js","routes/Pages/WallBoard/AgentStatus/AgentStatus.js","routes/Pages/WallBoard/CallDetail/index.js","routes/Pages/WallBoard/AgentDetail/index.js","routes/Pages/WallBoard/index.js","routes/Pages/DailyLog/Filter/index.js","routes/Pages/DailyLog/Table/index.js","routes/Pages/DailyLog/Chart/index.js","routes/Pages/DailyLog/index.js","routes/Pages/DailyAcc/Filter/index.js","routes/Pages/DailyAcc/Chart/index.js","routes/Pages/DailyAcc/index.js","routes/Pages/CallComparison/Table/index.js","routes/Pages/CallComparison/Graph/index.js","routes/Pages/CallComparison/Filter/index.js","routes/Pages/CallComparison/index.js","routes/Pages/MonthlyLog/Filter/index.js","routes/Pages/MonthlyLog/Graph/graph.js","routes/Pages/MonthlyLog/Graph/index.js","routes/Pages/MonthlyLog/Table/index.js","routes/Pages/MonthlyLog/index.js","routes/Pages/ReturnedDropCall/Table/index.js","routes/Pages/ReturnedDropCall/Filter/index.js","routes/Pages/ReturnedDropCall/index.js","routes/Pages/AgentSessionReport/Filter/DateFilter/index.js","routes/Pages/AgentSessionReport/Filter/index.js","routes/Pages/AgentSessionReport/Table/index.js","routes/Pages/AgentSessionReport/Model/index.js","routes/Pages/AgentSessionReport/index.js","routes/Pages/IYS/Filter/index.js","routes/Pages/IYS/Table/index.js","routes/Pages/IYS/index.js","routes/Pages/MicrosoftTeams/Users/index.js","routes/Pages/MonthlyDetails/Filter/index.js","routes/Pages/MonthlyDetails/Table/index.js","routes/Pages/MonthlyDetails/Detail/index.js","routes/Pages/MonthlyDetails/index.js","routes/Pages/QueueAnswerReport/Filter/DateFilter/index.js","routes/Pages/QueueAnswerReport/Filter/index.js","routes/Pages/QueueAnswerReport/Table/index.js","routes/Pages/QueueAnswerReport/index.js","routes/Pages/AbondenedCalls/Filter/DateFilter/index.js","routes/Pages/AbondenedCalls/Filter/index.js","routes/Pages/AbondenedCalls/Table/index.js","routes/Pages/AbondenedCalls/index.js","routes/Pages/AgentCdrReport/Filter/index.js","routes/Pages/AgentCdrReport/Table/index.js","routes/Pages/AgentCdrReport/index.js","routes/Pages/DailySummaryReport/Filter/DateFilter/index.js","routes/Pages/DailySummaryReport/Filter/index.js","routes/Pages/DailySummaryReport/Modals/TotalCallModal.js","routes/Pages/DailySummaryReport/Modals/AnsweredCallModal.js","routes/Pages/DailySummaryReport/Modals/AbondenedCallModal.js","routes/Pages/DailySummaryReport/Modals/TransferCallModal.js","routes/Pages/DailySummaryReport/Modals/OutOfTimeModal.js","routes/Pages/DailySummaryReport/Modals/RonaCallModla.js","routes/Pages/DailySummaryReport/Modals/OutCallModal.js","routes/Pages/DailySummaryReport/Table/index.js","routes/Pages/DailySummaryReport/index.js","routes/Pages/InternalsSummaryReport/Filter/DateFilter/index.js","routes/Pages/InternalsSummaryReport/Filter/index.js","routes/Pages/InternalsSummaryReport/Table/index.js","routes/Pages/InternalsSummaryReport/index.js","routes/Pages/CallLog2/Filter/DateFilter/index.js","routes/Pages/CallLog2/Filter/Filters/index.js","routes/Pages/CallLog2/Filter/index.js","routes/Pages/CallLog2/CallDetails/index.js","routes/Pages/CallLog2/Table/Tag.js","routes/Pages/CallLog2/Table/index.js","routes/Pages/CallLog2/index.js","routes/Pages/QualityReport/Filter/DateFilter/index.js","routes/Pages/QualityReport/Filter/index.js","routes/Pages/QualityReport/Table/index.js","routes/Pages/QualityReport/index.js","routes/Pages/CallTransferReport/Filter/DateFilter/index.js","routes/Pages/CallTransferReport/Filter/index.js","routes/Pages/CallTransferReport/Table/index.js","routes/Pages/CallTransferReport/index.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakNameModal.js","routes/Pages/EditBreaks/Modals/BreaksChangeBreakTimeModal.js","routes/Pages/EditBreaks/index.js","routes/Pages/UserSettings/UserDepartmans/UserDepartmans.js","routes/Pages/UserSettings/UserTable/AddUserModal.js","routes/Pages/UserSettings/UserTable/UpdateUserModal.js","routes/Pages/UserSettings/UserTable/UserTable.js","routes/Pages/UserSettings/UserSettings.js","routes/Pages/DepartmansSettingns/TagTable/AddTagModal.js","routes/Pages/DepartmansSettingns/TagTable/UpdateTagModal.js","routes/Pages/DepartmansSettingns/TagTable/TagTable.js","routes/Pages/DepartmansSettingns/DepartmentQueues/DepartmentQueues.js","routes/Pages/DepartmansSettingns/DeportmentTable/AddDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/UpdateDepartmanModal.js","routes/Pages/DepartmansSettingns/DeportmentTable/DepartmantTable.js","routes/Pages/DepartmansSettingns/DepartmansSettigns.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["INIT_STATE","initialURL","error","message","loading","state","action","type","payload","authUser","loadUser","send_forget_password_email","history","combineReducers","router","connectRouter","common","Common","auth","Auth","createBrowserHistory","routeMiddleware","routerMiddleware","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","store","createStore","reducers","thunk","HEADER_TYPE","SIDEBAR_TYPE","THEME_TYPES","LAYOUT_TYPES","breakpoints","createBreakpoints","values","xs","sm","md","lg","xl","theme","spacing","direction","palette","black","white","dark","primary","indigo","secondary","pink","sidebar","bgColor","textColor","textDarkColor","textActiveColor","navHoverBgColor","navActiveBgColor","borderColor","horizontalNav","navigationColor","navigationActiveColor","menuHoverBgColor","menuActiveBgColor","background","paper","default","text","disabled","hint","btn","hover","lightBtn","main","popupColor","status","danger","typography","fontFamily","fontWeightExtraLight","fontWeightLight","fontWeightRegular","fontWeightBold","fontWeightExtraBold","overrides","MuiTypography","h1","fontSize","fontWeight","up","h2","h3","h4","h5","h6","letterSpacing","subtitle1","subtitle2","body1","body2","MuiButton","root","MuiToggleButton","borderRadius","MuiCardLg","MuiCard","boxShadow","MuiTab","textColorPrimary","color","MuiPopover","backgroundColor","MuiDialog","defaultLng","localStorage","getItem","navigator","language","languageId","locale","name","icon","getLang","layout","layoutType","themeType","drawerBreakPoint","headerType","sidebarType","isSidebarFixed","sidebarWidth","showFooter","AppContext","React","createContext","defaultContext","setLocale","enLang","messages","enMessages","saLang","saMessages","nlLang","nlMessages","AppLocale","en","tr","trLang","de","deMessages","nl","paddingClasses","marginClasses","count","paddingTop","paddingBottom","paddingLeft","paddingRight","marginLeft","marginRight","marginTop","marginBottom","globalStyles","makeStyles","boxSizing","margin","padding","a","textDecoration","pointerEvents","cursor","down","img","maxWidth","minHeight","overflowX","width","overflowY","border","whiteSpace","flex","display","flexDirection","alignItems","outline","transition","zIndex","flexWrap","darken","alpha","backgroundImage","fetchSuccess","dispatch","fetchError","setAuthUser","user","updateLoadUser","setForgetPassMailSent","AuhMethods","basic","onLogin","email","password","setTimeout","onLogout","removeItem","getAuthUser","loaded","JSON","parse","onForgotPassword","getSocialMediaIcons","Fragment","LayoutContext","LAYOUT_STYLES","SIDEBAR_TYPES","HEADER_TYPES","sidebarFixed","headerFixed","LayoutContextProvider","props","location","useLocation","useState","layoutStyle","setLayoutStyle","setSidebarType","isSidebarOpen","setSidebarOpen","setHeaderType","showHeader","setShowHeader","setShowFooter","setSidebarWidth","setSidebarFixed","miniSidebarWidth","setMiniSidebarWidth","actionSidebarWidth","setActionSidebarWidth","useEffect","params","URLSearchParams","search","get","layoutContextValue","useMemo","showTourOpt","document","body","classList","remove","add","Provider","value","children","useStyles","appRoot","height","position","top","right","left","bottom","borderTopLeftRadius","appMain","appInnerRoot","appMainContainer","overflow","MainContainer","header","footer","className","rest","useContext","footerType","useTheme","isDrawer","useMediaQuery","headerClasses","setHeaderClasses","footerClasses","setFooterClasses","sidebarClasses","setSidebarClasses","classes","newClasses","push","clsx","Box","cloneElement","SidebarThemeContext","getBackgroundStyle","gradientDirection","backgroundRepeat","backgroundPosition","backgroundSize","Array","isArray","length","toString","split","join","getOverLayStyle","overlay","colors","opacity","getSeparatorStyle","separator","topBorder","borderWidth","borderStyle","borderTop","borderBottom","hexToRgba","input","replace","test","Error","first","second","last","toUpperCase","parseInt","isUrlInChildren","parent","url","i","link","includes","themeSidebarColor","light","darkThemeSetting","SidebarThemeProvider","activeTheme","setActiveTheme","sidebarContextValue","backgroundStyle","overlayStyle","sidebarTheme","setSidebarTheme","CmtVerticalLayout","layoutOptions","prototype","PropTypes","object","defaultProps","appHeader","CmtHeader","AppBar","SidebarToggleHandler","restProps","IconButton","onClick","CmtImage","alt","altValue","languageData","flags","LanguageItem","src","ml","cardOverlay","CmtCard","cardProps","backgroundStyles","overlayStyles","headerRef","useRef","childrenWithProps","Children","map","child","isValidElement","render","ref","Card","onMouseEnter","current","onHeaderMouseEntered","onMouseLeave","onHeaderMouseLeft","style","CmtTitle","content","titleProps","Typography","variant","component","CmtSubTitle","subTitleProps","gutterBottom","headRoot","avatar","headerContent","CmtContentHead","title","subTitle","titleStyle","subTitleStyle","memo","CmtDropdownMenu","TriggerComponent","items","onItemClick","anchorEl","setAnchorEl","menuItems","setMenuItems","open","Boolean","closeMenu","event","stopPropagation","currentTarget","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","item","index","MenuItem","key","selectedIndex","updatedItem","hasChange","newMenuItems","handleMenuItemClick","label","headerRoot","separatorStyles","headerAlignCenter","contentWidth","justifyContent","animationTimingFunction","transform","actionMenu","minWidth","actionMenuDefault","actionMenuAbsolute","textAlign","actionMenuHover","showActionMenu","animationName","animationDuration","hideActionMenu","showActionDefaultMenu","hideActionDefaultMenu","contentRef","createRef","ActionsMenu","actions","actionHandler","size","CmtCardHeader","forwardRef","actionMenuClassName","actionHandleIcon","actionsPos","actionsShowOnHover","alignCenter","showActions","setActionsVisibility","setContentWidth","contentHeadProps","showHideActionClass","headerRootClasses","menuRootClasses","menuRootActionsClasses","useImperativeHandle","clientWidth","listFooterRoot","listFooterLoaderRoot","ListFooter","footerText","CircularProgress","bool","string","ListView","renderRow","onEndReached","data","ListFooterComponent","ListEmptyComponent","useBottomScrollListener","getEmptyContainer","getFooterContainer","CmtList","footerProps","cardRoot","perfectScrollbarLanguage","menuItemRoot","popoverRoot","LanguageSwitcher","handleClose","id","undefined","switchLanguage","window","setItem","data-tut","Popover","CmtCardContent","CardContent","gridContainer","columnRow","itemPadding","columnCount","flexGrow","displayColumn","flexBasis","GridView","column","responsive","setDisplayColumn","getColumnCount","withWidth","footerWrapper","GridFooter","CmtGridView","getContrastText","amber","brown","red","green","blue","yellow","grey","orange","deepOrange","purple","customSize","small","medium","large","colorOptions","CmtAvatar","phCharLength","colorClass","Math","floor","random","sizeClass","classNames","placeHolderChar","substr","Avatar","iconRoot","applications","path","AppsMenu","useHistory","onClosePopOver","onClickApp","Tooltip","py","mt","appItem","mediaObject","mediaImageTop","alignSelf","mediaImageCenter","mediaImageBottom","rootAvatar","mediaBody","mediaHeader","mediaHeaderContent","mediaActions","mediaFooter","CmtMediaObject","avatarPos","avatarProps","onBodyClick","actionsComponent","contentProps","footerComponent","footerComponentProps","mr","clone","oneOfType","element","oneOf","func","getNewDate","date_","date","Date","year","getFullYear","month","getMonth","dt","getDate","getDateElements","dateSections","moment","format","day","time","datePart","trim","dateString","feedItemRoot","fade","titleRoot","icons","POSTING","SHARED_POST","INVITATION","BIRTHDAY","NotificationItem","profile_pic","metaData","post","getPostContent","owner","getSharedContent","group","getInvitationContent","getBirthdayContent","getTitle","counterRoot","warning","scrollbarRoot","headerNotifications","HeaderNotifications","counter","setCounter","pr","active","Badge","badgeContent","badge","p","subTitleRoot","textOverflow","MessageItem","HeaderMessages","Logo","Hidden","xsDown","to","smUp","menuButton","shape","align","searchIcon","inputRoot","inputInput","transitions","create","searchIconBox","CmtSearch","placeholder","iconPosition","onlyIcon","containerStyle","inputStyle","iconStyle","inputBaseStyle","inputBaseClasses","InputBase","inputProps","SearchPopover","iconClassName","popoverClassName","searchRoot","langRoot","borderLeft","iconBtn","Header","Toolbar","edge","aria-label","smDown","mdUp","appSidebar","appSidebarContent","actionSidebarWrapper","overlayRoot","drawerContainer","drawerContent","CmtDrawer","Drawer","CmtSidebarContent","CmtDrawerContent","CmtSidebar","actionBar","matches","hasDrawer","userInfo","userTitle","userSubTitle","SidebarHeader","useDispatch","handlePopoverClose","container","Paper","elevation","MenuList","navMenuItem","navMenuLink","borderTopRightRadius","borderBottomRightRadius","navText","NavMenuItem","List","navCollapseBtn","navCollapse","navCollapseBtnInner","navArrow","navCollapseItem","visibility","NavCollapse","isExpandable","setOpen","pathname","renderIcon","useCallback","MenuCollapse","ListItem","button","MenuItemChildren","Collapse","in","timeout","disablePadding","navHeader","textTransform","navSection","NavSection","sideNavMenu","CmtVertical","injectIntl","withRef","sidebarNavs","IntlMessages","Dashboard","Phone","ArrowForward","Assignment","Receipt","process","horizontalDefaultNavs","minimalHorizontalMenus","perfectScrollbarSidebar","SideBar","appMainContent","CmtContent","bgcolor","circularProgressRoot","PageLoader","SlideTransition","Slide","ContentLoader","useSelector","Snackbar","TransitionComponent","Alert","severity","appFooter","appFooterWrapper","CmtFooter","FooterLogo","logoUrl","btnRoot","Footer","showFooterOpt","VerticalDefault","VerticalMinimal","borderBottomLeftRadius","Alerts","iconMapping","success","minimalNoHeader","MinimalNoHeader","lgUp","actionSidebar","borderRight","divider","contentArea","ActionBarDrawer","activeOption","onIconClick","onDrawerClose","anchor","actionsList","initSidebarWidth","isDrawerOpen","setDrawerStatus","setActiveOption","option","sidebarHeader","ModernSideBar","mdDown","CmtHorizontalLayout","headerNav","CmtHeaderNav","headerTop","CmtHeaderTop","headerMain","CmtHeaderMain","loginSection","HeaderLogin","Button","Divider","orientation","isOpen","profileRoot","UserDropDown","inputGroup","inputGroupAppend","GlobalSearchForm","showCategories","setShowCategories","onHideCategories","inputText","endIcon","HeaderTop","appMainContentWrapper","handleClick","from","subCollapse","removeHistoryListening","listen","disableGutters","navMega","navMegaBtn","navMegaBtnInner","navMegaColumnsWrapper","navMegaColumn","navMegaColumnInner","navMegaColumnLabel","RenderIcon","NavMegaColumn","navMegaColumnItems","NavMega","totalItems","MenuItemColumns","horizontalNavMenu","CmtHorizontal","HorizontalDefault","appHeaderDark","borderLeftColor","HeaderMain","HorizontalDark","MainHeader","HorizontalMinimal","HeaderTopMenus","HorizontalTopMenu","AppLayout","showLayoutLoader","setLayoutLoader","jss","plugins","jssPreset","rtl","AppWrapper","muiTheme","createTheme","ThemeProvider","utils","MomentUtils","StylesProvider","CssBaseline","semiDarkTheme","darkTheme","lightTheme","appsettings","validationUrl","appUrl","port","appPort","addZero","val","getOffset","axios","timeOffset","getInboundCalls","param","query","token","getDidData","getDidDataCount","getDidNumbers","async","getMonthlyDetails","getMonthlyTotal","getAgentList","getMissedCalls","getOutboundCalls","getQueue","getRepetetiveAll","limit","allCallOffset","queue","didNumber","paramStart","paramFinish","getRepetetiveAllCount","getRepetetiveCallerDetails","callerNumber","getReturnedDropCall","offset","agNum","qNum","getMontlyLog","paramMonth","paramBack","getCallComparison","paramDate","getCallComparisonDaily","getDailyLog","getDailyLogTable","getRepetetiveAnswered","answeredCallsOffset","getRepetetiveAnsweredCount","getAbandonedQueueCallsDetails","startDate","endDate","getAbandonedQueueCallsDetailsTotal","getAbondenedCalls","getAbondenedCallDetails","from_userpart","getAbandonedQueueCalls","getServiceLevel","getDropCall","getDropCallSummary","getDropCallCount","getRecordingBytes","dir","directory","filename","encodeURIComponent","fetch","getPath","getQueueList","getAgentConnection","getAgentStatus","pass","getAgentNumber","getQueueNumber","getDailyCallDetails","mydate","getBreakTime","getBreakName","setBreakName","breakName","breakId","setBreakTime","breakTime","breakNumber","getAgentDetails","agentNum","getAgentSession","getAgentSessionClicked","getInternalBreakTime","getAgentNumberV16","CryptoJS","AES","encrypt","response","getIYSReport","agent","startdate","enddate","getTeamsUsers","getCsOnlineVoiceRoutingPolicy","getCsTenantDialplan","getCsTeamsCallingPolicy","changeCsTeamsCallingPolicy","changeCsVoiceRoutingPolicy","changeCsTenantDiaplan","getUserDetailsByUserId","getQueueAnswerReport","queueNum","order","getQueueAnswerReportCount","getQueueAnswerReportSummary","getQueueAnswerReportSummaryTotal","getDailySummary","startTime","endTime","getDailySummaryTotal","getInternalsSummary","getInternalsSummaryLongestCalled","getInternalsSummaryLongestCaller","getInternalsSummaryLongestCalledAmount","getInternalsSummaryLongestCallerAmount","getAgentTotalCall","cte","getWallBoardVoiceMail","getWallBoardLongTime","getVersion","getWallBoardWaitingTime","getCallLog2","getCallLog2Total","getCallLog2TotalSummary","getCallLog2Count","getDashboardTops","getCallDetail","callid","getDailySummaryModalTotalCall","getDailySummaryModalAnsweredCall","getDailySummaryModalOutOfTime","getDailySummaryModalAbondenedCall","getDailySummaryModalTransferCall","getDailySummaryModalRonaCall","getCallTransferReport","selectedStartTime","selectedEndTime","getDailySummaryModalOutCall","getUsers","addUser","userName","updateUser","getDepartmants","addDepartmant","updateDepartmant","getQueues","getDepOwnedQueues","depId","addDepOwnedQueues","queueId","deleteDepOwnedQueues","deleteDepOwnedAllQueues","deleteUserAllDepsWithDepId","deleteDepWithDepId","getSupervisors","getUserOwndedDeps","userId","addUserOwndedDeps","deleteUserOwndedDeps","deleteUserOwndedDepsByUserId","deleteUserByUserId","getAgentsRecordListenAuth","setAgentsRecordListenAuthByAgentId","agentId","changeAgentStatus","agentDn","getTagsByCallId","callId","getTagtextByCallId","TagByID","tag","headers","getCallScoresByCallId","ScoreByID","rating","getTagTypes","addTagTypes","depName","tagMessage","setTagTypes","deleteTag","getQualityReport","changeSessionStatus","stringify","qstatus","getBreakNums","getDailyActiveCalls","initialThemeValue","otherThemes","AppContextProvider","setTheme","setThemeType","setLayout","cardRadius","setCardRadius","setDirection","showTourGuide","setTourGuideStatus","contextValue","prevState","setAttribute","then","resp","GridContainer","Grid","pageHeaderRoot","PageHeader","heading","breadcrumbComponent","mb","textSm","linkBlock","PageBreadcrumbs","Breadcrumbs","isActive","pxToRem","contentSidebar","flexShrink","pageFull","PageContainer","breadcrumbs","mountOnEnter","unmountOnExit","footerRoot","CmtCardFooter","advCardRoot","deepPurple","CmtAdvCard","advCardContent","gridOrder1","gridOrder2","CmtAdvCardContent","extraContent","columnSizes","reverseDir","alignCenterClass","blockClasses","blockFirst","blockSecond","extraContentRender","cardHeaderRoot","CryptoCard","amount","progress","headerSubTitle","textPrimary","mbSpace","wordBreak","WebkitOverflowScrolling","lineHeight","WebkitFontSmoothing","fill","borderCollapse","borderSpacing","fontWeightMedium","font","verticalAlign","maxHeight","flip","MarkdownElement","renderedMarkdown","other","more","dangerouslySetInnerHTML","__html","code","renderedCode","prismLanguage","prism","languages","tsx","jsx","diff","deleted","highlight","card","cardContent","cardContentInner","actionButtons","collapseStyle","cardHeader","cardBody","chartTitle","chartSubTitle","tooltip","MissedCallGraph","labelStyle","start_time","x1","y1","x2","y2","stopColor","stopOpacity","dataKey","strokeWidth","stackId","stroke","fillOpacity","MissedCall","handleChange","getDay","setParam","start","calculateYearOfTheDay","aria-controls","aria-haspopup","aria-expanded","Dehaze","MenuListProps","DateRange","total","InboundGraph","InboundRules","HeaderChart","canvas","ctx","getContext","_stroke","countInbound","countOutbound","countMissed","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","inbound","outbound","missed","labels","datasets","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","options","legend","scales","yAxes","ticks","beginAtZero","HeaderChartItem","searchAction","searchActionBar","cardContentRoot","badgeRoot","optionList","SiteTraffic","list","PhoneForwarded","OutboundGraph","OutboundCall","containerRoot","containerRootCenter","contentRoot","contentRootCenter","CounterCard","number","numberProps","labelProps","counterProps","end","useEasing","TasksCounterCard","extensions","setExtensions","api","activeExtension","totalExtension","GroupOutlined","String","Trunks","paramtotal","paramTrunksUp","totalTrunks","setTotalTrunks","trunksUp","setTrunksUp","ActiveCallCount","setactiveCount","Logout","DashboardTop5AnsweredCalls","convertTimeToApiString","timeString","setDate","toLocaleDateString","setStartTime","setEndTime","setData","selectedTime","setSelectedTime","selectTimeString","display_name","dn","LinearProgress","ButtonGroup","DashboardTop5Inbound","DashboardTop5Outbound","DashboardTop5TalkTime","totalseconds","sum","checkDots","QueryBuilder","DashboardTops","orderLg1","SamplePage","totalInbound","totalOutbound","totalMissed","inboundcalls","setInbound","outboundcalls","setOutbound","missedcalls","setMissedCalls","convertToLocalTime","catch","inboundObject","outboundObject","missedObject","times","d","some","fetchData","array","arr","sort","b","slice","max","MissedCalls","Extensions","HeaderChartComponent","errorNumber","textShadow","Error404","authWrap","authCard","AuthWrapper","authThumb","authContent","textFieldRoot","formcontrolLabelRoot","SignIn","method","wrapperVariant","loginState","setLoginState","myDate","onSubmit","console","log","alert","addNotification","setVersion","browser","regexp","userAgent","chrome","version","e","preventDefault","TextField","fullWidth","onChange","target","defaultValue","underline","href","protocol","hostname","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Login","localeText","toolbarExport","toolbarExportPrint","toolbarExportCSV","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnMenuFilter","columnMenuHideColumn","columnMenuShowColumns","noRowsLabel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","AgentTable","rows","setReloadValues","setValue","setAgentId","getTime","curentLanguage","useIntl","field","headerName","renderCell","Switch","checked","res","handleChangeStatus","handleChangeRecordAuth","CloudDownload","columns","pageSize","rowsPerPageOptions","componentsProps","pagination","labelRowsPerPage","AgentList","setResponse","reloadValues","responseStatus","result","recordAuths","j","agentNumber","agent_num","recordAuth","record_listen","dataValue","displayname","agentName","agentState","textCapital","textAcc","alrTextRoot","SignUp","setName","setEmail","setPassword","onRegister","Register","CallLog2DateFilter","setStartTimeApi","setEndTimeApi","dateFilterOpen","setDateFilterOpen","timeFilterValue","setTimeFilterValue","setHours","setStartDate","setEndDate","dateFormat","setMonth","setFullYear","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","labelId","LocalizationProvider","dateAdapter","AdapterDateFns","enLocale","nlLocale","trLocale","deLocale","DatePicker","newValue","renderInput","inputVariant","CallLog2therFilters","setSourceApi","setDestinationApi","setSourceFilterText","setDestinationFilterText","setAnswerStatus","filtersOpen","setFiltersOpen","sourceSelect","setSourceSelect","sourceFilterSelect","setSourceFilterSelect","sourceFilterTextValue","setSourceFilterTextValue","targetSelect","setTargetSelect","targetFilterSelect","setTargetFilterSelect","targetFilterTextValue","setTargetFilterTextValue","filter3Select","setFilter3Select","helperText","CallLog2Filter","setCount","setPage","startTimeApi","endTimeApi","sourceApi","destinationApi","sourceFilterText","sourceFilterNumber","setSourceNumber","destinationFilterNumber","setDestinationFilterNumber","destinationFilterText","sourceDnMin","setSourceDnMin","sourceDnMax","setSourceDnMax","destinationDnMin","setDestinationDnMin","destinationDnMax","setDestinationDnMax","sourceDnLike","setSourceDnLike","destinationDnLike","setDestinationDnLike","answerStatus","stringCount","startsWith","setLoading","CallManagementCallDetail","tags","setTags","setRating","sx","tagtext","Chip","Tag","call_id","tagsList","tagValue","setTagValue","tagmassage","Score","callScore","setCallScore","GetScoreName","AudioWaveForm","buffer","waveformRef","wavesurfer","playing","setPlay","volume","setVolume","waveColor","progressColor","cursorColor","barWidth","barRadius","barHeight","barGap","WaveSurfer","wav","WaveFile","Uint8Array","fromIMAADPCM","newBuf","toBuffer","blob","Blob","loadBlob","on","destroy","Stack","playPause","htmlColor","Slider","newVolume","min","step","CallManagementTable","setLimit","setOffset","page","setPath","queues","setQueues","record","setRecord","openAudioModal","setOpenAudioModal","rightMenu","setRightMenu","callIdEye","setCallIdEye","setTagsList","que","arrayBuffer","NotificationManager","err","PlayArrow","createElement","URL","createObjectURL","download","click","GetApp","find","q","AccessTime","Check","PhoneDisabled","tableData","recording_url","caller","src_dn","src_display_name","called","dst_dn","dst_display_name","duration","salable","isTaggable","score","Modal","rowHeight","hideFooter","TablePagination","backIconButtonProps","nextIconButtonProps","rowsPerPage","backIconButtonText","onPageChange","newPage","onRowsPerPageChange","nonTaggableCallTypes","callType","CallManagement","DropCallLogDateFilter","Filter","setResponseSummary","formatDate","hour","getHours","getMinutes","dateDifference","today","round","setParams","queueList","q_num","DataTable","datalist","responseSummary","time_start","end_time","time_end","ringing_time","ring_time","handleDowlandButtonClick","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","to_char","DroppedCall","DidReportDateFilter","setSelectedStartTime","setSelectedEndTime","notFirstReq","setNotFirstReq","setDidNumber","lighten","bullet","pos","didNumbers","setDidNumbers","FormControl","InputLabel","Select","did","conditiondata","CardActions","table","total_did_number","total_did","did_not_answered","did_answered","answered","hourToSecond","secondToTime","currentLanguage","dataGridRows","did_number","act","PhoneInTalk","DIDReport","yesterday","dates","setDates","queryCount","alertRoot","ForgotPassword","timeOutStopper","clearTimeout","Link","ForgotPasswordPage","PrivateRouteLogin","Component","NotPrivateRoute","ServiceLevelDateFilter","queuelist","setQueueList","setQueue","handleChangeQueue","initialValues","queueCheck","handleSubmit","cnt","level","createData","ring","parseFloat","toFixed","percent","csvData","row","ServiceLevel","AbondenedQueuesDateFilter","setDetails","setDetailsTotal","setResponseCount","ag_num","responseCount","z","call_time","waiting_time","waiting","callerid","from_displayname","Details","details","detailsTotal","date_day","day_abandoned","total_waiting_time","total_waiting","totalcount","totalwaiting","AbandonedQueues","RepadativeCallsDateFilter","setallcalls","setAllCallOffset","setAnsweredCallOffset","setPageAnswered","setAnsweredLimit","answeredLimit","setAnsweredCalls","setResponseCaller","setAllCallCount","setAnsweredCallCount","didList","setDidList","AllCalls","allcalls","setCallerNumber","allCallCount","exportAllOpen","setExpotAllOpen","role","tabIndex","Model","responseCaller","AnsweredCalls","answeredcalls","answeredCallCount","RepetetiveCalls","pageAnswered","answeredCalls","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","QueueList","setQueueAmaunt","setQueueAmauntFunction","queAmaunt","waitingNumber","queueListTimeout","waitingTime","substring","queuName","queueNumber","AgentConnection","setCallAmaunt","setAgentAmaunt","setAgentNum","setAgentName","setValuesFunction","agentConnectionTimeout","callAmaunt","connectionNumber","setAgentNumFunction","connectionTime","AgentStatus","setBreakeAgentAmount","setLoginAgentAmount","now","agentStatusTimeout","breakeAgenAmaunt","loginAgentAmaunt","states","onClickUptateValuesFunction","statustime","CallDetail","queueAmaunt","agentAmaunt","breakeAgentAmaunt","dateFilter","setDateFilter","intervalId","setInterval","clearInterval","convertTime","totaltime","total_call","agent_to_agent_calls","outbound_calls","answered_inbound_calls","average","AgentDetail","totalcall","answered_call","inbound_call_to_agent","outbound_call_to_agent","inboundtotaltime","outboundtotaltime","inboundaverage","outboundaverage","agentDetail","setAgentDetail","voiceMail","setVoiceMail","longTime","setLongTime","setWaitingTime","longestCalleds","setLongestCalleds","longestCallers","setLongestCallers","longestCalledAmount","setLongestAmount","longestCallerAmount","setLongestCallerAmount","Tabs","Tab","a11yProps","TabPanel","en_cok_aranan_numara","en_cok_arayan_numara","en_uzun_aranan_süre","en_uzun_aranan_numara","en_uzun_arayan_numara","hidden","WallBoard","setResponseTable","responseTable","totalCall","hour_log","totalMin","Chart","maximum","o","useScreenshot","quality","takeScreenShot","image","extension","createFileName","domain","angle","strokeDasharray","itemStyle","DailyLog","CustomTooltip","timezone","acc","dot","DailyAcc","day_log","unit","hours","minutes","seconds","totalTime","averageTime","timeToSecond","scope","Graph","setGraphData","setResponseDaily","showTime","select","setSelect","choice","tempResponse","respdata","DayLog","Count","TotalHour","TotalMinutes","TotalSeconds","Hour","Act","labelArray","reverse","daylog","totalDataArray","totalMins","totalSeconds","tempgroup","filter","el","CallComparison","responseDaily","graphData","selectedMonth","setSelectedMonth","setSum","months","selectboxdata","resultArray","tempArray","date_trunc","indexOf","customTooltip","ApplicationsGraph","pieData","toplam","nameKey","cx","cy","isAnimationActive","outerRadius","entry","aylar","formatDateExcel","toInteger","MonthlyLog","dst_start_time","dst_end_time","setAgent","agents","setAgents","ReturnedDropCall","respList","forEach","age","AgentSessionReportDateFilter","setAgentSession","qnum","setQnum","setClickedResponse","clickedAgent","responseBreak","setResponseBreak","break","queueSelect","setQueueSelect","agentSelect","setAgentSelect","breakSelect","setBreakSelect","handleChangeQueueSelect","handleChangeAgentSelect","handleBreakChange","agentSession","setClickedAgent","state_time","escapetime","clickedResponse","keys","Object","logout","m8072","m8073","m8074","m8075","m8076","m8077","m8078","m8079","AgentCDR","DateTimePicker","ampm","disableFuture","getSeconds","issuetime","IYS","Users","users","setUsers","selecetedUser","setSelectedUser","onlineVoiceRoutingPolicy","tenantDialPlan","teamsCallingPolicy","userPrincibleName","selectedUserDetails","setSelectedUserDetails","voiceRoutingPolicys","setVoiceRoutingPolicys","selectedvoiceRoutingPolicy","setSelectedvoiceRoutingPolicy","tenantDiaplans","setTenantDiaplan","selectedTenantDiaplans","setSelectedTenantDiaplans","teamsCallingPolicys","setTeamsCallingPolicy","selectedTeamsCallingPolicy","setSelectedTeamsCallingPolicy","res2","res3","handleChangeUserEmail","callingPolicy","AccordionActions","policyName","voiceRoutingPolicy","tenantDiaplan","teanantDiaPlan","setTotalAgent","setTotalDid","selectedDate","views","setSelectedDate","setCsvData","returnedTime","param1","param2","Param1Array","Param2Array","minute","calculateAverage","timeArray","averageSecond","totaloutbound","totalinbound","answeredinb","durationcalls","durationinbound","durationoutbound","averageTotal","averageInbound","averageOutbound","averageinbound","averageoutbound","inds","Detail","totalAgent","totalDid","src_did","calldid","agentcall","MonthlyDetails","responseTotal","queryTotal","resps","QueueAnswerReportDateFilter","setSummary","setSummaryTotal","setQueueNum","setSrc","setOrder","summed","setRowsPerPage","summaryTotal","dataUnit","talking","QueueAnswerReport","summary","waiting_act","count1","AbondenedCallsDateFilter","setColor","detail","setDetail","setTempArray","call","timeofevent","deta","calltime","AbondenedCalls","AgentCdrRportFilter","AgentCdrReportTable","AgentCdrReport","DailySummaryDateFilter","DailySummaryReportFilter","setDataTotal","TotalCallModal","handleTotalCallClose","answer_time","talk_time","AnsweredCallModal","handleAnsweredCallClose","AbondenedCallModal","handleAbondenedCallClose","TransferCallModal","handleTransferCallClose","transferer","trasfered","OutOfTimeModal","handleOutOfTimeClose","RonaCallModla","handleRonaCallClose","OutCallModal","handleOutCallClose","DailySummaryReportTable","dataTotal","datetime","inboundtime","waitingtime","averageconnection","abondened","transfer","long_time","zdisi","average_abondened_waiting","rona","outbound_time","average_outbound_time","inboundTime","longestTime","outOfTime","averageAbondenedWaiting","outboundTotalTime","outboundAverageTime","totalCallModalOpen","setTotalCallOpen","totalCallDate","setTotalCallDate","handleTotalCallClick","answeredCallModalOpen","setAnsweredCallOpen","answeredCallDate","setAnsweredCallDate","handleAnsweredCallClick","abondenedCallModalOpen","setAbondenedCallOpen","abondenedCallDate","setAbondenedCallDate","handleAbondenedCallClick","transferCallModalOpen","setTransferCallOpen","transferCallDate","setTransferCallDate","handleTransferCallClick","outOfTimeModalOpen","setOutOfTimeModalOpen","outOfTimeDate","setOutOfTimeDate","handleOutOfTimeClick","ronaCallModalOpen","setRonaCallOpen","ronaCallDate","setRonaCallDate","handleRonaCallClick","outCallModalOpen","setOutCallOpen","outCallDate","setOutCallDate","handleOutCallClick","DailySumaryReport","InternalSummaryDateFilter","InternalsSummaryReportFilter","seletAgent","setSelectAgent","filtered","total_inbound","total_outbound","marginBlock","InternalsSummaryReportTable","selectedAgent","setSelectedAgent","modalOpen","setModalOpen","handleOpenModal","handleCloseModal","longestBreakTime","setLongestBreakTime","answered_inbound","unanswered_inbound","answered_outbound","unanswered_outbound","hide","ArrowBack","components","GridToolbarFilterButton","InternalsSummaryReport","setDuration","durationSelect","setDurationSelect","setTotalData","setResponseTotalSummary","durationSql","totalString","stringTotalSummary","CallLog2CallDetail","detailContainerStyle","setTotalTime","ms","totalRingTime","setTotalRingTime","totalTalkTime","setTotalTalkTime","tempRingTime","tempTalkTime","callers","calleds","Timeline","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","px","CallLog2Table","totalData","responseTotalSummary","coalesce","Clear","not_answered","totalduration","averageduration","CallLog2","QualityReportDateFilter","QualityFilters","setFiltered","agentNo","setAgentNo","setScore","ani","toLowerCase","timeofinsertion","multiple","MenuProps","renderValue","selected","gap","QualityTable","nonRepeatingArr","copyArr","temp","voters","averageScores","setAverageScores","totalScoreByAgent","reduce","totalVotesByAgent","totalVote","averageScore","setVoters","float","QualityReport","CallTransferReportDateFilter","totalCount","setTotal","totalring","totalTalk","convertSec","str","sec","CallTransferReport","BreaksChangeBreakNameModal","selectedBreakName","handleBreakNameModalClose","newName","setNewName","rep","BreaksChangeBreakTimeModal","logouttype","period","handleBreakTimeModalClose","newTime","setNewTime","EditBreaks","breaks","setBreaks","breakNameModalopen","setBreakNameModalOpen","selectedBreakId","setSelectedBreakId","setSelectedBreakName","handleClickName","breakTimeModalopen","setBreakTimeModalOpen","selectedLogoutType","setSelectedLogoutType","selectedBreakTime","setSelectedBreakTime","handleClickTime","logoutType","mola","molaAdı","iddn","UserDepartmans","deps","setDeps","userOwnedDeps","setUserOwnedDeps","selectedUserId","setSelectedUserId","tempArr","resArr","department_id","dep","Checkbox","handleCheckboxClick","AddUserModal","addHandleClose","setUserName","showPassword","setShowPassword","userType","setUserType","m","htmlFor","OutlinedInput","endAdornment","InputAdornment","VisibilityOff","UpdateUserModal","updateHandleClose","selectedUser","UserTable","addModal","setAddModal","updateModal","setUpdateModal","handleClickEdit","username","res1","UserSettings","AddTagModal","setReloadTags","departments","setDepartments","setDepId","setDepName","tagName","setTagName","departmentName","prev","UpdateTagModal","selectedTag","department","tagtypes_id","TagTable","reloadTags","setSelectedTag","DepartmentQueues","depOwnedQueues","setDepOwnedQueues","selectedDepId","setSelectedDepId","queue_id","AddDepartmanModal","UpdateDepartmanModal","selectedDep","DepartmantTable","setSelectedDep","DepartmansSettigns","Routes","CallLog","DidReport","App","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7568eff1.chunk.js","sourcesContent":["import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  initialURL: '/',\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return { ...state, error: '', message: '', loading: true };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return { ...state, error: '', loading: false, message: action.payload };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return { ...state, loading: false, message: '', error: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SHOW_MESSAGE = 'show_message';\r\nexport const HIDE_MESSAGE = 'hide_message';\r\nexport const FETCH_START = 'fetch_start';\r\nexport const FETCH_SUCCESS = 'fetch_success';\r\nexport const FETCH_ERROR = 'fetch_error';\r\n\r\nexport const UPDATE_AUTH_USER = 'update_auth_user';\r\nexport const UPDATE_LOAD_USER = 'update_load_user';\r\nexport const SEND_FORGET_PASSWORD_EMAIL = 'send_forget_password_email';\r\nexport const SIGNIN_GOOGLE_USER_SUCCESS = 'signin_google_user_success';\r\nexport const SIGNIN_FACEBOOK_USER_SUCCESS = 'signin_facebook_user_success';\r\nexport const SIGNIN_TWITTER_USER_SUCCESS = 'signin_twitter_user_success';\r\nexport const SIGNIN_GITHUB_USER_SUCCESS = 'signin_github_user_SUCCESS';\r\nexport const SIGNIN_USER_SUCCESS = 'signin_user_success';\r\nexport const SIGNOUT_USER_SUCCESS = 'signout_user_success';\r\n\r\nexport const SET_DASHBOARD_DATA = 'set_dashboard_data';\r\n\r\nexport const SET_TASK_CURRENT_USER = 'set_task_current_user';\r\nexport const SET_TASKS_DATA = 'set_tasks_data';\r\nexport const SET_TASK_LIST_DATA = 'set_task_list_data';\r\nexport const ADD_TASK = 'add_task';\r\nexport const DELETE_TASK = 'delete_task';\r\nexport const UPDATE_TASK = 'update_task';\r\nexport const SET_FILTER_DATA = 'set_filter_data';\r\nexport const ADD_TASK_LIST = 'add_task_list';\r\nexport const UPDATE_TASK_LIST = 'update_task_list';\r\nexport const DELETE_TASK_LIST = 'delete_task_list';\r\nexport const SET_TASK_DETAIL = 'set_task_detail';\r\nexport const SEND_MESSAGE = 'send_message';\r\nexport const TOGGLE_SIDEBAR_COLLAPSED = 'toggle_sidebar_collapsed';\r\nexport const GET_TASKS_COUNTS = 'get_tasks_counts';\r\n\r\n//mail app\r\nexport const GET_LABELS_LIST = 'get_labels_list';\r\nexport const GET_CONNECTIONS_LIST = 'get_connections_list';\r\nexport const GET_MAILS_LIST = 'get_mails_list';\r\nexport const UPDATE_MAIL_FOLDER = 'update_mail_folder';\r\nexport const UPDATE_MAIL_LABEL = 'upade_mail_label';\r\nexport const UPDATE_FAVORITE_STATUS = 'update_favorite_status';\r\nexport const UPDATE_READ_STATUS = 'update_read_status';\r\nexport const UPDATE_IMPORTANT_STATUS = 'update_important_status';\r\nexport const COMPOSE_MAIL = 'compose_mail';\r\nexport const SET_FILTER_TYPE = 'set_filter_type';\r\nexport const GET_SELECTED_MAIL = 'GET_SELECTED_MAIL';\r\nexport const UPDATE_SELECTED_MAIL = 'update_selected_mail';\r\nexport const NULLIFY_SELECTED_MAIL = 'nullify_selected_mail';\r\nexport const REPLY_TO_MAIL = 'reply_to_mail';\r\nexport const GET_MAIL_COUNTS = 'get_mail_count';\r\nexport const ADD_LABEL = 'add_label';\r\nexport const ADD_CONNECTION = 'add_connection';\r\nexport const REMOVE_CONNECTION = 'remove_connection';\r\n\r\nexport const SET_CHAT_USERS = 'set_chat_users';\r\nexport const SET_CONTACT_USERS = 'set_contact_users';\r\nexport const SET_CURRENT_USER = 'set_current_user';\r\nexport const SET_CONVERSATION_DATA = 'set_conversation_data';\r\nexport const SEND_NEW_CHAT_MESSAGE = 'send_new_chat_message';\r\nexport const SEND_NEW_MEDIA_MESSAGE = 'send_new_media_message';\r\n\r\n//Contact App\r\nexport const GET_CONTACTS_LIST = 'get_contacts_list';\r\nexport const SET_CURRENT_CONTACT = 'set_current_contact';\r\nexport const CREATE_CONTACT = 'create_contact';\r\nexport const UPDATE_STARRED_STATUS = 'update_starred_status';\r\nexport const DELETE_CONTACT = 'delete_contact';\r\nexport const UPDATE_CONTACT_LABEL = 'update_contact_label';\r\nexport const UPDATE_CONTACT = 'update_contact';\r\nexport const GET_CONTACT_COUNTS = 'get_contact_counts';\r\nexport const UPDATE_LABEL_ITEM = 'update_label_item';\r\nexport const DELETE_LABEL_ITEM = 'delete_label_item';\r\n\r\nexport const GET_USER_DETAIL = 'get_user_detail';\r\nexport const GET_FEED_POSTS = 'get_feed_posts';\r\nexport const CREATE_POST = 'create_post';\r\nexport const UPDATE_POST = 'update_post';\r\n\r\n// Users Module\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const DELETE_BULK_USERS = 'DELETE_BULK_USERS';\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nconst INIT_STATE = {\r\n  authUser: null,\r\n  loadUser: false,\r\n  send_forget_password_email: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n        loadUser: true,\r\n      };\r\n    }\r\n    case UPDATE_LOAD_USER: {\r\n      return {\r\n        ...state,\r\n        loadUser: action.payload,\r\n      };\r\n    }\r\n    case SEND_FORGET_PASSWORD_EMAIL: {\r\n      return {\r\n        ...state,\r\n        send_forget_password_email: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport Common from './Common';\r\nimport Auth from './Auth';\r\n\r\nexport default history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    common: Common,\r\n    auth: Auth,\r\n  });\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport reducers from '../reducers';\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const store = createStore(reducers(history), initialState, bindMiddleware([routeMiddleware, thunk]));\r\n  return store;\r\n}\r\nexport default configureStore;\r\nexport { history };\r\n","import { alpha, makeStyles, darken } from '@material-ui/core/styles';\r\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\n\r\nconst breakpoints = createBreakpoints({});\r\n\r\nlet paddingClasses = {};\r\nlet marginClasses = {};\r\nfor (let count = 1; count <= 8; count++) {\r\n  paddingClasses['.pt-' + count] = { paddingTop: count * 4 + 'px !important' };\r\n  paddingClasses['.pb-' + count] = { paddingBottom: count * 4 + 'px !important' };\r\n  paddingClasses['.pl-' + count] = { paddingLeft: count * 4 + 'px !important' };\r\n  paddingClasses['.pr-' + count] = { paddingRight: count * 4 + 'px !important' };\r\n  marginClasses[`.ml-${count}`] = { marginLeft: `${count * 4}px !important` };\r\n  marginClasses[`.mr-${count}`] = { marginRight: `${count * 4}px !important` };\r\n  marginClasses[`.mt-${count}`] = { marginTop: `${count * 4}px !important` };\r\n  marginClasses[`.mb-${count}`] = { marginBottom: `${count * 4}px !important` };\r\n}\r\n\r\nconst globalStyles = makeStyles(theme => ({\r\n  breakpoints,\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      '&:hover,&:focus': {\r\n        textDecoration: 'none',\r\n      },\r\n      '&.disable-link': {\r\n        pointerEvents: 'none',\r\n        cursor: 'default',\r\n        [theme.breakpoints.down('xs')]: {\r\n          pointerEvents: 'inherit',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n    },\r\n    img: {\r\n      maxWidth: '100%',\r\n    },\r\n    '.pointer': {\r\n      cursor: 'pointer',\r\n    },\r\n    '.rounded': {\r\n      borderRadius: '50%',\r\n    },\r\n    '.Cmt-table-responsive': {\r\n      minHeight: '.01%',\r\n      overflowX: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n        marginBottom: 15,\r\n        overflowY: 'hidden',\r\n        border: `1px solid ${theme.palette.borderColor.main}`,\r\n        '& > table': {\r\n          marginBottom: 0,\r\n          '& > thead > tr > th': {\r\n            paddingTop: 8,\r\n          },\r\n          '& > thead > tr > th, > tbody > tr > th, > tfoot > tr > th, thead > tr > td, tbody > tr > td, tfoot > tr > td': {\r\n            whiteSpace: 'nowrap',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '.dropzone': {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(10, 5),\r\n      border: `2px dashed ${theme.palette.borderColor.main}`,\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default,\r\n      outline: 'none',\r\n      transition: 'border .24s ease-in-out',\r\n    },\r\n    '.swal2-shown .swal2-container': {\r\n      zIndex: 1104,\r\n    },\r\n    '.swal2-container .swal2-popup, .swal2-container .swal2-popup.swal2-toast': {\r\n      backgroundColor: theme.palette.popupColor.main,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-content, .swal2-container .swal2-title': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '.swal2-container .swal2-footer a': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '.swal2-container .swal2-close:focus': {\r\n      outline: 'none',\r\n    },\r\n    // React Big Calendar\r\n    '.rbc-calendar': {\r\n      flex: 1,\r\n      minHeight: 'calc(100vh - 200px)',\r\n      [theme.breakpoints.down('xs')]: {\r\n        minHeight: 400,\r\n      },\r\n      [theme.breakpoints.down(710)]: {\r\n        '& .rbc-toolbar': {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexWrap: 'nowrap',\r\n          alignItems: 'flex-start',\r\n          '& .rbc-toolbar-label': {\r\n            margin: '8px 0',\r\n            padding: 0,\r\n          },\r\n        },\r\n      },\r\n      [theme.breakpoints.down(500)]: {\r\n        '& .rbc-toolbar': {\r\n          fontSize: 12,\r\n          '& button': {\r\n            padding: '5px 10px',\r\n          },\r\n        },\r\n      },\r\n      '& .rbc-event': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        minHeight: 50,\r\n        '&:focus': {\r\n          outline: 'none',\r\n        },\r\n      },\r\n      '& .rbc-event.rbc-selected': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.3),\r\n      },\r\n      '& .rbc-slot-selection': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.7),\r\n      },\r\n      '& .rbc-toolbar button:active, & .rbc-toolbar button.rbc-active': {\r\n        color: theme.palette.common.white,\r\n        backgroundImage: 'none',\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button:active:hover, & .rbc-toolbar button.rbc-active:hover, & .rbc-toolbar button:active:focus, & .rbc-toolbar button.rbc-active:focus': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-toolbar button': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n      '& .rbc-toolbar button:focus, & .rbc-toolbar button:hover': {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n      '& .rbc-month-row': {\r\n        minHeight: 100,\r\n      },\r\n      '& .rbc-off-range-bg': {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      },\r\n    },\r\n    ...paddingClasses,\r\n    ...marginClasses,\r\n  },\r\n}));\r\n\r\nexport default globalStyles;\r\n","export const DRAWER_BREAK_POINT = {\r\n  SX: 'sx',\r\n  SM: 'sm',\r\n  MD: 'md',\r\n};\r\n\r\nexport const HEADER_TYPE = {\r\n  FIXED: 'fixed',\r\n  STATIC: 'static',\r\n};\r\n\r\nexport const SIDEBAR_TYPE = {\r\n  FULL: 'full',\r\n  MINI: 'mini',\r\n  DRAWER: 'drawer',\r\n};\r\nexport const Fonts = {\r\n  PRIMARY: 'Normal',\r\n};\r\n\r\nexport const THEME_TYPES = {\r\n  DARK: 'dark',\r\n  SEMI_DARK: 'semi-dark',\r\n  LIGHT: 'light',\r\n};\r\n\r\nexport const LAYOUT_STYLES = {\r\n  BOXED: 'boxed',\r\n  FULL_WIDTH: 'full-width',\r\n  FRAMED: 'framed',\r\n};\r\n\r\nexport const LAYOUT_TYPES = {\r\n  VERTICAL_DEFAULT: 'vertical-default',\r\n  VERTICAL_MINIMAL: 'vertical-minimal',\r\n  VERTICAL_MINIMAL_NO_HEADER: 'vertical-minimal-no-header',\r\n  VERTICAL_MODERN_SIDEBAR: 'vertical-modern-sidebar',\r\n  HORIZONTAL_DEFAULT: 'horizontal-default',\r\n  HORIZONTAL_DARK: 'horizontal-dark',\r\n  HORIZONTAL_MINIMAL: 'horizontal-minimal',\r\n  HORIZONTAL_TOP_MENU: 'horizontal-top-menu',\r\n};\r\n\r\nexport const SIDEBAR_WIDTH = {\r\n  SMALL: 280,\r\n  DEFAULT: 304,\r\n  WIDE: 330,\r\n};\r\n","import createBreakpoints from '@material-ui/core/styles/createBreakpoints';\r\nimport { Fonts } from '../@jumbo/constants/ThemeOptions';\r\nimport { indigo, pink } from '@material-ui/core/colors';\r\n\r\nconst breakpoints = createBreakpoints({\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1920,\r\n  },\r\n});\r\n\r\nconst defaultTheme = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  spacing: 4,\r\n  direction: 'ltr',\r\n  palette: {\r\n    type: 'light',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n      dark: '#020202',\r\n    },\r\n    primary: indigo,\r\n    secondary: pink,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#6200EE',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    btn: {\r\n      hover: 'rgba(0, 0, 0, 0.08)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n  typography: {\r\n    fontFamily: Fonts.PRIMARY,\r\n    fontWeightExtraLight: 200,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightBold: 'bold',\r\n    fontWeightExtraBold: 800,\r\n  },\r\n  overrides: {\r\n    MuiTypography: {\r\n      h1: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 22,\r\n        },\r\n      },\r\n      h2: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n      h3: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        [breakpoints.up('md')]: {\r\n          fontSize: 18,\r\n        },\r\n      },\r\n      h4: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n      },\r\n      h5: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n      },\r\n      h6: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.5,\r\n      },\r\n      subtitle1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.15,\r\n      },\r\n      subtitle2: {\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.1,\r\n      },\r\n      body1: {\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.5,\r\n      },\r\n      body2: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        letterSpacing: 0.25,\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1.25,\r\n        fontSize: 13,\r\n      },\r\n    },\r\n    MuiToggleButton: {\r\n      root: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiCardLg: {\r\n      root: {\r\n        borderRadius: 10,\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        borderRadius: 4,\r\n        boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.2), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14)',\r\n      },\r\n    },\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default defaultTheme;\r\n","import defaultTheme from '../../../../theme/defaultTheme';\r\nimport {\r\n  DRAWER_BREAK_POINT,\r\n  HEADER_TYPE,\r\n  LAYOUT_STYLES,\r\n  LAYOUT_TYPES,\r\n  SIDEBAR_TYPE,\r\n  SIDEBAR_WIDTH,\r\n  THEME_TYPES,\r\n} from '../../../constants/ThemeOptions';\r\nconst getLang = () => {\r\n  var defaultLanguage = localStorage.getItem(\"language\") || navigator.language;\r\n  switch (defaultLanguage) {\r\n    case 'tr-TR':\r\n    case 'tr':\r\n    case 'turkish':\r\n      return {\r\n        languageId: 'turkish',\r\n          locale: 'tr',\r\n          name: 'Türkçe',\r\n          icon: 'tr',\r\n      }\r\n      case 'en-US':\r\n      case 'en':\r\n      case 'en-GB':\r\n      case 'english':\r\n        return {\r\n          languageId: 'english',\r\n            locale: 'en',\r\n            name: 'English',\r\n            icon: 'en',\r\n        }\r\n        case 'de-DE':\r\n        case 'de':\r\n        case 'de-AT':\r\n        case 'de-CH':\r\n        case 'de-LI':\r\n        case 'deutsche':\r\n          return {\r\n            languageId: 'deutsche',\r\n              locale: 'de',\r\n              name: 'Deutsche',\r\n              icon: 'de',\r\n          }\r\n          case 'nl':\r\n          case 'dutch':\r\n            return {\r\n              languageId: 'dutch',\r\n                locale: 'nl',\r\n                name: 'Dutch',\r\n                icon: 'nl',\r\n            }\r\n            default:\r\n              return {\r\n                languageId: 'turkish',\r\n                  locale: 'tr',\r\n                  name: 'Turkish',\r\n                  icon: 'tr',\r\n              }\r\n  }\r\n}\r\nvar defaultLng = getLang();\r\nexport default {\r\n  theme: defaultTheme,\r\n  defaultLng,\r\n  layout: LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR,\r\n  layoutType: LAYOUT_STYLES.FULL_WIDTH,\r\n  themeType: THEME_TYPES.LIGHT,\r\n  drawerBreakPoint: DRAWER_BREAK_POINT.MD,\r\n  headerType: HEADER_TYPE.FIXED,\r\n  sidebarType: SIDEBAR_TYPE.FULL,\r\n  isSidebarFixed: true,\r\n  sidebarWidth: SIDEBAR_WIDTH.DEFAULT,\r\n  showFooter: false,\r\n};","import React from 'react';\r\nimport defaultContext from './defaultContext';\r\n\r\nconst AppContext = React.createContext({\r\n  locale: defaultContext.defaultLng,\r\n  setLocale: () => {},\r\n});\r\n\r\nexport default AppContext;\r\n","import enMessages from '../locales/en_EN.json';\r\n\r\nconst enLang = {\r\n  messages: {\r\n    ...enMessages,\r\n  },\r\n  locale: 'en-EN',\r\n};\r\nexport default enLang;\r\n","import saMessages from '../locales/tr_TR.json';\r\n\r\nconst saLang = {\r\n  messages: {\r\n    ...saMessages,\r\n  },\r\n  locale: 'tr-TR',\r\n};\r\nexport default saLang;\r\n","import nlMessages from '../locales/nl_NL.json';\r\n\r\nconst nlLang = {\r\n  messages: {\r\n    ...nlMessages,\r\n  },\r\n  locale: 'nl-NL',\r\n};\r\nexport default nlLang;\r\n","import enLang from './entries/en_EN';\r\nimport trLang from './entries/tr_TR';\r\nimport nlLang from './entries/nl_NL';\r\nimport deLang from './entries/de_DE';\r\nconst AppLocale = {\r\n  en: enLang,\r\n  tr: trLang,\r\n  de: deLang,\r\n  nl: nlLang,\r\n};\r\n\r\nexport default AppLocale;","import deMessages from '../locales/de_DE.json';\r\n\r\nconst deLang = {\r\n  messages: {\r\n    ...deMessages,\r\n  },\r\n  locale: 'de-DE',\r\n};\r\nexport default deLang;\r\n","import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const fetchSuccess = message => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_SUCCESS,\r\n      payload: message || '',\r\n    });\r\n  };\r\n};\r\nexport const fetchError = error => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_ERROR,\r\n      payload: error,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchStart = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: FETCH_START,\r\n    });\r\n  };\r\n};\r\n","import { SEND_FORGET_PASSWORD_EMAIL, UPDATE_AUTH_USER, UPDATE_LOAD_USER } from '../../@jumbo/constants/ActionTypes';\r\n\r\nexport const setAuthUser = user => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_AUTH_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateLoadUser = loading => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_LOAD_USER,\r\n      payload: loading,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setForgetPassMailSent = status => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SEND_FORGET_PASSWORD_EMAIL,\r\n      payload: status,\r\n    });\r\n  };\r\n};\r\n","/*import Firebase from './firebase';\r\nimport JWTAuth from './jwt';*/\r\nimport BasicAuth from './Basic';\r\n\r\nexport const AuhMethods = {\r\n  /*firebase: Firebase,\r\n  jwtAuth: JWTAuth,*/\r\n  basic: BasicAuth,\r\n};\r\n","import { fetchError, fetchStart, fetchSuccess } from '../../../redux/actions';\r\nimport { setAuthUser, setForgetPassMailSent, updateLoadUser } from '../../../redux/actions/Auth';\r\nimport React from 'react';\r\n\r\nexport const BasicAuth = {\r\n  onLogin: ({ email, password }) => {\r\n    return dispatch => {\r\n      try {\r\n        dispatch(fetchStart());\r\n\r\n        setTimeout(() => {\r\n          const user = { name: 'Admin', email: email, password: password };\r\n          dispatch(fetchSuccess());\r\n          dispatch(setAuthUser(user));\r\n        }, 300);\r\n      } catch (error) {\r\n        dispatch(fetchError(error.message));\r\n      }\r\n    };\r\n  },\r\n  onLogout: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      dispatch(fetchSuccess());\r\n      localStorage.removeItem('login');\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('username');\r\n\r\n      dispatch(setAuthUser(null));\r\n    };\r\n  },\r\n\r\n  getAuthUser: (loaded = false) => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n      dispatch(updateLoadUser(loaded));\r\n\r\n      setTimeout(() => {\r\n        dispatch(fetchSuccess());\r\n        dispatch(setAuthUser(JSON.parse(localStorage.getItem('user'))));\r\n      }, 300);\r\n    };\r\n  },\r\n\r\n  onForgotPassword: () => {\r\n    return dispatch => {\r\n      dispatch(fetchStart());\r\n\r\n      setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(true));\r\n        dispatch(fetchSuccess());\r\n      }, 300);\r\n    };\r\n  },\r\n  getSocialMediaIcons: () => {\r\n    return <React.Fragment> </React.Fragment>;\r\n  },\r\n};\r\n\r\nexport default BasicAuth;\r\n","import React from 'react';\r\n\r\n//todo set initial value of LayoutContextProvider\r\nconst LayoutContext = React.createContext();\r\n\r\nexport default LayoutContext;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const location = useLocation();\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false); //for both drawer and mini-sidebar\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  const [miniSidebarWidth, setMiniSidebarWidth] = useState(props.miniSidebarWidth ? props.miniSidebarWidth : 0);\r\n  const [actionSidebarWidth, setActionSidebarWidth] = useState(props.actionSidebarWidth ? props.actionSidebarWidth : 0);\r\n\r\n  useEffect(() => {\r\n    sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n    headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setLayoutStyle(params.get('layout-style'));\r\n    }\r\n  }, [location.search, props.headerType, props.isSidebarFixed]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      miniSidebarWidth,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n      setMiniSidebarWidth,\r\n      actionSidebarWidth,\r\n      setActionSidebarWidth,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      miniSidebarWidth,\r\n      actionSidebarWidth,\r\n      props.drawerBreakPoint,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.01s ease',\r\n    '&.Cmt-fixedHeaderLayout': {\r\n      '& $appMain': {\r\n        position: 'relative',\r\n        paddingTop: 72,\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingTop: '64px !important',\r\n        },\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: props.sidebarWidth,\r\n        zIndex: 9,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          left: 0,\r\n        },\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-fullFixedHeaderLayout': {\r\n      marginTop: 72,\r\n      height: 'calc(100vh - 72px)',\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: 64,\r\n        height: 'calc(100vh - 64px)',\r\n      },\r\n      '& .Cmt-header': {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        width: '100%',\r\n      },\r\n    },\r\n    '&.Cmt-sidebar-fixed': {\r\n      '& .Cmt-sidebar': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 999,\r\n      },\r\n      '&.Cmt-drawer-sidebar': {\r\n        '& .Cmt-sidebar': {\r\n          position: 'relative',\r\n        },\r\n      },\r\n      '& .Cmt-actionSidebarWrapper': {\r\n        position: 'fixed',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 1103,\r\n        '& .Cmt-sidebar': {\r\n          position: 'static',\r\n        },\r\n      },\r\n    },\r\n    '& .Cmt-header .Cmt-toggle-menu': {\r\n      display: 'none',\r\n    },\r\n    '&.Cmt-miniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.miniSidebarWidth,\r\n        width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n        transition: 'all 0.01s ease',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.miniSidebarWidth + 20,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 57px))`,\r\n            right: 37,\r\n            top: 20,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.miniSidebarWidth + 50,\r\n            width: `calc(100% - (${props.miniSidebarWidth}px + 117px))`,\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-miniLayout': {\r\n      '& .Cmt-sidebar': {\r\n        width: props.miniSidebarWidth,\r\n      },\r\n    },\r\n    '&.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: props.sidebarWidth,\r\n        width: `calc(100% - ${props.sidebarWidth}px)`,\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: props.sidebarWidth + 20,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 57px))`,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: props.sidebarWidth + 50,\r\n            width: `calc(100% - (${props.sidebarWidth}px + 117px))`,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-drawerLayout.Cmt-fixedHeaderLayout': {\r\n      '& .Cmt-header': {\r\n        left: 0,\r\n        width: '100%',\r\n        '.layout-type-framed &': {\r\n          '@media screen and (min-width: 1366px)': {\r\n            left: 20,\r\n            width: 'calc(100% - 57px)',\r\n            right: 37,\r\n            top: 20,\r\n            borderTopLeftRadius: 12,\r\n          },\r\n          [theme.breakpoints.up('xl')]: {\r\n            left: 50,\r\n            width: 'calc(100% - 117px)',\r\n            right: 87,\r\n            top: 50,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      '& .Cmt-header .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }),\r\n  appMain: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: `calc(100% - ${props.sidebarWidth}px)`,\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth,\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      width: `calc(100% - ${props.miniSidebarWidth}px)`,\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.miniSidebarWidth,\r\n    },\r\n    '.Cmt-drawerLayout &': {\r\n      width: '100%',\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-drawerLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: 0,\r\n    },\r\n    '.Cmt-fullMiniLayout &': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'block',\r\n      },\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      width: `calc(100% - ${props.sidebarWidth + props.actionSidebarWidth}px)`,\r\n    },\r\n    '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n      marginLeft: props.sidebarWidth + props.actionSidebarWidth,\r\n    },\r\n    [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n      width: '100%',\r\n      '.Cmt-miniLayout &': {\r\n        width: '100%',\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-miniLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: 0,\r\n      },\r\n      '.Cmt-drawerLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-fullMiniLayout &': {\r\n        '& .Cmt-toggle-menu': {\r\n          display: 'none',\r\n        },\r\n      },\r\n      '.Cmt-modernLayout &': {\r\n        width: `100% !important`,\r\n      },\r\n      '.Cmt-modernLayout.Cmt-sidebar-fixed &': {\r\n        marginLeft: '0 !important',\r\n      },\r\n    },\r\n  }),\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    '.Cmt-sidebar-fixed &': {\r\n      flexDirection: 'column',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          '&.Cmt-sidebar-fixed .Cmt-sidebar': {\r\n            position: 'absolute',\r\n            zIndex: 1103,\r\n          },\r\n          '&.Cmt-sidebar-fixed .Cmt-actionSidebarWrapper': {\r\n            position: 'absolute',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            position: 'sticky',\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n          '&.Cmt-fixedHeaderLayout $appMain': {\r\n            paddingTop: 0,\r\n          },\r\n          '&.Cmt-miniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-fullMiniLayout.Cmt-fixedHeaderLayout .Cmt-header, &.Cmt-drawerLayout.Cmt-fixedHeaderLayout .Cmt-header': {\r\n            left: 0,\r\n            width: '100%',\r\n          },\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMainContainer': {\r\n          overflow: 'hidden',\r\n        },\r\n        '& .Cmt-sidebar-fixed $appMain': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, useContext, useEffect, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport useStyles from './MainContainer.style';\r\nimport { HEADER_TYPE } from '../../../@jumbo/constants/ThemeOptions';\r\n\r\nconst MainContainer = ({ header, sidebar, footer, children, className, ...rest }) => {\r\n  const {\r\n    headerType,\r\n    footerType,\r\n    sidebarType,\r\n    isSidebarOpen,\r\n    isSidebarFixed,\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  } = useContext(LayoutContext);\r\n\r\n  const theme = useTheme();\r\n  const isDrawer = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const [headerClasses, setHeaderClasses] = useState('');\r\n  const [footerClasses, setFooterClasses] = useState('');\r\n  const [sidebarClasses, setSidebarClasses] = useState('');\r\n\r\n  const classes = useStyles({\r\n    miniSidebarWidth,\r\n    sidebarWidth,\r\n    actionSidebarWidth,\r\n    drawerBreakPoint,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!header) setHeaderClasses('');\r\n    else if (headerType === HEADER_TYPE.FIXED) setHeaderClasses('Cmt-fixedHeaderLayout');\r\n    else setHeaderClasses('');\r\n  }, [header, headerType]);\r\n\r\n  useEffect(() => {\r\n    if (!footer) setFooterClasses('');\r\n    else if (footerType === 'fixed') setFooterClasses('Cmt-FixedFooterLayout');\r\n    else setFooterClasses('');\r\n  }, [footer, footerType]);\r\n\r\n  useEffect(() => {\r\n    const newClasses = [];\r\n    if (!sidebar) newClasses.push('');\r\n    else if (sidebarType === 'drawer' || isDrawer) newClasses.push('Cmt-drawerLayout');\r\n    else if (sidebarType === 'mini') newClasses.push(isSidebarOpen ? 'Cmt-fullMiniLayout' : 'Cmt-miniLayout');\r\n\r\n    if (isSidebarFixed) newClasses.push('Cmt-sidebar-fixed');\r\n\r\n    setSidebarClasses(clsx(newClasses));\r\n  }, [sidebarType, isSidebarOpen, isDrawer, isSidebarFixed, sidebar]);\r\n\r\n  return (\r\n    <Box className={clsx(classes.appRoot, headerClasses, sidebarClasses, footerClasses, className)} {...rest}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {header && cloneElement(header, { type: headerType })}\r\n            {children}\r\n            {footer && cloneElement(footer, { type: footerType })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\n//todo set initial value of SidebarThemeContext\r\nconst SidebarThemeContext = React.createContext();\r\n\r\nexport default SidebarThemeContext;\r\n","const pxToRem = (target, context = '10px') => {\r\n  return (target / context) * '1rem';\r\n};\r\n\r\nconst componentColors = [\r\n  'amber',\r\n  'brown',\r\n  'orange',\r\n  'purple',\r\n  'primary',\r\n  'red',\r\n  'green',\r\n  'blue',\r\n  'grey',\r\n  'yellow',\r\n  'secondary',\r\n];\r\n\r\nconst getBackgroundStyle = (backgroundColor, backgroundImage, gradientDirection) => {\r\n  if (backgroundImage)\r\n    return {\r\n      backgroundImage: `url(${backgroundImage})`,\r\n      backgroundRepeat: `no-repeat`,\r\n      backgroundPosition: `center center`,\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n  if (typeof backgroundColor === 'string' || (Array.isArray(backgroundColor) && backgroundColor.length === 1)) {\r\n    return { backgroundColor: backgroundColor.toString() };\r\n  }\r\n\r\n  if (Array.isArray(backgroundColor) && backgroundColor.length > 1) {\r\n    const [firstColor] = backgroundColor[0].split(' ');\r\n    return {\r\n      backgroundColor: firstColor,\r\n      backgroundImage: gradientDirection\r\n        ? `linear-gradient(${gradientDirection}, ${backgroundColor.join(', ')})`\r\n        : `linear-gradient(${backgroundColor.join(', ')})`,\r\n    };\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getOverLayStyle = overlay => {\r\n  if (overlay.colors) {\r\n    if (typeof overlay.colors === 'string' || (Array.isArray(overlay.colors) && overlay.colors.length === 1)) {\r\n      return {\r\n        backgroundColor: overlay.colors.toString(),\r\n        opacity: overlay.opacity,\r\n      };\r\n    } else if (Array.isArray(overlay.colors) && overlay.colors.length > 1) {\r\n      const [firstColor] = overlay.colors[0].split(' ');\r\n      return {\r\n        backgroundColor: firstColor,\r\n        backgroundImage: overlay.direction\r\n          ? `linear-gradient(${overlay.direction}, ${overlay.colors.join(', ')})`\r\n          : `linear-gradient(${overlay.colors.join(', ')})`,\r\n        opacity: overlay.opacity,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getSeparatorStyle = (separator, topBorder = false) => {\r\n  if (separator.color) {\r\n    const borderWidth = separator.borderWidth ? separator.borderWidth : 1;\r\n    const borderStyle = separator.borderStyle ? separator.borderStyle : 'solid';\r\n\r\n    if (topBorder) {\r\n      return {\r\n        borderTop: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n      };\r\n    }\r\n\r\n    return {\r\n      borderBottom: `${borderWidth}px ${borderStyle} ${separator.color}`,\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst hexToRgba = input => {\r\n  input = input + '';\r\n  input = input.replace('#', '');\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error('input is not a valid hex color.');\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return parseInt(first, 16) + ', ' + parseInt(second, 16) + ', ' + parseInt(last, 16);\r\n};\r\n\r\n/**\r\n * Check if the given url can be found\r\n * in one of the given parent's children\r\n *\r\n * @param parent\r\n * @param url\r\n * @returns {boolean}\r\n */\r\nconst isUrlInChildren = (parent, url) => {\r\n  if (!parent.children) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < parent.children.length; i++) {\r\n    if (parent.children[i].children) {\r\n      if (isUrlInChildren(parent.children[i], url)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (parent.children[i].link === url || url.includes(parent.children[i].link)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { hexToRgba, pxToRem, componentColors, getBackgroundStyle, getOverLayStyle, getSeparatorStyle, isUrlInChildren };\r\n","export const sidebarLightTheme = {\r\n  bgColor: '#fff',\r\n  textColor: 'rgba(0, 0, 0, 0.6)',\r\n  textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n  textActiveColor: '#3f51b5',\r\n  navHoverBgColor: 'rgb(229, 229, 229)',\r\n  navActiveBgColor: 'rgb(239, 229, 253)',\r\n  borderColor: 'rgba(33, 33, 33, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarSemiDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nexport const sidebarDarkTheme = {\r\n  bgColor: '#363636',\r\n  textColor: 'rgba(255, 255, 255, 0.3)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n  navActiveBgColor: '#3f51b5',\r\n  borderColor: 'rgba(255, 255, 255, 0.08)',\r\n  ...JSON.parse(localStorage.getItem('sidebar-colors')),\r\n};\r\n\r\nconst themeSidebarColor = {\r\n  light: sidebarLightTheme,\r\n  'semi-dark': sidebarSemiDarkTheme,\r\n  dark: sidebarDarkTheme,\r\n};\r\n\r\nexport default themeSidebarColor;\r\n","import React, { useState, useMemo, useEffect, useContext } from 'react';\r\n\r\nimport SidebarThemeContext from './SidebarThemeContext';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../../CmtHelpers/JssHelper';\r\nimport AppContext from '../../../@jumbo/components/contextProvider/AppContextProvider/AppContext';\r\nimport themeSidebarColor from './sidebarThemeColors';\r\n\r\nconst darkThemeSetting = {\r\n  textColor: 'rgba(255, 255, 255, 0.7)',\r\n  textDarkColor: '#fff',\r\n  textActiveColor: '#fff',\r\n  navHoverBgColor: 'rgba(187, 134, 252, 0.3)',\r\n  navActiveBgColor: 'green',\r\n  borderColor: 'rgba(255, 255, 255, 0.2)',\r\n};\r\n\r\nconst SidebarThemeProvider = ({ children }) => {\r\n  const { themeType } = useContext(AppContext);\r\n  const [activeTheme, setActiveTheme] = useState({\r\n    ...themeSidebarColor[themeType],\r\n    backgroundColor: '',\r\n    backgroundImage: '',\r\n    gradientDirection: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (activeTheme.backgroundImage) {\r\n      if (!activeTheme.backgroundColor) {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...darkThemeSetting,\r\n          backgroundColor: '#000',\r\n        });\r\n      }\r\n    } else {\r\n      //this means no flat and gradient style and no background image\r\n      if (activeTheme.backgroundColor === '#000') {\r\n        setActiveTheme({\r\n          ...activeTheme,\r\n          ...themeSidebarColor[themeType],\r\n          backgroundColor: '',\r\n        });\r\n      }\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeTheme.backgroundImage]);\r\n\r\n  useEffect(() => {\r\n    if (!activeTheme.backgroundColor && !activeTheme.backgroundImage) {\r\n      setActiveTheme({\r\n        ...themeSidebarColor[themeType],\r\n      });\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [themeType]);\r\n\r\n  const sidebarContextValue = useMemo(() => {\r\n    const backgroundStyle = getBackgroundStyle(\r\n      activeTheme.backgroundColor,\r\n      activeTheme.backgroundImage,\r\n      activeTheme.gradientDirection,\r\n    );\r\n    const overlayStyle = getOverLayStyle({\r\n      colors: activeTheme.backgroundColor,\r\n      opacity: 0.6,\r\n      direction: '180deg',\r\n    });\r\n\r\n    return {\r\n      sidebarTheme: activeTheme,\r\n      backgroundStyle: backgroundStyle,\r\n      overlayStyle: overlayStyle,\r\n      setSidebarTheme: setActiveTheme,\r\n    };\r\n  }, [activeTheme]);\r\n\r\n  return <SidebarThemeContext.Provider value={sidebarContextValue}>{children}</SidebarThemeContext.Provider>;\r\n};\r\n\r\nexport default SidebarThemeProvider;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtVerticalLayout = ({ layoutOptions, children, header, sidebar, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} sidebar={sidebar} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nCmtVerticalLayout.prototype = {\r\n  layoutOptions: PropTypes.object,\r\n};\r\n\r\nCmtVerticalLayout.defaultProps = {\r\n  layoutOptions: {},\r\n};\r\n\r\nexport default CmtVerticalLayout;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { className, children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={clsx(classes.appHeader, className, 'Cmt-header')}>\r\n      {children}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'LayoutHeader',\r\n};\r\nCmtHeader.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n  fullHeader: PropTypes.bool,\r\n};\r\n\r\nexport default CmtHeader;\r\n","import React, { useContext } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst SidebarToggleHandler = ({ children, ...restProps }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" onClick={() => setSidebarOpen(!isSidebarOpen)} {...restProps}>\r\n      {children || <MenuIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\n\r\nconst CmtImage = ({ alt, ...restProps }) => {\r\n  const altValue = alt ? alt : '';\r\n  return <img alt={altValue} {...restProps} />;\r\n};\r\n\r\nexport default CmtImage;\r\n","export const languageData = [\r\n  {\r\n    languageId: 'turkish',\r\n    locale: 'tr',\r\n    name: 'Türkçe',\r\n    icon: 'tr',\r\n  },\r\n  {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'en',\r\n  },\r\n  {\r\n    languageId: 'dutch',\r\n    locale: 'nl',\r\n    name: 'Dutch',\r\n    icon: 'nl',\r\n  },\r\n  {\r\n    languageId: 'deutsche',\r\n    locale: 'de',\r\n    name: 'Deutsche',\r\n    icon: 'de',\r\n  },\r\n];\r\n\r\nexport const flags = {\r\n  tr: '/images/flag/icons8-tr.png',\r\n  en: '/images/flag/icons8-en.png',\r\n  nl: '/images/flag/icons8-nl.png',\r\n  de: '/images/flag/icons8-de.png',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags } from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '12px 24px',\r\n    '& .flag': {\r\n      fontSize: 30,\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageItem = ({ language, onClick }) => {\r\n  const { locale, name } = language;\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.root, 'pointer')} onClick={() => onClick(language)}>\r\n      <CmtImage src={flags[locale]} />\r\n      <Box ml={3}>{name}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LanguageItem;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    '& .Cmt-card-content': {\r\n      position: 'relative',\r\n      zIndex: 1,\r\n    },\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtCard = ({ backgroundColor, backgroundImage, gradientDirection, overlay, className, children, ...cardProps }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    // Checking isValidElement is the safe way and avoids a TS error too.\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={backgroundStyles}\r\n      {...cardProps}>\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtCard.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default CmtCard;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtTitle = ({ content, ...titleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...titleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'h2',\r\n  component: 'div',\r\n  className: null,\r\n};\r\n\r\nexport default CmtTitle;\r\n","import React, { isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CmtSubTitle = ({ content, ...subTitleProps }) => {\r\n  if (!content) return null;\r\n\r\n  return isValidElement(content) ? content : <Typography {...subTitleProps}>{content}</Typography>;\r\n};\r\n\r\nCmtSubTitle.propTypes = {\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n};\r\n\r\nCmtSubTitle.defaultProps = {\r\n  content: '',\r\n  variant: 'subtitle1',\r\n  gutterBottom: true,\r\n};\r\n\r\nexport default CmtSubTitle;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headRoot: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 15,\r\n  },\r\n  headerContent: {\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\n/**\r\n * @return {null} or CmtContentHead Component\r\n */\r\nfunction CmtContentHead({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  titleStyle,\r\n  subTitleStyle,\r\n  ...restProps\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.headRoot, 'Cmt-content-head')} {...restProps}>\r\n      {avatar && isValidElement(avatar) ? (\r\n        <div className={clsx(classes.avatar, 'Cmt-avatar')}>{avatar}</div>\r\n      ) : (\r\n        icon && <div className={clsx(classes.avatar, 'Cmt-avatar')}>{icon}</div>\r\n      )}\r\n      <div className={clsx(classes.headerContent, 'Cmt-header-content')}>\r\n        {title && <CmtTitle className={clsx(titleStyle, 'Cmt-title')} content={title} {...titleProps} />}\r\n\r\n        {subTitle && <CmtSubTitle className={clsx(subTitleStyle, 'Cmt-sub-title')} content={subTitle} {...subTitleProps} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCmtContentHead.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n  titleStyle: PropTypes.string,\r\n  subTitleStyle: PropTypes.string,\r\n};\r\n\r\nCmtContentHead.defaultProps = {\r\n  icon: null,\r\n  avatar: null,\r\n  title: null,\r\n  subTitle: null,\r\n  titleStyle: null,\r\n  subTitleStyle: null,\r\n  titleProps: { variant: 'h4', component: 'div' },\r\n  subTitleProps: { variant: 'subtitle2', component: 'p', gutterBottom: false },\r\n};\r\n\r\nexport default React.memo(CmtContentHead);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst CmtDropdownMenu = ({ TriggerComponent, items, onItemClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    setMenuItems(items);\r\n  }, [items]);\r\n\r\n  const openMenu = event => {\r\n    event.stopPropagation();\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (item, selectedIndex, event) => {\r\n    event.stopPropagation();\r\n    let updatedItem = { ...item };\r\n\r\n    if (item.onClick && typeof item.onClick === 'function') {\r\n      updatedItem = item.onClick(item);\r\n    } else if (onItemClick && typeof onItemClick === 'function') {\r\n      updatedItem = onItemClick(item);\r\n    }\r\n\r\n    if (updatedItem) {\r\n      let hasChange = false;\r\n      const newMenuItems = menuItems.map((item, index) => {\r\n        if (selectedIndex === index) {\r\n          hasChange = true;\r\n          item = updatedItem;\r\n        }\r\n        return item;\r\n      });\r\n\r\n      if (hasChange) setMenuItems(newMenuItems);\r\n    }\r\n\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"pointer\">\r\n        <TriggerComponent.type {...TriggerComponent.props} onClick={openMenu} />\r\n      </div>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n        {menuItems.map((item, index) => {\r\n          return (\r\n            <MenuItem key={index} disabled={item.disabled} onClick={event => handleMenuItemClick({ ...item }, index, event)}>\r\n              {item.icon}\r\n              <div className=\"ml-2\">{item.label}</div>\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCmtDropdownMenu.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  TriggerComponent: PropTypes.element.isRequired,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nexport default CmtDropdownMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: 24,\r\n    '&.Cmt-separator': {\r\n      ...props.separatorStyles,\r\n      '& + .Cmt-card-content': {\r\n        paddingTop: 24,\r\n      },\r\n    },\r\n    '& + .Cmt-card-content': {\r\n      paddingTop: 0,\r\n    },\r\n  }),\r\n  headerAlignCenter: props => ({\r\n    paddingLeft: props.contentWidth + 12,\r\n    '& .Cmt-content-head': {\r\n      justifyContent: 'center',\r\n      '& .Cmt-header-content': {\r\n        flex: '0 0 auto',\r\n      },\r\n    },\r\n  }),\r\n  titleStyle: {\r\n    position: 'relative',\r\n  },\r\n  subTitleStyle: {\r\n    marginBottom: 0,\r\n    marginTop: 4,\r\n    fontSize: 12,\r\n    color: theme.palette.text.disabled,\r\n    letterSpacing: 0.4,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  '@keyframes showHide': {\r\n    '0%': {\r\n      animationTimingFunction: 'ease-in',\r\n      opacity: 0,\r\n      transform: 'scale(0)',\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      transform: 'scale(1)',\r\n    },\r\n  },\r\n  actionMenu: {\r\n    '& button': {\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n    },\r\n  },\r\n  actionMenuDefault: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginLeft: 10,\r\n    '& .Cmt-action-menu-hover': {\r\n      top: '50%',\r\n    },\r\n  },\r\n  actionMenuAbsolute: {\r\n    position: 'relative',\r\n    paddingTop: 40,\r\n    '& .Cmt-action-menu': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      textAlign: 'center',\r\n      transition: 'all 0.25s ease',\r\n    },\r\n  },\r\n  actionMenuHover: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    transition: 'all 0.25s ease',\r\n  },\r\n  showActionMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -20%)',\r\n  },\r\n  hideActionMenu: {\r\n    transform: 'translate(100% , -100%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n  showActionDefaultMenu: {\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n    transform: 'translate(20% , -50%)',\r\n  },\r\n  hideActionDefaultMenu: {\r\n    transform: 'translate(100% , -50%)',\r\n    animationName: '$showHide',\r\n    animationDuration: '0.25s',\r\n    animationTimingFunction: 'ease-in',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useImperativeHandle, useState, useEffect } from 'react';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nimport useStyles from './CmtCardHeader.style';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst ActionsMenu = ({ actions, actionHandler, icon }) => {\r\n  return (\r\n    <CmtDropdownMenu\r\n      TriggerComponent={<IconButton size=\"small\">{icon || <MoreVertIcon />}</IconButton>}\r\n      items={actions}\r\n      onItemClick={actionHandler}\r\n    />\r\n  );\r\n};\r\n\r\nconst CmtCardHeader = React.forwardRef(function CmtCardHeader(props, ref) {\r\n  const {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n    actions,\r\n    actionMenuClassName,\r\n    actionHandleIcon,\r\n    actionHandler,\r\n    actionsPos,\r\n    actionsShowOnHover,\r\n    backgroundColor,\r\n    gradientDirection,\r\n    separator,\r\n    alignCenter,\r\n    children,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const [showActions, setActionsVisibility] = useState(false);\r\n  const [contentWidth, setContentWidth] = useState(0);\r\n  const contentHeadProps = {\r\n    icon,\r\n    avatar,\r\n    title,\r\n    titleProps,\r\n    subTitle,\r\n    subTitleProps,\r\n  };\r\n\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator);\r\n\r\n  const classes = useStyles({ separatorStyles, contentWidth });\r\n\r\n  let showHideActionClass = showActions ? classes.showActionMenu : classes.hideActionMenu;\r\n  if (actionsPos === 'default') {\r\n    showHideActionClass = showActions ? classes.showActionDefaultMenu : classes.hideActionDefaultMenu;\r\n  }\r\n\r\n  const headerRootClasses = alignCenter\r\n    ? clsx(className, classes.headerRoot, classes.headerAlignCenter, separator.color ? 'Cmt-separator' : '')\r\n    : clsx(className, classes.headerRoot, separator.color ? 'Cmt-separator' : '');\r\n\r\n  const menuRootClasses = actionsShowOnHover\r\n    ? clsx(classes.actionMenu, classes.actionMenuHover, 'Cmt-action-menu-hover', showHideActionClass, actionMenuClassName)\r\n    : clsx(classes.actionMenu, 'Cmt-action-menu', actionMenuClassName);\r\n\r\n  const menuRootActionsClasses = actionsShowOnHover\r\n    ? actionsPos === 'default'\r\n      ? classes.actionMenuDefault\r\n      : ''\r\n    : classes.actionMenuDefault;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    onHeaderMouseEntered: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(true);\r\n    },\r\n    onHeaderMouseLeft: () => {\r\n      if (actionsShowOnHover) setActionsVisibility(false);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setContentWidth(contentRef.current ? contentRef.current.clientWidth : 0);\r\n  }, [actionsPos, actionsShowOnHover]);\r\n\r\n  return (\r\n    <div className={clsx(headerRootClasses, 'Cmt-header-root')} style={backgroundStyles} {...rest}>\r\n      {(icon || avatar || title || subTitle) && (\r\n        <CmtContentHead titleStyle={classes.titleStyle} subTitleStyle={classes.subTitleStyle} {...contentHeadProps} />\r\n      )}\r\n\r\n      {(actions.length > 0 || children) && (\r\n        <div ref={contentRef} className={clsx(menuRootActionsClasses, 'Cmt-action-default-menu')}>\r\n          {children}\r\n          {actions.length > 0 && (\r\n            <div style={{ marginLeft: '8px' }} className={menuRootClasses}>\r\n              <ActionsMenu actions={actions} actionHandler={actionHandler} icon={actionHandleIcon} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nCmtCardHeader.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actions: PropTypes.array, //example: [{label: \"Close\", icon: \"icon-slug\", onClick: (func optional), ...}, ...]\r\n  actionMenuClassName: PropTypes.string,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionsPos: PropTypes.oneOf(['default', 'top-corner']),\r\n  actionsShowOnHover: PropTypes.bool,\r\n  actionHandler: PropTypes.func,\r\n  alignCenter: PropTypes.bool,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtCardHeader.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  actions: [],\r\n  actionsPos: 'default',\r\n  actionsShowOnHover: false,\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n  alignCenter: false,\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n  className: '',\r\n};\r\n\r\nexport default CmtCardHeader;\r\n","import React, { useContext } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { CircularProgress, makeStyles } from '@material-ui/core';\r\nimport SidebarThemeContext from '../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  listFooterLoaderRoot: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: 'center',\r\n    padding: 8,\r\n    borderTop: props => `1px solid ${props.sidebarTheme.borderColor}`,\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst ListFooter = ({ loading, footerText }) => {\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  return loading ? (\r\n    <div className={classes.listFooterLoaderRoot}>\r\n      <CircularProgress size={16} />\r\n      <span className=\"ml-2\">Loading...</span>\r\n    </div>\r\n  ) : (\r\n    <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n      <p>{footerText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nListFooter.prototype = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nListFooter.defaultProps = {\r\n  loading: false,\r\n};\r\n\r\nexport default ListFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  return null;\r\n};\r\n\r\nconst ListView = ({ renderRow, onEndReached, data, ListFooterComponent, ListEmptyComponent, ...rest }) => {\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <Box {...rest}>\r\n      {data.length > 0 ? data.map((item, index) => renderRow(item, index)) : getEmptyContainer(ListEmptyComponent)}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n\r\nListView.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\n\r\nListView.defaultProps = {\r\n  data: [],\r\n  onEndReached: () => {},\r\n};\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListFooter from './ListFooter';\r\nimport ListView from './ListView';\r\n\r\nconst CmtList = ({ footerProps, ...props }) => {\r\n  return (\r\n    <ListView\r\n      {...props}\r\n      ListFooterComponent={footerProps && <ListFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CmtList;\r\n\r\nCmtList.propTypes = {\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\nCmtList.defaultProps = {\r\n  data: [],\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { IconButton, Popover, useTheme } from '@material-ui/core';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport LanguageItem from './LanguageItem';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { flags, languageData } from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 14,\r\n      paddingBottom: 14,\r\n    },\r\n  },\r\n  perfectScrollbarLanguage: {\r\n    height: 324,\r\n  },\r\n  menuItemRoot: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 205,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LanguageSwitcher = () => {\r\n  const classes = useStyles();\r\n  const { locale, setLocale } = useContext(AppContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'language' : undefined;\r\n\r\n  const switchLanguage = item => {\r\n    window.localStorage.setItem('language', item.languageId);\r\n    setLocale(item);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem('language') !== null) {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === window.localStorage.getItem('language')) {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < languageData.length; i++) {\r\n        if (languageData[i].languageId === 'english') {\r\n          setLocale(languageData[i]);\r\n        }\r\n      }\r\n    }\r\n  }, [setLocale]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton size=\"small\" onClick={handleClick} data-tut=\"reactour__localization\">\r\n        <CmtImage src={flags[locale.locale]} />\r\n      </IconButton>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Language\"\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <PerfectScrollbar className={classes.perfectScrollbarLanguage}>\r\n            <CmtList\r\n              data={languageData}\r\n              renderRow={(item, index) => <LanguageItem key={index} language={item} onClick={switchLanguage} />}\r\n            />\r\n          </PerfectScrollbar>\r\n        </CmtCard>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React from 'react';\r\nimport { CardContent, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: () => ({\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardContent = ({ children, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardContent className={clsx(classes.root, 'Cmt-card-content', className)} {...rest}>\r\n      {children}\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default CmtCardContent;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, makeStyles, withWidth } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  gridContainer: {\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  columnRow: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: `-${props.itemPadding / 2}px`,\r\n  }),\r\n  columnCount: props => ({\r\n    flexGrow: 0,\r\n    maxWidth: `${100 / props.displayColumn}%`,\r\n    flexBasis: `${100 / props.displayColumn}%`,\r\n    padding: `${props.itemPadding / 2}px`,\r\n    boxSizing: 'border-box',\r\n  }),\r\n}));\r\n\r\nconst getColumnCount = (responsive, width, column) => {\r\n  if (responsive) {\r\n    if (width === 'xs') {\r\n      return responsive.xs || column;\r\n    } else if (width === 'sm') {\r\n      return responsive.sm || responsive.xs || column;\r\n    } else if (width === 'md') {\r\n      return responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'lg') {\r\n      return responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    } else if (width === 'xl') {\r\n      return responsive.xl || responsive.lg || responsive.md || responsive.sm || responsive.xs || column;\r\n    }\r\n  } else {\r\n    return column;\r\n  }\r\n};\r\n\r\nconst getEmptyContainer = ListEmptyComponent => {\r\n  if (ListEmptyComponent) {\r\n    return React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : <ListEmptyComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getFooterContainer = ListFooterComponent => {\r\n  if (ListFooterComponent) {\r\n    return React.isValidElement(ListFooterComponent) ? ListFooterComponent : <ListFooterComponent />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst GridView = ({\r\n  width,\r\n  column,\r\n  responsive,\r\n  itemPadding,\r\n  renderRow,\r\n  onEndReached,\r\n  data,\r\n  ListFooterComponent,\r\n  ListEmptyComponent,\r\n  ...rest\r\n}) => {\r\n  const [displayColumn, setDisplayColumn] = useState(column);\r\n  const classes = useStyles({ displayColumn, itemPadding });\r\n\r\n  if (!onEndReached) {\r\n    onEndReached = () => {};\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisplayColumn(getColumnCount(responsive, width, column));\r\n  }, [width, column, responsive]);\r\n\r\n  useBottomScrollListener(onEndReached, 200);\r\n\r\n  return (\r\n    <div className={classes.gridContainer}>\r\n      <Box className={clsx(classes.columnRow, 'Cmt-column-row')} {...rest}>\r\n        {data.length > 0\r\n          ? data.map((item, index) => (\r\n              <div key={index} className={clsx(classes.columnCount, 'Cmt-column-count')}>\r\n                {renderRow(item, index)}\r\n              </div>\r\n            ))\r\n          : null}\r\n      </Box>\r\n      {data.length === 0 ? getEmptyContainer(ListEmptyComponent) : null}\r\n      {getFooterContainer(ListFooterComponent)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(GridView);\r\nGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  responsive: PropTypes.object,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n};\r\nGridView.defaultProps = {\r\n  data: [],\r\n  itemPadding: 0,\r\n  column: 3,\r\n};\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listFooterRoot: {\r\n    padding: 10,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  footerWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '8px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst GridFooter = ({ loading, footerText }) => {\r\n  const classes = useStyles();\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.footerWrapper}>\r\n        <CircularProgress size={16} />\r\n        <span className=\"ml-2\">Loading...</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={clsx(classes.listFooterRoot, 'Cmt-list-footer')}>\r\n        <p>{footerText}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nGridFooter.propTypes = {\r\n  loading: PropTypes.bool,\r\n  footerText: PropTypes.string,\r\n};\r\n\r\nGridFooter.defaultProps = {\r\n  loading: false,\r\n  footerText: '',\r\n};\r\n\r\nexport default GridFooter;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GridView from './GridView';\r\nimport GridFooter from './GridFooter';\r\n\r\nconst CmtGridView = ({ column, itemPadding, ListEmptyComponent, data, onEndReached, renderRow, footerProps, ...rest }) => {\r\n  return (\r\n    <GridView\r\n      {...{\r\n        column,\r\n        itemPadding,\r\n        ListEmptyComponent,\r\n        data,\r\n        onEndReached,\r\n        renderRow,\r\n      }}\r\n      {...rest}\r\n      ListFooterComponent={footerProps && <GridFooter loading={footerProps.loading} footerText={footerProps.footerText} />}\r\n    />\r\n  );\r\n};\r\n\r\nCmtGridView.propTypes = {\r\n  column: PropTypes.number,\r\n  itemPadding: PropTypes.number,\r\n  ListEmptyComponent: PropTypes.element,\r\n  ListFooterComponent: PropTypes.element,\r\n  data: PropTypes.array.isRequired,\r\n  onEndReached: PropTypes.func,\r\n  renderRow: PropTypes.func,\r\n  footerProps: PropTypes.object,\r\n};\r\n\r\nCmtGridView.defaultProps = {\r\n  itemPadding: 0,\r\n  column: 3,\r\n  data: [],\r\n};\r\n\r\nexport default CmtGridView;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { amber, blue, brown, deepOrange, green, grey, purple, red, yellow } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n  primary: {\r\n    color: theme.palette.getContrastText(theme.palette.primary.main),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  secondary: {\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  amber: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: amber[500],\r\n  },\r\n  brown: {\r\n    color: '#ffffff',\r\n    backgroundColor: brown[500],\r\n  },\r\n  red: {\r\n    color: '#ffffff',\r\n    backgroundColor: red[500],\r\n  },\r\n  green: {\r\n    color: '#ffffff',\r\n    backgroundColor: green[500],\r\n  },\r\n  blue: {\r\n    color: '#ffffff',\r\n    backgroundColor: blue[500],\r\n  },\r\n  yellow: {\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    backgroundColor: yellow[500],\r\n  },\r\n  grey: {\r\n    color: '#ffffff',\r\n    backgroundColor: grey[400],\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: purple[500],\r\n  },\r\n  customSize: props => ({\r\n    height: props.size,\r\n    width: props.size,\r\n  }),\r\n  small: {\r\n    height: 40,\r\n    width: 40,\r\n  },\r\n  medium: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n  large: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { componentColors } from '../CmtHelpers/JssHelper';\r\nimport useStyles from './index.style';\r\n\r\nconst colorOptions = [...componentColors, 'random'];\r\n\r\nconst getRandomColor = () => {\r\n  return colorOptions[Math.floor(Math.random() * 11)];\r\n};\r\n\r\nconst CmtAvatar = React.forwardRef(({ src, alt, className, color, size, phCharLength, children, ...rest }, ref) => {\r\n  const classes = useStyles({ size: typeof size === 'number' ? size : 0 });\r\n  const colorClass = color === 'random' ? classes[getRandomColor()] : classes[color];\r\n  const sizeClass = typeof size === 'number' ? classes.customSize : classes[size];\r\n\r\n  const classNames = clsx(classes.root, colorClass, 'Cmt-avatar-size', sizeClass, className && className);\r\n\r\n  const placeHolderChar = alt && phCharLength > 0 ? alt.substr(0, phCharLength).toUpperCase() : null;\r\n\r\n  return (\r\n    <Avatar ref={ref} className={classNames} src={src} alt={alt} {...rest}>\r\n      {!src && !children && alt ? placeHolderChar : children}\r\n    </Avatar>\r\n  );\r\n});\r\n\r\nCmtAvatar.propTypes = {\r\n  color: PropTypes.oneOf(colorOptions),\r\n  phCharLength: PropTypes.number,\r\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n};\r\n\r\nCmtAvatar.defaultProps = {\r\n  color: 'grey',\r\n  phCharLength: 1,\r\n  size: 'medium',\r\n};\r\n\r\nexport default CmtAvatar;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CmtCard from '../../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport CmtGridView from '../../../../../@coremat/CmtGridView';\r\nimport CmtAvatar from '../../../../../@coremat/CmtAvatar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst applications = [\r\n  {\r\n    name: 'Email',\r\n    icon: <EmailIcon style={{ color: '#0795F4' }} />,\r\n    bgColor: '#CDEAFD',\r\n    path: '/apps/mail',\r\n  },\r\n  {\r\n    name: 'Task',\r\n    icon: <CheckCircleIcon style={{ color: '#FF8C00' }} />,\r\n    bgColor: '#FFE8CC',\r\n    path: '/apps/to-do',\r\n  },\r\n  {\r\n    name: 'Contacts',\r\n    icon: <ContactMailIcon style={{ color: '#8DCD03' }} />,\r\n    bgColor: '#E8F5CD',\r\n    path: '/apps/contact',\r\n  },\r\n  {\r\n    name: 'Chating',\r\n    icon: <ChatIcon style={{ color: '#6200EE' }} />,\r\n    bgColor: '#E0CCFC',\r\n    path: '/apps/chat',\r\n  },\r\n];\r\n\r\nconst appItem = (item, index, onClick) => {\r\n  return (\r\n    <Box\r\n      key={index}\r\n      py={2}\r\n      className=\"pointer\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      onClick={() => onClick(item.path)}>\r\n      <CmtAvatar style={{ backgroundColor: item.bgColor }} size={62}>\r\n        {item.icon}\r\n      </CmtAvatar>\r\n      <Box mt={5} fontSize={16} fontWeight=\"bold\" color=\"#666666\">\r\n        {item.name}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst AppsMenu = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  const onClickApp = path => {\r\n    history.push(path);\r\n    onClosePopOver();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Applications\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <AppsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Applications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {applications.length > 0 ? (\r\n              <CmtGridView\r\n                itemPadding={24}\r\n                column={2}\r\n                data={applications}\r\n                renderRow={(item, index) => appItem(item, index, onClickApp)}\r\n              />\r\n            ) : (\r\n              <Typography variant=\"body2\">No applications found</Typography>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppsMenu;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mediaObject: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n  },\r\n  mediaImageTop: {\r\n    alignSelf: 'flex-start',\r\n    marginTop: 12,\r\n  },\r\n  mediaImageCenter: {\r\n    alignSelf: 'center',\r\n  },\r\n  mediaImageBottom: {\r\n    marginBottom: 12,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rootAvatar: {\r\n    height: 60,\r\n    width: 60,\r\n  },\r\n  mediaBody: {\r\n    flex: '1 1 0%',\r\n  },\r\n  mediaHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  mediaHeaderContent: {\r\n    flex: 1,\r\n  },\r\n  mediaActions: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  mediaFooter: {\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { isValidElement } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport { CmtSubTitle, CmtTitle } from '../CmtTypography';\r\nimport useStyles from './index.style';\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst CmtMediaObject = ({\r\n  avatar,\r\n  avatarPos,\r\n  avatarProps,\r\n  onBodyClick,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  actionsComponent,\r\n  content,\r\n  contentProps,\r\n  footerComponent,\r\n  footerComponentProps,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.mediaObject, className, 'Cmt-media-object')} {...rest}>\r\n      {avatar && (\r\n        <div\r\n          className={clsx(\r\n            {\r\n              [classes.mediaImageTop]: avatarPos === 'top',\r\n              [classes.mediaImageCenter]: avatarPos === 'center',\r\n              [classes.mediaImageBottom]: avatarPos === 'bottom',\r\n            },\r\n            'Cmt-media-image',\r\n          )}>\r\n          <Box mr={3} clone>\r\n            {isValidElement(avatar) ? (\r\n              avatar\r\n            ) : (\r\n              <CmtAvatar className={clsx(classes.rootAvatar, 'Cmt-avatar')} src={avatar} {...avatarProps} />\r\n            )}\r\n          </Box>\r\n        </div>\r\n      )}\r\n      <div className={clsx(classes.mediaBody, 'Cmt-media-body')} onClick={onBodyClick}>\r\n        <div className={clsx(classes.mediaHeader, 'Cmt-media-header')}>\r\n          <div className={clsx(classes.mediaHeaderContent, 'Cmt-media-header-content')}>\r\n            {title && <CmtTitle content={title} {...titleProps} />}\r\n            {subTitle && <CmtSubTitle content={subTitle} {...subTitleProps} />}\r\n          </div>\r\n          {actionsComponent && (\r\n            <div className={clsx(classes.mediaActions, 'Cmt-media-actions', 'ml-3')}>{actionsComponent}</div>\r\n          )}\r\n        </div>\r\n        {content && (\r\n          <div className=\"mb-3\">\r\n            {typeof content === 'string' ? <Typography {...contentProps}>{content}</Typography> : content}\r\n          </div>\r\n        )}\r\n        {children}\r\n      </div>\r\n      {footerComponent && (\r\n        <Box ml={3} className={clsx(classes.mediaFooter, 'Cmt-media-footer')} {...footerComponentProps}>\r\n          {footerComponent}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtMediaObject.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarPos: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n  avatarProps: PropTypes.object,\r\n  onBodyClick: PropTypes.func,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  actionsComponent: PropTypes.element,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  contentProps: PropTypes.object,\r\n  footerComponent: PropTypes.element,\r\n  footerComponentProps: PropTypes.object,\r\n  className: PropTypes.func,\r\n};\r\n\r\nCmtMediaObject.defaultProps = {\r\n  avatar: '',\r\n  avatarPos: 'top',\r\n  title: '',\r\n  titleProps: {\r\n    variant: 'h3',\r\n    component: 'div',\r\n  },\r\n  subTitle: '',\r\n  subTitleProps: {\r\n    component: 'span',\r\n  },\r\n  content: '',\r\n  contentProps: {\r\n    component: 'div',\r\n    variant: 'body2',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtMediaObject);\r\n","import moment from 'moment';\r\n\r\nexport const getTodayDate = (format = 'DD.MM.YYYY') => {\r\n  return moment().format(format);\r\n};\r\n\r\nexport const getYesterdayDate = () => {\r\n  return moment()\r\n    .subtract(1, 'day')\r\n    .format('DD.MM.YYYY');\r\n};\r\n\r\nexport const timeFromNow = date => {\r\n  const timestamp = moment(date).format('X');\r\n  const newDate = moment.unix(timestamp);\r\n  return moment(newDate).fromNow();\r\n};\r\n\r\nexport const isToday = date => {\r\n  return moment().isSame(date, 'day');\r\n};\r\n\r\nexport const getNewDate = date_ => {\r\n  var date = new Date(date_);\r\n  var year = date.getFullYear();\r\n  var month = date.getMonth() + 1;\r\n  var dt = date.getDate();\r\n\r\n  if (dt < 10) {\r\n    dt = '0' + dt;\r\n  }\r\n  if (month < 10) {\r\n    month = '0' + month;\r\n  }\r\n\r\n  return dt + '-' + month + '-' + year;\r\n};\r\n\r\nexport const getDateElements = date => {\r\n  const dateString = moment(date).format('dddd, MMMM DD YYYY, hh:mm A');\r\n  const dateSections = dateString.split(',');\r\n  const day = dateSections[0];\r\n  const time = dateSections[2];\r\n  const datePart = dateSections[1].trim().split(' ');\r\n  return {\r\n    day,\r\n    time,\r\n    date: {\r\n      dateString: dateSections[1],\r\n      month: datePart[0],\r\n      date: datePart[1],\r\n      year: datePart[2],\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTime = date => {\r\n  const dateObj = moment(date, 'dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(dateObj).format('LT');\r\n};\r\n\r\nexport const isDatesSame = (dateA, dateB) => {\r\n  return moment(dateA).isSame(dateB, 'day');\r\n};\r\n\r\nexport const isDateAfter = date => {\r\n  const todayDate = getTodayDate('dddd, MMMM DD YYYY, hh:mm a');\r\n  return moment(todayDate).isAfter(date);\r\n};\r\n\r\nexport const getDateinDesiredFormat = (date, format) => {\r\n  return moment(date).format(format);\r\n};\r\n\r\nexport const makeJSDateObject = date => {\r\n  if (date) {\r\n    return new Date(date.getTime());\r\n  }\r\n  return date;\r\n};\r\n\r\n/**\r\n * Get Formatted Date\r\n * @param date\r\n * @param format\r\n * @returns {string}\r\n */\r\nexport const getFormattedDate = (date, format = 'YYYY-MM-DD') => {\r\n  if (moment(date, 'YYYY-MM-DD').isValid()) {\r\n    return moment(date).format(format);\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\n/**\r\n * Check Is dateTime of Tomorrow\r\n * @param inputDateTime\r\n * @returns {boolean}\r\n */\r\nexport const isTomorrow = inputDateTime => {\r\n  const tomorrow = moment()\r\n    .add(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(tomorrow, 'day');\r\n};\r\n\r\n/**\r\n * Check Is dateTime of Yesterday\r\n * @param inputDateTime\r\n * @returns {boolean}\r\n */\r\nexport const isYesterday = inputDateTime => {\r\n  const yesterday = moment()\r\n    .subtract(1, 'days')\r\n    .format('YYYY-MM-DD');\r\n\r\n  return moment(inputDateTime).isSame(yesterday, 'day');\r\n};\r\n\r\n/**\r\n * Get Custom Date Time\r\n * @param value\r\n * @param unit\r\n * @param format\r\n * @returns {string}\r\n */\r\nexport const getCustomDateTime = (value = 0, unit = 'days', format = 'YYYY-MM-DD') => {\r\n  if (value === 0) {\r\n    return moment().format(format);\r\n  } else {\r\n    return moment()\r\n      .add(value, unit)\r\n      .format(format);\r\n  }\r\n};\r\n\r\n/**\r\n * Get Custom Date object\r\n * @param value\r\n * @param unit\r\n * @returns Date object\r\n */\r\nexport const getCustomDateObject = (value = 0, unit = 'days') => {\r\n  if (value === 0) {\r\n    return moment();\r\n  } else {\r\n    return moment().add(value, unit);\r\n  }\r\n};\r\n\r\nexport const getDateText = date => {\r\n  if (isToday(date)) {\r\n    return 'Today';\r\n  } else if (isYesterday(date)) {\r\n    return 'Yesterday';\r\n  } else if (isTomorrow(date)) {\r\n    return 'Tomorrow';\r\n  } else {\r\n    return date;\r\n  }\r\n};\r\n\r\nexport const getTimeDiffString = (date, format = 'DD MMM, YYYY', suffix = '') => {\r\n  const postDate = moment(date, 'ddd MMM DD YYYY kk:mm:ss Z');\r\n  const currentDate = moment();\r\n  const duration = moment.duration(currentDate.diff(postDate));\r\n  const minutes = duration.asMinutes() | 0;\r\n  const hours = duration.asHours() | 0;\r\n\r\n  switch (true) {\r\n    case minutes === 0:\r\n      return 'Just now';\r\n    case minutes < 60:\r\n      return `${minutes} min ${suffix}`;\r\n    case hours < 24:\r\n      return `${hours} hours ${suffix}`;\r\n    default:\r\n      return postDate.format(format);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport CakeIcon from '@material-ui/icons/Cake';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { fade } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    marginBottom: 6,\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nconst icons = {\r\n  POSTING: <MessageIcon style={{ color: '#836AFF' }} />,\r\n  SHARED_POST: <ShareIcon style={{ color: '#0795F4' }} />,\r\n  INVITATION: <EmailIcon style={{ color: '#00C4B4' }} />,\r\n  BIRTHDAY: <CakeIcon style={{ color: '#EF933C' }} />,\r\n};\r\n\r\nconst getPostContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has recently posted an\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      {item.metaData.post.type}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getSharedContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"primary.main\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has shared\r\n    </Box>\r\n    <Box component=\"span\" ml={1} color=\"primary.main\">\r\n      {`${item.metaData.post.owner.name}'s`}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      post.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getBirthdayContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has birthday today.\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst getInvitationContent = (item, classes) => (\r\n  <Typography component=\"div\" variant=\"h5\" className={classes.titleRoot}>\r\n    <Box component=\"span\" color=\"blue\">\r\n      {item.metaData.user.name}\r\n    </Box>\r\n    <Box component=\"span\" ml={1}>\r\n      has sent you a group invitation for\r\n    </Box>\r\n    <Box component=\"span\" color=\"blue\" ml={1}>\r\n      {item.metaData.group.name}\r\n    </Box>\r\n  </Typography>\r\n);\r\n\r\nconst NotificationItem = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const getTitle = (item, classes) => {\r\n    switch (item.type) {\r\n      case 'POSTING':\r\n        return getPostContent(item, classes);\r\n      case 'SHARED_POST':\r\n        return getSharedContent(item, classes);\r\n      case 'INVITATION':\r\n        return getInvitationContent(item, classes);\r\n      case 'BIRTHDAY':\r\n        return getBirthdayContent(item, classes);\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getSubTitle = () => (\r\n    <Box display=\"flex\" alignItems=\"center\" fontSize={12} color=\"text.disabled\">\r\n      <Box fontSize={16} clone>\r\n        {icons[item.type]}\r\n      </Box>\r\n      <Box ml={2}>{getDateElements(item.date).time}</Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={getTitle(item, classes)}\r\n        subTitle={getSubTitle()}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotificationItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, makeStyles, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\n\r\nimport NotificationItem from './NotificationItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &.active': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst headerNotifications = [];\r\n\r\nconst HeaderNotifications = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [counter, setCounter] = React.useState(5);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCounter(0);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <Box pr={2}>\r\n      <Tooltip title=\"Notifications\">\r\n        <IconButton\r\n          onClick={onOpenPopOver}\r\n          className={clsx(classes.iconRoot, 'Cmt-appIcon', {\r\n            active: counter > 0,\r\n          })}>\r\n          <Badge badgeContent={counter} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Notifications\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {headerNotifications.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList\r\n                  data={headerNotifications}\r\n                  renderRow={(item, index) => <NotificationItem key={index} item={item} />}\r\n                />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No notifications found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderNotifications;\r\n","import React from 'react';\r\nimport { Box, fade } from '@material-ui/core';\r\nimport CmtMediaObject from '../../../../../../@coremat/CmtMediaObject';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport { getDateElements } from '../../../../../utils/dateHelper';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  feedItemRoot: {\r\n    padding: '10px 0',\r\n    position: 'relative',\r\n    borderBottom: `1px solid ${fade(theme.palette.common.dark, 0.035)}`,\r\n    '& .Cmt-media-object': {\r\n      alignItems: 'center',\r\n    },\r\n    '& .Cmt-media-image': {\r\n      alignSelf: 'flex-start',\r\n      width: 56,\r\n    },\r\n    '& .Cmt-media-body': {\r\n      width: 'calc(100% - 56px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-header-content': {\r\n      width: 'calc(100% - 75px)',\r\n      flex: 'inherit',\r\n    },\r\n    '& .Cmt-media-actions': {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.25,\r\n    fontSize: 14,\r\n    color: theme.palette.primary.main,\r\n    cursor: 'pointer',\r\n  },\r\n  subTitleRoot: {\r\n    letterSpacing: 0.4,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst MessageItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.feedItemRoot}>\r\n      <CmtMediaObject\r\n        avatarPos=\"center\"\r\n        avatar={<CmtAvatar size={40} src={item.user.profile_pic} alt={item.user.name} />}\r\n        title={item.user.name}\r\n        titleProps={{ className: classes.titleRoot }}\r\n        subTitle={item.message}\r\n        subTitleProps={{ className: classes.subTitleRoot }}\r\n        actionsComponent={\r\n          <Box fontSize={12} color=\"text.disabled\">\r\n            {getDateElements(item.date).time}\r\n          </Box>\r\n        }>\r\n        <Box display=\"flex\" alignItems=\"center\" mt={2} fontSize={12} color=\"text.secondary\">\r\n          <Box display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <ReplyIcon />\r\n            </Box>\r\n            <Box ml={2}>Reply</Box>\r\n          </Box>\r\n          <Box ml={4} display=\"flex\" alignItems=\"center\" className=\"pointer\">\r\n            <Box fontSize={16} clone>\r\n              <CheckCircleOutlineIcon />\r\n            </Box>\r\n            <Box ml={2}>Read</Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtMediaObject>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\nimport { Box, IconButton, Popover, Tooltip, useTheme } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport CmtCardHeader from '../../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtCard from '../../../../../../@coremat/CmtCard';\r\nimport CmtList from '../../../../../../@coremat/CmtList';\r\nimport MessageItem from './MessageItem';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport clsx from 'clsx';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    '& .Cmt-header-root': {\r\n      paddingTop: 4,\r\n      paddingBottom: 4,\r\n    },\r\n    '& .Cmt-card-content': {\r\n      padding: '0 0 16px !important',\r\n    },\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  iconRoot: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: 300,\r\n    padding: 16,\r\n  },\r\n  popoverRoot: {\r\n    '& .MuiPopover-paper': {\r\n      width: 375,\r\n    },\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  {\r\n    label: 'More Detail',\r\n  },\r\n  {\r\n    label: 'Close',\r\n  },\r\n];\r\n\r\nconst messages = [];\r\nconst HeaderMessages = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const onOpenPopOver = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const onClosePopOver = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Messages\">\r\n        <IconButton onClick={onOpenPopOver} className={clsx(classes.iconRoot, 'Cmt-appIcon')}>\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popover\r\n        className={classes.popoverRoot}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={onClosePopOver}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader\r\n            title=\"Messages\"\r\n            actionsPos=\"top-corner\"\r\n            actions={actions}\r\n            separator={{\r\n              color: theme.palette.borderColor.dark,\r\n              borderWidth: 1,\r\n              borderStyle: 'solid',\r\n            }}\r\n          />\r\n          <CmtCardContent>\r\n            {messages.length > 0 ? (\r\n              <PerfectScrollbar className={classes.scrollbarRoot}>\r\n                <CmtList data={messages} renderRow={(item, index) => <MessageItem key={index} item={item} />} />\r\n              </PerfectScrollbar>\r\n            ) : (\r\n              <Box p={6}>\r\n                <Typography variant=\"body2\">No messages found</Typography>\r\n              </Box>\r\n            )}\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderMessages;\r\n","import React from 'react';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst Logo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n  const logoSymbolUrl = color === 'white' ? '/images/logo2.jpg' : '/images/logo2.jpg';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <Hidden xsDown>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <NavLink to=\"/\">\r\n          <CmtImage src={logoSymbolUrl} alt=\"logo\" />\r\n        </NavLink>\r\n      </Hidden>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: props => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    marginLeft: props.align === 'right' ? 'auto' : 0,\r\n    '&:hover': {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n  }),\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&.right': {\r\n      left: 'auto',\r\n      right: 0,\r\n      '& + $inputRoot $inputInput': {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n      },\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(2, 2, 2, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(6)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: 162,\r\n    height: 35,\r\n    borderRadius: 4,\r\n    boxSizing: 'border-box',\r\n    '&:focus': {\r\n      backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n      width: 235,\r\n    },\r\n  },\r\n  searchIconBox: {\r\n    position: 'relative',\r\n    '& $inputInput': {\r\n      width: 35,\r\n      borderRadius: 4,\r\n      paddingLeft: 27,\r\n      '&:focus': {\r\n        width: 150,\r\n        borderRadius: 4,\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: 235,\r\n        },\r\n      },\r\n    },\r\n    '& $searchIcon': {\r\n      paddingLeft: 6,\r\n      paddingRight: 6,\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useStyles from './index.style';\r\n\r\nconst CmtSearch = ({\r\n  border,\r\n  placeholder,\r\n  iconPosition,\r\n  align,\r\n  onlyIcon,\r\n  containerStyle,\r\n  inputStyle,\r\n  iconStyle,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ align });\r\n  const inputBaseStyle = {\r\n    border: border ? '1px solid' : '0 none',\r\n    ...inputStyle,\r\n  };\r\n  const inputBaseClasses = {\r\n    root: clsx(classes.inputRoot, 'CmtSearch-input-root'),\r\n    input: clsx(classes.inputInput, 'CmtSearch-input'),\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'CmtSearch-root', className)} style={containerStyle}>\r\n      <div className={clsx(classes.search, onlyIcon ? classes.searchIconBox : null)}>\r\n        <div\r\n          className={clsx(classes.searchIcon, 'CmtSearch-icon-wrapper', {\r\n            right: iconPosition === 'right',\r\n          })}\r\n          style={iconStyle}>\r\n          <SearchIcon style={iconStyle} />\r\n        </div>\r\n        <InputBase\r\n          placeholder={placeholder || 'Search…'}\r\n          style={inputBaseStyle}\r\n          classes={inputBaseClasses}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmtSearch;\r\n\r\nCmtSearch.prototype = {\r\n  border: PropTypes.bool,\r\n  iconPosition: PropTypes.string,\r\n  align: PropTypes.string,\r\n  onlyIcon: PropTypes.bool,\r\n  containerStyle: PropTypes.object,\r\n  inputStyle: PropTypes.object,\r\n  iconStyle: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtSearch.defaultProps = {\r\n  border: true,\r\n  containerStyle: {},\r\n  inputStyle: {\r\n    backgroundColor: 'transparent',\r\n    borderColor: 'grey',\r\n    color: 'grey',\r\n    borderRadius: 4,\r\n  },\r\n  iconPosition: 'left',\r\n  onlyIcon: false,\r\n  align: 'left',\r\n  iconStyle: {\r\n    color: 'grey',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Popover } from '@material-ui/core';\r\nimport CmtSearch from '../../../../@coremat/CmtSearch';\r\n\r\nconst SearchPopover = ({ iconClassName, popoverClassName }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleOpenSearchBar = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseSearchBar = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton className={iconClassName} onClick={handleOpenSearchBar}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <Popover\r\n        className={popoverClassName}\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleCloseSearchBar}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}>\r\n        <CmtSearch />\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPopover;\r\n","import React from 'react';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Box, InputBase } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport LanguageSwitcher from '../LanguageSwitcher';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AppsMenu from './AppsMenu';\r\nimport HeaderNotifications from './HeaderNotifications';\r\nimport HeaderMessages from './HeaderMessages';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Logo from '../Logo';\r\nimport SearchPopover from '../SearchPopover';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      minHeight: 72,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 24,\r\n      paddingRight: 24,\r\n    },\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 30,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n      color: alpha(theme.palette.common.white, 0.7),\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.58),\r\n        color: alpha(theme.palette.common.white, 0.7),\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    borderLeft: `solid 1px ${alpha(theme.palette.common.dark, 0.15)}`,\r\n    minHeight: 72,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minHeight: 64,\r\n    },\r\n  },\r\n  iconBtn: {\r\n    color: alpha(theme.palette.common.white, 0.38),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo ml={2} color=\"white\" />\r\n      <Box flex={1} />\r\n      <Hidden smDown>\r\n        <Box pr={3} className={classes.searchRoot}>\r\n          <InputBase placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n          <SearchIcon />\r\n        </Box>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <SearchPopover iconClassName={classes.iconBtn} />\r\n      </Hidden>\r\n      <AppsMenu />\r\n      <HeaderMessages />\r\n      <HeaderNotifications />\r\n      <Box className={classes.langRoot}>\r\n        <LanguageSwitcher />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'relative',\r\n    zIndex: 1103,\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '.Cmt-miniLayout &': {\r\n      width: props => props.miniSidebarWidth,\r\n      '&:hover': {\r\n        width: props => props.sidebarWidth,\r\n      },\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  actionSidebarWrapper: {\r\n    display: 'flex',\r\n    width: props => props.sidebarWidth + props.actionSidebarWidth,\r\n    transition: 'all 0.3s ease',\r\n\r\n    '& .actionSidebar': {\r\n      width: props => props.actionSidebarWidth,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Drawer, makeStyles } from '@material-ui/core';\r\n\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  drawerContent: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 1,\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtDrawer = ({ backgroundColor, backgroundImage, gradientDirection, children, overlay, ...rest }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer {...rest}>\r\n      <div className={clsx(classes.drawerContainer, 'Cmt-Drawer-container')} style={backgroundStyles}>\r\n        <div className={clsx(classes.drawerContent, 'Cmt-Drawer-content')}>{children}</div>\r\n        {overlay.colors && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyles} />}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nCmtDrawer.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtDrawer.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n};\r\n\r\nexport default React.memo(CmtDrawer);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport useStyles from './Sidebar.style';\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst CmtSidebarContent = ({ children, classes }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtDrawerContent = ({ children, classes }) => {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n  return (\r\n    <CmtDrawer\r\n      variant=\"temporary\"\r\n      open={isSidebarOpen}\r\n      onClose={() => setSidebarOpen(false)}\r\n      classes={{\r\n        paper: 'Cmt-drawer-sidebar',\r\n      }}>\r\n      <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = ({ children, actionBar }) => {\r\n  const { drawerBreakPoint, sidebarWidth, miniSidebarWidth, actionSidebarWidth, sidebarType } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const hasDrawer = sidebarType === 'drawer' || matches;\r\n\r\n  const classes = useStyles({\r\n    sidebarWidth,\r\n    miniSidebarWidth,\r\n    actionSidebarWidth,\r\n    sidebarTheme,\r\n  });\r\n\r\n  if (hasDrawer) {\r\n    return (\r\n      <React.Fragment>\r\n        {actionBar}\r\n        <CmtDrawerContent classes={classes}>{children}</CmtDrawerContent>\r\n      </React.Fragment>\r\n    );\r\n  } else if (actionBar) {\r\n    return (\r\n      <div className={clsx(classes.actionSidebarWrapper, 'Cmt-actionSidebarWrapper')}>\r\n        {actionBar}\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useContext } from 'react';\r\nimport { MenuItem, MenuList, Paper, Popover, Typography } from '@material-ui/core';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SidebarThemeContext from '../../../../@coremat/CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '25px 24px 24px 24px',\r\n    borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n  },\r\n  userInfo: {\r\n    paddingTop: 56,\r\n    transition: 'all 0.1s ease',\r\n    height: 75,\r\n    opacity: 1,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      height: 0,\r\n      paddingTop: 0,\r\n      opacity: 0,\r\n      transition: 'all 0.3s ease',\r\n    },\r\n  },\r\n  userTitle: {\r\n    color: props => props.sidebarTheme.textDarkColor,\r\n    marginBottom: 8,\r\n  },\r\n  userSubTitle: {\r\n    fontSize: 14,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    letterSpacing: 0.25,\r\n  },\r\n}));\r\n\r\nconst SidebarHeader = () => {\r\n  let history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n  const dispatch = useDispatch();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const onLogoutClick = () => {\r\n    handlePopoverClose();\r\n    dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n    history.push('/signin');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} style={{ paddingTop: '50px' }}>\r\n      <CmtAvatar src={'https://via.placeholder.com/150'} alt=\"User Avatar\" />\r\n      <div className={classes.userInfo} onClick={handlePopoverOpen}>\r\n        <div\r\n          className=\"pointer\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'flex-end',\r\n          }}>\r\n          <div className=\"mr-2\">\r\n            <Typography className={classes.userTitle} component=\"h3\" variant=\"h6\">\r\n              Robert Johnson\r\n            </Typography>\r\n            <Typography className={classes.userSubTitle}>robert.johnson@gmail.com</Typography>\r\n          </div>\r\n          <ArrowDropDownIcon />\r\n        </div>\r\n      </div>\r\n\r\n      {open && (\r\n        <Popover\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          container={anchorEl}\r\n          onClose={handlePopoverClose}\r\n          anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n          }}>\r\n          <Paper elevation={8}>\r\n            <MenuList>\r\n              <MenuItem onClick={handlePopoverClose}>\r\n                <PersonIcon />\r\n                <div className=\"ml-2\">Profile</div>\r\n              </MenuItem>\r\n              <MenuItem onClick={onLogoutClick}>\r\n                <ExitToAppIcon />\r\n                <div className=\"ml-2\">Logout</div>\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Paper>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import React, { cloneElement, isValidElement, useContext } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuItem: {\r\n    padding: '0 16px 0 0',\r\n    position: 'relative',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    color: props => props.sidebarTheme.textColor,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: props => props.sidebarTheme.textActiveColor,\r\n      backgroundColor: props => props.sidebarTheme.navActiveBgColor,\r\n      '& .Cmt-icon-root, & .Cmt-nav-text': {\r\n        color: props => props.sidebarTheme.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-nav-text, & .Cmt-icon-root': {\r\n          color: props => props.sidebarTheme.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      justifyContent: 'center',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: '50%',\r\n      marginLeft: 4,\r\n      marginRight: 4,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link } = props;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" className={clsx(classes.navMenuItem, 'Cmt-nav-menu-item')}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <span className={clsx(classes.navText, 'Cmt-nav-text')}>{name}</span>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import React, { cloneElement, isValidElement, useEffect, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { Collapse, List, ListItem } from '@material-ui/core';\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess';\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavSection from './NavSection';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '0 16px 0 0',\r\n    '& .MuiTouchRipple-root': {\r\n      display: 'none',\r\n    },\r\n    '&:hover, &:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      paddingLeft: 16,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n    '&.open': {\r\n      '& .Cmt-navCollapseBtn': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n      '& .Cmt-iconRoot': {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    '& .Cmt-navHeader': {\r\n      paddingLeft: 36,\r\n    },\r\n  },\r\n\r\n  navCollapseBtnInner: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '9px 16px 9px 32px',\r\n    borderTopRightRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    '&:hover, &:focus': {\r\n      color: props => props.sidebarTheme.textDarkColor,\r\n      backgroundColor: props => props.sidebarTheme.navHoverBgColor,\r\n      '& .Cmt-iconRoot': {\r\n        color: props => props.sidebarTheme.textDarkColor,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      paddingRight: 13,\r\n      paddingLeft: 13,\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      paddingRight: 16,\r\n      paddingLeft: 32,\r\n    },\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    whiteSpace: 'nowrap',\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navArrow: {\r\n    position: 'absolute',\r\n    left: 8,\r\n    top: '50%',\r\n    zIndex: 1,\r\n    transform: 'translateY(-50%)',\r\n    fontSize: 16,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'relative',\r\n    '& .Cmt-icon-root': {\r\n      transition: 'all 0.3s ease',\r\n      transform: 'translateX(-100%)',\r\n      opacity: 0,\r\n      visibility: 'hidden',\r\n      marginRight: 0,\r\n    },\r\n    '& .Cmt-nav-text': {\r\n      transition: 'all 0.35s ease',\r\n      marginLeft: -20,\r\n    },\r\n    '& .Cmt-nav-menu-link': {\r\n      padding: '9px 16px 9px 70px',\r\n      transition: 'all 0.3s ease',\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '&.active': {\r\n        '& .Cmt-icon-root': {\r\n          transform: 'translateX(0)',\r\n          marginRight: 10,\r\n          opacity: 1,\r\n          visibility: 'visible',\r\n        },\r\n        '& .Cmt-nav-text': {\r\n          marginLeft: 0,\r\n        },\r\n      },\r\n      '.Cmt-miniLayout &': {\r\n        paddingRight: 13,\r\n        paddingLeft: 13,\r\n      },\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n        paddingRight: 16,\r\n        paddingLeft: 70,\r\n      },\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const { name, icon, children = [] } = props;\r\n  const isExpandable = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const renderIcon = useCallback(() => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: classes.iconRoot,\r\n      });\r\n    }\r\n    return null;\r\n  }, [icon, classes]);\r\n\r\n  const MenuCollapse = (\r\n    <ListItem className={clsx(classes.navCollapseBtn, 'Cmt-navCollapseBtn')} button onClick={handleClick}>\r\n      <span className={classes.navCollapseBtnInner}>\r\n        {/* Display the expand menu if the item has children */}\r\n        {isExpandable && !open && <IconExpandMore className={classes.navArrow} />}\r\n        {isExpandable && open && <IconExpandLess className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <span className={classes.navText}>{name}</span>\r\n      </span>\r\n    </ListItem>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <Collapse className={classes.navCollapseItem} in={open} timeout=\"auto\">\r\n      <List component=\"div\" disablePadding>\r\n        {children.map((item, index) => {\r\n          switch (item.type) {\r\n            case 'section':\r\n              return <NavSection {...item} key={index} />;\r\n            case 'collapse':\r\n              return <NavCollapse {...item} key={index} />;\r\n            case 'item':\r\n              return <NavMenuItem {...item} key={index} />;\r\n            default:\r\n              return null;\r\n          }\r\n        })}\r\n      </List>\r\n    </Collapse>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={clsx(classes.navCollapse, `${open ? 'open' : ''}`)}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import React, { useContext } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { List } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport SidebarThemeContext from '../../CmtLayouts/SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navHeader: {\r\n    position: 'relative',\r\n    padding: '24px 16px 20px 16px',\r\n    textTransform: 'uppercase',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  navSection: {\r\n    position: 'relative',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:not(:first-child) .Cmt-navHeader': {\r\n      borderTop: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n      marginTop: 10,\r\n    },\r\n    '&:not(:last-child)': {\r\n      '.Cmt-miniLayout .Cmt-sidebar-content:not(:hover) &': {\r\n        borderBottom: props => `solid 1px ${props.sidebarTheme.borderColor}`,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavSection = props => {\r\n  const { name, children = [] } = props;\r\n  const isExpandable = children && children.length > 0;\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n  const classes = useStyles({ sidebarTheme });\r\n\r\n  const MenuCollapse = (\r\n    <List component=\"div\" className={clsx(classes.navHeader, 'Cmt-navHeader')}>\r\n      {name}\r\n    </List>\r\n  );\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          default:\r\n            return <NavMenuItem {...item} key={index} />;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={classes.navSection}>\r\n      {MenuCollapse}\r\n      {MenuItemChildren}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSection;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavSection from './NavSection';\r\nimport NavCollapse from './NavCollapse';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sideNavMenu: {\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst CmtVertical = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={classes.sideNavMenu}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'section':\r\n            return <NavSection {...item} key={index} />;\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtVertical;\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n","import React from 'react';\r\nimport { Dashboard, Phone, ArrowForward, Assignment, Receipt } from '@material-ui/icons';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { Badge } from '@material-ui/core';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nexport const sidebarNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n      {\r\n        name: <IntlMessages id={'wallboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/wallboard',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: <IntlMessages id={'reports'} />,\r\n    type: 'section',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'reports.callcenter'} />,\r\n        type: 'collapse',\r\n        icon: <Phone />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'agent.status'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentstatus',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'main.reports'} />,\r\n        type: 'collapse',\r\n        icon: <Assignment />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'calllog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callLog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'calltransferreport'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/calltransferreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'callmanagement'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callmanagement',\r\n          },\r\n          // {\r\n          //   name: 'Call Log 2',\r\n          //   type: 'item',\r\n          //   icon: <ArrowForward />,\r\n          //   link: '/reports/callLog2',\r\n          // },\r\n          {\r\n            name: <IntlMessages id={'internalssummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/internalssummary',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'did.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/didreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailysummary'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailysummaryreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'queue.answer.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/queueanswerreport',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abondenedcalls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abondenedcalls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'droppedcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/droppedcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'abandoned.queues'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/abandoned-queues',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'returneddropcall'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/returned-dropcall',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'repetetive.calls'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/repetetive-calls',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'agent.session.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/agentcdr',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'service.level'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/servicelevel',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailylog'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'dailyacc'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/dailyacc',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'call.comparison'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/callcomparison',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthly.log'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlylog',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'monthlydetails'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/monthlyDetails',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'survey.report'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/reports/quality-report',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: <IntlMessages id={'settings'} />,\r\n        type: 'collapse',\r\n        icon: <SettingsIcon />,\r\n        children: [\r\n          {\r\n            name: <IntlMessages id={'edit.breaks'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/editbreaks',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'usersettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/usersettings',\r\n          },\r\n          {\r\n            name: <IntlMessages id={'departmentsettings'} />,\r\n            type: 'item',\r\n            icon: <ArrowForward />,\r\n            link: '/settings/departmentsettings',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: 'IYS',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                <IntlMessages id={'Called.Numbers'} />\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/iys/called-number',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: `V${process.env.REACT_APP_VERSION}`,\r\n        type: 'section',\r\n      },\r\n      {\r\n        name: 'Teams',\r\n        type: 'section',\r\n        children: [\r\n          {\r\n            name: (\r\n              <Badge badgeContent=\"Coming Soon\" color=\"primary\">\r\n                Microsoft Teams Users\r\n              </Badge>\r\n            ),\r\n            type: 'item',\r\n            icon: <Receipt />,\r\n            link: '/teams/users',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const horizontalDefaultNavs = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'sidebar.dashboard'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const minimalHorizontalMenus = [\r\n  {\r\n    name: <IntlMessages id={'sidebar.main'} />,\r\n    type: 'collapse',\r\n    children: [\r\n      {\r\n        name: <IntlMessages id={'pages.samplePage'} />,\r\n        type: 'item',\r\n        icon: <Dashboard />,\r\n        link: '/dashboard',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVertical from '../../../../../@coremat/CmtNavigation/Vertical';\r\nimport { sidebarNavs } from '../menus';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  perfectScrollbarSidebar: {\r\n    height: '100%',\r\n    transition: 'all 0.3s ease',\r\n    '.Cmt-sidebar-fixed &, .Cmt-Drawer-container &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n    '.Cmt-modernLayout &': {\r\n      height: 'calc(100% - 72px)',\r\n    },\r\n    '.Cmt-miniLayout &': {\r\n      height: 'calc(100% - 91px)',\r\n    },\r\n    '.Cmt-miniLayout .Cmt-sidebar-content:hover &': {\r\n      height: 'calc(100% - 167px)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.perfectScrollbarSidebar}>\r\n      <CmtVertical menuItems={sidebarNavs} />\r\n    </PerfectScrollbar>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    boxSizing: 'border-box',\r\n    padding: '30px 15px',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appMainContent, 'Cmt-appMainContent')} bgcolor=\"background.main\">\r\n      {children}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999999,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst PageLoader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.circularProgressRoot}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { Slide, Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageLoader from '../PageComponents/PageLoader';\r\nimport { fetchError } from '../../../redux/actions';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst ContentLoader = () => {\r\n  const { error, loading, message } = useSelector(({ common }) => common);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(fetchError(''));\r\n    }, 3000);\r\n  }, [dispatch, error, message]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <PageLoader />}\r\n      {\r\n        <Snackbar\r\n          open={Boolean(error)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n      {\r\n        <Snackbar\r\n          open={Boolean(message)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          TransitionComponent={SlideTransition}>\r\n          <Alert variant=\"filled\" severity=\"success\">\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentLoader;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 30px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 50,\r\n      paddingRight: 50,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 65,\r\n      paddingRight: 65,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: 88,\r\n      paddingRight: 88,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function LayoutFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')}>\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\n\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst FooterLogo = ({ color, ...props }) => {\r\n  const logoUrl = color === 'white' ? '/images/logo-white-symbol.png' : '/images/footer-logo.png';\r\n\r\n  return (\r\n    <Box className=\"pointer\" {...props}>\r\n      <NavLink to=\"/\">\r\n        <CmtImage src={logoUrl} alt=\"logo\" />\r\n      </NavLink>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FooterLogo;\r\n","import React, { useContext } from 'react';\r\nimport FooterLogo from './FooterLogo';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport AppContext from '../../contextProvider/AppContextProvider/AppContext';\r\nimport { THEME_TYPES } from '../../../constants/ThemeOptions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  btnRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '6px 12px',\r\n      fontSize: 11,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = props => {\r\n  const classes = useStyles();\r\n  const { themeType } = useContext(AppContext);\r\n  const date = new Date();\r\n\r\n  return (\r\n    <Box className={classes.root} {...props}>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Hidden xsDown>\r\n          <FooterLogo mr={5} color={themeType === THEME_TYPES.DARK ? 'white' : ''} />\r\n        </Hidden>\r\n        <Box fontSize={{ xs: 12, sm: 14 }} component=\"p\" color=\"text.disabled\">\r\n          Copyright Company Name © {date.getFullYear()}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport Header from '../../partials/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  showTourOpt: true,\r\n  showFooterOpt: true,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n  drawerBreakPoint: defaultContext.drawerBreakPoint,\r\n  sidebarWidth: defaultContext.sidebarWidth,\r\n};\r\n\r\nconst VerticalDefault = ({ children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      className=\"verticalDefaultLayout\"\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter>\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalDefault;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Vertical/Footer';\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport Header from '../../partials/Header';\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport { SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport Footer from '../../partials/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  headerType: defaultContext.headerType,\r\n  footerType: 'fixed',\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst VerticalMinimal = ({ className, children }) => {\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <Header />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default VerticalMinimal;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { darken, makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '32px 10px 5px',\r\n    width: '100%',\r\n    '& .MuiAlert-root': {\r\n      padding: '0 20px 0 0',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      '& .MuiAlert-icon': {\r\n        padding: '16px 12px',\r\n        borderTopLeftRadius: theme.shape.borderRadius,\r\n        borderBottomLeftRadius: theme.shape.borderRadius,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Alerts = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Collapse in={open}>\r\n        <Alert\r\n          variant=\"filled\"\r\n          iconMapping={{ success: <CachedIcon fontSize=\"inherit\" /> }}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}>\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }>\r\n          A new version has been arrived, Click here to update jumbo 5.0\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport { Hidden } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Vertical/Header';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\n\r\nimport SidebarHeader from '../../partials/SidebarHeader';\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport Alerts from './Alerts';\r\nimport { HEADER_TYPE, SIDEBAR_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  minimalNoHeader: {\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '& .Cmt-toggle-menu': {\r\n      color: theme.palette.text.primary,\r\n      marginLeft: 15,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  headerType: HEADER_TYPE.STATIC,\r\n  sidebarType: SIDEBAR_TYPE.MINI,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  isSidebarOpen: false,\r\n  miniSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst MinimalNoHeader = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('verticalMinimalNoHeaderLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.minimalNoHeader}>\r\n          <Hidden lgUp>\r\n            <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n          </Hidden>\r\n          <Alerts />\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SidebarHeader />\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        <LanguageSwitcher />\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default MinimalNoHeader;\r\n","import React from 'react';\r\nimport { Box, IconButton } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtDrawer from '../../../../../../@coremat/CmtDrawer';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  actionSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '24px 5px',\r\n    width: 65,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  contentArea: {\r\n    width: 300,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 557,\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    height: '100vh',\r\n    padding: 30,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.dark, 0.38),\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.08),\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst ActionBarDrawer = ({ activeOption, onIconClick, onDrawerClose, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtDrawer variant=\"temporary\" anchor=\"left\" onClose={onDrawerClose} {...rest}>\r\n      <Box className={clsx(classes.root)}>\r\n        <Box className={classes.actionSidebar}>\r\n          <IconButton className={classes.iconBtn} onClick={onDrawerClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box className={classes.contentArea}>\r\n          <PerfectScrollbar className={classes.scrollbarRoot}> </PerfectScrollbar>\r\n        </Box>\r\n      </Box>\r\n    </CmtDrawer>\r\n  );\r\n};\r\n\r\nexport default ActionBarDrawer;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Hidden, IconButton, withWidth } from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtDropdownMenu from '../../../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../../../@coremat/CmtAvatar';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Vertical/SidebarToggleHandler';\r\nimport LayoutContext from '../../../../../../@coremat/CmtLayouts/LayoutContext';\r\n\r\nimport { AuhMethods } from '../../../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../../../constants/AppConstants';\r\nimport Logo from '../../../partials/Logo';\r\nimport ActionBarDrawer from './ActionBarDrawer';\r\nimport { useHistory } from 'react-router';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: '10px 24px 10px 15px',\r\n    [theme.breakpoints.up('lg')]: {\r\n      flexDirection: 'column',\r\n      padding: '16px 5px',\r\n    },\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n  iconBtn: {\r\n    position: 'relative',\r\n    color: alpha(theme.palette.common.white, 0.9),\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  counterRoot: {\r\n    color: theme.palette.common.white,\r\n    border: `solid 1px ${theme.palette.common.white}`,\r\n    backgroundColor: theme.palette.warning.main,\r\n    width: 20,\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: <IntlMessages id={'account'} />,\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: <IntlMessages id={'logout'} />,\r\n  },\r\n];\r\n\r\nlet initSidebarWidth = 0;\r\nconst ActionSideBar = ({ width }) => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [isDrawerOpen, setDrawerStatus] = useState(false);\r\n  const [activeOption, setActiveOption] = useState(null);\r\n  const { isSidebarOpen, setSidebarOpen, sidebarWidth, setSidebarWidth } = useContext(LayoutContext);\r\n\r\n  useEffect(() => {\r\n    initSidebarWidth = sidebarWidth;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSidebarOpen && (width === 'lg' || width === 'xl')) {\r\n      setSidebarWidth(0);\r\n    } else {\r\n      setSidebarWidth(initSidebarWidth);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isSidebarOpen, width]);\r\n\r\n  useEffect(() => {\r\n    if (activeOption && !isDrawerOpen) {\r\n      setDrawerStatus(true);\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeOption]);\r\n\r\n  const onItemClick = item => {\r\n    if (item.label.props.id === 'logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  const onIconClick = option => {\r\n    setActiveOption(option);\r\n  };\r\n\r\n  const onDrawerClose = () => {\r\n    setDrawerStatus(false);\r\n    setActiveOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, 'actionSidebar')}>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <SidebarToggleHandler className={classes.iconBtn}>\r\n          {isSidebarOpen && (width === 'lg' || width === 'xl') && <CloseIcon />}\r\n        </SidebarToggleHandler>\r\n        <Hidden lgUp>\r\n          <Logo color=\"white\" ml={{ xs: 3, sm: 6 }} />\r\n        </Hidden>\r\n      </div>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} ml={{ xs: 'auto', lg: 'unset' }}>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('search')}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n\r\n        <IconButton className={classes.iconBtn} onClick={() => onIconClick('messages')}>\r\n          <MessageIcon />\r\n        </IconButton> */}\r\n        <Box className={classes.iconBtn}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('notifications')}>\r\n          <Badge badgeContent={4} classes={{ badge: classes.counterRoot }}>\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n\r\n        {isSidebarOpen && (width === 'lg' || width === 'xl') && (\r\n          <IconButton className={classes.iconBtn} onClick={() => setSidebarOpen(!isSidebarOpen)}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection={{ xs: 'row', lg: 'column' }} mt={{ xs: 'unset', lg: 'auto' }}>\r\n        {/* <IconButton className={classes.iconBtn} onClick={() => onIconClick('settings')}>\r\n          <SettingsIcon />\r\n        </IconButton> */}\r\n\r\n        <CmtDropdownMenu\r\n          onItemClick={onItemClick}\r\n          TriggerComponent={<CmtAvatar src={'https://via.placeholder.com/150'} />}\r\n          items={actionsList}\r\n        />\r\n      </Box>\r\n\r\n      <ActionBarDrawer\r\n        activeOption={activeOption}\r\n        open={isDrawerOpen}\r\n        onDrawerClose={onDrawerClose}\r\n        onIconClick={onIconClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withWidth()(ActionSideBar);\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtVerticalLayout from '../../../../../@coremat/CmtLayouts/Vertical';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Vertical/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Vertical/Content';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport ActionSideBar from './ActionSideBar';\r\nimport Logo from '../../partials/Logo';\r\nimport { THEME_TYPES } from '../../../../constants/ThemeOptions';\r\nimport AppContext from '../../../contextProvider/AppContextProvider/AppContext';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  sidebarHeader: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: '60px',\r\n      marginBottom: '35px',\r\n      padding: '10px 20px 20px 20px',\r\n      height: 60,\r\n    },\r\n  },\r\n}));\r\n\r\nconst layoutOptions = {\r\n  sidebarType: defaultContext.sidebarType,\r\n  isSidebarFixed: defaultContext.isSidebarFixed,\r\n  actionSidebarWidth: 80,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst ModernSideBar = ({ children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  const { themeType } = useContext(AppContext);\r\n\r\n  return (\r\n    <CmtVerticalLayout\r\n      className={clsx('Cmt-modernLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      sidebar={\r\n        <CmtSidebar actionBar={<ActionSideBar />}>\r\n          <Hidden mdDown>\r\n            <Logo color={themeType !== THEME_TYPES.LIGHT ? 'white' : 'dark'} className={classes.sidebarHeader} />\r\n          </Hidden>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtVerticalLayout>\r\n  );\r\n};\r\n\r\nexport default ModernSideBar;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport LayoutContext from '../../LayoutContext';\r\n\r\nconst LAYOUT_STYLES = ['full-width', 'boxed', 'framed'];\r\nconst SIDEBAR_TYPES = ['full', 'drawer', 'mini'];\r\nconst HEADER_TYPES = ['fixed', 'static'];\r\n\r\nlet sidebarFixed = true;\r\nlet headerFixed = true;\r\n\r\nconst LayoutContextProvider = props => {\r\n  const [layoutStyle, setLayoutStyle] = useState(props.layoutStyle ? props.layoutStyle : LAYOUT_STYLES[0]);\r\n  const [sidebarType, setSidebarType] = useState(props.sidebarType ? props.sidebarType : SIDEBAR_TYPES[0]);\r\n\r\n  const [isSidebarOpen, setSidebarOpen] = useState(props.isSidebarOpen ? props.isSidebarOpen : false); //for both drawer and mini-sidebar\r\n\r\n  const [headerType, setHeaderType] = useState(props.headerType ? props.headerType : HEADER_TYPES[0]);\r\n  const [showHeader, setShowHeader] = useState(props.showHeader ? props.showHeader : true);\r\n  const [showFooter, setShowFooter] = useState(props.showFooter ? props.showFooter : true);\r\n\r\n  const [sidebarWidth, setSidebarWidth] = useState(props.sidebarWidth ? props.sidebarWidth : 304);\r\n\r\n  const [isSidebarFixed, setSidebarFixed] = useState(props.isSidebarFixed ? props.isSidebarFixed : true);\r\n\r\n  sidebarFixed = props.isSidebarFixed ? props.isSidebarFixed : true;\r\n  headerFixed = props.headerType ? props.headerType : HEADER_TYPES[0];\r\n\r\n  useEffect(() => {\r\n    if (layoutStyle === LAYOUT_STYLES[0]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-fullwidth');\r\n    } else if (layoutStyle === LAYOUT_STYLES[1]) {\r\n      document.body.classList.remove('layout-type-fullwidth', 'layout-type-framed');\r\n      document.body.classList.add('layout-type-boxed');\r\n    } else if (layoutStyle === LAYOUT_STYLES[2]) {\r\n      document.body.classList.remove('layout-type-boxed', 'layout-type-fullwidth');\r\n      document.body.classList.add('layout-type-framed');\r\n    }\r\n  }, [layoutStyle]);\r\n\r\n  const layoutContextValue = useMemo(\r\n    () => ({\r\n      layoutStyle,\r\n      setLayoutStyle,\r\n      sidebarType,\r\n      setSidebarType,\r\n      headerType,\r\n      setHeaderType,\r\n      showHeader,\r\n      setShowHeader,\r\n      showFooter,\r\n      setShowFooter,\r\n      isSidebarOpen,\r\n      setSidebarOpen,\r\n      sidebarWidth,\r\n      setSidebarWidth,\r\n      isSidebarFixed,\r\n      setSidebarFixed,\r\n      headerFixed,\r\n      sidebarFixed,\r\n      drawerBreakPoint: props.drawerBreakPoint ? props.drawerBreakPoint : 'md',\r\n      showFooterOpt: props.showFooterOpt ? props.showFooterOpt : true,\r\n      showTourOpt: props.showTourOpt ? props.showTourOpt : false,\r\n    }),\r\n    [\r\n      layoutStyle,\r\n      sidebarType,\r\n      headerType,\r\n      showHeader,\r\n      showFooter,\r\n      isSidebarOpen,\r\n      sidebarWidth,\r\n      isSidebarFixed,\r\n      props.drawerBreakPoint,\r\n      props.showFooterOpt,\r\n      props.showTourOpt,\r\n    ],\r\n  );\r\n\r\n  return <LayoutContext.Provider value={layoutContextValue}>{props.children}</LayoutContext.Provider>;\r\n};\r\n\r\nexport default LayoutContextProvider;\r\n","import { darken, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appRoot: props => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100vh',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-header': {\r\n      '& .Cmt-toggle-menu': {\r\n        display: 'none',\r\n        marginRight: 10,\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'block !important',\r\n        },\r\n      },\r\n      '& .Cmt-header-nav': {\r\n        [theme.breakpoints.down(props.drawerBreakPoint)]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  appMain: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    '& .Cmt-customizerBtn': {\r\n      top: 220,\r\n    },\r\n  },\r\n  appInnerRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  appMainContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    position: 'relative',\r\n  },\r\n  '@global': {\r\n    '.layout-type-framed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        padding: 20,\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          height: 'calc(100vh - 40px)',\r\n          borderRadius: 12,\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n          height: '100%',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        padding: 50,\r\n        '& > #root': {\r\n          height: 'calc(100vh - 100px)',\r\n        },\r\n      },\r\n    },\r\n    '.layout-type-boxed': {\r\n      '@media screen and (min-width: 1366px)': {\r\n        backgroundColor: darken(theme.palette.primary.main, 0.6),\r\n        overflow: 'hidden',\r\n        '& > #root': {\r\n          width: 1300,\r\n          marginRight: 'auto',\r\n          marginLeft: 'auto',\r\n          backgroundColor: theme.palette.background.default,\r\n          overflow: 'hidden',\r\n        },\r\n        '& $appRoot': {\r\n          overflowY: 'auto',\r\n        },\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        '& > #root': {\r\n          width: 1740,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './MainContainer.style';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst MainContainer = ({ header, footer, sidebar, className, children }) => {\r\n  const { drawerBreakPoint, showFooter, showHeader } = useContext(LayoutContext);\r\n\r\n  const classes = useStyles({ drawerBreakPoint });\r\n\r\n  return (\r\n    <div className={clsx(classes.appRoot, className)}>\r\n      <div className={classes.appInnerRoot}>\r\n        <div className={classes.appMainContainer}>\r\n          {sidebar}\r\n          <div className={classes.appMain}>\r\n            {showHeader && header}\r\n            {children}\r\n            {showFooter && footer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport LayoutContextProvider from './LayoutContextProvider';\r\nimport MainContainer from './MainContainer';\r\nimport SidebarThemeProvider from '../SidebarThemeContext';\r\n\r\nconst CmtHorizontalLayout = ({ layoutOptions, children, header, footer, ...rest }) => {\r\n  return (\r\n    <LayoutContextProvider {...layoutOptions}>\r\n      <SidebarThemeProvider>\r\n        <MainContainer header={header} footer={footer} {...rest}>\r\n          {children}\r\n        </MainContainer>\r\n      </SidebarThemeProvider>\r\n    </LayoutContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontalLayout;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  headerNav: {\r\n    width: '100%',\r\n    minHeight: 46,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst CmtHeaderNav = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.headerNav, 'Cmt-header-nav')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderNav;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerTop: {\r\n    width: '100%',\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n    fontSize: 14,\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderTop = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.headerTop} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderTop;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerMain: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  '@global': {\r\n    '.Cmt-container': {\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      width: '100%',\r\n      boxSizing: 'border-box',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 900,\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        width: 1100,\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: 1400,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtHeaderMain = ({ children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={clsx(classes.headerMain, 'Cmt-headerMain')} {...rest}>\r\n      <div className=\"Cmt-container\">{children}</div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CmtHeaderMain;\r\n","import React from 'react';\r\nimport { Box, Button, Divider } from '@material-ui/core';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  loginSection: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > .MuiDivider-root': {\r\n      height: 14,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n      backgroundColor: theme.palette.text.secondary,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderLogin = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Box display=\"flex\" alignItems=\"center\" color=\"warning.main\">\r\n        <CachedIcon fontSize=\"small\" />\r\n        <div className=\"ml-3\">This is primary alert-check it out!</div>\r\n      </Box>\r\n      <div className={classes.loginSection}>\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Login\r\n        </Button>\r\n        <Divider className=\"Cmt-divider\" orientation=\"vertical\" />\r\n        <Button className=\"Cmt-btn\" size=\"small\">\r\n          Sign up\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderLogin;\r\n","import React, { useContext, useImperativeHandle } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LayoutContext from '../LayoutContext';\r\n\r\nconst contentRef = React.createRef();\r\n\r\nconst SidebarToggleHandler = React.forwardRef(function SidebarToggleHandler(props, ref) {\r\n  const { isSidebarOpen, setSidebarOpen } = useContext(LayoutContext);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    isOpen: isSidebarOpen,\r\n  }));\r\n\r\n  return (\r\n    <IconButton className=\"Cmt-toggle-menu\" ref={contentRef} onClick={() => setSidebarOpen(!isSidebarOpen)} {...props}>\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n});\r\n\r\nexport default SidebarToggleHandler;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CmtDropdownMenu from '../../../../@coremat/CmtDropdownMenu';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  profileRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 10,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 20,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n}));\r\n\r\nconst actionsList = [\r\n  {\r\n    icon: <PersonIcon />,\r\n    label: 'Account',\r\n  },\r\n  {\r\n    icon: <ExitToAppIcon />,\r\n    label: 'Logout',\r\n  },\r\n];\r\n\r\nconst UserDropDown = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onItemClick = item => {\r\n    if (item.label === 'Logout') {\r\n      dispatch(AuhMethods[CurrentAuthMethod].onLogout());\r\n      history.push('/signin');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={clsx(classes.profileRoot, 'Cmt-profile-pic')}>\r\n      <CmtDropdownMenu\r\n        onItemClick={onItemClick}\r\n        TriggerComponent={<CmtAvatar size=\"small\" src={'https://via.placeholder.com/150'} />}\r\n        items={actionsList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserDropDown;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Box, Button, InputBase } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 450,\r\n    },\r\n    '& .Cmt-icon': {\r\n      position: 'absolute',\r\n      left: 18,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      position: 'relative',\r\n      flex: '1 1 auto',\r\n      width: '1%',\r\n      minWidth: 0,\r\n      height: 48,\r\n      borderRadius: '30px 0 0  30px',\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.08),\r\n      color: theme.palette.text.secondary,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 15px 5px 50px',\r\n      transition: 'all 0.3s ease',\r\n\r\n      '&:not(:last-child) .MuiOutlinedInput-root': {\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0,\r\n      },\r\n      '&:focus': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.12),\r\n      },\r\n    },\r\n  },\r\n  inputGroup: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'stretch',\r\n  },\r\n  inputGroupAppend: {\r\n    marginRight: '-1px',\r\n  },\r\n  button: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: '0 30px 30px 0',\r\n    height: '100%',\r\n    minWidth: 100,\r\n  },\r\n}));\r\n\r\nconst GlobalSearchForm = () => {\r\n  const classes = useStyles();\r\n  const [showCategories, setShowCategories] = React.useState(null);\r\n\r\n  const onShowCategories = event => {\r\n    setShowCategories(event.currentTarget);\r\n  };\r\n\r\n  const onHideCategories = () => {\r\n    setShowCategories(null);\r\n  };\r\n\r\n  return (\r\n    <Box pr={3} className={clsx(classes.searchRoot, 'Cmt-search')}>\r\n      <Box className={classes.inputGroup}>\r\n        <InputBase className={classes.inputText} placeholder={'Search here...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <SearchIcon className={clsx('Cmt-icon')} />\r\n        <Box className={clsx(classes.inputGroupAppend, 'Cmt-inputGroupAppend')}>\r\n          <Button variant=\"outlined\" className={classes.button} endIcon={<ArrowDropDownIcon />} onClick={onShowCategories}>\r\n            Categories\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={showCategories}\r\n            keepMounted\r\n            open={Boolean(showCategories)}\r\n            onClose={onHideCategories}>\r\n            <MenuItem onClick={onHideCategories}>Option 1</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 2</MenuItem>\r\n            <MenuItem onClick={onHideCategories}>Option 3</MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GlobalSearchForm;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { alpha, darken, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport AppsMenu from '../AppsMenu';\r\nimport HeaderMessages from '../HeaderMessages';\r\nimport HeaderNotifications from '../HeaderNotifications';\r\nimport LanguageSwitcher from '../../LanguageSwitcher';\r\nimport Logo from '../../Logo';\r\nimport SearchPopover from '../../SearchPopover';\r\nimport SidebarToggleHandler from '../../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport UserDropDown from '../../UserDropDown';\r\nimport GlobalSearchForm from '../../GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderTop = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderTop;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeader: {\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    boxShadow: '0 1px 8px -1px rgba(0,0,0,.2)',\r\n    position: 'relative',\r\n    zIndex: 99,\r\n  },\r\n}));\r\n\r\nconst CmtHeader = props => {\r\n  const { children, className } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return <div className={clsx(classes.appHeader, className, 'Cmt-header')}>{children}</div>;\r\n};\r\n\r\nexport default CmtHeader;\r\n\r\nCmtHeader.defaultProps = {\r\n  name: 'Header',\r\n};\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport LayoutContext from '../LayoutContext';\r\nimport CmtDrawer from '../../CmtDrawer';\r\nimport SidebarThemeContext from '../SidebarThemeContext/SidebarThemeContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appSidebar: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: props => props.sidebarWidth,\r\n    height: '100%',\r\n    boxSizing: 'border-box',\r\n    transition: 'all 0.3s ease',\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    zIndex: 999,\r\n    '.Cmt-drawer-sidebar &': {\r\n      position: 'relative',\r\n    },\r\n    '& .scrollbar-container': {\r\n      height: '100vh',\r\n      width: '100%',\r\n    },\r\n  },\r\n  appSidebarContent: {\r\n    height: '100%',\r\n    position: 'relative',\r\n    transition: 'all 0.3s ease',\r\n    backgroundColor: props => props.sidebarTheme.bgColor,\r\n    color: props => props.sidebarTheme.textColor,\r\n    overflow: 'hidden',\r\n    boxShadow: '0px 1px 8px rgba(0, 0, 0, 0.2), 0px 3px 3px rgba(0, 0, 0, 0.12), 0px 3px 4px rgba(0, 0, 0, 0.14)',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n  },\r\n  overlayRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst CmtSidebarContent = ({ classes, children }) => {\r\n  const { backgroundStyle, overlayStyle } = useContext(SidebarThemeContext);\r\n\r\n  return (\r\n    <div className={clsx(classes.appSidebar, 'Cmt-sidebar')}>\r\n      <div className={clsx(classes.appSidebarContent, 'Cmt-sidebar-content')} style={backgroundStyle}>\r\n        {children}\r\n        {overlayStyle && <div className={clsx(classes.overlayRoot, 'Cmt-Drawer-overlay')} style={overlayStyle} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CmtSidebar = props => {\r\n  const { children } = props;\r\n  const { isSidebarOpen, setSidebarOpen, drawerBreakPoint, sidebarWidth } = useContext(LayoutContext);\r\n\r\n  const { sidebarTheme } = useContext(SidebarThemeContext);\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(drawerBreakPoint));\r\n\r\n  const classes = useStyles({ sidebarWidth, sidebarTheme });\r\n\r\n  if (matches) {\r\n    return (\r\n      <CmtDrawer\r\n        variant=\"temporary\"\r\n        open={isSidebarOpen}\r\n        onClose={() => setSidebarOpen(false)}\r\n        classes={{\r\n          paper: 'Cmt-drawer-sidebar',\r\n        }}>\r\n        <CmtSidebarContent classes={classes}>{children}</CmtSidebarContent>\r\n      </CmtDrawer>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CmtSidebar;\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appMainContentWrapper: {\r\n    position: 'relative',\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n    },\r\n  },\r\n  appMainContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtContent = React.forwardRef(function LayoutContent(props, ref) {\r\n  const { children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({}));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.appMainContentWrapper} bgcolor=\"background.main\">\r\n      <Box ref={contentRef} className={classes.appMainContent}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtContent;\r\nCmtContent.defaultProps = {\r\n  name: 'LayoutContent',\r\n};\r\n","import React, { useImperativeHandle } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appFooter: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: '0px 0px 5px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  appFooterWrapper: {\r\n    padding: '12px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    minHeight: 64,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    width: '100%',\r\n    boxSizing: 'border-box',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 900,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: 1100,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 1400,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CmtFooter = React.forwardRef(function CmtFooter(props, ref) {\r\n  const { type, children } = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    headerType: type,\r\n  }));\r\n\r\n  const contentRef = React.createRef();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box ref={contentRef} className={clsx(classes.appFooter, 'Cmt-footer')} bgcolor=\"primary.main\">\r\n      <Box ref={contentRef} className={clsx(classes.appFooterWrapper, 'Cmt-footer-wrapper')}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default CmtFooter;\r\nCmtFooter.defaultProps = {\r\n  type: 'fixed',\r\n  name: 'LayoutFooter',\r\n};\r\nCmtFooter.propTypes = {\r\n  type: PropTypes.oneOf(['fixed', 'static']),\r\n};\r\n","import React, { cloneElement, isValidElement } from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  navMenuLink: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n      },\r\n    },\r\n    '&.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nconst NavMenuItem = props => {\r\n  const { name, icon, link, handleClick } = props;\r\n  const classes = useStyles();\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <List component=\"div\" disablePadding onClick={handleClick}>\r\n      <NavLink className={clsx(classes.navMenuLink, 'Cmt-nav-menu-link')} to={link}>\r\n        {/* Display an icon if any */}\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={clsx(classes.navText, 'Cmt-nav-text')}>\r\n          {name}\r\n        </Box>\r\n      </NavLink>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default NavMenuItem;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navCollapse: {\r\n    position: 'relative',\r\n\r\n    '&.active > .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&.active > .Cmt-navCollapseBtn $subCollapse .Cmt-navCollapseBtn.active': {\r\n      color: theme.palette.horizontalNav.textDarkColor,\r\n      '& $navCollapseBtnInner  .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& $navCollapseBtnInner > .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navCollapseItem: {\r\n    position: 'absolute',\r\n    display: 'none',\r\n    top: 80,\r\n    left: 0,\r\n    zIndex: 2,\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 200,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n\r\n    '& $navCollapseItem': {\r\n      top: 50,\r\n      left: '100%',\r\n      right: 'auto',\r\n    },\r\n  },\r\n  navCollapseBtn: {\r\n    position: 'relative',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n\r\n    '& > $navCollapseItem $navCollapseBtn:hover > $navCollapseItem': {\r\n      display: 'block',\r\n      top: 0,\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navCollapseBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  subCollapse: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    '& .Cmt-navCollapseBtn': {\r\n      color: theme.palette.horizontalNav.textColor,\r\n      '&:hover, &:focus': {\r\n        color: theme.palette.horizontalNav.textDarkColor,\r\n        backgroundColor: theme.palette.horizontalNav.menuHoverBgColor,\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n      },\r\n    },\r\n    '&.active .Cmt-nav-menu-link.active': {\r\n      color: theme.palette.horizontalNav.textActiveColor,\r\n      backgroundColor: theme.palette.horizontalNav.menuActiveBgColor,\r\n      '& .Cmt-icon-root': {\r\n        color: theme.palette.horizontalNav.textActiveColor,\r\n      },\r\n      '&:hover, &:focus': {\r\n        '& .Cmt-icon-root': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavCollapse.style';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst NavCollapse = props => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const { name, icon, className, children = [] } = props;\r\n  const isExpandable = useMemo(() => children.length, [children]);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const renderIcon = () => {\r\n    if (icon && isValidElement(icon)) {\r\n      return cloneElement(icon, {\r\n        className: clsx(classes.iconRoot, 'Cmt-icon-root'),\r\n      });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <List component=\"div\" disablePadding className={classes.navCollapseItem}>\r\n      {children.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} className={classes.subCollapse} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navCollapseBtn, `${open ? 'active' : ''}`, 'Cmt-navCollapseBtn')}>\r\n      <Box component=\"span\" className={classes.navCollapseBtnInner}>\r\n        {renderIcon()}\r\n        <Box component=\"span\" className={classes.navText}>\r\n          {name}\r\n        </Box>\r\n        {/* Display the expand menu if the item has children */}\r\n        {isExpandable && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {isExpandable && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n      </Box>\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Box className={clsx(classes.navCollapse, 'Cmt-navCollapse', className, `${open ? 'active' : ''}`)}>{MenuCollapse}</Box>\r\n  );\r\n};\r\n\r\nexport default NavCollapse;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@keyframes slideIn': {\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n  },\r\n  '@keyframes moveUp': {\r\n    from: {\r\n      marginTop: 20,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  navMega: {\r\n    position: 'static',\r\n    '&.Cmt-navMega-5': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 5)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-4': {\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 4)',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-3': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 530,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 3)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n    '&.Cmt-navMega-2': {\r\n      position: 'relative',\r\n      '& .Cmt-navMegaColumnsWrapper': {\r\n        width: '100%',\r\n        minWidth: 460,\r\n        right: 'auto',\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        '& .Cmt-navMega-column': {\r\n          width: 'calc(100% / 2)',\r\n        },\r\n      },\r\n      '&:last-child': {\r\n        '& .Cmt-navMegaColumnsWrapper': {\r\n          right: 0,\r\n          left: 'auto',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navMegaBtn: {\r\n    position: 'static',\r\n    padding: '11px 14px',\r\n    cursor: 'pointer',\r\n    color: theme.palette.horizontalNav.navigationColor,\r\n    '&:hover, &:focus, &.active': {\r\n      color: theme.palette.horizontalNav.navigationActiveColor,\r\n    },\r\n\r\n    '&:hover > $navMegaColumnsWrapper': {\r\n      display: 'flex',\r\n      top: '100%',\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n      animationName: '$slideIn, $moveUp',\r\n      animationTimingFunction: 'ease, ease',\r\n      animationDuration: '0.4s, 0.4s',\r\n    },\r\n  },\r\n  navMegaBtnInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  navText: {\r\n    flex: 1,\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n  },\r\n  iconRoot: {\r\n    marginRight: 16,\r\n    fontSize: 20,\r\n  },\r\n  navMegaColumnsWrapper: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    visibility: 'hidden',\r\n    minWidth: 600,\r\n    width: '100%',\r\n    position: 'absolute',\r\n    top: 80,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 2,\r\n    margin: '0 auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.horizontalNav.textColor,\r\n    borderRadius: theme.shape.borderRadius,\r\n    boxShadow: '0px 16px 24px rgba(0, 0, 0, 0.14), 0px 6px 30px rgba(0, 0, 0, 0.12), 0px 8px 10px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  navMegaColumn: {\r\n    width: 'calc(100% / 3)',\r\n  },\r\n  navMegaColumnInner: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'unset',\r\n  },\r\n  navMegaColumnLabel: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 10px 20px',\r\n    color: theme.palette.text.primary,\r\n\r\n    '& .Cmt-icon-root': {\r\n      marginRight: 16,\r\n      fontSize: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { cloneElement, isValidElement, useEffect, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nimport NavMenuItem from './NavMenuItem';\r\nimport useStyles from './NavMega.style';\r\nimport { isUrlInChildren } from '../../CmtHelpers/JssHelper';\r\n\r\nconst RenderIcon = ({ icon }) => {\r\n  const classes = useStyles();\r\n\r\n  if (icon && isValidElement(icon)) {\r\n    return cloneElement(icon, {\r\n      className: clsx(classes.iconRoot, '.Cmt-iconRoot', '.Cmt-icon-root'),\r\n    });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst NavMegaColumn = props => {\r\n  const classes = useStyles();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = useMemo(() => children.length, [children]);\r\n\r\n  const MenuItemChildren = totalItems ? (\r\n    <List component=\"div\" disablePadding className={classes.navMegaColumnItems}>\r\n      {children.map((item, index) => (\r\n        <NavMenuItem {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem component=\"div\" disableGutters className={clsx(classes.navMegaColumnInner, 'Cmt-navMegaColumnInner')}>\r\n      {name && (\r\n        <span className={classes.navMegaColumnLabel}>\r\n          <RenderIcon icon={icon} />\r\n          <span className={classes.navText}>{name}</span>\r\n        </span>\r\n      )}\r\n      {MenuItemChildren}\r\n    </ListItem>\r\n  );\r\n\r\n  return <div className={clsx(classes.navMegaColumn, 'Cmt-navMega-column')}>{MenuCollapse}</div>;\r\n};\r\n\r\nconst NavMega = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { name, icon, children = [] } = props;\r\n  const totalItems = children.length;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isUrlInChildren(props, history.location.pathname)) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n\r\n    const removeHistoryListening = history.listen(location => {\r\n      if (isUrlInChildren(props, location.pathname)) {\r\n        setOpen(true);\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      removeHistoryListening();\r\n    };\r\n  }, [props, history]);\r\n\r\n  const MenuItemColumns = totalItems ? (\r\n    <List component=\"div\" disablePadding className={clsx(classes.navMegaColumnsWrapper, 'Cmt-navMegaColumnsWrapper')}>\r\n      {children.map((item, index) => (\r\n        <NavMegaColumn {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  ) : null;\r\n\r\n  const MenuCollapse = (\r\n    <ListItem\r\n      component=\"div\"\r\n      disableGutters\r\n      className={clsx(classes.navMegaBtn, 'Cmt-navMegaBtn', `${open ? 'active' : ''}`)}>\r\n      <span className={classes.navMegaBtnInner}>\r\n        <RenderIcon icon={icon} />\r\n        <span className={classes.navText}>{name}</span>\r\n        {/* Display the expand menu if the item has children */}\r\n        {totalItems > 0 && !open && <ArrowDropDownIcon className={classes.navArrow} />}\r\n        {totalItems > 0 && open && <ArrowDropUpIcon className={classes.navArrow} />}\r\n        {/* Display an icon if any */}\r\n      </span>\r\n      {MenuItemColumns}\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <div className={clsx(classes.navMega, 'Cmt-navMega', `Cmt-navMega-${totalItems}`, `${open ? 'active' : ''}`)}>\r\n      {MenuCollapse}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavMega;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\nimport NavMenuItem from './NavMenuItem';\r\nimport NavCollapse from './NavCollapse';\r\nimport NavMega from './NavMega';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  horizontalNavMenu: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    marginLeft: -14,\r\n    marginRight: -14,\r\n  },\r\n}));\r\n\r\nconst CmtHorizontal = props => {\r\n  const { menuItems } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <List component=\"nav\" disablePadding className={clsx(classes.horizontalNavMenu, 'Cmt-horizontalNavMenu')}>\r\n      {menuItems.map((item, index) => {\r\n        switch (item.type) {\r\n          case 'collapse':\r\n            return <NavCollapse {...item} key={index} />;\r\n          case 'mega':\r\n            return <NavMega {...item} key={index} />;\r\n          case 'item':\r\n            return <NavMenuItem {...item} key={index} />;\r\n          default:\r\n            return null;\r\n        }\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CmtHorizontal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport HeaderTop from '../../partials/Header/HeaderTop';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\n\r\nconst layoutOptions = {\r\n  showFooter: false,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalDefault = ({ className, children }) => {\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalDefaultLayout', className)}\r\n      header={\r\n        <CmtHeader>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderTop />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain bgcolor=\"primary.main\" color=\"white\">\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDefault;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-search': {\r\n      position: 'relative',\r\n      '& .MuiInputBase-input': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-inputGroupAppend': {\r\n      '& .MuiButton-root': {\r\n        backgroundColor: alpha(theme.palette.common.dark, 0.38),\r\n        color: theme.palette.common.white,\r\n        borderLeftColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Box, alpha } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport GlobalSearchForm from '../../partials/GlobalSearchForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden smDown>\r\n        <GlobalSearchForm />\r\n      </Hidden>\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <Hidden mdUp>\r\n          <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        </Hidden>\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport SideBar from '../../partials/SideBar';\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport useStyles from './index.style';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport HeaderMain from './HeaderMain';\r\nimport clsx from 'clsx';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\nconst HorizontalDark = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      className={clsx('Cmt-horizontalDarkLayout', className)}\r\n      layoutOptions={layoutOptions}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n        </CmtHeader>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalDark;\r\n","import React from 'react';\r\nimport { Box, darken, Hidden, Toolbar } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Logo from '../../partials/Logo';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\nimport { minimalHorizontalMenus } from '../../partials/menus';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    minHeight: 10,\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 12,\r\n      paddingBottom: 12,\r\n    },\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n    '& .Cmt-horizontalNavMenu': {\r\n      position: 'static',\r\n      '& .Cmt-navMegaBtn, & > .Cmt-navCollapse > .Cmt-navCollapseBtn': {\r\n        minHeight: 64,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MainHeader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <Hidden mdDown>\r\n        <CmtHorizontal menuItems={minimalHorizontalMenus} />\r\n      </Hidden>\r\n\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n        <Box className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </Box>\r\n        <UserDropDown />\r\n      </Box>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport MainHeader from './MainHeader';\r\nimport useStyles from './index.style';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalMinimal = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalMinimalLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderMain>\r\n            <MainHeader />\r\n          </CmtHeaderMain>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalMinimal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { darken, Hidden } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SidebarToggleHandler from '../../../../../@coremat/CmtLayouts/Horizontal/SidebarToggleHandler';\r\nimport Logo from '../../partials/Logo';\r\nimport SearchPopover from '../../partials/SearchPopover';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport LanguageSwitcher from '../../partials/LanguageSwitcher';\r\nimport UserDropDown from '../../partials/UserDropDown';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: 10,\r\n    padding: 0,\r\n    '& .Cmt-appIcon': {\r\n      color: theme.palette.text.secondary,\r\n      '&:hover, &:focus': {\r\n        color: darken(theme.palette.text.secondary, 0.2),\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 7,\r\n      },\r\n    },\r\n  },\r\n  langRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    position: 'relative',\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 2,\r\n      zIndex: 1,\r\n      height: 35,\r\n      width: 1,\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.15),\r\n    },\r\n  },\r\n  searchIcon: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 9,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderMain = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <SidebarToggleHandler edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n      <Logo mr={{ xs: 2, sm: 4, lg: 6, xl: 8 }} color=\"white\" />\r\n      <div style={{ display: 'flex', alignItems: 'center', marginLeft: 'auto' }}>\r\n        <SearchPopover iconClassName={clsx(classes.searchIcon, 'Cmt-searchIcon')} />\r\n        <Hidden lgUp>\r\n          <AppsMenu />\r\n          <HeaderMessages />\r\n          <HeaderNotifications />\r\n        </Hidden>\r\n        <div className={clsx(classes.langRoot, 'Cmt-i18n-switch')}>\r\n          <LanguageSwitcher />\r\n        </div>\r\n        <UserDropDown />\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default HeaderMain;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport AppsMenu from '../../partials/Header/AppsMenu';\r\nimport HeaderMessages from '../../partials/Header/HeaderMessages';\r\nimport HeaderNotifications from '../../partials/Header/HeaderNotifications';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { horizontalDefaultNavs } from '../../partials/menus';\r\nimport CmtHorizontal from '../../../../../@coremat/CmtNavigation/Horizontal';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst HeaderTopMenus = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CmtHorizontal menuItems={horizontalDefaultNavs} />\r\n      <Box display=\"flex\" alignItems=\"center\" ml=\"auto\">\r\n        <AppsMenu />\r\n        <HeaderMessages />\r\n        <HeaderNotifications />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderTopMenus;\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/horizontal-header-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appHeaderDark: {\r\n    backgroundImage: `URL(${bgImage})`,\r\n    backgroundPosition: 'center center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    position: 'relative',\r\n    color: theme.palette.common.white,\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.47),\r\n    },\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '& > .Cmt-headerMain': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: 4,\r\n\r\n      '& .Cmt-navCollapseBtn': {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n      '& .Cmt-navCollapseBtn, & .Cmt-appIcon': {\r\n        color: theme.palette.horizontalNav.textColor,\r\n        '&:hover, &:focus': {\r\n          color: theme.palette.horizontalNav.textDarkColor,\r\n        },\r\n        '&.active': {\r\n          color: theme.palette.horizontalNav.textActiveColor,\r\n        },\r\n      },\r\n    },\r\n    '& > .Cmt-header-nav': {\r\n      minHeight: 54,\r\n    },\r\n    '& .Cmt-btn': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-divider': {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    '& .Cmt-appIcon, & .Cmt-searchIcon': {\r\n      color: theme.palette.common.white,\r\n      '&:hover, &:focus': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.04),\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    '& .Cmt-lang-switch, & .Cmt-profile-pic': {\r\n      '&:before': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.38),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CmtHorizontalLayout from '../../../../../@coremat/CmtLayouts/Horizontal';\r\nimport CmtHeaderNav from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderNav';\r\nimport CmtHeaderTop from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderTop';\r\nimport CmtHeaderMain from '../../../../../@coremat/CmtLayouts/Horizontal/Header/HeaderMain';\r\nimport CmtHeader from '../../../../../@coremat/CmtLayouts/Horizontal/Header';\r\nimport CmtSidebar from '../../../../../@coremat/CmtLayouts/Horizontal/Sidebar';\r\nimport CmtContent from '../../../../../@coremat/CmtLayouts/Horizontal/Content';\r\nimport CmtFooter from '../../../../../@coremat/CmtLayouts/Horizontal/Footer';\r\n\r\nimport SideBar from '../../partials/SideBar';\r\nimport HeaderLogin from '../../partials/Header/HeaderLogin';\r\nimport ContentLoader from '../../../ContentLoader';\r\nimport HeaderMain from './HeaderMain';\r\nimport HeaderTopMenus from './HeaderTopMenus';\r\nimport Footer from '../../partials/Footer';\r\nimport { HEADER_TYPE } from '../../../../constants/ThemeOptions';\r\nimport useStyles from './index.style';\r\nimport defaultContext from '../../../contextProvider/AppContextProvider/defaultContext';\r\n\r\nconst layoutOptions = {\r\n  showFooter: true,\r\n  headerType: HEADER_TYPE.STATIC,\r\n  layoutStyle: defaultContext.layoutType,\r\n};\r\n\r\nconst HorizontalTopMenu = ({ className, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtHorizontalLayout\r\n      layoutOptions={layoutOptions}\r\n      className={clsx('Cmt-horizontalTopMenuLayout', className)}\r\n      header={\r\n        <CmtHeader className={classes.appHeaderDark}>\r\n          <Hidden mdDown>\r\n            <CmtHeaderMain>\r\n              <HeaderTopMenus />\r\n            </CmtHeaderMain>\r\n          </Hidden>\r\n          <CmtHeaderNav>\r\n            <HeaderLogin />\r\n          </CmtHeaderNav>\r\n          <CmtHeaderTop>\r\n            <HeaderMain />\r\n          </CmtHeaderTop>\r\n        </CmtHeader>\r\n      }\r\n      footer={\r\n        <CmtFooter type=\"static\">\r\n          <Footer />\r\n        </CmtFooter>\r\n      }\r\n      sidebar={\r\n        <CmtSidebar>\r\n          <SideBar />\r\n        </CmtSidebar>\r\n      }>\r\n      <CmtContent>\r\n        {children}\r\n        <ContentLoader />\r\n      </CmtContent>\r\n    </CmtHorizontalLayout>\r\n  );\r\n};\r\n\r\nexport default HorizontalTopMenu;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport globalStyles from '../../../theme/GlobalCss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AuhMethods } from '../../../services/auth';\r\nimport { CurrentAuthMethod } from '../../constants/AppConstants';\r\nimport { LAYOUT_TYPES } from '../../constants/ThemeOptions';\r\nimport VerticalDefault from './VerticalLayouts/VerticalDefault';\r\nimport VerticalMinimal from './VerticalLayouts/VerticalMinimal';\r\nimport MinimalNoHeader from './VerticalLayouts/MinimalNoHeader';\r\nimport ModernSideBar from './VerticalLayouts/ModernSidebar';\r\nimport HorizontalDefault from './HorizontalLayouts/HorizontalDefault';\r\nimport HorizontalDark from './HorizontalLayouts/HorizontalDark';\r\nimport HorizontalMinimal from './HorizontalLayouts/HorizontalMinimal';\r\nimport HorizontalTopMenu from './HorizontalLayouts/HorizontalTopMenu';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  circularProgressRoot: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const [showLayoutLoader, setLayoutLoader] = useState(true);\r\n  const { layout } = useContext(AppContext);\r\n  const { loadUser } = useSelector(({ auth }) => auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  globalStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(AuhMethods[CurrentAuthMethod].getAuthUser());\r\n    setLayoutLoader(false);\r\n  }, [dispatch]);\r\n\r\n  if (showLayoutLoader || !loadUser) {\r\n    return (\r\n      <div className={classes.circularProgressRoot}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (['/signin', '/signup', '/forgot-password'].includes(location.pathname)) {\r\n    return <div style={{ minHeight: '100vh', width: '100%', display: 'flex' }}>{children}</div>;\r\n  }\r\n\r\n  switch (layout) {\r\n    case LAYOUT_TYPES.VERTICAL_DEFAULT: {\r\n      return <VerticalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL: {\r\n      return <VerticalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MINIMAL_NO_HEADER: {\r\n      return <MinimalNoHeader children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.VERTICAL_MODERN_SIDEBAR: {\r\n      return <ModernSideBar children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DEFAULT: {\r\n      return <HorizontalDefault children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_DARK: {\r\n      return <HorizontalDark children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_MINIMAL: {\r\n      return <HorizontalMinimal children={children} />;\r\n    }\r\n    case LAYOUT_TYPES.HORIZONTAL_TOP_MENU: {\r\n      return <HorizontalTopMenu children={children} />;\r\n    }\r\n    default:\r\n      return <VerticalDefault children={children} />;\r\n  }\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useContext, useMemo } from 'react';\r\n\r\nimport { IntlProvider } from 'react-intl';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { createTheme, jssPreset, StylesProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport AppContext from '../contextProvider/AppContextProvider/AppContext';\r\nimport AppLocale from '../../../i18n';\r\nimport AppLayout from '../AppLayout';\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst AppWrapper = ({ children }) => {\r\n  const { locale, theme } = useContext(AppContext);\r\n\r\n  const muiTheme = useMemo(() => {\r\n    return createTheme(theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <IntlProvider locale={AppLocale[locale.locale].locale} messages={AppLocale[locale.locale].messages}>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <StylesProvider jss={jss}>\r\n            <CssBaseline />\r\n            <AppLayout>{children}</AppLayout>\r\n          </StylesProvider>\r\n        </MuiPickersUtilsProvider>\r\n      </ThemeProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import { THEME_TYPES } from '../@jumbo/constants/ThemeOptions';\r\n\r\nexport const semiDarkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const darkTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.DARK,\r\n    sidebar: {\r\n      bgColor: '#363636',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#fff',\r\n      navHoverBgColor: 'rgba(187, 134, 252, 0.08)',\r\n      navActiveBgColor: '#3f51b5',\r\n      borderColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(255, 255, 255, 0.3)',\r\n      textDarkColor: '#fff',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(0, 0, 0, 0.8)',\r\n      menuActiveBgColor: 'rgb(0, 0, 0, 0.5)',\r\n    },\r\n    common: {\r\n      dark: '#fff',\r\n    },\r\n    background: {\r\n      paper: '#121212',\r\n      default: '#2e2e2e',\r\n    },\r\n    text: {\r\n      primary: 'rgba(255, 255, 255, 0.87)',\r\n      secondary: 'rgba(255, 255, 255, 0.6)',\r\n      disabled: 'rgba(255, 255, 255, 0.38)',\r\n      hint: 'rgba(255, 255, 255, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(255, 255, 255, 0.06)',\r\n      dark: 'rgba(255, 255, 255, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#535151',\r\n      textColor: 'rgba(255, 255, 255, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#363636',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#535050',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#2e2e2e',\r\n      },\r\n    },\r\n  },\r\n};\r\nexport const lightTheme = {\r\n  palette: {\r\n    type: THEME_TYPES.LIGHT,\r\n    sidebar: {\r\n      bgColor: '#fff',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      navHoverBgColor: 'rgb(229, 229, 229)',\r\n      navActiveBgColor: 'rgb(239, 229, 253)',\r\n      borderColor: 'rgba(33, 33, 33, 0.08)',\r\n    },\r\n    horizontalNav: {\r\n      navigationColor: 'rgba(255, 255, 255, 0.74)',\r\n      navigationActiveColor: 'rgba(255, 255, 255, 1)',\r\n      textColor: 'rgba(0, 0, 0, 0.6)',\r\n      textDarkColor: 'rgba(0, 0, 0, 0.87)',\r\n      textActiveColor: '#3f51b5',\r\n      menuHoverBgColor: 'rgb(229, 229, 229)',\r\n      menuActiveBgColor: 'rgb(239, 229, 253)',\r\n    },\r\n    common: {\r\n      dark: '#020202',\r\n    },\r\n    background: {\r\n      paper: '#FFFFFF',\r\n      default: '#f4f4f7',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.6)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.3)',\r\n      white: '#fff',\r\n    },\r\n    borderColor: {\r\n      main: 'rgba(0, 0, 0, 0.06)',\r\n      dark: 'rgba(0, 0, 0, 0.12)',\r\n    },\r\n    lightBtn: {\r\n      bgColor: '#f5f5f5',\r\n      textColor: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    popupColor: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n    },\r\n    MuiPopover: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        backgroundColor: '#FFFFFF',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nconst validationUrl = window.appsettings.validationUrl || process.env.REACT_APP_VALIDATION_URL;\r\nconst url = window.appsettings.appUrl || process.env.REACT_APP_URL;\r\nconst port = window.appsettings.appPort || process.env.REACT_APP_PORT;\r\n\r\nconst date = new Date();\r\nconst day = date.getDate();\r\nconst month = date.getMonth() + 1;\r\nconst year = date.getFullYear();\r\n\r\nconst addZero = val => {\r\n  if (val < 0) {\r\n    return '0' + val;\r\n  } else {\r\n    return val;\r\n  }\r\n};\r\nconst param = year + '-' + addZero(month) + '-' + addZero(day);\r\nexport const getOffset = async () => {\r\n  return await axios.get(`http://${url}:${port}/zone`);\r\n};\r\nconst timeOffset = localStorage.getItem(\"timeoffset\") || \"+3\";\r\n// export const getOffsetTime = () => {\r\n//   var offsetMin = new Date().getTimezoneOffset() / 60;\r\n//   if (offsetMin * -1 > 0 || offsetMin === 0) {\r\n//     return `+${offsetMin * -1}`;\r\n//   }\r\n//   return (offsetMin * -1).toString();\r\n// };\r\n//var offset = getOffsetTime();\r\n\r\nexport const getInboundCalls = async param => {\r\n  let query = `SELECT count (distinct(call_id)),\r\n  to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time\r\n  FROM cl_segments_view_new\r\n  where  (date_trunc('day', NOW() - INTERVAL '${param} day') <= start_time) \r\n  and act != 1 \r\n  and dst_dn_type = 0\r\n  and src_dn_type = 1\r\n  group by start_time::timestamp::date\r\n  order by start_time::timestamp::date asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getDidData = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidDataCount = async query => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getDidNumbers = async => {\r\n  let query = `select \r\nsubstring(conditiondata from '[0-9]+')  as conditiondata\r\nfrom inboundrule\r\nwhere conditiondata != '' \r\nand substring(conditiondata from '[0-9]+') is not null\r\norder by substring(conditiondata from '[0-9]+') asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getMonthlyDetails = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getMonthlyTotal = async values => {\r\n  return await axios.post(`http://${url}:${port}/queryresult`, values);\r\n};\r\n\r\nexport const getAgentList = async values => {\r\n  return await axios.post(`http://${url}:${port}/agentstatus`, values);\r\n};\r\nexport const getCallLog = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTrunksUp = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getCallLogDetails = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTotalTrunks = param => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, param);\r\n};\r\n\r\nexport const getExtensions = param => {\r\n  return axios.post(`http://${url}:${port}/extension`, param);\r\n};\r\n\r\nexport const getMissedCalls = async param => {\r\n  let query =\r\n    \"select to_char(date_trunc('day',t1.time_start), 'yyyy-mm-dd' ) as times, count(distinct(call_history_id)) from callcent_queuecalls_view t1 where t1.from_userpart != '' and (date_trunc('day', NOW() + INTERVAL '1 day') >=  t1.time_start) and  (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= t1.time_start) and is_answered = false group by times order by times\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getActiveCallCount = param => {\r\n  return axios.post(`http://${url}:${port}/activecallcount`, param);\r\n};\r\n\r\n//query iyileştirilebilir\r\nexport const getOutboundCalls = async param => {\r\n  let query =\r\n    \"SELECT count (start_time::timestamp::date), to_char(start_time::timestamp::date , 'yyyy-mm-dd') as start_time FROM cl_segments_view where dst_end_time - dst_answer_time != interval '00:00:00' and dst_caller_number like '%' and dst_answer_time is not null  and (date_trunc('day', NOW() + INTERVAL '1 day') >=  start_time) and (date_trunc('day', NOW() - INTERVAL '\" +\r\n    param +\r\n    \" day') <= start_time) and dst_dn_type = 1 and src_dn_type = 0 and act != 0 group by start_time::timestamp::date order by start_time::timestamp::date asc\";\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getQueue = async () => {\r\n  const query = 'SELECT * FROM queue_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\nexport const getRepetetiveAll = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(src_display_name) as cnt,\r\n\t  src_display_name \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'\r\n\t  group by src_display_name order by cnt desc\r\n\t  limit ${limit} offset ${allCallOffset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveAllCount = async (param, limit, allCallOffset, queue, didNumber) => {\r\n  const query = ` SELECT \r\n    count(distinct(src_display_name)) as cnt \r\n\t  FROM  cl_segments_view_new as t\r\n\t  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n\t  and src_dn_type = 1\r\n\t  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n\t  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n\t  and dst_dn like '%${queue}'\r\n\t  and src_did like '%${didNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getRepetetiveCallerDetails = async (param, callerNumber) => {\r\n  const query = `SELECT \r\n  src_display_name,\r\n  src_did,\r\n  dst_display_name,\r\n  to_char(dst_end_time-dst_answer_time ,'HH24h MIm SSs')as talkingtime,\r\n  to_char(dst_answer_time-dst_start_time,'HH24h MIm SSs') as waitingtime\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and src_dn_type = 1\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time) \r\n  and src_display_name = '${callerNumber}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\n\r\nexport const getReturnedDropCall = async (limit, offset, agNum, qNum) => {\r\n  const string = `with recursive dropped as (\r\n    select \r\n    *\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() + INTERVAL '1 day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '0 day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false  \r\n  )\r\n  select\r\n  cl_segments_view_new.src_dn,\r\n  cl_segments_view_new.src_display_name,\r\n  to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_start_time,\r\n  to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_end_time,\r\n  cl_segments_view_new.dst_dn,\r\n  dropped.q_num,\r\n  to_char(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_start_time,'HH24:MI:SS') as duration\r\n  from dropped\r\n  left outer join cl_segments_view_new on (dropped.from_userpart = cl_segments_view_new.dst_dn)\r\n  where cl_segments_view_new.dst_start_time > dropped.time_start\r\n  and cl_segments_view_new.src_dn like '%${agNum}'\r\n  and dropped.q_num like '%${qNum}'\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getCdr = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMontlyLog = async (paramMonth, paramBack) => {\r\n  const query = `SELECT \r\n    DATE_TRUNC('month',start_time),\r\n    COUNT (distinct(call_id)) as toplam\r\n    FROM cl_segments_view_new\r\n    where (date_trunc('month', NOW() - INTERVAL '${paramBack + paramMonth - 1} month') <= start_time) \r\n    and  date_trunc('month',now() - interval '${paramMonth - 2} month') >= start_time\r\n    GROUP BY DATE_TRUNC('month',start_time)\r\n    ORDER BY DATE_TRUNC('month',start_time) desc`;\r\n  return await axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getCallComparison = async (paramDate, paramBack) => {\r\n  const string =\r\n    \"select count (distinct(call_id)) , cast(sum(end_time-start_time) as text) as total, to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\"+timeOffset+\"') , 'yyyy-mm-dd HH24:MI:ss') as day_log,date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"') + '- \" +\r\n    paramBack +\r\n    \" day' <= start_time) and (date_trunc('day',  TIMESTAMP '\" +\r\n    paramDate +\r\n    \"')  + '1 day' >= start_time)  and act != 1 and start_time < end_time group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\"+timeOffset+\"') order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT\"+timeOffset+\"') desc\";\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallComparisonDaily = async (paramDate, paramBack) => {\r\n  const string = `select count (distinct(call_id)),\r\n   sum(end_time-start_time) as total,\r\n   to_char(date_trunc('day',  start_time) , 'yyyy-mm-dd') as day_log,\r\n   date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) as act\r\n   from cl_segments_view_new\r\n   where (date_trunc('day',  TIMESTAMP '${paramDate}') + '-${paramBack} day' <= start_time) \r\n   and (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)  \r\n   and act != 1 \r\n   and start_time < end_time\r\n   group by date_trunc('day',  start_time) \r\n   order by date_trunc('day',  start_time) desc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLog = async paramDate => {\r\n  let string = `select \r\n  count (distinct(call_id)) ,\r\n  cast(sum(end_time-start_time) as text) as total,\r\n  to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new \r\n  where \r\n  (date_trunc('day',  TIMESTAMP '${paramDate} 00:00:00' ) <= start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate} 23:59:59' )  + '1 day' >= start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}')\r\n  and act != 1\r\n  and\r\n  end_time> start_time\r\n  group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n  order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') desc`;\r\n  // const str = `select \r\n  // count (distinct(call_id)) ,\r\n  // cast(sum(end_time-start_time) as text) as total,\r\n  // to_char(date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') , 'dd-mm-yyyy HH24:MI:SS') AS hour_log,\r\n  // date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  // as act from cl_segments_view_new where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  // and \r\n  // (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  // and act != 1\r\n  // and\r\n  // end_time> start_time\r\n  // group by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n  // order by date_trunc('hour',  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailyLogTable = async paramDate => {\r\n  const string = ` select \r\n  to_char(date_trunc('day',  start_time),'dd-mm-yyyy HH24:MI:SS') as hour_log,\r\n  count (distinct(call_id)) , sum(end_time-start_time) as total,\r\n  date_trunc('second' ,sum(end_time-start_time)/count (distinct(call_id))) \r\n  as act from cl_segments_view_new\r\n  where (date_trunc('day',  TIMESTAMP '${paramDate}') <= start_time)\r\n  and \r\n  (date_trunc('day',  TIMESTAMP '${paramDate}')  + '1 day' >= start_time)\r\n  and act != 1\r\n  and\r\n  start_time<end_time\r\n  group by date_trunc('day',  start_time) \r\n  order by date_trunc('day',  start_time) desc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getRepetetiveAnswered = async (param, limit, answeredCallsOffset) => {\r\n  const query =\r\n    \"SELECT count( src_display_name) as cnt,src_display_name FROM  cl_segments_view_new as t where dst_end_time - dst_answer_time != interval '00:00:00' and dst_answer_time is not null and src_display_name like '0%' and (date_trunc('day', timestamp '\" +\r\n    param.paramStart +\r\n    \"' - INTERVAL '0 day') <= start_time) and (date_trunc('day', timestamp '\" +\r\n    param.paramFinish +\r\n    \"' + INTERVAL '1 day') >=  start_time) and dst_dn_type = '0' group by src_display_name order by cnt desc limit \" +\r\n    limit +\r\n    ' offset ' +\r\n    answeredCallsOffset;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getRepetetiveAnsweredCount = async param => {\r\n  const string = `SELECT \r\n  count(distinct( src_display_name)) as cnt\r\n  FROM  cl_segments_view_new as t\r\n  where dst_end_time - dst_answer_time != interval '00:00:00' \r\n  and dst_answer_time is not null\r\n  and src_display_name like '0%'\r\n  and (date_trunc('day', timestamp '${param.paramStart}' - INTERVAL '0 day') <= start_time) \r\n  and (date_trunc('day', timestamp '${param.paramFinish}' + INTERVAL '1 day') >=  start_time)\r\n  and dst_dn_type = '0'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetails = async (params, queue) => {\r\n  const query = `SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tto_char(sum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*),'HH24:MI:SS') as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >=  timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n\torder by (date_trunc('day' , callcent_ag_dropped_calls.time_start)) asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsDetailsTotal = async (params, queue) => {\r\n  const query = `with recursive cte1 as (\r\n    SELECT \r\n\tdate_trunc('day' , callcent_ag_dropped_calls.time_start) as day_abandoned,\r\n\tcount(*) as cnt,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start) as total_waiting,\r\n\tsum(callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start)/count(*) as act\r\n\tFROM \r\n\tcallcent_ag_dropped_calls \r\n\tinner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id \r\n\twhere  callcent_ag_dropped_calls.time_start >= timestamp '${params.startDate}'\r\n\tand callcent_ag_dropped_calls.time_start <=  timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n\tgroup by (date_trunc('day' , callcent_ag_dropped_calls.time_start))\r\n)\r\nselect\r\ncount(cte1.day_abandoned) as day_count,\r\nsum(cte1.cnt) as totalcount,\r\nsum(cte1.total_waiting) as totalwaiting,\r\nto_char(sum(cte1.act)/count(cte1.day_abandoned),'HH24:MI:SS') as act\r\nfrom cte1`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCalls = async (params, queue) => {\r\n  const query = `SELECT \r\n  t1.from_userpart, \r\n  to_char(date_trunc('second',t1.time_start + interval '3 hour'), 'yyyy-mm-dd HH24:MI:SS') as timeofevent, \r\n  count(t1.is_answered), \r\n  queue_view.display_name \r\n  from callcent_queuecalls_view t1  \r\n  inner join queue_view on queue_view.dn = t1.q_num  \r\n  where \r\n  t1.from_userpart != '' \r\n  and \r\n  queue_view.display_name like '%${queue}' \r\n  and \r\n  (date_trunc('day', TIMESTAMP '${params.endDate}' + '1 day') >=  t1.time_start)  \r\n  and \r\n  (date_trunc('day', TIMESTAMP '${params.startDate}') <= t1.time_start) \r\n  and \r\n  is_answered = false \r\n  and \r\n  reason_noanswercode != 2\r\n  and \r\n  reason_failcode = 1\r\n  group by t1.from_userpart , timeofevent,queue_view.display_name \r\n  order by timeofevent`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbondenedCallDetails = async (params, from_userpart) => {\r\n  const query = `SELECT '<--' as direction,src_dn,to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') AS dst_start_time,to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as dst_end_time,dst_end_time - dst_start_time as calltime from cl_segments_view_new where dst_dn = '${from_userpart}'\r\n  and (date_trunc('second', timestamp '${params}') <=  start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n    union \r\n    SELECT  '-->' as direction, \r\n    from_userpart,\r\n    to_char(time_start at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    time_end - time_start as calltime \r\n    from callcent_queuecalls_view where from_userpart like '%${from_userpart}'\r\n    and \r\n    is_answered = true \r\n    and (date_trunc('second', timestamp '${params}') <=  time_start at time zone 'utc' at time zone 'Etc/GMT${timeOffset}') \r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCalls = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAbandonedQueueCallsCount = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getServiceLevel = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDropCall = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    q_num,\r\n    to_char(time_start,'dd-mm-yyyy HH24:MI:SS') as time_start,\r\n    to_char(time_end,'dd-mm-yyyy HH24:MI:SS') as time_end,\r\n    ring_time,\r\n    from_userpart \r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day' ) >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n    order by time_start asc \r\n    LIMIT ${limit} OFFSET ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallSummary = async (paramStart, paramFinish) => {\r\n  const string = `    select\r\n\tto_char(date_trunc('day',time_start) , 'dd-mm-yyyy'),\r\n\tcount(distinct(call_history_id)),\r\n\tto_char(date_trunc('second',sum(ring_time)/count(distinct(call_history_id))),'HH24:MI:SS') as ring_time\r\n    from callcent_queuecalls_view \r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - interval '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day') <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false\r\n\tgroup by date_trunc('day',time_start)\t\r\n\torder by date_trunc('day',time_start) asc\r\n`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDropCallCount = async (paramStart, paramFinish, limit, offset) => {\r\n  const string = `select\r\n    count(*)\r\n    from callcent_queuecalls_view\r\n    where from_userpart != ''\r\n    and(date_trunc('day', NOW() - INTERVAL '${paramFinish} day') >=  callcent_queuecalls_view.time_start)\r\n    and (date_trunc('day', NOW() - INTERVAL '${paramStart} day' ) <= callcent_queuecalls_view.time_start)\r\n    and callcent_queuecalls_view.is_answered = false`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n//dosya ismi ve klasör yoluyla birlikte ilgili .wav kaydını getir.\r\nexport const getRecording = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return axios.get(`http://${url}:${port}/downloadrecord/` + query);\r\n};\r\nexport const getRecordingBytes = async (path, dir) => {\r\n  let directory = path + '/' + dir.split('/')[0];\r\n  let filename = dir.split('/')[1];\r\n  let query = encodeURIComponent(directory + '/') + '/' + encodeURIComponent(encodeURIComponent(filename));\r\n  return fetch(`http://${url}:${port}/downloadrecord/${query}`);\r\n};\r\n//kayıt dosyalarının bulunduğu klasörün yolunu getir.\r\nexport const getPath = async () => {\r\n  return axios.get(`http://${url}:${port}/getRecordingPath`);\r\n};\r\n//kayıt dosyalarının bulunduğu klasörün yolunu getir.\r\n// export const getRecordingPath = async () => {\r\n//   let query =\r\n//     \"SELECT instanceparamvalue FROM public.phonesystem_mastertable where instanceparamname = '\" +\r\n//     'INST_RECORDING_PATH' +\r\n//     \"'  ORDER BY instanceparamname ASC \";\r\n//   return axios.post(`http://${url}:${port}/querymaster`, {\r\n//     token: localStorage.getItem('token'),\r\n//     query: query,\r\n//   });\r\n// };\r\n\r\nexport const getValidation = async (param, type) => {\r\n  const response = await axios.get(`http://${validationUrl}:${port}/api/validation/?string=${param}&type=${type}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserAuth = async (username, password) => {\r\n  const response = await axios.get(`http://${url}:${port}/password/${username}/${password}`, {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const getUserPass = async pass => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'text/plain',\r\n    },\r\n  };\r\n\r\n  const response = await axios.get(`http://${url}:5600/api/userPass/?pass=` + encodeURIComponent(pass), config);\r\n  return response.data;\r\n};\r\n\r\nexport const getQueueList = async () => {\r\n  return axios.post(`http://${url}:${port}/queuewaiting`, {\r\n    token: localStorage.getItem('token'),\r\n  });\r\n};\r\n\r\nexport const getAgentConnection = async () => {\r\n  return axios.post(`http://${url}:${port}/detailconn`, { token: localStorage.getItem('token') });\r\n};\r\n\r\nexport const getActiveCalls = async () => {\r\n  return axios.get(`http://${url}:${port}/acd`);\r\n};\r\n\r\nexport const getAgentStatus = async pass => {\r\n  let query = `WITH RECURSIVE cte1 as (\r\n    select \r\n    dn.value,\r\n    ivr.name \r\n    from \r\n    dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    ) , \r\n    cte2 as (\r\n    select\r\n    * from callcent_ag_qstatus\r\n    where timeofupdate > date_trunc('day', timestamp '${pass}')\r\n    )\r\n  select\r\n  dn,\r\n  display_name,\r\n  coalesce((\r\n  select \r\n  case \r\n  when cte2.is_loggedin_in_queue = 0 then 'Login' \r\n  when cte2.is_loggedin_in_queue = 1 then 'Logout'\r\n  else cte1.name\r\n  end as status\r\n  from cte2\r\n  left outer join cte1 on cte1.value = cast(cte2.is_loggedin_in_queue as character varying)\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1  \r\n  ),'State') as states,\r\n  date_trunc('second',coalesce(now()- (\r\n  select \r\n  timeofupdate\r\n  from cte2\r\n  where ag_num = t.dn\r\n  order by cte2.timeofupdate desc\r\n  limit 1\r\n  ),'10000 hours')) as statusTime\r\n  from users_view t\r\n  order by dn asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: query });\r\n};\r\nexport const getBlock = async string => {\r\n  const response = await axios.get(\r\n    `http://${url}:5600/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\nexport const getAgentNumber = async () => {\r\n  let string = 'SELECT * FROM users_view order by dn asc';\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueNumber = async () => {\r\n  let string = 'SELECT * FROM public.queue_view order by dn asc';\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailyCallDetails = async mydate => {\r\n  let query = `WITH RECURSIVE cte1 AS (\r\n    select \r\n    * \r\n    from cl_segments_view_new\r\n    where \r\n    start_time > date_trunc('day', timestamp '${mydate}')\r\n    and\r\n\t  start_time<end_time\r\n    order by start_time desc\r\n    )\r\n    select \r\n    ( select count (distinct call_id) from cte1) as total_call,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 0 and dst_dn_type = 1) as outbound_calls,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 0 and dst_dn_type = 0 ) as agent_to_agent_calls,\r\n    ( select count (distinct call_id) from cte1 where  src_dn_type = 1 and dst_dn_type = 0 and dst_answer_time is not null) as answered_inbound_calls,\r\n    (select sum(end_time-start_time) as totaltime from cte1),\r\n    (select (date_trunc('second',(date_trunc('second', sum(end_time-start_time))/( select count (distinct cte1.call_id) from cte1 ))))as average from cte1)`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakTime = async mydate => {\r\n  let query = `select * from logouts`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getBreakName = async mydate => {\r\n  let query = `select \r\n  dn.value,\r\n  ivr.name,\r\n  dn.iddn \r\n  from dn \r\n  inner join ivr on dn.iddn = ivr.fkiddn\r\n  where cast(substring(dn.value from '[0-9]+') as bigint) >= 8072 \r\n  and cast(substring(dn.value from '[0-9]+') as bigint) <= 8079\r\n  order by dn.value asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakName = async (breakName, breakId) => {\r\n  let query = `update ivr set name = '${breakName}'\r\n  where ivr.fkiddn = ${breakId}`;\r\n  return axios.post(`http://${url}:${port}/insertsingle`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const setBreakTime = async (breakTime, breakNumber) => {\r\n  let query = `update logouts set period = ${breakTime}\r\n  where logouttype = '${breakNumber}'`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentDetails = async (agentNum, date) => {\r\n  let query = `\r\n  with recursive cte1 as \r\n\t( \r\n\tselect\r\n\tdst_dn,\r\n\tdst_display_name,\t\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time) as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom \r\n\tcl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\t((dst_dn_type = 0))\r\n\tand\r\n\tdst_dn = '${agentNum}'\t\r\n\tand \r\n\tact != 1\r\n\tgroup by dst_dn,dst_display_name),\r\n  cte2 as (\r\n\tselect\r\n\tsrc_dn,\r\n\tsrc_display_name,\r\n\tcount(distinct(call_id)) as totalcall,\r\n\tsum(end_time - start_time)as totaltime,\r\n\tdate_trunc('second',sum(end_time - start_time)/count(*)) as average\r\n\tfrom cl_segments_view_new\r\n\twhere\r\n\tstart_time > date_trunc('day',timestamp '${date}')\r\n\tand\r\n\tsrc_dn = '${agentNum}'\t\r\n\tand\r\n\t((src_dn_type =0) and (dst_dn_type=1))\r\n\t\r\n\tand \r\n\tact != 1\r\n\tgroup by src_dn,src_display_name\r\n) \t\r\n\tselect dst_dn,\r\n\tdst_display_name,\r\n  coalesce(cte1.totalcall,0) as inboundtotalcall,\r\n\tcoalesce(cte2.totalcall,0) as outboundtotalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') as inboundtotaltime,\r\n\tcoalesce(cte2.totaltime ,'0 second') as outboundtotaltime,\r\n\tcoalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0) as totalcall,\r\n\tcoalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second') as totaltime,\r\n\tdate_trunc('second',((coalesce(cte1.totaltime,'0 second') + coalesce(cte2.totaltime ,'0 second'))/(coalesce(cte1.totalcall,0) + coalesce(cte2.totalcall,0)))) as average,\r\n  date_trunc('second',((coalesce(cte1.totaltime,'0 second') /(coalesce(cte1.totalcall,1))))) as inboundaverage,\t\r\n\tdate_trunc('second',((coalesce(cte2.totaltime,'0 second')/(coalesce(cte2.totalcall,1))))) as outboundaverage,\r\n\tcoalesce(cte1.totalcall,0) as inbound_call_to_agent,\r\n\tcoalesce(cte2.totalcall,0) as outbound_call_to_agent,\r\n\t(select count(distinct(call_id)) from cl_segments_view_new \r\n\t where dst_answer_time is not null \r\n\t and dst_dn = cte1.dst_dn\r\n\t and start_time > date_trunc('day',timestamp '${date}')) as answered_call\r\n\tfrom cte1\r\n\tleft outer join cte2 on cte1.dst_dn = cte2.src_dn\r\n  \r\n\r\n`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSession = async (agNum, qNum, breakName, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%${qNum}'\r\n    and\r\n    ag_num like '%${agNum}'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )\r\n    \r\n    select \r\n    cte2.ag_num,\r\n    cte2.q_num,\r\n    case\r\n    when cte2.mainreason = 0 then 'Login'\r\n    when cte2.mainreason = 1 then 'Logout'\r\n    else cte1.name\r\n    end as status,\r\n    to_char(cte2.escapetime , 'dd.HH24:MI:SS') AS escapetime\r\n  \r\n   from cte2\t\r\n   left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n   where cast(cte2.mainreason as text) like '%${breakName}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getAgentSessionClicked = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte2.ag_num as Agent,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 1),'0 second')),'DDg HH24h MIm SSs') as Logout,\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8072),'0 second')),'DDg HH24h MIm SSs') as \"m8072\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8073),'0 second')),'DDg HH24h MIm SSs') as \"m8073\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8074),'0 second')),'DDg HH24h MIm SSs') as \"m8074\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8075),'0 second')),'DDg HH24h MIm SSs') as \"m8075\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8076),'0 second')),'DDg HH24h MIm SSs') as \"m8076\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8077),'0 second')),'DDg HH24h MIm SSs') as \"m8077\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8078),'0 second')),'DDg HH24h MIm SSs') as \"m8078\",\r\n\t  to_char(sum(coalesce((select (cte2.escapetime) where cte2.mainreason = 8079),'0 second')),'DDg HH24h MIm SSs') as \"m8079\" \r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n\t  where cte2.ag_num like '%${agNum}'\r\n    group by cte2.ag_num`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\nexport const getInternalBreakTime = async (agNum, startDate, endDate) => {\r\n  let query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n    ), cte2 as (SELECT\r\n    sum(timeofupdate - (select\r\n    timeofupdate\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num \r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1)) as escapetime,\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) as mainreason,\r\n    ag_num,\r\n    q_num\r\n    FROM\r\n    callcent_ag_qstatus qs\r\n    where\r\n    q_num like '%'\r\n    and\r\n    ag_num like '%'\r\n    and\r\n    is_loggedin_in_queue = 0\r\n    and\r\n    (select\r\n    is_loggedin_in_queue\r\n    from\r\n    callcent_ag_qstatus\r\n    where\r\n    ag_num = qs.ag_num\r\n    and\r\n    q_num = qs.q_num\r\n    and\r\n    qs.timeofupdate > timeofupdate\r\n    order by timeofupdate desc\r\n    limit 1) is not null\r\n    and\r\n    timeofupdate <= timestamp '${endDate} 23:59:59'\r\n    and\r\n    timeofupdate >= timestamp '${startDate} 00:00:00'\r\n    group by mainreason,ag_num,q_num\r\n    order by mainreason asc )    \r\n    select \r\n    cte1.name,\r\n\t  to_char(sum(cte2.escapetime),'DDg HH24h MIm SSs')\r\n    from cte2\t\r\n    left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value\r\n    where cte2.ag_num = '${agNum}'\r\n\t  and cte1.name is not null\r\n    group by cte1.name\r\n\t  order by sum(cte2.escapetime) desc\r\n\t  limit 5\r\n    `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: query,\r\n  });\r\n};\r\n\r\n//158 'in apileri/;\r\nexport const getAgentNumberV16 = async () => {\r\n  let string = 'SELECT dn,display_name FROM users_view order by dn asc';\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/usersview/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response.data;\r\n};\r\nexport const getIYSReport = async param => {\r\n  let string = '';\r\n  if (param.agent === 'All') {\r\n    string += `Select * from iysagents where issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  } else {\r\n    string += `Select * from iysagents where agent='${param.agent}' and issuetime between timestamp '${param.startdate}'-interval '3 hours' and timestamp '${param.enddate}'-interval '3 hours'`;\r\n  }\r\n\r\n  const response = await axios.get(\r\n    `http://${url}:${port}/api/postgres/?string=` + encodeURIComponent(CryptoJS.AES.encrypt(string, 'Secret Key')),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getTeamsUsers = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamsusers`, values);\r\n};\r\n\r\nexport const getCsOnlineVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getcsonlinevoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const getCsTenantDialplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/gettenantdiaplan`, values);\r\n};\r\n\r\nexport const getCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getteamscallingpolicys`, values);\r\n};\r\n\r\nexport const changeCsTeamsCallingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changecallingpolicy`, values);\r\n};\r\n\r\nexport const changeCsVoiceRoutingPolicy = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changeteamsvoiceroutingpolicy`, values);\r\n};\r\n\r\nexport const changeCsTenantDiaplan = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/changetenantdiaplan`, values);\r\n};\r\n\r\nexport const getUserDetailsByUserId = async values => {\r\n  return await axios.post(`http://${url}:${port}/teams/getuserbyid`, values);\r\n};\r\n\r\nexport const getQueueAnswerReport = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '${queueNum}%'\r\n  )\r\n  select \r\n  to_char(cte1.dst_start_time,'yyyy-mm-dd') as dst_start_time,\r\n  sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)) as waiting_time,\r\n  sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time) as talking,\r\n  cte1.src_display_name,\r\n  cte1.dst_dn\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '${src}%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n  ORDER BY cte1.dst_start_time ${order}\r\n  limit ${limit} offset ${offset}`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportCount = async (startDate, endDate, queueNum, src) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%${src}'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n/*with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '$12-17-2021' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%'\r\n  )\r\n,cte2 as (\r\n  select \r\n  (count(distinct(cte1.dst_dn))) as cnt\r\n  from\r\n  cl_segments_view\r\n  left outer join cte1 on cl_segments_view.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view.dst_start_time >= date_trunc('day',timestamp '12-16-2021')\r\n  and\r\n  cl_segments_view.dst_start_time<=date_trunc('day', timestamp '12-17-2021' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view.call_id = cte1.call_id\r\n  group by cte1.dst_dn,cte1.src_display_name,cte1.dst_start_time\r\n)\r\nselect \r\nsum(cte2.cnt) as summed \r\nfrom cte2\r\n  \r\n*/\r\n\r\nexport const getQueueAnswerReportSummary = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `    \r\n    with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name,\r\n\t  src_did\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n\tand\r\n\tsrc_did != ''\r\n\tand\r\n\tdst_dn_type != 6\r\n  )\r\n  select\r\n  'Total' as total,\r\n  to_char(date_trunc('day' , cte1.dst_start_time), 'dd-mm-yyyy') as date,\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act\r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  group by date_trunc('day' , cte1.dst_start_time)\r\n  ORDER BY date_trunc('day' , cte1.dst_start_time)  ASC\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getQueueAnswerReportSummaryTotal = async (startDate, endDate, queueNum, src, order, limit, offset) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    call_id,\r\n    src_display_name,\r\n    dst_answer_time-dst_start_time as waiting_time,\r\n    dst_end_time-dst_answer_time  as talking_time,\r\n    dst_dn,\r\n    dst_start_time,\r\n    dst_display_name\r\n    from cl_segments_view_new\r\n    where\r\n    dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n    and\r\n    dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n    and\r\n    src_dn_type != 0\r\n    and\r\n    dst_dn_type != 0\r\n    and\r\n    act = 10\r\n    and\r\n    dst_dn  like '%${queueNum}'\r\n    and\r\n    src_did != ''\r\n    and\r\n    dst_dn_type != 6\r\n  )\r\n  select\r\n  count(distinct(date_trunc('day' , cte1.dst_start_time))),\r\n  count(distinct(cte1.call_id)),\r\n  to_char(sum(cte1.talking_time+(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)),'HH24h MIm SSs') as waiting_time,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time),'HH24h MIm SSs') as talking,\r\n  to_char(sum(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as act,\r\n  to_char(sum(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time)/count(distinct(cte1.call_id)),'HH24h MIm SSs') as waiting_act  \r\n  from\r\n  cl_segments_view_new\r\n  left outer join cte1 on cl_segments_view_new.call_id = cte1.call_id\r\n  where\r\n  cl_segments_view_new.dst_start_time >= date_trunc('day',timestamp '${startDate}')\r\n  and\r\n  cl_segments_view_new.dst_start_time<=date_trunc('day', timestamp '${endDate}' + interval '1 day')\r\n  and\r\n  src_dn_type != 0\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  cte1.src_display_name like '%'\r\n  and\r\n  dst_answer_time is not null\r\n  and\r\n  cl_segments_view_new.call_id = cte1.call_id\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummary = async (startTime, endTime) => {\r\n  let string = `select * from cl_daily_summary_proc('${startTime}','${endTime}')`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryTotal = async (startTime, endTime) => {\r\n  let string = `\r\n  with recursive cte1 as (\r\n  select * from cl_daily_summary_proc('${startTime}','${endTime}')  \r\n  )\r\n  select\r\n'Total' as datetime,\r\nsum(cte1.totalcall) as totalcall,\r\nsum(cte1.answered) as answered,\r\nto_char(sum(cast(cte1.inboundtime as interval)), 'HH24:MI:ss') as inboundtime,\r\nto_char(sum(cast(cte1.waitingtime as interval)), 'HH24:MI:ss') as waitingtime,\r\nto_char(sum(cast(cte1.averageconnection as interval))/count(cte1.averageconnection), 'HH24:MI:ss') as averageconnection,\r\nsum(cte1.abondened) as abondened,\r\nsum(cte1.transfer) as transfer,\r\nto_char(sum(cast(cte1.long_time as interval)), 'HH24:MI:ss') as long_time,\r\nsum(cte1.zdisi) as zdisi,\r\nto_char(sum(cast(cte1.average_abondened_waiting as interval))/count(cte1.average_abondened_waiting), 'HH24:MI:ss') as average_abondened_waiting,\r\nsum(cte1.rona) as rona,\r\nsum(cte1.outbound) as outbound,\r\nto_char(sum(cast(cte1.outbound_time as interval)), 'HH24:MI:ss')as outbound_time,\r\nto_char(sum(cast(cte1.average_outbound_time as interval))/count(cte1.average_outbound_time), 'HH24:MI:ss') as average_outbound_time\r\nfrom cte1\r\n  `;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummary = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    group by src_dn\r\n  ), answerInb as (\r\n    select \r\n    dst_dn,\r\n    count(distinct(call_id)) as ansInbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by dst_dn\t\r\n  ), answerOutb as (\r\n    select\r\n    src_dn,\r\n    count(distinct(call_id)) as ansOutbound\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n  \r\n  select\r\n    age.dn as id,\r\n    age.display_name,\r\n    coalesce(inb.cntInbound,0) as total_inbound,\r\n    coalesce(outb.cntOutbound,0) as total_outbound,\r\n    coalesce(answerInb.ansInbound,0) as answered_inbound,\r\n    coalesce(answerOutb.ansOutbound,0) as answered_outbound\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn \r\n    left outer join answerInb on answerInb.dst_dn = age.dn\r\n    left outer join answerOutb on answerOutb.src_dn = age.dn\r\n    where age.dn like '%${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalled = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn like '%${agentNum}'\r\n    and dst_dn_type = 1\r\n    and act != 1\r\n  )\r\n  select \r\n  dst_display_name as en_uzun_aranan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n   dst_answer_time is not null\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCaller = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and act!= 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_uzun_arayan_numara,\r\n  cast(dst_end_time-dst_answer_time as character varying) as en_uzun_aranan_süre\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  and\r\n  dst_answer_time is not null\r\n\r\n  order by (dst_end_time-dst_answer_time) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCalledAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n    and src_dn ='${agentNum}' \r\n    and act != 1\r\n    and dst_dn_type = 1\r\n    order by dst_start_time desc\r\n  )\r\n  select \r\n  dst_display_name as en_cok_aranan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1  \r\n  group by dst_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getInternalsSummaryLongestCallerAmount = async (startTime, endTime, agentNum) => {\r\n  let string = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n  )\r\n  select \r\n  src_display_name as en_cok_arayan_numara,\r\n  count(distinct(call_id))\r\n  from\r\n  cte1\r\n  where\r\n  cte1.dst_dn ='${agentNum}'  \r\n  group by src_display_name\r\n  order by count(distinct(call_id)) desc\r\n  limit 5`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getAgentTotalCall = (startTime, cte) => {\r\n  let string = `with recursive cte1 as(select * from cl_segments_daily_statics('${startTime}','${startTime}')),cte2 as (select src_did,count(distinct(call_id)) as callDid from cte1 where src_did != '' group by src_did order by count(distinct(call_id)) desc limit 5),cte3 as (select dst_display_name,count(distinct(call_id)) as agentCall from cte1 where dst_dn_type = 0 group by dst_display_name order by count(distinct(call_id)) desc limit 5) select * from ${cte}`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, { token: localStorage.getItem('token'), query: string });\r\n};\r\n\r\nexport const getWallBoardVoiceMail = async agentNum => {\r\n  let string = `SELECT count(distinct(call_id)) \r\n  FROM public.cl_segments_view_new where dst_caller_number = 'Ext.9999' \r\n  and dst_start_time > date_trunc('day',Now()) \r\n  and act != 1\r\n  and src_dn_type = 1 and \r\n  dst_dn = '${agentNum}'`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getWallBoardLongTime = async agentNum => {\r\n  let string = `select\r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(dst_end_time - dst_start_time as text) as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  dst_dn = '${agentNum}' --parameter\r\n  and\r\n  dst_answer_time is not null\r\n  order by duration desc\r\n  limit 1`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getVersion = async () => {\r\n  return axios.get(`http://${url}:${port}/version`);\r\n};\r\n\r\nexport const getWallBoardWaitingTime = async agentNum => {\r\n  let string = `select \r\n  dst_dn,\r\n  dst_display_name,\r\n  cast(sum(dst_answer_time - dst_start_time) as text)  as duration\r\n  from\r\n  cl_segments_view_daily\r\n  where\r\n  dst_answer_time is not null\r\n  and\r\n  dst_dn_type = 0\r\n  and\r\n  src_dn_type = 1\r\n  and\r\n  dst_dn = '${agentNum}'\r\n  group by dst_dn , dst_display_name`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDenemeLogin = param => {\r\n  return axios.post(`http://${url}:${port}/login`, param);\r\n};\r\n\r\nexport const getCallLog2 = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2Total = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2TotalSummary = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallLog2Count = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDashboardTops = async string => {\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getCallDetail = async callid => {\r\n  /* OLD\r\nwith recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    )\r\n    select\r\n  */\r\n  let string = `with recursive cte1 as (\r\n    select\r\n    call_id,\r\n    dst_start_time,\r\n    coalesce(dst_answer_time,dst_end_time) as dst_answer_time,\r\n    dst_end_time,\r\n    src_display_name,\r\n    dst_display_name,\r\n    act,\r\n    act_dn_type,\r\n    src_did,\r\n    start_time,\r\n    end_time,\r\n    src_dn_type,\r\n    src_dn,\r\n    dst_dn_type\r\n    from\r\n    cl_segments_view_new\r\n    where call_id = '${callid}'\r\n    and act != 1\r\n    order by seg_order\r\n    )\r\n    select\r\n    to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','yyyy-mm-dd HH24:MI:SS') as start_time,\r\n    to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'-dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','HH24h MIm SSs') as ring_time,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'-dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','HH24h MIm SSs') as duration,\r\n    src_display_name as callers,\r\n    dst_display_name as calleds,\r\n    case when act = 12 then 'Transfer' when act = 10 and act_dn_type != 0 then 'Karşılama' when act = 10 and act_dn_type = 0 then 'Yönlendirme' when act_dn_type = 4 then 'Açılış ' else '-' end as states,\r\n    to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','yyyy-mm-dd HH24:MI:SS') as end_time\r\n    from cte1\r\n    order by dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}' asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalTotalCall = async date => {\r\n  let string = `select\r\n  call_id,\t\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  coalesce(to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS'),'-') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  order by start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalAnsweredCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and\r\n  dst_dn_type =0 \r\n  and\r\n  dst_answer_time is not null\r\n  order by dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutOfTime = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act=13`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalAbondenedCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 0 and act=15\r\n  order by dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalTransferCall = async date => {\r\n  let string = `with recursive cte1 as ( \r\n    select\r\n    *\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    dst_dn_type =0\r\n    and dst_start_time >= timestamp '${date}'\r\n    and dst_end_time <= timestamp '${date}' + interval '1 day'\r\n    and act = 12 and dst_dn_type = 0 \r\n    )\r\n    select\r\n    cl_segments_view_new.src_display_name as caller,\r\n    cte1.src_display_name as transferer,\r\n    cte1.dst_display_name as trasfered,\r\n    to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    inner join cte1 on cte1.call_id = cl_segments_view_new.call_id\r\n    where cl_segments_view_new.dst_start_time >= timestamp '${date}'\r\n    and cl_segments_view_new.dst_start_time <= timestamp '${date}' + interval '1 day'\r\n    and cl_segments_view_new.act != 1\r\n    and cl_segments_view_new.act != 12\r\n    order by cl_segments_view_new.dst_start_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDailySummaryModalRonaCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_end_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and dst_dn_type = 0 and dst_answer_time is null\r\n  order by dst_end_time asc`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n//hata 4\r\nexport const getCallTransferReport = async (agent, selectedStartTime, selectedEndTime) => {\r\n  let string = `select\r\n\tdst_display_name as transferer,\r\n\tact_display_name as trasfered,\r\n\tsrc_display_name as caller,\r\n\tto_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n    to_char(cl_segments_view_new.dst_answer_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as answer_time,\r\n    to_char(cl_segments_view_new.dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_answer_time-cl_segments_view_new.dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n    to_char(coalesce(cl_segments_view_new.dst_end_time-cl_segments_view_new.dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n    from\r\n    cl_segments_view_new\r\n    where \r\n    src_dn_type = 1\r\n    and \r\n\tdst_start_time >= timestamp '${selectedStartTime}'\r\n    and \r\n\tdst_end_time <= timestamp '${selectedEndTime}' + interval '1 day' \r\n    and \r\n\tdst_dn_type = 0 \r\n\tand \r\n\tdst_answer_time is not null\r\n\tand\r\n\tact = 10 -- transfer\r\n\tand\r\n\tact_dn_type != 8 -- not parked\r\n\tand\r\n\tstart_time != end_time\r\n\tand\r\n\tdst_display_name like '%${agent}%'\r\n\torder by call_id,seg_order`;\r\n\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getDailySummaryModalOutCall = async date => {\r\n  let string = `select\r\n  src_display_name,\r\n  dst_display_name,\r\n  to_char(dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as start_time,\r\n  to_char(dst_end_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}','dd-mm-yyyy HH24:MI:SS') as end_time,\r\n  to_char(coalesce(dst_answer_time-dst_start_time,'0 second'),'HH24h MIm SSs') as ring_time,\r\n  to_char(coalesce(dst_end_time-dst_answer_time,'0 second'),'HH24h MIm SSs') as talk_time\r\n  from\r\n  cl_segments_view_new\r\n  where dst_start_time >= timestamp '${date}'\r\n  and dst_start_time <= timestamp '${date}' + interval '1 day'\r\n  and act != 1\r\n  and dst_dn_type = 1\r\n  order by dst_end_time asc`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const getUsers = async () => {\r\n  let string = `SELECT * FROM public.users ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUser = async (userName, pass, type) => {\r\n  let string = `INSERT INTO public.users(name, pass, type) VALUES ('${userName}', '${pass}', '${type}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateUser = async (id, userName, pass, type) => {\r\n  let string = `UPDATE public.users\tSET name='${userName}', pass='${pass}', type='${type}' WHERE id = ${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepartmants = async () => {\r\n  let string = `SELECT * FROM public.departments ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepartmant = async name => {\r\n  let string = `INSERT INTO public.departments(name)VALUES ('${name}');`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const updateDepartmant = async (id, name) => {\r\n  let string = `UPDATE public.departments SET name='${name}' WHERE id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getQueues = async () => {\r\n  let string = `SELECT * FROM public.queue_view`;\r\n  return axios.post(`http://${url}:${port}/queryresult`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getDepOwnedQueues = async depId => {\r\n  let string = `SELECT * FROM public.department_queues where department_id = ${depId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `INSERT INTO public.department_queues(department_id, queue_id) VALUES (${depId}, ${queueId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedQueues = async (depId, queueId) => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId} and queue_id = ${queueId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepOwnedAllQueues = async depId => {\r\n  let string = `DELETE FROM public.department_queues WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserAllDepsWithDepId = async depId => {\r\n  let string = `DELETE FROM public.user_departments WHERE department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteDepWithDepId = async depId => {\r\n  let string = `DELETE FROM public.departments WHERE id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getSupervisors = async () => {\r\n  let string = `SELECT * FROM public.users where type = 'supervisor' ORDER BY id ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getUserOwndedDeps = async userId => {\r\n  let string = `SELECT * FROM public.user_departments where user_id = ${userId}`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const addUserOwndedDeps = async (userId, depId) => {\r\n  let string = `INSERT INTO public.user_departments(user_id, department_id) VALUES (${userId}, ${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDeps = async (userId, depId) => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId} and department_id = ${depId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserOwndedDepsByUserId = async userId => {\r\n  let string = `DELETE FROM public.user_departments WHERE user_id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteUserByUserId = async userId => {\r\n  let string = `DELETE FROM public.users WHERE id = ${userId};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getAgentsRecordListenAuth = async () => {\r\n  let string = `SELECT * FROM public.agent_auth ORDER BY agent_num ASC `;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setAgentsRecordListenAuthByAgentId = async (agentId, auth) => {\r\n  let string = `UPDATE public.agent_auth SET record_listen=${auth} WHERE agent_num = '${agentId}';`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const changeAgentStatus = async agentId => {\r\n  return axios.post(`http://${url}:${port}/changestatus`, {\r\n    token: localStorage.getItem('token'),\r\n    agentDn: `${agentId}`,\r\n  });\r\n};\r\n\r\n//tag tablosunda ilgili çağrıya ait kayıt\r\nexport const getTagsByCallId = async callId => {\r\n  let string = `SELECT * from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const getTagtextByCallId = async callId => {\r\n  let string = `SELECT tagtext from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const TagByID = async (tag, id) => {\r\n  const query = `UPDATE tag SET tagtext='${tag}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, tagtext)\r\n         SELECT ${id}, '${tag}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n//sadece skor bilgisi gelsin. * değil. veirler olduğu zaman ilgili fieldı yaz\r\nexport const getCallScoresByCallId = async callId => {\r\n  let string = `SELECT rating from tag WHERE call_id='${callId}';`;\r\n\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const ScoreByID = async (rating, id) => {\r\n  const query = `UPDATE tag SET rating='${rating}' WHERE call_id=${id};\r\n  INSERT INTO tag (call_id, rating)\r\n         SELECT ${id}, '${rating}'\r\n         WHERE NOT EXISTS (SELECT 1 FROM tag WHERE call_id=${id});`;\r\n\r\n  const response = axios.post(\r\n    `http://${url}:${port}/insertpostgres`,\r\n    { token: localStorage.getItem('token'), query: query },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getTagTypes = async () => {\r\n  let string = `SELECT * from public.tagtypes;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\nexport const addTagTypes = async (depName, tagMessage, depId) => {\r\n  let string = `INSERT INTO public.tagtypes(department, tagmassage,department_id) VALUES ('${depName}', '${tagMessage}',${depId});`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const setTagTypes = async (depName, tagMessage, depId, id) => {\r\n  let string = `UPDATE public.tagtypes SET \r\n  tagmassage='${tagMessage}',\r\n  department='${depName}', \r\n  department_id=${depId} \r\n  WHERE \r\n  tagtypes_id=${id};`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\nexport const deleteTag = async id => {\r\n  let string = `DELETE FROM public.tagtypes WHERE tagtypes_id=${id}`;\r\n  return axios.post(`http://${url}:${port}/insertpostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n\r\n//quality-report\r\n//fields ani,agent,score\r\nexport const getQualityReport = async () => {\r\n  let string = `SELECT * from public.csat;`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n};\r\n//quality-report\r\n\r\nexport const getQueuesByAgent = async param => {\r\n  const query = `SELECT queue_dn,queue_display_name FROM public.extensions_by_queues_view where extension_dn='${param}'`;\r\n\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const showBreaks = async agent => {\r\n  const query = `with recursive cte1 as (\r\n    select dn.value,ivr.name from dn \r\n    inner join ivr on dn.iddn = ivr.fkiddn\r\n    order by dn.value asc\r\n  ), cte2 as (SELECT to_char(\r\n        sum(timeofupdate - (select\r\n                  timeofupdate\r\n                  from\r\n                  callcent_ag_qstatus\r\n                  where\r\n                  ag_num = qs.ag_num\r\n                  and\r\n                  q_num = qs.q_num\r\n                  and\r\n                  qs.timeofupdate > timeofupdate\r\n                  order by timeofupdate desc\r\n                  limit 1)) , 'dd - HH24:MI:ss') as escapetime,\r\n        (select\r\n         is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) as mainreason,\r\n        ag_num,\r\n        q_num\r\n        FROM\r\n        callcent_ag_qstatus qs\r\n        where\r\n        ag_num like '${agent}'\r\n        and\r\n        is_loggedin_in_queue = 0\r\n        and\r\n        (select\r\n              is_loggedin_in_queue\r\n         from\r\n         callcent_ag_qstatus\r\n         where\r\n         ag_num = qs.ag_num\r\n         and\r\n         q_num = qs.q_num\r\n         and\r\n         qs.timeofupdate > timeofupdate\r\n         order by timeofupdate desc\r\n         limit 1) is not null\r\n        and\r\n       timeofupdate <= timestamp '${param} 23:59:59'\r\n        and\r\n        timeofupdate >= timestamp '${param} 00:00:00'\r\n        group by mainreason,ag_num,q_num\r\n        order by mainreason asc )\r\n        \r\n        select \r\n        cte2.ag_num,\r\n        cte2.q_num,\r\n        case\r\n        when cte2.mainreason = 0 then 'Login'\r\n        when cte2.mainreason = 1 then 'Logout'\r\n        else cte1.name\r\n        end as status,\r\n        cte2.escapetime\r\n        from cte2\r\n        left outer join cte1 on cast(cte2.mainreason as character varying) = cte1.value`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const changeSessionStatus = async agent => {\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/changestatus`,\r\n    JSON.stringify({ token: localStorage.getItem('token'), agentDn: agent }),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\nexport const qstatus = async param => {\r\n  const response = await axios.post(`http://${url}:${port}/agentqueues`, JSON.stringify(param), {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\nexport const getBreakNums = async () => {\r\n  const query = `select dn.value,ivr.name from dn full join ivr on dn.iddn=ivr.fkiddn  where value in ('8072','8073','8074','8075','8076','8077','8078','8079') order by value asc`;\r\n  const response = await axios.post(\r\n    `http://${url}:${port}/queryresult`,\r\n    { token: localStorage.getItem('token'), query: `${query}` },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    },\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const getDailyActiveCalls = async (paramDate) =>{\r\n  //  acc.action  at time zone 'Etc/GMT${timeOffset}' ,\r\n  //doğrusu yukarıdaki gibi ama 3 saat ilerde getiriyor. nedenine daha sonra bakılacaktır\r\n  let string = `select \r\n  acc.action  at time zone 'utc',\r\n  acc.acc\r\n  from acc \r\n  where \r\n  acc.action  > timestamp '${paramDate} 00:00:00' at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'\r\n  and\r\n  acc.action  < timestamp '${paramDate} 23:59:59'  at time zone 'utc' at time zone 'Etc/GMT${timeOffset}'\r\n  order by acc.action asc`;\r\n  return axios.post(`http://${url}:${port}/querypostgres`, {\r\n    token: localStorage.getItem('token'),\r\n    query: string,\r\n  });\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AppContext from './AppContext';\r\nimport defaultContext from './defaultContext';\r\nimport { darkTheme, lightTheme, semiDarkTheme } from '../../../../theme/themeColors';\r\nimport {getOffset} from 'api/api';\r\nconst initialThemeValue = defaultContext.theme;\r\nconst otherThemes = {\r\n  light: lightTheme,\r\n  'semi-dark': semiDarkTheme,\r\n  dark: darkTheme,\r\n};\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  const [locale, setLocale] = useState(defaultContext.defaultLng);\r\n  const [theme, setTheme] = useState(initialThemeValue);\r\n  const [themeType, setThemeType] = useState(defaultContext.themeType);\r\n  const [layout, setLayout] = useState(defaultContext.layout);\r\n  const [cardRadius, setCardRadius] = useState(defaultContext.theme.overrides.MuiCard.root.borderRadius);\r\n  const [direction, setDirection] = useState(initialThemeValue.direction || 'rtl');\r\n  const [showTourGuide, setTourGuideStatus] = useState(false);\r\n\r\n  const contextValue = React.useMemo(() => {\r\n    return {\r\n      locale,\r\n      setLocale,\r\n      theme,\r\n      setTheme,\r\n      layout,\r\n      setLayout,\r\n      themeType,\r\n      setThemeType,\r\n      cardRadius,\r\n      setCardRadius,\r\n      direction,\r\n      setDirection,\r\n      showTourGuide,\r\n      setTourGuideStatus,\r\n    };\r\n  }, [locale, theme, themeType, layout, direction, showTourGuide, cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      palette: {\r\n        ...prevState.palette,\r\n        ...otherThemes[themeType].palette,\r\n      },\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        ...otherThemes[themeType].overrides,\r\n      },\r\n    }));\r\n  }, [themeType]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      overrides: {\r\n        ...prevState.overrides,\r\n        MuiCard: {\r\n          ...prevState.overrides.MuiCard,\r\n          root: {\r\n            ...prevState.overrides.MuiCard.root,\r\n            borderRadius: cardRadius,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  }, [cardRadius]);\r\n\r\n  useEffect(() => {\r\n    setTheme(prevState => ({\r\n      ...prevState,\r\n      direction: direction,\r\n    }));\r\n    document.body.setAttribute('dir', direction);\r\n  }, [direction]);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    if (params.get('theme-type')) {\r\n      setThemeType(params.get('theme-type'));\r\n    }\r\n\r\n    if (params.get('layout')) {\r\n      setLayout(params.get('layout'));\r\n    }\r\n    getOffset().then(resp => {\r\n      if(parseInt(resp.data) > 0 || parseInt(resp.data) === 0){\r\n        localStorage.setItem(\"timeoffset\",`+${resp.data}`)\r\n      }\r\n      else{\r\n        localStorage.setItem(\"timeoffset\",resp.data);\r\n      }\r\n     });\r\n  }, [location.search]);\r\n\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst GridContainer = ({ children, ...rest }) => {\r\n  return (\r\n    <Grid container spacing={6} {...rest}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GridContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import React from 'react';\r\n\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { getBackgroundStyle, getSeparatorStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  footerRoot: props => ({\r\n    ...props.separatorStyles,\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 24,\r\n  }),\r\n}));\r\n\r\nconst CmtCardFooter = ({ backgroundColor, gradientDirection, separator, children }) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, null, gradientDirection);\r\n  const separatorStyles = getSeparatorStyle(separator, true);\r\n\r\n  const classes = useStyles({ separatorStyles });\r\n\r\n  return (\r\n    <Box className={clsx(classes.footerRoot, 'Cmtfooter-root')} style={backgroundStyles}>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtCardFooter.propTypes = {\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  gradientDirection: PropTypes.string,\r\n  separator: PropTypes.object,\r\n};\r\n\r\nCmtCardFooter.defaultProps = {\r\n  separator: { color: '', borderWidth: 0, borderStyle: 'solid' },\r\n};\r\n\r\nexport default CmtCardFooter;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { hexToRgba } from '../CmtHelpers/JssHelper';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  advCardRoot: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    overflow: 'hidden',\r\n    height: '100%',\r\n  },\r\n  cardOverlay: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  actionMenu: {\r\n    position: 'absolute',\r\n    top: 15,\r\n    right: 15,\r\n    zIndex: 4,\r\n    '& button': {\r\n      backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.5)',\r\n      padding: 0,\r\n      height: 40,\r\n      width: 40,\r\n      minWidth: 'auto',\r\n      fontSize: 10,\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(' + hexToRgba(deepPurple[500]) + ', 0.7)',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { Children, cloneElement, isValidElement, useRef } from 'react';\r\nimport { Box, Card } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CmtDropdownMenu from '../CmtDropdownMenu';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport useStyles from './index.style';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst CmtAdvCard = ({\r\n  className,\r\n  actions,\r\n  actionHandleIcon,\r\n  actionHandler,\r\n  actionMenuClassName,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  children,\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerRef = useRef(null);\r\n\r\n  const handleMouseEnter = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseEntered();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (headerRef.current) headerRef.current.onHeaderMouseLeft();\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, child => {\r\n    // Checking isValidElement is the safe way and avoids a TS error too.\r\n    if (isValidElement(child)) {\r\n      if (child.type.render && child.type.render.name) {\r\n        if (child.type.render.name === 'CmtCardHeader') {\r\n          return cloneElement(child, { ref: headerRef });\r\n        }\r\n      } else {\r\n        return cloneElement(child);\r\n      }\r\n    }\r\n\r\n    return child;\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      className={clsx(classes.advCardRoot, className)}\r\n      style={backgroundStyles}>\r\n      {actions.length > 0 && (\r\n        <Box ml={2} className={clsx(classes.actionMenu, actionMenuClassName)}>\r\n          <CmtDropdownMenu\r\n            TriggerComponent={<IconButton size=\"small\">{actionHandleIcon || <MoreVertIcon fontSize=\"small\" />}</IconButton>}\r\n            items={actions}\r\n            onItemClick={actionHandler}\r\n          />\r\n        </Box>\r\n      )}\r\n      {childrenWithProps}\r\n      {overlay.colors && <Box className={classes.cardOverlay} style={overlayStyles} />}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCmtAdvCard.propTypes = {\r\n  actions: PropTypes.array,\r\n  actionHandleIcon: PropTypes.element,\r\n  actionHandler: PropTypes.func,\r\n  actionMenuClassName: PropTypes.string,\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n};\r\n\r\nCmtAdvCard.defaultProps = {\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  actions: [],\r\n  actionMenuClassName: '',\r\n  actionHandler: null,\r\n};\r\n\r\nexport default CmtAdvCard;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  advCardContent: props => ({\r\n    ...props.backgroundStyles,\r\n    padding: 24,\r\n    position: 'relative',\r\n    '& > *': {\r\n      position: 'relative',\r\n      zIndex: 3,\r\n    },\r\n    '&:before': props.overlayStyles\r\n      ? {\r\n          ...props.overlayStyles,\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0,\r\n          zIndex: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n        }\r\n      : {},\r\n  }),\r\n  alignCenter: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    '& .Cmt-content-head': {\r\n      flexDirection: 'column',\r\n    },\r\n    '& .Cmt-avatar': {\r\n      marginRight: 0,\r\n      marginBottom: 15,\r\n    },\r\n  },\r\n  gridOrder1: {\r\n    order: 1,\r\n  },\r\n  gridOrder2: {\r\n    order: 2,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtContentHead from '../CmtTypography/CmtContentHead';\r\nimport useStyles from './CmtAdvCardContent.style';\r\nimport clsx from 'clsx';\r\nimport { getBackgroundStyle, getOverLayStyle } from '../CmtHelpers/JssHelper';\r\n\r\nconst CmtAdvCardContent = ({\r\n  icon,\r\n  avatar,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n  extraContent,\r\n  backgroundColor,\r\n  backgroundImage,\r\n  gradientDirection,\r\n  overlay,\r\n  columnSizes,\r\n  alignCenter,\r\n  reverseDir,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const backgroundStyles = getBackgroundStyle(backgroundColor, backgroundImage, gradientDirection);\r\n  const overlayStyles = getOverLayStyle(overlay);\r\n\r\n  const classes = useStyles({ overlayStyles, backgroundStyles, alignCenter });\r\n  const alignCenterClass = alignCenter ? classes.alignCenter : {};\r\n  const blockClasses = reverseDir ? [classes.gridOrder1, classes.gridOrder2] : [classes.gridOrder2, classes.gridOrder1];\r\n  const [blockFirst, blockSecond] = blockClasses;\r\n\r\n  let extraContentRender = null;\r\n  if (extraContent) {\r\n    extraContentRender = typeof extraContent === 'function' ? extraContent() : extraContent;\r\n  }\r\n\r\n  return (\r\n    <Box className={clsx(classes.advCardContent, 'Cmt-card-content', 'CmtAdvCard-Content', className)} {...rest}>\r\n      {extraContentRender || icon || avatar || title || subTitle ? (\r\n        <Grid container spacing={6}>\r\n          <Grid\r\n            item\r\n            xs={alignCenter ? 12 : 12}\r\n            sm={alignCenter ? 12 : columnSizes[0] === 12 ? 12 : 6}\r\n            md={alignCenter ? 12 : columnSizes[0]}\r\n            className={clsx(blockFirst, alignCenterClass)}>\r\n            <Box>\r\n              <CmtContentHead\r\n                icon={icon}\r\n                avatar={avatar}\r\n                title={title}\r\n                titleProps={titleProps}\r\n                subTitle={subTitle}\r\n                subTitleProps={subTitleProps}\r\n              />\r\n            </Box>\r\n            {extraContentRender && <Box>{extraContentRender}</Box>}\r\n          </Grid>\r\n          {children && (\r\n            <Grid\r\n              item\r\n              xs={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 12}\r\n              sm={alignCenter ? 12 : columnSizes[1] === 0 ? 0 : 6}\r\n              md={alignCenter ? 12 : columnSizes[1]}\r\n              className={blockSecond}>\r\n              <Box width={1}>{children}</Box>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} md={12}>\r\n            <Box width={1}>{children}</Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nCmtAdvCardContent.propTypes = {\r\n  icon: PropTypes.element,\r\n  avatar: PropTypes.element,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleProps: PropTypes.object,\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitleProps: PropTypes.object,\r\n  extraContent: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]),\r\n  backgroundColor: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  backgroundImage: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  overlay: PropTypes.object,\r\n  reverseDir: PropTypes.bool,\r\n  columnSizes: PropTypes.array,\r\n  alignCenter: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nCmtAdvCardContent.defaultProps = {\r\n  title: '',\r\n  subTitle: '',\r\n  overlay: { colors: '', opacity: 0, direction: '' },\r\n  reverseDir: false,\r\n  columnSizes: [6, 6],\r\n  alignCenter: false,\r\n  className: '',\r\n};\r\n\r\nexport default CmtAdvCardContent;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeaderRoot: {\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 12,\r\n    marginBottom: 2,\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  iconRoot: {\r\n    fontSize: 14,\r\n    display: 'block',\r\n    marginTop: 4,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from '@material-ui/core';\r\n\r\nconst apps = [\r\n  {\r\n    label: 'Andrioid App',\r\n    imageURL: '/images/dashboard/google_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n  {\r\n    label: 'IOS App',\r\n    imageURL: '/images/dashboard/apple_play_store.png',\r\n    link: 'http://play.store.com',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardRoot: {\r\n    color: theme.palette.common.white,\r\n    padding: 16,\r\n  },\r\n  titleRoot: {\r\n    fontSize: 10,\r\n    letterSpacing: 1.5,\r\n    marginBottom: 7,\r\n    textTransform: 'uppercase',\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\nconst DownloadApps = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard\r\n      className={classes.cardRoot}\r\n      backgroundColor={['#03DAC5 -18.96%', '#6200EE 108.17%']}\r\n      gradientDirection=\"180deg\">\r\n      <CmtAdvCardContent\r\n        title=\"Download Mobile Apps\"\r\n        titleProps={{\r\n          variant: 'body1',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        subTitle=\"Now, your account is on your fingers\"\r\n        subTitleProps={{\r\n          variant: 'h1',\r\n          component: 'div',\r\n          className: classes.subTitleRoot,\r\n        }}\r\n        extraContent={\r\n          <Box mt={5} mx={-2} display=\"flex\" alignItems=\"center\">\r\n            {apps.map((app, index) => (\r\n              <Box px={2} key={index}>\r\n                <Link href={app.link}>\r\n                  <CmtImage src={app.imageURL} />\r\n                </Link>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        }\r\n        alignCenter\r\n      />\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default DownloadApps;\r\n","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport useStyles from './CryptoCard.style';\r\n\r\nconst CryptoCard = ({ title, amount, progress, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const headerSubTitle = (\r\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n      <div style={{ fontWeight: 'fontWeightBold', fontSize: 20 }}>{amount}</div>\r\n      <Box ml={2} fontSize={16} color={progress.color} display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n        {progress.icon}\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CmtCard>\r\n      <CmtCardHeader\r\n        className={classes.cardHeaderRoot}\r\n        titleProps={{\r\n          variant: 'h6',\r\n          component: 'div',\r\n          className: classes.titleRoot,\r\n        }}\r\n        title={title}\r\n        subTitle={headerSubTitle}\r\n      />\r\n      {children}\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CryptoCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { Box, Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\n\r\nimport GridContainer from '../../GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mbSpace: {\r\n    marginBottom: 16,\r\n  },\r\n}));\r\n\r\nconst currencies = [\r\n  {\r\n    name: 'USD',\r\n    code: 'usd',\r\n  },\r\n  {\r\n    name: 'INR',\r\n    code: 'inr',\r\n  },\r\n  {\r\n    name: 'EURO',\r\n    code: 'euro',\r\n  },\r\n];\r\n\r\nconst currencyRates = {\r\n  'usd-inr': 74,\r\n  'inr-usd': 0.0135,\r\n  'usd-euro': 0.89,\r\n  'euro-usd': 1.13,\r\n  'inr-euro': 0.0117,\r\n  'euro-inr': 85,\r\n  'inr-inr': 1,\r\n  'usd-usd': 1,\r\n  'euro-euro': 1,\r\n};\r\n\r\nconst ConversionResult = ({ fromCurrency, toCurrency, amount, convertedValue, currencyRate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Box component=\"p\" mb={4} fontSize={12} color=\"text.primary\">\r\n        {`${amount} ${fromCurrency.name} equals`}\r\n      </Box>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.textPrimary, classes.mbSpace)}>\r\n        {convertedValue + ' ' + toCurrency.name}\r\n      </Typography>\r\n      <Box component=\"p\" fontSize={12} display=\"flex\" alignItems=\"center\" color=\"text.secondary\" mb={6}>\r\n        <span className=\"mr-2\">\r\n          {`@ 1 ${fromCurrency.name}`} = <span className={classes.textPrimary}>{`${currencyRate} ${toCurrency.name}`}</span>\r\n        </span>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConversionControls = ({ amount, setAmount, fromCurrency, setFromCurrency, toCurrency, setToCurrency }) => {\r\n  return (\r\n    <Box pb={{ xs: 6, md: 10, xl: 16 }}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>From</InputLabel>\r\n            <Select\r\n              label=\"From\"\r\n              value={fromCurrency}\r\n              onChange={event => setFromCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'from',\r\n                id: 'demo-controlled-open-select',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <FormControl style={{ width: '100%' }} variant=\"outlined\">\r\n            <InputLabel>To</InputLabel>\r\n            <Select\r\n              label=\"To\"\r\n              value={toCurrency}\r\n              onChange={event => setToCurrency(event.target.value)}\r\n              inputProps={{\r\n                name: 'to',\r\n                id: 'demo-controlled-open-select-to',\r\n              }}>\r\n              {currencies.map((currency, index) => (\r\n                <MenuItem key={index} value={currency}>\r\n                  {currency.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Amount\"\r\n            margin=\"normal\"\r\n            type=\"number\"\r\n            fullWidth\r\n            style={{\r\n              marginTop: 0,\r\n              marginBottom: 0,\r\n            }}\r\n            value={amount}\r\n            onChange={e => setAmount(parseFloat(e.target.value))}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst CurrencyCalculator = ({ title, titleProps, className }) => {\r\n  const [fromCurrency, setFromCurrency] = useState(currencies[0]);\r\n  const [toCurrency, setToCurrency] = useState(currencies[1]);\r\n  const [amount, setAmount] = useState(0);\r\n  const [convertedValue, setConvertedValue] = useState(0);\r\n  const [currencyRate, setCurrencyRate] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setCurrencyRate(currencyRates[`${fromCurrency.code}-${toCurrency.code}`]);\r\n    setConvertedValue(amount * currencyRate);\r\n  }, [fromCurrency, toCurrency, amount, currencyRate]);\r\n\r\n  const resetCalculator = () => {\r\n    setFromCurrency(currencies[0]);\r\n    setToCurrency(currencies[1]);\r\n    setAmount(0);\r\n  };\r\n\r\n  return (\r\n    <CmtCard className={className}>\r\n      {title && <CmtCardHeader title={title} titleProps={titleProps} />}\r\n      <CmtCardContent>\r\n        <div>\r\n          <ConversionResult\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              amount,\r\n              convertedValue,\r\n              currencyRate,\r\n            }}\r\n          />\r\n          <ConversionControls\r\n            {...{\r\n              fromCurrency,\r\n              toCurrency,\r\n              setFromCurrency,\r\n              setToCurrency,\r\n              amount,\r\n              setAmount,\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Button variant=\"outlined\" size={'large'} onClick={resetCalculator}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CurrencyCalculator;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.typography.body1,\r\n    color: theme.palette.text.primary,\r\n    wordBreak: 'break-word',\r\n    '& .anchor-link': {\r\n      marginTop: -96, // Offset for the anchor.\r\n      position: 'absolute',\r\n    },\r\n    '& pre, pre.language-jsx': {\r\n      margin: theme.spacing(0, 'auto'),\r\n      padding: theme.spacing(4),\r\n      backgroundColor: '#272c34',\r\n      direction: 'ltr',\r\n      borderRadius: 0,\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\r\n      maxWidth: 'calc(100vw - 32px)',\r\n      [theme.breakpoints.up('md')]: {\r\n        maxWidth: 'calc(100vw - 32px - 16px)',\r\n      },\r\n    },\r\n    // inline code\r\n    '& code': {\r\n      direction: 'ltr',\r\n      lineHeight: 1.4,\r\n      display: 'inline-block',\r\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n      WebkitFontSmoothing: 'subpixel-antialiased',\r\n      padding: '0 3px',\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.type === 'light' ? 'rgba(255, 229, 100, 0.2)' : 'rgba(255, 229, 100, 0.2)',\r\n      fontSize: '.85em',\r\n      borderRadius: 2,\r\n    },\r\n    '& code[class*=\"language-\"]': {\r\n      backgroundColor: '#272c34',\r\n      color: '#fff',\r\n      // Avoid layout jump after hydration (style injected by prism)\r\n      lineHeight: 1.5,\r\n    },\r\n    // code blocks\r\n    '& pre code': {\r\n      fontSize: '.9em',\r\n    },\r\n    '& .token.operator': {\r\n      background: 'transparent',\r\n    },\r\n    '& h1': {\r\n      ...theme.typography.h3,\r\n      fontSize: 40,\r\n      margin: '16px 0',\r\n    },\r\n    '& .description': {\r\n      ...theme.typography.h5,\r\n      margin: '0 0 40px',\r\n    },\r\n    '& h2': {\r\n      ...theme.typography.h4,\r\n      fontSize: 30,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h3': {\r\n      ...theme.typography.h5,\r\n      margin: '40px 0 16px',\r\n    },\r\n    '& h4': {\r\n      ...theme.typography.h6,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& h5': {\r\n      ...theme.typography.subtitle2,\r\n      margin: '32px 0 16px',\r\n    },\r\n    '& p, & ul, & ol': {\r\n      marginTop: 0,\r\n      marginBottom: 16,\r\n    },\r\n    '& ul': {\r\n      paddingLeft: 30,\r\n    },\r\n    '& h1, & h2, & h3, & h4': {\r\n      '& code': {\r\n        fontSize: 'inherit',\r\n        lineHeight: 'inherit',\r\n        // Remove scroll on small screens.\r\n        wordBreak: 'break-all',\r\n      },\r\n      '& .anchor-link-style': {\r\n        // To prevent the link to get the focus.\r\n        display: 'none',\r\n      },\r\n      '&:hover .anchor-link-style': {\r\n        display: 'inline-block',\r\n        padding: '0 8px',\r\n        color: theme.palette.text.secondary,\r\n        '&:hover': {\r\n          color: theme.palette.text.primary,\r\n        },\r\n        '& svg': {\r\n          width: '0.7em',\r\n          height: '0.7em',\r\n          fill: 'currentColor',\r\n        },\r\n      },\r\n    },\r\n    '& table': {\r\n      // Trade display table for scroll overflow\r\n      display: 'block',\r\n      wordBreak: 'normal',\r\n      width: '100%',\r\n      overflowX: 'auto',\r\n      WebkitOverflowScrolling: 'touch', // iOS momentum scrolling.\r\n      borderCollapse: 'collapse',\r\n      marginBottom: '16px',\r\n      borderSpacing: 0,\r\n      overflow: 'hidden',\r\n      '& .prop-name': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n      },\r\n      '& .required': {\r\n        color: theme.palette.type === 'light' ? '#006500' : '#a5ffa5',\r\n      },\r\n      '& .prop-type': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        color: theme.palette.type === 'light' ? '#932981' : '#ffb6ec',\r\n      },\r\n      '& .prop-default': {\r\n        fontFamily: 'Consolas, \"Liberation Mono\", Menlo, monospace',\r\n        borderBottom: `1px dotted ${theme.palette.divider}`,\r\n      },\r\n    },\r\n    '& td': {\r\n      ...theme.typography.body2,\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n      color: theme.palette.text.primary,\r\n    },\r\n    '& td code': {\r\n      lineHeight: 1.6,\r\n    },\r\n    '& th': {\r\n      lineHeight: theme.typography.pxToRem(24),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      color: theme.palette.text.primary,\r\n      whiteSpace: 'pre',\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      padding: 16,\r\n    },\r\n    '& blockquote': {\r\n      borderLeft: '5px solid #ffe564',\r\n      backgroundColor: 'rgba(255,229,100,0.2)',\r\n      padding: '4px 24px',\r\n      margin: '24px 0',\r\n      '& p': {\r\n        marginTop: '16px',\r\n      },\r\n    },\r\n    '& a, & a code': {\r\n      // Style taken from the Link component\r\n      color: theme.palette.secondary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n    '& img, video': {\r\n      maxWidth: '100%',\r\n    },\r\n    '& img': {\r\n      // Avoid layout jump\r\n      display: 'inline-block',\r\n    },\r\n    '& hr': {\r\n      height: 1,\r\n      margin: theme.spacing(6, 0),\r\n      border: 'none',\r\n      flexShrink: 0,\r\n      backgroundColor: theme.palette.divider,\r\n    },\r\n    '& kbd': {\r\n      // Style taken from GitHub\r\n      padding: '2px 5px',\r\n      font: '11px Consolas,Liberation Mono,Menlo,monospace',\r\n      lineHeight: '10px',\r\n      color: '#444d56',\r\n      verticalAlign: 'middle',\r\n      backgroundColor: '#fafbfc',\r\n      border: '1px solid #d1d5da',\r\n      borderRadius: 3,\r\n      boxShadow: 'inset 0 -1px 0 #d1d5da',\r\n    },\r\n    '& .token.property, .token.tag, .token.constant, .token.symbol, .token.deleted': {\r\n      color: 'rgb(252, 146, 158)',\r\n    },\r\n  },\r\n  scrollbarRoot: {\r\n    maxHeight: 'min(68vh, 1000px)',\r\n  },\r\n});\r\nconst useStyles = makeStyles(styles, { name: 'MarkdownElement', flip: false });\r\n\r\nconst MarkdownElement = React.forwardRef(function MarkdownElement(props, ref) {\r\n  const { className, renderedMarkdown, ...other } = props;\r\n  const classes = useStyles();\r\n  const more = {};\r\n\r\n  if (typeof renderedMarkdown === 'string') {\r\n    // workaround for https://github.com/facebook/react/issues/17170\r\n    // otherwise we could just set `dangerouslySetInnerHTML={undefined}`\r\n    more.dangerouslySetInnerHTML = { __html: renderedMarkdown };\r\n  }\r\n\r\n  return (\r\n    <PerfectScrollbar className={classes.scrollbarRoot}>\r\n      <div className={clsx(classes.root, 'markdown-body', className)} {...more} {...other} ref={ref} />\r\n    </PerfectScrollbar>\r\n  );\r\n});\r\n\r\nMarkdownElement.propTypes = {\r\n  className: PropTypes.string,\r\n  renderedMarkdown: PropTypes.string,\r\n};\r\n\r\nexport default MarkdownElement;\r\n","import * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport MarkdownElement from './MarkdownElement';\r\nimport prism from '../../../utils/prism';\r\n\r\nconst HighlightedCode = React.forwardRef(function HighlightedCode(props, ref) {\r\n  const { code, language, ...other } = props;\r\n  const renderedCode = React.useMemo(() => {\r\n    return prism(code.trim(), language);\r\n  }, [code, language]);\r\n\r\n  return (\r\n    <MarkdownElement ref={ref} {...other}>\r\n      <pre>\r\n        <code\r\n          className={`language-${language}`}\r\n          // eslint-disable-next-line react/no-danger\r\n          dangerouslySetInnerHTML={{ __html: renderedCode }}\r\n        />\r\n      </pre>\r\n    </MarkdownElement>\r\n  );\r\n});\r\n\r\nHighlightedCode.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  language: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HighlightedCode;\r\n","import prism from 'prismjs';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-diff';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/themes/prism-okaidia.css';\r\n\r\nexport default function highlight(code, language) {\r\n  let prismLanguage;\r\n  switch (language) {\r\n    case 'ts':\r\n      prismLanguage = prism.languages.tsx;\r\n      break;\r\n\r\n    case 'js':\r\n    case 'sh':\r\n      prismLanguage = prism.languages.jsx;\r\n      break;\r\n\r\n    case 'diff':\r\n      prismLanguage = { ...prism.languages.diff };\r\n      // original `/^[-<].*$/m` matches lines starting with `<` which matches\r\n      // <SomeComponent />\r\n      // we will only use `-` as the deleted marker\r\n      prismLanguage.deleted = /^[-].*$/m;\r\n      break;\r\n\r\n    default:\r\n      prismLanguage = prism.languages[language];\r\n      break;\r\n  }\r\n\r\n  if (!prismLanguage) {\r\n    if (language) {\r\n      throw new Error(`unsupported language: \"${language}\", \"${code}\"`);\r\n    } else {\r\n      prismLanguage = prism.languages.jsx;\r\n    }\r\n  }\r\n\r\n  return prism.highlight(code, prismLanguage);\r\n}\r\n","import React from 'react';\r\n\r\nimport { CardActions, makeStyles } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n    padding: '8px 24px',\r\n  },\r\n}));\r\n\r\nconst CmtCardActions = ({ className, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardActions className={clsx(classes.root, className, 'CmtCard-Actions')} {...rest}>\r\n      {children}\r\n    </CardActions>\r\n  );\r\n};\r\n\r\nCmtCardActions.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CmtCardActions;\r\n","import React, { useState } from 'react';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport HighlightedCode from './HighlightedCode';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport { Collapse, IconButton, Snackbar, Tooltip } from '@material-ui/core';\r\nimport CmtCardActions from '../../../../@coremat/CmtCard/CmtCardActions';\r\nimport copy from 'clipboard-copy';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    overflow: 'unset',\r\n  },\r\n  cardContent: {\r\n    position: 'relative',\r\n    paddingBottom: 0,\r\n  },\r\n  cardContentInner: {\r\n    position: 'relative',\r\n    paddingBottom: 40,\r\n  },\r\n  actionButtons: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  collapseStyle: {\r\n    borderBottomRightRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottomLeftRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    borderBottom: `4px solid ${theme.palette.primary.main}`,\r\n    overflow: 'hidden',\r\n  },\r\n}));\r\n\r\nconst CodeViewerCard = ({ code, language, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(undefined);\r\n\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleCopyClick = async () => {\r\n    await copy(code);\r\n    setSnackbarMessage('The source code has been copied.');\r\n    setSnackbarOpen(true);\r\n  };\r\n\r\n  const showCodeLabel = collapsed ? 'Hide the source' : 'Show the source';\r\n\r\n  return (\r\n    <CmtCard {...rest} className={classes.card}>\r\n      <CmtCardContent className={classes.cardContent}>\r\n        <Box className={classes.cardContentInner}>\r\n          {children}\r\n          {code && (\r\n            <CmtCardActions className={classes.actionButtons}>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={showCodeLabel} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={() => setCollapsed(!collapsed)}>\r\n                  <CodeIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip PopperProps={{ disablePortal: true }} title={'Copy the source'} placement=\"top\">\r\n                <IconButton size=\"small\" onClick={handleCopyClick}>\r\n                  <FileCopyOutlinedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </CmtCardActions>\r\n          )}\r\n        </Box>\r\n      </CmtCardContent>\r\n\r\n      <Collapse className={classes.collapseStyle} in={collapsed}>\r\n        <HighlightedCode code={code} language={language} />\r\n      </Collapse>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} onClose={handleSnackbarClose} message={snackbarMessage} />\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nexport default CodeViewerCard;\r\n","import React from 'react';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardHeader: {\r\n    padding: 16,\r\n  },\r\n  cardBody: {\r\n    position: 'relative',\r\n  },\r\n  cardContent: {\r\n    padding: 16,\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '100%',\r\n    zIndex: 1,\r\n  },\r\n  chartTitle: {\r\n    marginBottom: 6,\r\n  },\r\n  chartSubTitle: {\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    textTransform: 'capitalize',\r\n  },\r\n}));\r\n\r\nconst StatisticsCard = ({ backgroundColor, title, titleProps, amount, description, children, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtAdvCard backgroundColor={backgroundColor} {...rest}>\r\n      <CmtCardHeader className={classes.cardHeader} title={title} titleProps={titleProps} />\r\n      <Box className={classes.cardBody}>\r\n        <CmtAdvCardContent\r\n          className={classes.cardContent}\r\n          title={amount}\r\n          titleProps={{\r\n            variant: 'h1',\r\n            component: 'div',\r\n            className: classes.chartTitle,\r\n          }}\r\n          subTitle={description}\r\n          subTitleProps={{\r\n            className: classes.chartSubTitle,\r\n          }}\r\n          columnSizes={[12, 0]}\r\n        />\r\n        {children}\r\n      </Box>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\n\r\nexport default StatisticsCard;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#FA744F',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst MissedCallGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"card-img-bottom overflow-hidden\" width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time}({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color5\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#F79071\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#FA744F\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={0}\r\n          stackId=\"2\"\r\n          stroke=\"#FA744F\"\r\n          fill=\"url(#color5)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MissedCallGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneMissed';\r\nimport MissedGraph from './MissedCallGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst MissedCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.missed'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#8DCD03' }}>\r\n        <MissedGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissedCall;\r\n","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#8d46ef',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\n\r\nimport useStyles from './InboundStyle';\r\n\r\nconst InboundGraph = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ResponsiveContainer className={classes.root} width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <div className={classes.tooltip}>\r\n                {data.payload[0].payload.start_time} ({data.payload[0].payload.count})\r\n              </div>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color3\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#6166B3\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#544179\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#6200EE\"\r\n          fill=\"url(#color3)\"\r\n          fillOpacity={1}\r\n          type={'monotone'}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default InboundGraph;\r\n/**\r\n */\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneCallBackIcon from '@material-ui/icons/PhoneCallback';\r\nimport InboundGraph from './InboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst InboundRules = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.inbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ color: '#ffc107', icon: <PhoneCallBackIcon /> }}>\r\n        <InboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InboundRules;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst HeaderChart = props => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const _stroke = ctx.stroke;\r\n    let label = [];\r\n    let countInbound = [];\r\n    let countOutbound = [];\r\n    let countMissed = [];\r\n    ctx.stroke = function() {\r\n      ctx.save();\r\n      ctx.shadowColor = '#4C4C4C';\r\n      ctx.shadowBlur = 10;\r\n      ctx.shadowOffsetX = 2;\r\n      ctx.shadowOffsetY = 2;\r\n      _stroke.apply(this, arguments);\r\n      ctx.restore();\r\n    };\r\n    const inbound = props.inbound;\r\n    const outbound = props.outbound;\r\n    const missed = props.missed;\r\n    for (var i = 0; i < inbound.length; i++) {\r\n      label[i] = inbound[i].start_time;\r\n      countInbound[i] = inbound[i].count;\r\n      countOutbound[i] = outbound[i] !== undefined ? outbound[i].count : 0;\r\n      countMissed[i] = missed[i] !== undefined ? missed[i].count : 0;\r\n    }\r\n\r\n    return {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: 'Inbound Calls',\r\n          data: countInbound,\r\n          borderColor: '#7F39FB',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#7F39FB',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#7F39FB',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Outbound Calls',\r\n          data: countOutbound,\r\n          borderColor: '#FF8C00',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#FF8C00',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#FF8C00',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Missed Calls',\r\n          data: countMissed,\r\n          borderColor: '#0795F4',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: '#0795F4',\r\n          pointBorderColor: '#fff',\r\n          pointHoverBackgroundColor: '#0795F4',\r\n          pointHoverBorderColor: '#fff',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <Line data={data} height={100} options={options} />;\r\n};\r\n\r\nexport default HeaderChart;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  avatar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 40,\r\n    width: 40,\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    marginRight: 15,\r\n  },\r\n});\r\n\r\nconst HeaderChartItem = ({ item }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box bgcolor={item.bgColor} color={item.color} className={classes.avatar}>\r\n        {item.icon}\r\n      </Box>\r\n      <Box fontSize={16} fontWeight={700} color=\"text.primary\">\r\n        {item.label}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default HeaderChartItem;\r\n","import React from 'react';\r\nimport CmtAdvCardContent from '../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport CmtAdvCard from '../../../../@coremat/CmtAdvCard';\r\nimport CmtCardHeader from '../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport SiteTrafficGraph from './HeaderChart';\r\nimport { PhoneCallback, PhoneMissed, PhoneForwarded } from '@material-ui/icons';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Item from './HeaderChartItem';\r\nimport clsx from 'clsx';\r\nconst useStyles = makeStyles(theme => ({\r\n  scrollbarRoot: {\r\n    maxHeight: 350,\r\n  },\r\n  searchAction: {\r\n    position: 'relative',\r\n    width: 38,\r\n    height: 38,\r\n  },\r\n  searchActionBar: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    top: 2,\r\n    zIndex: 1,\r\n  },\r\n  cardContentRoot: {\r\n    '& .MuiGrid-container': {\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  badgeRoot: {\r\n    fontSize: 14,\r\n    letterSpacing: 0.25,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.15),\r\n    color: theme.palette.success.main,\r\n    padding: '2px 10px',\r\n    borderRadius: 30,\r\n  },\r\n  optionList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginBottom: 24,\r\n\r\n    '& > *:not(:last-child)': {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up('md')]: {\r\n        marginRight: 40,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SiteTraffic = props => {\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n  const actions = [\r\n    {\r\n      label: <IntlMessages id={'select.menu.weekly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('weekly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.monthly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('monthly');\r\n      },\r\n    },\r\n    {\r\n      label: <IntlMessages id={'select.menu.yearly'} />,\r\n      icon: <DateRange />,\r\n      onClick: () => {\r\n        handleChange('yearly');\r\n      },\r\n    },\r\n  ];\r\n  const list = [\r\n    {\r\n      icon: <PhoneCallback />,\r\n      label: <IntlMessages id={'dashboard.inbound'} />,\r\n      bgColor: '#C8BDFA',\r\n      color: '#7F39FB',\r\n    },\r\n    {\r\n      icon: <PhoneMissed />,\r\n      label: <IntlMessages id={'dashboard.missed'} />,\r\n      bgColor: '#ADD8E6',\r\n      color: '#0795F4',\r\n    },\r\n    {\r\n      icon: <PhoneForwarded />,\r\n      label: <IntlMessages id={'dashboard.outbound'} />,\r\n      bgColor: '#FBF3D2',\r\n      color: '#FF8C00',\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CmtAdvCard>\r\n        <CmtCardHeader\r\n          className={clsx(classes.headerRoot, 'pt-4')}\r\n          title={<IntlMessages id={'dashboard.statistics'} />}\r\n          actionsPos=\"top-corner\"\r\n          actions={actions}\r\n          style={{ height: '10px' }}></CmtCardHeader>\r\n        <CmtAdvCardContent className={classes.cardContentRoot}>\r\n          <CmtList\r\n            className={classes.optionList}\r\n            data={list}\r\n            style={{ height: '25px' }}\r\n            renderRow={(item, index) => <Item key={index} item={item} />}\r\n          />\r\n          <Box>\r\n            <SiteTrafficGraph inbound={props.inbound} outbound={props.outbound} missed={props.missed} />\r\n          </Box>\r\n        </CmtAdvCardContent>\r\n      </CmtAdvCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteTraffic;\r\n","import React from 'react';\r\nimport { Area, AreaChart, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tooltip: {\r\n    position: 'relative',\r\n    borderRadius: 6,\r\n    padding: '4px 12px',\r\n    backgroundColor: '#4E8D7C',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst OutboundGraph = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={50}>\r\n      <AreaChart data={props.data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n        <Tooltip\r\n          labelStyle={{ color: 'black' }}\r\n          cursor={false}\r\n          content={data => {\r\n            return data.payload[0] ? (\r\n              <Box className={classes.tooltip}>\r\n                {(data.payload[0].payload.start_time)} ({data.payload[0].payload.count})\r\n              </Box>\r\n            ) : null;\r\n          }}\r\n        />\r\n        <defs>\r\n          <linearGradient id=\"color12\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#ADCE74\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#4E8D7C\" stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area\r\n          dataKey=\"count\"\r\n          type=\"monotone\"\r\n          strokeWidth={2}\r\n          stackId=\"2\"\r\n          stroke=\"#4E8D7C\"\r\n          fill=\"url(#color12)\"\r\n          fillOpacity={1}\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default OutboundGraph;\r\n","import React from 'react';\r\nimport { CryptoCard } from '../../../../@jumbo/components/Common';\r\nimport PhoneForwardedIcon from '@material-ui/icons/PhoneForwarded';\r\nimport OutboundGraph from './OutboundGraph';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { DateRange, Dehaze } from '@material-ui/icons';\r\n\r\nconst OutboundCall = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = a => {\r\n    if (a === 'weekly') {\r\n      if (props.date.getDay() === 0) {\r\n        props.setParam(7);\r\n        handleClose();\r\n      } else {\r\n        props.setParam(props.date.getDay());\r\n        handleClose();\r\n      }\r\n    } else if (a === 'monthly') {\r\n      props.setParam(props.date.getDate());\r\n      handleClose();\r\n    } else if (a === 'yearly') {\r\n      props.setParam(calculateYearOfTheDay(props.date));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  function calculateYearOfTheDay(param) {\r\n    var start = new Date(param.getFullYear(), 0, 0);\r\n    var diff = param - start;\r\n    var oneday = 1000 * 60 * 60 * 24;\r\n    var day = Math.floor(diff / oneday);\r\n    return day;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CryptoCard\r\n        title={\r\n          <div>\r\n            <IntlMessages id={'dashboard.outbound'} />\r\n            <span>\r\n              <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}>\r\n                <Dehaze />\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button',\r\n                }}>\r\n                <MenuItem onClick={() => handleChange('weekly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => handleChange('monthly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem onClick={() => handleChange('yearly')}>\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.yearly\" />\r\n                </MenuItem>\r\n              </Menu>\r\n            </span>\r\n          </div>\r\n        }\r\n        amount={props.total}\r\n        progress={{ icon: <PhoneForwardedIcon />, color: '#E00930' }}>\r\n        <OutboundGraph data={props.data} />\r\n      </CryptoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboundCall;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CountUp from 'react-countup';\r\nimport clsx from 'clsx';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport CmtCardContent from '../../../../@coremat/CmtCard/CmtCardContent';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  containerRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  containerRootCenter: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: 16,\r\n    paddingBottom: 16,\r\n  },\r\n  contentRoot: {\r\n    position: 'relative',\r\n  },\r\n  contentRootCenter: {\r\n    marginLeft: 0,\r\n    marginTop: 13,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 2,\r\n  },\r\n}));\r\n\r\nconst CounterCard = ({\r\n  icon,\r\n  number,\r\n  numberProps,\r\n  label,\r\n  labelProps,\r\n  counterProps,\r\n  color,\r\n  gradientDirection,\r\n  alignCenter,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CmtCard gradientDirection={gradientDirection} {...rest}>\r\n      <CmtCardContent>\r\n        <Box\r\n          className={clsx(classes.containerRoot, 'container', {\r\n            [classes.containerRootCenter]: alignCenter,\r\n          })}\r\n          color={color}>\r\n          {typeof icon === 'string' ? <CmtImage src={icon} alt={label} /> : icon}\r\n          <Box\r\n            ml={{ xs: 3, xl: 5 }}\r\n            className={clsx(classes.contentRoot, 'content-wrapper', {\r\n              [classes.contentRootCenter]: alignCenter,\r\n            })}>\r\n            <Box component=\"h3\" fontSize={{ xs: 20, xl: 24 }} className={clsx(classes.titleRoot, 'title')} {...numberProps}>\r\n              {typeof number === 'string' ? (\r\n                number\r\n              ) : (\r\n                <CountUp start={0} end={number || 0} useEasing={false} separator={','} {...counterProps} />\r\n              )}\r\n            </Box>\r\n            <Box component=\"p\" {...labelProps}>\r\n              {label}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </CmtCardContent>\r\n    </CmtCard>\r\n  );\r\n};\r\n\r\nCounterCard.prototype = {\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  numberProps: PropTypes.object,\r\n  label: PropTypes.string,\r\n  labelProps: PropTypes.object,\r\n  counterProps: PropTypes.object,\r\n  color: PropTypes.string,\r\n  gradientDirection: PropTypes.string,\r\n  alignCenter: PropTypes.bool,\r\n};\r\n\r\nCounterCard.defaultProps = {\r\n  color: 'common.white',\r\n  gradientDirection: '180deg',\r\n  alignCenter: false,\r\n};\r\n\r\nexport default CounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport { GroupOutlined } from '@material-ui/icons';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst TasksCounterCard = () => {\r\n  const [extensions, setExtensions] = useState('');\r\n  const [param] = useState({ token: localStorage.getItem('token') });\r\n  useEffect(() => {\r\n    api\r\n      .getExtensions(param)\r\n      .then(resp => setExtensions(resp.data.data.activeExtension + '/' + resp.data.data.totalExtension));\r\n  }, [param]);\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<GroupOutlined />}\r\n        number={String(extensions)}\r\n        label={<IntlMessages id={'dashboard.extensions'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksCounterCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cable from '@material-ui/icons/Link';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst Trunks = () => {\r\n  let totalquery = 'select * from public.externalline order by fkiddn ASC';\r\n  let trunksUpQuery = 'SELECT count(ipincontactreg) FROM gateway';\r\n\r\n  const [paramtotal] = useState({ token: localStorage.getItem('token'), query: totalquery });\r\n  const [paramTrunksUp] = useState({ token: localStorage.getItem('token'), query: trunksUpQuery });\r\n  const [totalTrunks, setTotalTrunks] = useState('');\r\n\r\n  const [trunksUp, setTrunksUp] = useState([{ count: 0 }]);\r\n  useEffect(() => {\r\n    api.getTotalTrunks(paramtotal).then(resp => setTotalTrunks(JSON.parse(resp.data.data)));\r\n    api.getTrunksUp(paramTrunksUp).then(resp => setTrunksUp(JSON.parse(resp.data.data)));\r\n  }, [paramtotal, paramTrunksUp]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<Cable />}\r\n        number={String(trunksUp[0].count) + '/' + String(totalTrunks.length)}\r\n        label={<IntlMessages id={'dashboard.trunks'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trunks;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CounterCard from '../../../../@jumbo/components/Common/CounterCard';\r\nimport PhoneIcon from '@material-ui/icons/PhoneOutlined';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nconst ActiveCallCount = () => {\r\n  const [response, setactiveCount] = useState();\r\n  const [param] = useState({\r\n    token: localStorage.getItem('token'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.getActiveCallCount(param).then(resp => setactiveCount(resp.data.data.count));\r\n  }, [param]);\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <CounterCard\r\n        icon={<PhoneIcon />}\r\n        number={String(response)}\r\n        label={<IntlMessages id={'dashboard.active'} />}\r\n        labelProps={{\r\n          fontSize: 16,\r\n        }}\r\n        backgroundColor={['#EA4C4C -18.96%', '#C14545 108.17%']}\r\n        gradientDirection=\"180deg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveCallCount;\r\n","export function Logout() {\r\n  localStorage.removeItem('login');\r\n  localStorage.removeItem('token');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5AnsweredCalls() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n        select\r\n        dn,\r\n        display_name\r\n        from\r\n        users_view\r\n      ), inb as (\r\n        select \r\n        dst_dn,\r\n        count(distinct(call_id)) as cntInbound\r\n        from\r\n        cl_segments_view\r\n        where start_time >= date_trunc('day',timestamp '${startTime}')\r\n        and dst_dn_type = 0\r\n        and dst_answer_time is not null\r\n        and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n        group by dst_dn\r\n      )\r\n      \r\n      select\r\n        age.display_name,\r\n        sum(coalesce(inb.cntInbound,0)) as total,\r\n        age.dn\r\n        from age\r\n        left outer join inb on inb.dst_dn = age.dn\r\n        where age.dn like '%'\r\n        group by age.display_name,age.dn\r\n        order by sum(coalesce(inb.cntInbound,0)) desc\r\n        limit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5answercalls'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && parseInt(data[1]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && parseInt(data[2]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && parseInt(data[3]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && parseInt(data[4]?.total) !== 0 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Inbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5inbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name.split(':')[0]} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name.split(':')[0]} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name.split(':')[0]} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name.split(':')[0]} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name.split(':')[0]} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DashboardTop5Outbound() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n\tsrc_display_name,\r\n\tsrc_dn,\r\n\tcount(distinct(call_id)) as totalInb  \r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 1\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n\tgroup by src_display_name,src_dn\r\n  )\r\n    select\r\n    src_display_name as display_name,\r\n\tsrc_dn as dn,\r\n\ttotalInb as total\r\n    from inb\r\n\torder by totalInb desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5outbound'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[0]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[0]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[1]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[1]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[2]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[2]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[3]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[3]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <b>{data[4]?.total}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((parseInt(data[4]?.total) / parseInt(data[0]?.total)) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getDashboardTops } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { QueryBuilder } from '@material-ui/icons';\r\n\r\nexport default function DashboardTop5TalkTime() {\r\n  const convertTimeToApiString = timeString => {\r\n    return timeString.split('.')[2] + '-' + timeString.split('.')[1] + '-' + timeString.split('.')[0];\r\n  };\r\n  let [startTime, setStartTime] = useState(\r\n    convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n  );\r\n  let [endTime, setEndTime] = useState(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n  let string = `with recursive age as (\r\n    select\r\n    dn,\r\n    display_name\r\n    from\r\n    users_view\r\n  ), inb as (\r\n    select \r\n    dst_dn,\r\n\tsum(dst_end_time-dst_answer_time) as durationInb,\r\n    count(distinct(call_id)) as cntInbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and dst_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null  \r\n    group by dst_dn\r\n  ),outb as (\r\n    select\r\n    src_dn,\r\n\tsum(dst_end_time - dst_answer_time) as duration,  \r\n    count(distinct(call_id)) as cntOutbound\r\n    from\r\n    cl_segments_view\r\n    where start_time >= date_trunc('day',timestamp '${startTime}')\r\n    and src_dn_type = 0\r\n    and start_time <= date_trunc('day',timestamp '${endTime}' + interval '1 day')\r\n\tand dst_answer_time is not null\r\n    group by src_dn\r\n  )\r\n    select\r\n    age.display_name,\r\n\tage.dn,\r\n\tsum(outb.duration+inb.durationInb)\r\n    from age\r\n    left outer join inb on inb.dst_dn = age.dn\r\n    left outer join outb on outb.src_dn = age.dn\r\n\twhere outb.duration+inb.durationInb is not null\r\n\tgroup by age.display_name,age.dn\r\n\torder by sum(outb.duration+inb.durationInb) desc\r\n\tlimit 5`;\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDashboardTops(string).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n    });\r\n  }, [startTime, endTime, string]);\r\n\r\n  const totalseconds = items => {\r\n    let total = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i]?.sum.includes('.')) {\r\n        total += parseInt(items[i]?.sum.split('.')[0]) * 24 * 60 * 60;\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      } else {\r\n        total +=\r\n          parseInt(items[i]?.sum.split(':')[0]) * 60 * 60 +\r\n          parseInt(items[i]?.sum.split(':')[1]) * 60 +\r\n          parseInt(items[i]?.sum.split(':')[2]);\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const checkDots = timeString => {\r\n    if (timeString === undefined) {\r\n      return '';\r\n    }\r\n    if (timeString?.includes('.')) {\r\n      let tempHour = parseInt(timeString.split('.')[0]) * 24 + parseInt(timeString.split('.')[1].split(':')[0]);\r\n      return tempHour + 'h ' + timeString.split(':')[1] + 'm ' + timeString.split(':')[2] + 's';\r\n    } else {\r\n      return timeString?.split(':')[0] + 'h ' + timeString?.split(':')[1] + 'm ' + timeString?.split(':')[2] + 's';\r\n    }\r\n  };\r\n\r\n  let [selectedTime, setSelectedTime] = useState('weekly');\r\n\r\n  const handleClick = selectTimeString => {\r\n    setSelectedTime(selectTimeString);\r\n    // let start = new Date();\r\n    // let end = new Date();\r\n    switch (selectTimeString) {\r\n      case 'weekly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'daily':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 0)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'mountly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 30)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      case 'yearly':\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 365)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n      default:\r\n        setStartTime(\r\n          convertTimeToApiString(new Date(new Date().setDate(new Date().getDate() - 7)).toLocaleDateString('tr-TR')),\r\n        );\r\n        setEndTime(convertTimeToApiString(new Date().toLocaleDateString('tr-TR')));\r\n        break;\r\n    }\r\n  };\r\n\r\n  //   console.log(new Date().toLocaleDateString());\r\n  //   let asdad = new Date().setDate(new Date().getDate() - 7);\r\n  //   console.log(convertTimeToApiString(new Date(asdad).toLocaleDateString()));\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent style={{ height: '300px' }}>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <IntlMessages id={'top5talktime'} />\r\n          </Typography>\r\n          <hr style={{ opacity: '.5', marginTop: '5px', marginBottom: '5px' }} />\r\n          {data.length === 0 && (\r\n            <div style={{ textAlign: 'center', fontWeight: '800', fontSize: '20px' }}>\r\n              <IntlMessages id={'norecord'} />\r\n            </div>\r\n          )}\r\n          {data.length > 0 && (\r\n            <>\r\n              {data.length >= 1 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[0]?.display_name} ({data[0]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[0]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[0]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 2 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[1]?.display_name} ({data[1]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[1]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[1]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 3 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[2]?.display_name} ({data[2]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[2]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[2]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 4 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[3]?.display_name} ({data[3]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[3]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[3]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {data.length >= 5 && (\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={7}>\r\n                      <p>\r\n                        {data[4]?.display_name} ({data[4]?.dn})\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item md={5}>\r\n                      <div style={{ textAlign: 'right' }}>\r\n                        <QueryBuilder style={{ fontSize: '17px', color: '#ff72b3', verticalAlign: '-3px' }} />{' '}\r\n                        <b>{checkDots(data[4]?.sum)}</b>\r\n                      </div>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    color=\"primary\"\r\n                    value={Math.floor((totalseconds([data[4]]) / totalseconds([data[0]])) * 100)}\r\n                    style={{ height: '10px', borderRadius: '10px' }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n        <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined info button group\" style={{ width: '100%' }}>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'daily' ? true : false}\r\n            onClick={() => handleClick('daily')}>\r\n            <IntlMessages id={'daily'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'weekly' ? true : false}\r\n            onClick={() => handleClick('weekly')}>\r\n            <IntlMessages id={'weekly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'mountly' ? true : false}\r\n            onClick={() => handleClick('mountly')}>\r\n            <IntlMessages id={'mountly'} />\r\n          </Button>\r\n          <Button\r\n            style={{ width: '25%',textTransform:'none' }}\r\n            size=\"small\"\r\n            disabled={selectedTime === 'yearly' ? true : false}\r\n            onClick={() => handleClick('yearly')}>\r\n            <IntlMessages id={'yearly'} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport DashboardTop5AnsweredCalls from './DashboardTop5AnsweredCalls';\r\nimport DashboardTop5Inbound from './DashboardTop5Inbound';\r\nimport DashboardTop5Outbound from './DashboardTop5Outbound';\r\nimport DashboardTop5TalkTime from './DashboardTop5TalkTime';\r\n\r\nexport default function DashboardTops() {\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <Grid item md={3}>\r\n          <DashboardTop5TalkTime />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5AnsweredCalls />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Inbound />\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <DashboardTop5Outbound />\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MissedCalls from './MissedCalls';\r\nimport InboundRules from './InboundRules';\r\nimport HeaderChartComponent from './HeaderChartComponent';\r\nimport OutboundCall from './OutboundCall';\r\nimport Extensions from './Extensions';\r\nimport * as api from '../../../api/api';\r\nimport Trunks from './TrunksUp';\r\nimport ActiveCallCount from './ActiveCallCount';\r\nimport { useHistory } from 'react-router';\r\nimport { Logout } from 'services/auth/logout';\r\nimport DashboardTops from './Tops';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nconst breadcrumbs = [\r\n  { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n  { label: <IntlMessages id={'sidebar.dashboard'} />, isActive: true },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  orderLg1: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SamplePage = () => {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  let date = new Date();\r\n\r\n  let totalInbound = 0;\r\n  let totalOutbound = 0;\r\n  let totalMissed = 0;\r\n  const [param, setParam] = useState(date.getDate());\r\n  const [inboundcalls, setInbound] = useState([]);\r\n  const [outboundcalls, setOutbound] = useState([]);\r\n  const [missedcalls, setMissedCalls] = useState([]);\r\n\r\n  // const convertToLocalTimeData = date_ => {\r\n  //   var date = new Date(date_);\r\n  //   var year = date.getFullYear();\r\n  //   var month = date.getMonth() + 1;\r\n  //   var dt = date.getDate();\r\n\r\n  //   if (dt < 10) {\r\n  //     dt = '0' + dt;\r\n  //   }\r\n  //   if (month < 10) {\r\n  //     month = '0' + month;\r\n  //   }\r\n\r\n  //   return year + '-' + dt + '-' + month;\r\n  // };\r\n\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n  const sort = array => {\r\n    return array.sort((a, b) => {\r\n      let da = new Date(a.start_time.split('-')[1] + '/' + a.start_time.split('-')[0] + '/' + a.start_time.split('-')[2]);\r\n      let db = new Date(b.start_time.split('-')[1] + '/' + b.start_time.split('-')[0] + '/' + b.start_time.split('-')[2]);\r\n      return da - db;\r\n    });\r\n  };\r\n  if (missedcalls.length > 0) {\r\n    for (let i = 0; i < missedcalls.length; i++) {\r\n      totalMissed += parseInt(missedcalls[i].count);\r\n    }\r\n    // missedcalls.map(Miss => {\r\n    //   totalMissed += parseInt(Miss.count);\r\n    // });\r\n  }\r\n\r\n  if (outboundcalls.length > 0) {\r\n    for (let i = 0; i < outboundcalls.length; i++) {\r\n      totalOutbound += parseInt(outboundcalls[i].count);\r\n    }\r\n    // outboundcalls.map(Out => {\r\n    //   totalOutbound += parseInt(Out.count);\r\n    // });\r\n  }\r\n\r\n  if (inboundcalls.length > 0) {\r\n    for (let i = 0; i < inboundcalls.length; i++) {\r\n      totalInbound += parseInt(inboundcalls[i].count);\r\n    }\r\n    // inboundcalls.map(Inbound => {\r\n    //   totalInbound += parseInt(Inbound.count);\r\n    // });\r\n  }\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMissedCalls(param - 1)\r\n      .then(resp => setMissedCalls(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getOutboundCalls(param - 1)\r\n      .then(resp => setOutbound(JSON.parse(resp.data.data)))\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n    api\r\n      .getInboundCalls(param - 1)\r\n      .then(resp => {\r\n        setInbound(JSON.parse(resp.data.data));\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response?.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [param, history]);\r\n\r\n  const inboundObject = inboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const outboundObject = outboundcalls.map(data => ({\r\n    start_time: data.start_time,\r\n    count: data.count,\r\n  }));\r\n\r\n  const missedObject = missedcalls.map(data => ({\r\n    start_time: data.times,\r\n    count: data.count,\r\n  }));\r\n\r\n  for (let d = new Date(date.getFullYear(), date.getMonth(), 1); d <= date; d.setDate(d.getDate() + 1)) {\r\n    if (!inboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      inboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!outboundObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      outboundObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n    if (!missedObject.some(data => data.start_time === convertToLocalTime(d))) {\r\n      missedObject.push({ start_time: convertToLocalTime(d), count: '0' });\r\n    }\r\n  }\r\n\r\n  const fetchData = array => {\r\n    const arr = sort(array);\r\n    if (param <= 7) {\r\n      return arr.slice(Math.max(arr.length - param, 0));\r\n    } else {\r\n      return arr;\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < inboundObject.length; i++) {\r\n    inboundObject[i].start_time = getNewDate(inboundObject[i].start_time);\r\n  }\r\n\r\n  for (let i = 0; i < outboundObject.length; i++) {\r\n    outboundObject[i].start_time = getNewDate(outboundObject[i].start_time);\r\n  }\r\n  for (let i = 0; i < missedObject.length; i++) {\r\n    missedObject[i].start_time = getNewDate(missedObject[i].start_time);\r\n  }\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"sidebar.dashboard\" />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <InboundRules setParam={setParam} date={date} data={fetchData(inboundObject)} total={totalInbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <OutboundCall setParam={setParam} date={date} data={fetchData(outboundObject)} total={totalOutbound} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={4}>\r\n          <MissedCalls setParam={setParam} date={date} data={fetchData(missedObject)} total={totalMissed} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Grid item xs={12} xl={12} className={classes.orderLg1}>\r\n        <GridContainer>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <ActiveCallCount />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Extensions />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} md={4}>\r\n            <Trunks />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DashboardTops />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <HeaderChartComponent\r\n              date={date}\r\n              setParam={setParam}\r\n              inbound={fetchData(inboundObject)}\r\n              missed={fetchData(missedObject)}\r\n              outbound={fetchData(outboundObject)}\r\n            />\r\n          </Grid>\r\n        </GridContainer>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default SamplePage;\r\n","import React from 'react';\r\nimport IntlMessages from '../../../@jumbo/utils/IntlMessages';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, IconButton, InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  },\r\n  errorNumber: {\r\n    color: theme.palette.text.primary,\r\n    fontWeight: 800,\r\n    lineHeight: 1,\r\n    marginBottom: 30,\r\n    textShadow: '10px 6px 8px hsla(0,0%,45.9%,.8)',\r\n  },\r\n  searchRoot: {\r\n    position: 'relative',\r\n    width: 260,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 350,\r\n    },\r\n    '& .searchBtn': {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      zIndex: 1,\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '100%',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      height: 48,\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      boxSizing: 'border-box',\r\n      padding: '5px 50px 5px 15px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      '&:focus': {\r\n        boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Error404 = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box fontSize={{ xs: 100, sm: 160 }} className={classes.errorNumber}>\r\n        404\r\n      </Box>\r\n      <Box fontSize={{ xs: 16, sm: 24 }} mb={8} color=\"grey.500\">\r\n        <IntlMessages id=\"extraPages.404Msg\" />\r\n      </Box>\r\n      <Box className={classes.searchRoot}>\r\n        <InputBase placeholder={'Search...'} inputProps={{ 'aria-label': 'search' }} />\r\n        <IconButton className=\"searchBtn\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <IntlMessages id=\"extraPages.goHome\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nconst bgImage = '/images/auth/auth-bg-pattern.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authWrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: props => (props.variant === 'bgColor' ? `URL(${bgImage})` : ''),\r\n    backgroundPosition: props => (props.variant === 'bgColor' ? 'center center' : ''),\r\n    backgroundRepeat: props => (props.variant === 'bgColor' ? 'no-repeat' : ''),\r\n    backgroundSize: props => (props.variant === 'bgColor' ? 'cover' : ''),\r\n    position: 'relative',\r\n    padding: 20,\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: 40,\r\n    },\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      zIndex: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: props => (props.variant === 'bgColor' ? alpha(theme.palette.primary.main, 0.5) : ''),\r\n    },\r\n  },\r\n  authCard: {\r\n    position: 'relative',\r\n    zIndex: 3,\r\n    maxWidth: props => (props.variant === 'default' ? '850px' : '550px'),\r\n    width: '100%',\r\n    boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.14), 0px 3px 1px rgba(0, 0, 0, 0.12), 0px 1px 5px rgba(0, 0, 0, 0.2)',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexDirection: 'row',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: props => (props.variant === 'default' ? '1050px' : '750px'),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AuthWrapper = ({ children, variant }) => {\r\n  const classes = useStyles({ variant });\r\n  return (\r\n    <Box className={classes.authWrap}>\r\n      <Box className={classes.authCard}>{children}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Button,Link } from '@mui/material';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { useHistory } from 'react-router';\r\nimport { useEffect } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport LanguageSwitcher from '@jumbo/components/AppLayout/partials/LanguageSwitcher';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n\r\n  authContent: {\r\n    padding: 30,\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  formcontrolLabelRoot: {\r\n    '& .MuiFormControlLabel-label': {\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  },\r\n}));\r\n//variant = 'default', 'standard'\r\nconst SignIn = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  //7PidcZIBNf\r\n  let history = useHistory();\r\n  const [param, setParam] = useState({\r\n    name: '',\r\n    password: '',\r\n    type: 'console',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [loginState, setLoginState] = useState();\r\n  let data = [];\r\n  var myDate = new Date();\r\n  myDate.setDate(myDate.getDate() + 1);\r\n  data.push(myDate);\r\n\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    api\r\n      .getDenemeLogin(param)\r\n      .then(resp => {\r\n        if (resp.status === 200) {\r\n          setLoginState(resp.status);\r\n          localStorage.setItem(\"username\",param.name);\r\n          localStorage.setItem('token', resp.data.data.token);\r\n        }\r\n      })\r\n      .catch(response => {\r\n        console.log(response.response.data.message);\r\n        alert(response.response.data.message);\r\n      })\r\n      .then(() => {\r\n        history.push('/dashboard');\r\n      });\r\n  };\r\n\r\n  function addNotification() {\r\n    onSubmit();\r\n  }\r\n\r\n  if (loginState === 200) {\r\n    localStorage.setItem('login', loginState);\r\n  }\r\n\r\n  let [, setVersion] = useState('0.0.0');\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const browser = (function() {\r\n    const test = function(regexp) {\r\n      return regexp.test(window.navigator.userAgent);\r\n    };\r\n    switch (true) {\r\n      case test(/edg/i):\r\n        return 'Edge';\r\n      case test(/opr/i) || test(/opera/i):\r\n        return 'Opera';\r\n      case test(/chrome/i) && !!window.chrome:\r\n        return 'Chrome';\r\n      case test(/MSIE/i):\r\n        return 'Internet Explorer 10-';\r\n      case test(/trident/i):\r\n        return 'Internet Explorer 11';\r\n      case test(/firefox/i):\r\n        return 'Firefox';\r\n      case test(/safari/i):\r\n        return 'Safari';\r\n      default:\r\n        return 'Other';\r\n    }\r\n  })();\r\n\r\n  useEffect(() => {\r\n    if (browser === 'Chrome' || browser === 'Opera') {\r\n      handleClose();\r\n    }\r\n    api.getVersion().then(response => {\r\n      setVersion(response.data.version);\r\n    });\r\n  }, [browser]);\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      <NotificationContainer />\r\n\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/login-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={1}>\r\n          <CmtImage src={'/images/favicon.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot} style={{ fontFamily: 'Roboto' }}>\r\n          <IntlMessages id={'login'} />\r\n        </Typography>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            addNotification(e);\r\n          }}>\r\n          <Box mb={1}>\r\n            <TextField\r\n              label={<IntlMessages id={'username'} />}\r\n              fullWidth\r\n              onChange={event => {\r\n                setParam({\r\n                  name: event.target.value,\r\n                  password: param.password,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={1}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id={'password'} />}\r\n              fullWidth\r\n              id=\"pass\"\r\n              onChange={event => {\r\n                setParam({\r\n                  name: param.name,\r\n                  password: event.target.value,\r\n                  type: param.type,\r\n                });\r\n              }}\r\n              defaultValue={param.password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <IntlMessages id={'language'} />:\r\n            <LanguageSwitcher />\r\n          </div>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n            <Button\r\n              type=\"submit\"\r\n              // onClick={() => {\r\n              //   addNotification();\r\n              // }}\r\n              variant=\"contained\"\r\n              color=\"primary\">\r\n              <IntlMessages id={'login'} />\r\n            </Button>\r\n            <Link \r\n            underline=\"none\"\r\n             href={`${window.location.protocol}//${window.location.hostname}:3005`}\r\n             ><IntlMessages id={'userNagentLogin'} /></Link>\r\n          </Box>\r\n        </form>\r\n        <p style={{ textAlign: 'center' }}>V{process.env.REACT_APP_VERSION}</p>\r\n\r\n        {dispatch(AuhMethods[method].getSocialMediaIcons())}\r\n\r\n        <ContentLoader />\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\">\r\n        <DialogTitle id=\"alert-dialog-title\">{'Google Chrome kullanmanızı tavsiye ediyoruz'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Şuanda <b style={{ fontWeight: '800' }}>{browser}</b> tarayıcısını kullanıyorsunuz.\r\n            <hr style={{ marginTop: '15px', marginBottom: '10px' }} />\r\n            <p>Tavsiye edilen tarayıcılar</p>\r\n            <p>- Google Chrome</p>\r\n            <p>- Opera</p>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Kapat\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const AppHeaderHeight = 72;\r\nexport const AppHeaderHeightSm = 64;\r\nexport const AppFooterHeight = 72;\r\nexport const AppFooterHeightSm = 64;\r\nexport const AppMainContentPadding = 60;\r\nexport const InBuildAppHeaderHeight = 70;\r\n\r\nexport const InBuildAppSidebarHeaderHeight = 86;\r\nexport const MailAppContentHeaderHeight = 78;\r\n\r\nexport const TaskDetailHeaderHeight = 72;\r\nexport const TaskDetailAddCommentHeight = 72;\r\n\r\nexport const ChatSidebarHeaderHeight = 124;\r\nexport const ChatSidebarTabContainerHeight = 49;\r\nexport const ChatFooterHeight = 70;\r\nexport const CurrentAuthMethod = 'basic'; //jwtAuth,firebase,basic\r\n\r\nexport const getAppSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        InBuildAppSidebarHeaderHeight +\r\n        (visibleAppFooter ? AppHeaderHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getMailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        MailAppContentHeaderHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getContactContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskListContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + InBuildAppHeaderHeight + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n\r\nexport const getTaskDetailContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        TaskDetailHeaderHeight +\r\n        TaskDetailAddCommentHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatSidebarHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        ChatSidebarHeaderHeight +\r\n        ChatSidebarTabContainerHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getChatContainerHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    case 'sm':\r\n      return (\r\n        AppHeaderHeightSm +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeightSm : 0)\r\n      );\r\n    default:\r\n      return (\r\n        AppHeaderHeight +\r\n        AppMainContentPadding +\r\n        InBuildAppHeaderHeight +\r\n        ChatFooterHeight +\r\n        (visibleAppFooter ? AppFooterHeight : 0)\r\n      );\r\n  }\r\n};\r\n\r\nexport const getWallHeight = (width, visibleAppFooter) => {\r\n  switch (width) {\r\n    case 'xs':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    case 'sm':\r\n      return AppHeaderHeightSm + AppMainContentPadding + (visibleAppFooter ? AppFooterHeightSm : 0);\r\n    default:\r\n      return AppHeaderHeight + AppMainContentPadding + (visibleAppFooter ? AppFooterHeight : 0);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport SignIn from '../../@jumbo/components/Common/authComponents/SignIn';\r\n\r\nconst Login = () => <SignIn variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n// import { useIntl } from 'react-intl';\r\n// let curentLanguage = useIntl();\r\nexport const localeText ={\r\n    toolbarExport: <IntlMessages id={'export'} />,\r\n    toolbarExportPrint: <IntlMessages id={'print'} />,\r\n    toolbarExportCSV: <IntlMessages id={'downloadasCSV'} />,\r\n    columnMenuUnsort: <IntlMessages id={'unsort'} />,\r\n    columnMenuSortAsc: <IntlMessages id={'sortbyASC'} />,\r\n    columnMenuSortDesc: <IntlMessages id={'sortbyDESC'} />,\r\n    columnMenuFilter: <IntlMessages id={'filter'} />,\r\n    columnMenuHideColumn: <IntlMessages id={'hide'} />,\r\n    columnMenuShowColumns: <IntlMessages id={'showcolumns'} />,\r\n    noRowsLabel: <IntlMessages id={'norows'} />,\r\n    columnsPanelTextFieldLabel: <IntlMessages id={'findColumn'} />,\r\n    columnsPanelTextFieldPlaceholder: <IntlMessages id={'columnTitle'} />,\r\n    columnsPanelDragIconLabel: <IntlMessages id={'reorderColumn'} />,\r\n    columnsPanelShowAllButton: <IntlMessages id={'showAll'} />,\r\n    columnsPanelHideAllButton: <IntlMessages id={'hideAll'} />,\r\n    // filterPanelAddFilter: <IntlMessages id={'addFilter'} />,\r\n    // filterPanelDeleteIconLabel: <IntlMessages id={'delete'} />,\r\n    // filterPanelLinkOperator:<IntlMessages id={'logicOperator'} />,\r\n    // filterPanelOperators: <IntlMessages id={'operator'} />,\r\n    // filterPanelOperatorAnd: <IntlMessages id={'and'} />,\r\n    // filterPanelOperatorOr: <IntlMessages id={'or'} />,\r\n    // filterPanelColumns: <IntlMessages id={'columns'} />,\r\n    // filterPanelInputLabel: <IntlMessages id={'value'} />,\r\n    // filterPanelInputPlaceholder: <IntlMessages id={'filterValue'} />,\r\n    // filterOperatorContains: <IntlMessages id={'contains'} />,\r\n    // filterOperatorEquals: <IntlMessages id={'equals'} />,\r\n    // filterOperatorStartsWith: <IntlMessages id={'startsWith'} />,\r\n    // filterOperatorEndsWith: <IntlMessages id={'endsWith'} />,\r\n    // filterOperatorIsEmpty: <IntlMessages id={'isEmpty'} />,\r\n    // filterOperatorIsNotEmpty: <IntlMessages id={'isNotEmpty'} />,\r\n}\r\n/*    curentLanguage.locale === 'en-EN'\r\n    ? 'Abondened_queues'\r\n    : curentLanguage.locale === 'tr-TR'\r\n    ? 'Kuyruk_terk_raporu'\r\n    : curentLanguage.locale === 'de-DE'\r\n    ? 'Verlassene Warteschlangen'\r\n    : curentLanguage.locale === 'nl-NL'\r\n    ? 'Verlaten wachtrijen'\r\n    : ' ', */","import React,{useEffect,useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { Switch, Menu, MenuItem } from '@mui/material';\r\nimport * as api from 'api/api';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function AgentTable({ rows, setReloadValues }) {\r\n  //menu açılması mola seçimi\r\n  const [value, setValue] = useState([]);\r\n  const [anchorEl,setAnchorEl] = useState(null);\r\n  const [agentId,setAgentId] = useState(\"\");\r\n  useEffect(() => {\r\n    api.getBreakNums().then(resp => setValue([...JSON.parse(resp.data)]));\r\n  }, []);\r\n\r\n  const handleChangeRecordAuth = (event, agentId) => {\r\n    api.setAgentsRecordListenAuthByAgentId(agentId, event.target.checked).then(res => {\r\n      setReloadValues(agentId + event + new Date().getTime());\r\n    });\r\n  };\r\n const handleChangeQueueAuth = (event, agentId) => {\r\n    // api.setAgentsRecordListenAuthByAgentId(agentId, event.target.checked).then(res => {\r\n    //   setReloadValues(agentId + event + new Date().getTime());\r\n    // });\r\n  };\r\n  const handleChangeStatus = (event,agentId)=>{\r\n    if(!event.target.checked){\r\n      setAgentId(agentId);\r\n      setAnchorEl(event.currentTarget);\r\n    }\r\n    else{\r\n      api.changeAgentStatus(agentId).then(res => {\r\n        setReloadValues(agentId + event + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n  const handleClose = value => {\r\n    setAnchorEl(null);\r\n    const reg = /^\\d+$/;\r\n    if (reg.test(value)) {\r\n      api.changeSessionStatus(agentId).then(resp =>{\r\n        setReloadValues(agentId + new Date().getTime());\r\n      });\r\n    }\r\n  };\r\n    //mesai sonu seçimi\r\n    const handleEndOfShift = () => {\r\n      setAnchorEl(null);\r\n      api.changeSessionStatus(agentId).then(() => {\r\n        api.qstatus({ agentDn: agentId, token: localStorage.getItem('token') });\r\n        setReloadValues(agentId + new Date().getTime());\r\n      });\r\n    };\r\n\r\n  let curentLanguage = useIntl();\r\n  const column = [\r\n    { field: 'id', headerName: <IntlMessages id={'agentnumber'} />, width: 300 },\r\n    { field: 'displayname', headerName: <IntlMessages id={'agentname'} />, width: 500 },\r\n    { \r\n      field: 'status', \r\n      headerName: <IntlMessages id={'stateRow'} />, \r\n      width: 250,\r\n      renderCell: params =>(\r\n        <span>\r\n          <Switch \r\n          checked={params.value === \"Active\" ? true : false} \r\n          onChange={event => handleChangeStatus(event,params.id)}\r\n          />\r\n        </span>\r\n      ) \r\n    },\r\n    {\r\n      field: 'recordAuth',\r\n      headerName: <IntlMessages id={'reacordlistenauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeRecordAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'queueAuth',\r\n      headerName: <IntlMessages id={'agentqueueauth'} />,\r\n      width: 300,\r\n      renderCell: params => (\r\n        <span>\r\n          <Switch checked={params.value} onChange={event => handleChangeQueueAuth(event, params.id)} />\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Agent Status'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Agent Durum'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Agentstatus'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Agentenstatus'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"rows\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam Agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Name des Agenten'\r\n                    : ''\r\n                }\r\n                value=\"displayname\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Status'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Statusagent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenstatus'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n        <MenuItem onClick={() => handleEndOfShift()}>\r\n          <IntlMessages id={'shift.end'} />\r\n        </MenuItem>\r\n        {value.map((item, index) => (\r\n          <MenuItem key={index} onClick={() => handleClose(item.value)}>\r\n            {item.value} {item.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n        <div style={{ height: 700, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={column}\r\n            pageSize={100}\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            localeText={localeText}\r\n            componentsProps={{\r\n              pagination: {\r\n                labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </>\r\n    // <TableContainer component={Paper} className={classes.root}>\r\n    //   <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n    //     <TableHead>\r\n    //       <TableRow>\r\n    //         {column.map(column => (\r\n    //           <TableCell key={column.id} style={{ width: column.width }}>\r\n    //             {column.headerName}\r\n    //           </TableCell>\r\n    //         ))}\r\n    //       </TableRow>\r\n    //     </TableHead>\r\n    //     <TableBody>\r\n    //       {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n    //         return (\r\n    //           <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n    //             {column.map(column => {\r\n    //               const value = row[column.id];\r\n\r\n    //               return <TableCell key={column.id}>{value}</TableCell>;\r\n    //             })}\r\n    //           </TableRow>\r\n    //         );\r\n    //       })}\r\n    //     </TableBody>\r\n    //   </Table>\r\n    //   <TablePagination\r\n    //     rowsPerPageOptions={[10, 20, 50, 100]}\r\n    //     component=\"div\"\r\n    //     count={rows.length}\r\n    //     rowsPerPage={rowsPerPage}\r\n    //     page={page}\r\n    //     onPageChange={handleChangePage}\r\n    //     labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n    //     onRowsPerPageChange={handleChangeRowsPerPage}\r\n    //   />\r\n    // </TableContainer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport default function AgentList() {\r\n  const [response, setResponse] = useState([]);\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  useEffect(() => {\r\n    api.getAgentList({ token: localStorage.getItem('token') }).then(resp => {\r\n      let responseStatus = resp.data.data;\r\n      api.getAgentsRecordListenAuth().then(result => {\r\n        let recordAuths = JSON.parse(result.data.data);\r\n        for (let i = 0; i < responseStatus.length; i++) {\r\n          for (let j = 0; j < recordAuths.length; j++) {\r\n            if (responseStatus[i].agentNumber === recordAuths[j].agent_num) {\r\n              responseStatus[i].recordAuth = recordAuths[j].record_listen === 'True';\r\n            }\r\n          }\r\n        }\r\n        setResponse(responseStatus);\r\n      });\r\n    });\r\n  }, [reloadValues]);\r\n  const createData = (id, displayname, status, recordAuth) => {\r\n    return { id, displayname, status, recordAuth };\r\n  };\r\n  const rows = response.map(dataValue =>\r\n    createData(\r\n      dataValue.agentNumber,\r\n      dataValue.agentName,\r\n      dataValue.agentState === 'True' ? 'Active' : 'Passive',\r\n      dataValue.recordAuth,\r\n    ),\r\n  );\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'reports.callcenter'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.status'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.status'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Table rows={rows} setReloadValues={setReloadValues} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Box } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  textCapital: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  textAcc: {\r\n    textAlign: 'center',\r\n    '& a': {\r\n      marginLeft: 4,\r\n    },\r\n  },\r\n  alrTextRoot: {\r\n    textAlign: 'center',\r\n    [theme.breakpoints.up('sm')]: {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n}));\r\n\r\n//variant = 'default', 'standard', 'bgColor'\r\nconst SignUp = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const [name, setName] = useState('Demo User');\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const [password, setPassword] = useState('demo#123');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onRegister({ name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <Box className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/sign-up-img.png'} />\r\n        </Box>\r\n      ) : null}\r\n      <Box className={classes.authContent}>\r\n        <Box mb={7}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </Box>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          Create an account\r\n        </Typography>\r\n        <form>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.name\" />}\r\n              fullWidth\r\n              onChange={event => setName(event.target.value)}\r\n              defaultValue={name}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n          <Box mb={2}>\r\n            <TextField\r\n              type=\"password\"\r\n              label={<IntlMessages id=\"appModule.password\" />}\r\n              fullWidth\r\n              onChange={event => setPassword(event.target.value)}\r\n              defaultValue={password}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection={{ xs: 'column', sm: 'row' }}\r\n            alignItems={{ sm: 'center' }}\r\n            justifyContent={{ sm: 'space-between' }}\r\n            mb={3}>\r\n            <Box mb={{ xs: 2, sm: 0 }}>\r\n              <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n                <IntlMessages id=\"appModule.regsiter\" />\r\n              </Button>\r\n            </Box>\r\n\r\n            <Typography className={classes.alrTextRoot}>\r\n              <NavLink to=\"/signin\">\r\n                <IntlMessages id=\"signUp.alreadyMember\" />\r\n              </NavLink>\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n\r\n        <Box mb={3}>{dispatch(AuhMethods[method].getSocialMediaIcons())}</Box>\r\n\r\n        <Typography className={classes.textAcc}>\r\n          Have an account?\r\n          <NavLink to=\"/signin\">Sign In</NavLink>\r\n        </Typography>\r\n        <ContentLoader />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignUp from '../../@jumbo/components/Common/authComponents/SignUp';\r\n\r\nconst Register = () => <SignUp variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default Register;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLog2DateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\n\r\nexport default function CallLog2therFilters({\r\n  setSourceApi,\r\n  setDestinationApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setSourceApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setSourceApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setSourceApi('0');\r\n    }\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetSelect, setTargetSelect] = useState('');\r\n  const handleChangeTargetSelect = event => {\r\n    setTargetSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setDestinationApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setDestinationApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setDestinationApi('0');\r\n    }\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [filter3Select, setFilter3Select] = useState('');\r\n  const handleChangeFilter3Select = event => {\r\n    setFilter3Select(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setAnswerStatus('');\r\n    } else if (event.target.value === 'answered') {\r\n      setAnswerStatus('-');\r\n    } else if (event.target.value === 'unanswered') {\r\n      setAnswerStatus('~');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'caller'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.source'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.source'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' || sourceFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneCallbackIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destination'} />}\r\n                  onChange={handleChangeTargetSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' || targetFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={filter3Select}\r\n                  label={<IntlMessages id={'calllog2.filter.filter3'} />}\r\n                  onChange={handleChangeFilter3Select}>\r\n                  <MenuItem value={'all'}>\r\n                  <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'calllog2.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'unanswered'}>\r\n                    <IntlMessages id={'calllog2.filter.unanswered'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog2, getCallLog2Count } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLog2DateFilter from './DateFilter';\r\nimport CallLog2therFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLog2Filter({\r\n  setData,\r\n  limit,\r\n  offset,\r\n  setPage,\r\n  setCount\r\n}) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd HH:MM:ss'));\r\n  let [sourceApi, setSourceApi] = useState('');\r\n  let [destinationApi, setDestinationApi] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  const timeOffset = localStorage.getItem(\"timeoffset\") || \"+3\";\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  )  \r\n  SELECT\r\n  call_id, \r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording') as recording_url,  \r\n  case when cl_segments_view_new.dst_answer_time is not null then 'ok' else 'not ok' end as Salable,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and \r\n  not (src_dn_type = 0 and dst_dn_type = 0)\r\n  and\r\n  cast(src_dn_type as text) like '%${sourceApi}'   \r\n  and  \r\n  cast(dst_dn_type as text) like '%${destinationApi}' \r\n  and  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'  \r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )  \r\n  order by dst_start_time,seg_order asc \r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let stringCount = `\r\n  WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  )  \r\n  SELECT\r\n count(*) \r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cte1.recording_url is not null\r\n  and \r\n  not (src_dn_type = 0 and dst_dn_type = 0)\r\n  and\r\n  cast(src_dn_type as text) like '%${sourceApi}'   \r\n  and  \r\n  cast(dst_dn_type as text) like '%${destinationApi}' \r\n  and  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'  \r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}     \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax} \r\n  )  \r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        // setSourceDnMin(sourceFilterText.split('-')[0]);\r\n        // setSourceDnMax(sourceFilterText.split('-')[1]);\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        // setDestinationDnMin(destinationFilterText.split('-')[0]);\r\n        // setDestinationDnMax(destinationFilterText.split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Count(stringCount).then(result => {\r\n      setCount(parseInt(JSON.parse(result.data.data)[0].count));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n  return (\r\n    <div>\r\n      <CallLog2DateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLog2therFilters\r\n        setSourceApi={setSourceApi}\r\n        setDestinationApi={setDestinationApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { InputLabel, MenuItem, Select, FormControl, Chip, Typography, /*Button, TextField*/ } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getTagsByCallId, ScoreByID, /*getRecordingBytes*/ } from 'api/api';\r\n// import useForm from '@jumbo/utils/useForm';\r\n// import { Box } from '@mui/system';\r\n// import { NotificationManager } from 'react-notifications';\r\n\r\n// const getFreshModel = () => ({\r\n//   email: '',\r\n// });\r\nexport default function CallManagementCallDetail({ callId, path, dir, setReloadValues }) {\r\n  //çağrıya ait etiket bilgileri\r\n  const [tags, setTags] = useState([]);\r\n  //forms\r\n  const [rating, setRating] = useState('-1');\r\n  useEffect(() => {\r\n    getTagsByCallId(callId).then(resp => {\r\n      setTags(JSON.parse(resp.data.data));\r\n      setRating(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n    });\r\n  }, [callId]);\r\n  //puan verildiğinde tetikenir. ilgili puanı çağrının puanına yazar\r\n  const handleRating = event => {\r\n    ScoreByID(event.target.value, callId).then(() => setRating(event.target.value));\r\n    setReloadValues(new Date());\r\n  };\r\n\r\n  //mail yollama ve form validasyonu\r\n  //const { values,errors, setErrors, handleInputChange } = useForm(getFreshModel);\r\n\r\n  //const [base64,setBase64] = useState(\"\");\r\n  // const sendMail = e => {\r\n  //   e.preventDefault();\r\n  //   if (validate()) {\r\n  //     getRecordingBytes(path, dir)\r\n  //     .then(resp => resp.blob())\r\n  //     .then(blob => {\r\n  //       var reader = new FileReader();\r\n  //       reader.readAsDataURL(blob);\r\n  //       reader.onloadend = function(){\r\n  //         //setBase64(reader.result);\r\n  //       }\r\n  //     })\r\n  //     .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  //     //mail yollama kısmı\r\n\r\n  //   }\r\n  // };\r\n\r\n  // const validate = e => {\r\n  //   let temp = {};\r\n  //   temp.email = /\\S+@\\S+\\.\\S+/.test(values.email) ? '' : 'Email is not valid.';\r\n  //   setErrors(temp);\r\n  //   return Object.values(temp).every(item => item === '');\r\n  // };\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n        <IntlMessages id={'calllog2.detail.callinfo'} />\r\n      </Typography>\r\n\r\n      {tags.length > 0 && tags[0]?.tagtext !== '' && (\r\n        <Typography variant=\"h6\">\r\n          <IntlMessages id={'tag'} /> :\r\n          <Chip color=\"info\" label={tags[0]?.tagtext} />\r\n        </Typography>\r\n      )}\r\n      <FormControl variant=\"standard\" fullWidth>\r\n        <InputLabel id=\"score\">\r\n          <IntlMessages id={'score'} />\r\n        </InputLabel>\r\n        <Select labelId=\"score\" label={<IntlMessages id={'score'} />} value={rating} onChange={handleRating}>\r\n          <MenuItem value=\"-1\">\r\n            <br/>\r\n          </MenuItem>\r\n          <MenuItem value=\"5\">\r\n            <IntlMessages id={'score.rating5'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"4\">\r\n            <IntlMessages id={'score.rating4'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"3\">\r\n            <IntlMessages id={'score.rating3'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"2\">\r\n            <IntlMessages id={'score.rating2'} />\r\n          </MenuItem>\r\n          <MenuItem value=\"1\">\r\n            <IntlMessages id={'score.rating1'} />\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      {/* <Typography variant=\"h6\" sx={{ mt: 3, textAlign: 'center' }}>\r\n        Send audio to mail\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          '& .MuiTextField-root': {\r\n            my: 1,\r\n          },\r\n          '&': {\r\n            p: 1,\r\n          },\r\n        }}>\r\n        <form noValidate onSubmit={sendMail} autoComplete=\"on\">\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            label=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            variant=\"standard\"\r\n            {...(errors.email && { error: true, helperText: errors.email })}\r\n          />\r\n          <Button sx={{ mt: 1 }} color=\"secondary\" fullWidth type=\"submit\" variant=\"outlined\" size=\"large\">\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Box> */}\r\n    </div>\r\n  );\r\n}\r\n","import { FormControl, InputLabel, MenuItem, Select, Chip } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTagtextByCallId, TagByID } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Tag({call_id,tagsList}) {\r\n  const [tagValue, setTagValue] = useState('');\r\n\r\n  const handleChangeTag = event => {\r\n    TagByID(event.target.value,call_id).then(() =>{\r\n      setTagValue(event.target.value);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    if(call_id !== \"\"){\r\n      getTagtextByCallId(call_id).then(resp => {\r\n        setTagValue(JSON.parse(resp.data.data)[0]?.tagtext || '');\r\n    });\r\n    }\r\n\r\n  },[call_id]);\r\n\r\n  return (\r\n    <>\r\n    {\r\n      call_id === \"\"?(<small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'nontaggable'} /></small>):(\r\n        <>\r\n        {\r\n          // tagValue !== '' ? <span style={tagStyle}>{tagValue}</span> : \r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label11\"><IntlMessages id={'tag'} /></InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label11\"\r\n              id=\"demo-simple-select222\"\r\n              value={tagValue}\r\n              label={<IntlMessages id={'tag'} />}\r\n              style={{ width: '100%' }}\r\n              onChange={handleChangeTag}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n                {\r\n                  tagsList.map((item,index)=>(\r\n                  <MenuItem key={index} value={item.tagmassage}>\r\n                    <Chip color=\"info\" size=\"small\" label={item.tagmassage} />\r\n                  </MenuItem>\r\n                    ))\r\n                }\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        </> \r\n      )\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {getCallScoresByCallId } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Score({call_id, reloadValues}) {\r\n    const [callScore, setCallScore] = useState('-1');\r\n    useEffect(()=>{\r\n        getCallScoresByCallId(call_id).then(resp => {\r\n            setCallScore(JSON.parse(resp.data.data)[0]?.rating || '-1');\r\n        });\r\n        return () => {setCallScore('-1')}\r\n    },[call_id, reloadValues]);\r\n  return (\r\n      <>\r\n      {\r\n          callScore !== '-1' ? (\r\n            <div>\r\n            {\r\n                GetScoreName(callScore)\r\n            }\r\n            {` (${callScore})`}\r\n            </div>\r\n          ) : (\r\n            <small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'noscore'} /></small>\r\n          )\r\n      }\r\n      </>\r\n  );\r\n}\r\n\r\nfunction GetScoreName(rating){\r\n    switch (rating) {\r\n        case \"5\":\r\n            return <IntlMessages id={'score.rating5'} />\r\n        case \"4\":\r\n            return <IntlMessages id={'score.rating4'} />\r\n        case \"3\":\r\n            return <IntlMessages id={'score.rating3'} />\r\n        case \"2\":\r\n            return <IntlMessages id={'score.rating2'} />\r\n        case \"1\":\r\n            return <IntlMessages id={'score.rating1'} />\r\n        default:\r\n            return <IntlMessages id={'noscore'} /> \r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport VolumeDown from '@mui/icons-material/VolumeDown';\r\nimport VolumeUp from '@mui/icons-material/VolumeUp';\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport PauseRounded from '@mui/icons-material/PauseRounded';\r\nimport PlayArrowRounded from '@mui/icons-material/PlayArrowRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport WaveFile from 'wavefile';\r\n\r\nconst formWaveSurferOptions = ref => ({\r\n  container: ref,\r\n  waveColor: '#9cceff',\r\n  progressColor: '#1976d2',\r\n  cursorColor: '#1976d2',\r\n  barWidth: 2,\r\n  barRadius: 3,\r\n  barHeight:1,\r\n  barGap:2,\r\n  responsive: true,\r\n});\r\n\r\nexport default function AudioWaveForm({ buffer }) {\r\n  const waveformRef = useRef(null);\r\n  const wavesurfer = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [loading,setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setPlay(false);\r\n\r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n\r\n    let wav = new WaveFile(new Uint8Array(buffer));\r\n    wav.fromIMAADPCM();\r\n    let newBuf = wav.toBuffer();\r\n    var blob = new Blob([newBuf], { 'type' : 'audio/wav' });\r\n    wavesurfer.current.loadBlob(blob);\r\n\r\n    wavesurfer.current.on(\"ready\", function() {\r\n      setLoading(false);\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(0.5);\r\n      }\r\n    });\r\n    return () => wavesurfer.current.destroy();\r\n  }, [buffer]);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n  const onVolumeChange = e => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    { loading && (\r\n        <Box sx={{ display: 'flex',justifyContent:'center' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n    )}\r\n      <div id=\"waveform\" ref={waveformRef} />\r\n      <Stack spacing={2} direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n      <IconButton\r\n          aria-label={!playing ? 'play' : 'pause'}\r\n          onClick={handlePlayPause}\r\n          disabled={loading}\r\n          >\r\n            {!playing ? (\r\n              <PlayArrowRounded\r\n                sx={{ fontSize: '3rem' }}\r\n                htmlColor=\"#000\"\r\n              />\r\n            ) : (\r\n              <PauseRounded sx={{ fontSize: '3rem' }} htmlColor=\"#000\" />\r\n            )}\r\n        </IconButton>\r\n        <Stack width={300} spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n        <VolumeDown />\r\n        <Slider \r\n        disabled={loading}\r\n        id=\"volume\"\r\n        name=\"volume\"\r\n        aria-label=\"Volume\" \r\n        value={volume} \r\n        onChange={onVolumeChange} \r\n        min={0.01}\r\n        max={1}\r\n        step={.025}/>\r\n        <VolumeUp />\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, IconButton, Paper, TablePagination } from '@material-ui/core';\r\nimport { AccessTime, Check, CloudDownload, DateRange, Person, PhoneDisabled, PlayArrow, GetApp } from '@material-ui/icons';\r\nimport {getPath, getTagTypes, getRecordingBytes, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallManagementCallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Tag from './Tag';\r\nimport Score from './Score';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\n\r\nexport default function CallManagementTable({ data, limit, setLimit, setOffset, page, setPage, count,setReloadValues, reloadValues }) {\r\n  let [path, setPath] = useState('');\r\n  const [queues, setQueues] = useState([]);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    padding: '12px 8px',\r\n    border: '2px solid #ededed',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n\r\n  //audio player için\r\n  const [record, setRecord] = useState('');\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = dir => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer !== null) {\r\n          setRecord(buffer);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  const downloadRecord = dir => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = dir;\r\n        link.click();\r\n        link.remove();\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const [tagsList, setTagsList] = useState([]);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)));\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'download',\r\n      headerName: <IntlMessages id={'download'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => downloadRecord(params.value)}\r\n              style={{ backgroundColor: '#1769aa', color: '#fff' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <GetApp />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => q.dn = params.value[1])?.display_name || <IntlMessages id=\"queue\"/>}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          )}\r\n\r\n          {params.value === 'not ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'Tag',\r\n      headerName: <IntlMessages id={'tag'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Tag call_id={params.value} tagsList={params.value !== '' ? tagsList : []} />\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      field: 'score',\r\n      headerName: <IntlMessages id={'score'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Score call_id={params.value} reloadValues={reloadValues}/>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const tableData = data.map((item,index)=>({\r\n    callId: [item.call_id,item.recording_url],\r\n    listen: item.recording_url,\r\n    download: item.recording_url,\r\n    date: getNewDate(item.date),\r\n    caller:\r\n      item.src_dn === '-'\r\n        ? item.src_display_name.split(':')[0]\r\n        : item.src_display_name.split(':')[0] + '(' + item.src_dn + ')',\r\n    called: item.dst_dn === '-' ? item.dst_display_name : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    direction: [item.direction,item.dst_dn],\r\n    duration: item.duration,\r\n    salable: item.salable,\r\n    id: index,\r\n    Tag: isTaggable(item.direction, item.salable) ? item.call_id : '',\r\n    score: item.call_id,\r\n  }))\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          {\r\n            <ExcelFile\r\n              filename={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? 'Call_Log'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Cagri_raporu'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Oproep_Log'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Anrufliste'\r\n                  : ''\r\n              }\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={data} name=\"data\">\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Date'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Tarih'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Datum'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Datum'\r\n                      : ''\r\n                  }\r\n                  value=\"date\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'From'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kimden'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Van'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Von'\r\n                      : ''\r\n                  }\r\n                  value=\"src_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Destination'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Hedef'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Bestemming'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Ziel'\r\n                      : ''\r\n                  }\r\n                  value=\"dst_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Direction'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Yön'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Richting'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Genaamd'\r\n                      : ''\r\n                  }\r\n                  value=\"direction\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Duration'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Süre'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Looptijd'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Dauer'\r\n                      : ''\r\n                  }\r\n                  value=\"duration\"\r\n                />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          }\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px', padding: '2rem 1.5rem' }}>\r\n          <CallManagementCallDetail callId={callIdEye[0]} dir={callIdEye[1]} path={path} setReloadValues={setReloadValues} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={openAudioModal}\r\n        onClose={() => setOpenAudioModal(false)}\r\n        aria-labelledby=\"Audio\"\r\n        aria-describedby=\"Audio Player Modal\">\r\n        <Box style={audioModalStyle}>\r\n          <AudioWaveForm buffer={record} />\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <div style={{ height: '440px', width: '100%' }}>\r\n          <DataGrid rows={tableData} columns={columns} rowHeight={38} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100,count].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tableData.length < limit || tableData.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tableData.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nconst nonTaggableCallTypes = ['dahili', ''];\r\nconst isTaggable = (callType, status) => {\r\n  if (status === 'ok') {\r\n    if (!nonTaggableCallTypes.includes(callType)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallManagementFilter from './Filter';\r\nimport CallManagementTable from './Table';\r\n\r\nexport default function CallManagement() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'callmanagement'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState(10);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [reloadValues,setReloadValues] = useState([]);\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'callmanagement'} />} breadcrumbs={breadcrumbs}>\r\n        <CallManagementFilter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setCount={setCount}\r\n        />\r\n        <CallManagementTable\r\n          count={count}\r\n          data={data}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n          reloadValues={reloadValues}\r\n          setReloadValues={setReloadValues}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DropCallLogDateFilter({ setStartTimeApi, setEndTimeApi, handleClick }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        //start.setHours(23, 59, 59);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate());\r\n        //end.setHours(23, 59, 59);\r\n        end.setHours(0, 0, 0);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getDropCall, getDropCallCount, getDropCallSummary, getQueueNumber } from 'api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport DropCallLogDateFilter from './DateFilter';\r\nfunction Filter({ setResponse, setLimit, setPage, setOffset, limit, offset, setCount, setResponseSummary }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    console.log('Yıl ' + paramDate.getFullYear());\r\n    console.log('aY ' + paramDate.getMonth() + 1);\r\n    console.log('Gün ' + paramDate.getDate());\r\n    console.log('Today Time ' + today.getTime());\r\n    console.log('Param Time ' + paramDate.getTime());\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: dateDifference(formatDate(today)),\r\n    paramFinish: dateDifference(formatDate(today)),\r\n  });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDropCall(params.paramStart, params.paramFinish, limit, offset).then(resp => {\r\n      var list = JSON.parse(resp.data.data);\r\n      getQueueNumber().then(queueList => {\r\n        for (let i = 0; i < list.length; i++) {\r\n          // let tempQueueList = JSON.parse(queueList.data.data);\r\n          // for (let j = 0; j < tempQueueList.length; i++) {\r\n          //   if (list[i]?.q_num === tempQueueList[j].dn) {\r\n          //     list[i]?.q_num = tempQueueList[j].dn + '-' + tempQueueList[j].display_name;\r\n          //   }\r\n          // }\r\n          // tempQueueList = [];\r\n          JSON.parse(queueList.data.data).map(queue => {\r\n            if (list[i].q_num === queue.dn) {\r\n              list[i].q_num = queue.dn + '-' + queue.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n      });\r\n      setLoading(false);\r\n    });\r\n\r\n    getDropCallSummary(params.paramStart, params.paramFinish).then(resp => {\r\n      setResponseSummary(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getDropCallCount(params.paramStart, params.paramFinish).then(resp => {\r\n      setCount(JSON.parse(resp.data.data)[0]);\r\n    });\r\n  }, [params, offset, limit, setCount, setResponse, setResponseSummary]);\r\n  const handleClick = () => {\r\n    setOffset(0);\r\n    setLimit(10);\r\n    setPage(0);\r\n    setParams({\r\n      paramStart: dateDifference(startDate),\r\n      paramFinish: dateDifference(endDate),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <DropCallLogDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { Check, CloudDownload, DateRange } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport RingVolumeIcon from '@mui/icons-material/RingVolume';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, count, responseSummary }) {\r\n  const columns = [\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'filter.menu.enddate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#DE834D' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'from_userpart',\r\n      headerName: <IntlMessages id={'from'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#5584AC' }} />{' '}\r\n          <b style={{ color: '#5584AC' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'q_num',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#064635' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'ringing_time',\r\n      headerName: <IntlMessages id={'ringingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <RingVolumeIcon style={{ verticalAlign: '-5px', color: '#A3423C' }} />{' '}\r\n          <b style={{ color: '#781D42' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(id, q_num, start_time, end_time, ringing_time, from_userpart) {\r\n    return { id, q_num, start_time, end_time, ringing_time, from_userpart };\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.time_end,\r\n      data.ring_time\r\n        .split('.')[0]\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_userpart,\r\n    ),\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(count.count);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Dropped_call'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kacan_cagri_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Afgebroken oproep'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Aufgelegter Anruf'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"q_num\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'End Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bitiş Zamanı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Eindtijd'\r\n                          : ''\r\n                      }\r\n                      value=\"end_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Ringing Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Çalma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Beltijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Klingelzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"ringing_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'From Userpart'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Van gebruikersgedeelte'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Vom Benutzerteil'\r\n                          : ''\r\n                      }\r\n                      value=\"from_userpart\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        {/* <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(count.count)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(count.count)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'average_ring_time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {responseSummary.map((total,index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {total.to_char}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {total.count}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        padding: '5px',\r\n                        borderRadius: '7px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      {total.ring_time}\r\n                    </span>{' '}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction DroppedCall() {\r\n  const [responseSummary, setResponseSummary] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [count, setCount] = useState({ count: 0 });\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'droppedcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'droppedcall'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setResponse={setResponse}\r\n            limit={limit}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setCount={setCount}\r\n            setResponseSummary={setResponseSummary}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            count={count}\r\n            responseSummary={responseSummary}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default DroppedCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DidReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(startDate);\r\n    setEndTimeApi(endDate);\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({\r\n  setSelectedStartTime,\r\n  selectedStartTime,\r\n  selectedEndTime,\r\n  setSelectedEndTime,\r\n  setParams,\r\n  setLimit,\r\n  setPage,\r\n  setOffset,\r\n  notFirstReq,\r\n  setNotFirstReq,\r\n  setDidNumber,\r\n  didNumber,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  const [didNumbers, setDidNumbers] = useState([]);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setOffset(0);\r\n    setLimit(10);\r\n    setPage(0);\r\n    setParams({\r\n      paramStart: formatDate(selectedStartTime),\r\n      paramFinish: formatDate(selectedEndTime),\r\n    });\r\n    if (!notFirstReq) {\r\n      setNotFirstReq(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.getDidNumbers().then(resp => {\r\n      setDidNumbers(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'mountlydetails.didnumber'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'mountlydetails.didnumber'} />}\r\n                  value={didNumber}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {didNumbers.map((did, index) => (\r\n                    <MenuItem key={index} value={did.conditiondata}>\r\n                      {did.conditiondata}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button, TableBody } from '@material-ui/core';\r\nimport { AccessTime, CloudDownload, ContactPhone, Phone, PhoneInTalk, PhoneMissed } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DataTable({ response, setLimit, limit, setOffset, setPage, page, count, setResponse }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const column = [\r\n    { id: 'did_number', headerName: <IntlMessages id={'did.number'} />, width: '60px' },\r\n    { id: 'total_did', headerName: <IntlMessages id={'wallboard.total.call'} />, width: '100px' },\r\n    { id: 'did_not_answered', headerName: <IntlMessages id={'wallboard.unanswered'} />, width: '30px' },\r\n    { id: 'did_answered', headerName: <IntlMessages id={'wallboard.answered'} />, width: '30px' },\r\n    { id: 'duration', headerName: <IntlMessages id={'Duration'} />, width: '30px' },\r\n    { id: 'act', headerName: <IntlMessages id={'average'} />, width: '30px' },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    total_did_number: 0,\r\n    total_did: 0,\r\n    did_not_answered: 0,\r\n    did_answered: 0,\r\n    duration: 0,\r\n  };\r\n\r\n  for (let i = 0; i < response.length; i++) {\r\n    total.total_did_number++;\r\n    total.total_did += parseInt(response[i].total_did);\r\n    total.did_not_answered += parseInt(response[i].did_not_answered);\r\n    total.did_answered += parseInt(response[i].answered);\r\n    total.duration += parseInt(hourToSecond(response[i].duration));\r\n  }\r\n  // response.map(resp => {\r\n  //   total.total_did_number++;\r\n  //   total.total_did += parseInt(resp.total_did);\r\n  //   total.did_not_answered += parseInt(resp.did_not_answered);\r\n  //   total.did_answered += parseInt(resp.answered);\r\n  //   total.duration += parseInt(hourToSecond(resp.duration));\r\n  // });\r\n  function hourToSecond(param) {\r\n    var second =\r\n      parseInt(param.split(' ')[0].slice(0, -1)) * 3600 +\r\n      parseInt(param.split(' ')[1].slice(0, -1)) * 60 +\r\n      parseInt(param.split(' ')[2].slice(0, -1));\r\n    return second;\r\n  }\r\n\r\n  function secondToTime(param) {\r\n    let time =\r\n      addZero(Math.floor(param / 60 / 60)) +\r\n      'h ' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      'm ' +\r\n      addZero(Math.floor((param % 3600) % 60)) +\r\n      's';\r\n    return time;\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = response.map((item, index) => ({\r\n    id: index,\r\n    did_number: item.did_number,\r\n    total_did: parseInt(item.total_did),\r\n    did_not_answered: parseInt(item.did_not_answered),\r\n    answered: parseInt(item.answered),\r\n    duration: item.duration,\r\n    act: item.act,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'did_number',\r\n      headerName: <IntlMessages id={'dıdnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhone style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_did',\r\n      headerName: <IntlMessages id={'totalcallcount'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <Phone style={{ verticalAlign: '-5px', color: '#6998AB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#6998AB' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'did_not_answered',\r\n      headerName: <IntlMessages id={'unansweredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PhoneMissed style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#F05454' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'answeredcallcount'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PhoneInTalk style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto', color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#D47AE8' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'act',\r\n      headerName: <IntlMessages id={'average'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTime style={{ verticalAlign: '-5px', color: '#7267CB' }} />{' '}\r\n          <b style={{ fontFamily: 'Roboto' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(parseInt(count));\r\n    setPage(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {response.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {response.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {response.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {response.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'DID_report'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'DID_raporu'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'DID_rapport'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'DID_report'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={response} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'DID Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Did Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'DID-Nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'DID-Nummer'\r\n                          : ''\r\n                      }\r\n                      value=\"did_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Total Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Toplam Arama Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Totaal aantal gesprekken'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesamtzahl der Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"total_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Unanswered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmamış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal onbeantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anzahl unbeantworteter Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"did_not_answered\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Answered Call Count'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Cevaplanmış Çağrı Adedi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Aantal beantwoorde oproepen'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Zählung angenommener Anrufe'\r\n                          : ''\r\n                      }\r\n                      value=\"answered\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n        {/* <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'DID_report' : 'DID_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={response} name=\"Data\">\r\n              <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'DID Number' : 'Did Numarası'} value=\"did_number\" />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Total Call Count' : 'Toplam Arama Sayısı'}\r\n                value=\"total_did\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Unanswered Calls' : 'Cevaplanmamış Çağrılar'}\r\n                value=\"did_not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={currentLanguage.locale == 'en-US' ? 'Answered Calls' : 'Cevaplanmış Çağrılar'}\r\n                value=\"answered\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile> */}\r\n      </div>\r\n      <Paper style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, count].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={count}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <TableContainer component={Paper} className={classes.root} style={{ fontFamily: 'Roboto' }}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map(column => (\r\n                <TableCell key={column.id} style={{ width: column.width }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {response.length > 0 && (\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                {count + ' '} <IntlMessages id={'did.number'} />\r\n              </TableCell>\r\n              <TableCell>{total.total_did}</TableCell>\r\n              <TableCell>{total.did_not_answered}</TableCell>\r\n              <TableCell>{total.did_answered}</TableCell>\r\n              <TableCell>{secondToTime(total.duration)}</TableCell>\r\n              <TableCell>{secondToTime(total.duration / total.total_did)}</TableCell>\r\n            </TableRow>\r\n          )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '../../../@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DIDReport = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'did.report'} />, isActive: true },\r\n  ];\r\n\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(yesterday) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n\r\n  const [dates, setDates] = useState({\r\n    paramStart: formatDate(yesterday) + ' 00:00:00',\r\n    paramFinish: formatDate(today) + ' 23:59:00',\r\n  });\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `with recursive cte1 as (\r\n    select \r\n    *\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${dates.paramStart}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${dates.paramFinish}' + interval '1 day') >= start_time)\r\n    and src_did != ''\r\n  \tand\r\n\t  dst_answer_time is not null\r\n    )\r\n\t,\r\n\tcte2 as (\r\n    select\r\n\t sum(dst_end_time-dst_answer_time) as duration,\r\n    src_did,\t\r\n    count(distinct(call_id)) as total_call\r\n    from cte1 \t\r\n    -- where dst_dn_type = 0\r\n    --  and act != 1\r\n    group by src_did\r\n    )\r\n\t,\t\r\n\tcte3 as (\r\n    select\r\n    src_did,\t\r\n    count(distinct(call_id)) as did_not_asnwered\r\n    from cte1 \t\r\n    where dst_answer_time is  null\t\r\n    and act!= 1\r\n    group by src_did\r\n    )\r\n    select\r\n    cte2.src_did as did_number,\r\n    cte2.total_call as total_did,\r\n    coalesce(cte3.did_not_asnwered,0) as did_not_answered,\r\n    cte2.total_call - coalesce(cte3.did_not_asnwered,0) as answered,\r\n\tto_char(coalesce(cte2.duration,'0 second'),'HH24h MIm SSs') as duration,\r\n\tto_char((coalesce(cte2.duration/cte2.total_call,'0 second')),'HH24h MIm SSs') as act\r\n    from\r\n    cte2\r\n    left outer join cte3 on cte2.src_did = cte3.src_did\r\n    where (cte2.src_did like '%${didNumber}' or cte2.src_did like '%${didNumber}')\r\n    limit ${limit} offset ${offset}\t\t\r\n`;\r\n\r\n  let queryCount = ` select \r\n    count(distinct(src_did))\r\n    from cl_segments_view_new\r\n    where \r\n    (date_trunc('second',  TIMESTAMP '${dates.paramStart}') <=  start_time)\r\n    and (date_trunc('second',  TIMESTAMP '${dates.paramFinish}' + interval '1 day') >= start_time)\r\n    and src_did != ''`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  let [notFirstReq, setNotFirstReq] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (notFirstReq) {\r\n      // if (checkBetween(dates.paramStart, dates.paramFinish)) {\r\n      if (true) {\r\n        setLoading(true);\r\n        api.getDidData(query).then(resp => {\r\n          setResponse(JSON.parse(resp.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        api.getDidDataCount(queryCount).then(resp => {\r\n          setCount(parseInt(JSON.parse(resp.data.data)[0].count));\r\n        });\r\n      } else {\r\n        NotificationManager.error('Sadece 30 günlük veri çekebilirsiniz', '', 3000);\r\n      }\r\n    }\r\n  }, [query, notFirstReq, didNumber, queryCount]);\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'did.report'} />} breadcrumbs={breadcrumbs}>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            didNumber={didNumber}\r\n            setDidNumber={setDidNumber}\r\n            selectedStartTime={selectedStartTime}\r\n            selectedEndTime={selectedEndTime}\r\n            setSelectedEndTime={setSelectedEndTime}\r\n            setSelectedStartTime={setSelectedStartTime}\r\n            setParams={setDates}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            setNotFirstReq={setNotFirstReq}\r\n            notFirstReq={notFirstReq}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            page={page}\r\n            setPage={setPage}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            response={response}\r\n            count={count}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default DIDReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Collapse, IconButton, Link } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport CmtImage from '../../../../@coremat/CmtImage';\r\n\r\nimport IntlMessages from '../../../utils/IntlMessages';\r\nimport { AuhMethods } from '../../../../services/auth';\r\nimport ContentLoader from '../../ContentLoader';\r\nimport { CurrentAuthMethod } from '../../../constants/AppConstants';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport { setForgetPassMailSent } from '../../../../redux/actions/Auth';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  authThumb: {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.12),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50%',\r\n      order: 2,\r\n    },\r\n  },\r\n  authContent: {\r\n    padding: 30,\r\n    [theme.breakpoints.up('md')]: {\r\n      order: 1,\r\n      width: props => (props.variant === 'default' ? '50%' : '100%'),\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      padding: 50,\r\n    },\r\n  },\r\n  titleRoot: {\r\n    marginBottom: 14,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  textFieldRoot: {\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: alpha(theme.palette.common.dark, 0.12),\r\n    },\r\n  },\r\n  alertRoot: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\n//variant = 'default', 'standard', 'bgColor'\r\nconst ForgotPassword = ({ method = CurrentAuthMethod, variant = 'default', wrapperVariant = 'default' }) => {\r\n  const { send_forget_password_email } = useSelector(({ auth }) => auth);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState('demo@example.com');\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles({ variant });\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let timeOutStopper = null;\r\n    if (send_forget_password_email) {\r\n      setOpen(true);\r\n\r\n      timeOutStopper = setTimeout(() => {\r\n        dispatch(setForgetPassMailSent(false));\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n\r\n    return () => {\r\n      if (timeOutStopper) clearTimeout(timeOutStopper);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [send_forget_password_email]);\r\n\r\n  const onSubmit = () => {\r\n    dispatch(AuhMethods[method].onForgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper variant={wrapperVariant}>\r\n      {variant === 'default' ? (\r\n        <div className={classes.authThumb}>\r\n          <CmtImage src={'/images/auth/forgot-img.png'} />\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.authContent}>\r\n        <div className={'mb-7'}>\r\n          <CmtImage src={'/images/logo.png'} />\r\n        </div>\r\n        <Typography component=\"div\" variant=\"h1\" className={classes.titleRoot}>\r\n          ForgotPassword\r\n        </Typography>\r\n        <Collapse in={open}>\r\n          <Alert\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n            className={classes.alertRoot}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}>\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }>\r\n            A mail has been sent on your email address with reset password link.\r\n          </Alert>\r\n        </Collapse>\r\n        <form>\r\n          <div className={'mb-5'}>\r\n            <TextField\r\n              label={<IntlMessages id=\"appModule.email\" />}\r\n              fullWidth\r\n              onChange={event => setEmail(event.target.value)}\r\n              defaultValue={email}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              className={classes.textFieldRoot}\r\n            />\r\n          </div>\r\n          <div className={'mb-5'}>\r\n            <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n              <IntlMessages id=\"appModule.resetPassword\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography>\r\n              Don't remember your email?\r\n              <span className={'ml-2'}>\r\n                <Link href=\"#\">\r\n                  <IntlMessages id=\"appModule.contactSupport\" />\r\n                </Link>\r\n              </span>\r\n            </Typography>\r\n          </div>\r\n        </form>\r\n        <ContentLoader />\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\r\nimport ForgotPassword from '../../@jumbo/components/Common/authComponents/ForgotPassword';\r\n\r\nconst ForgotPasswordPage = () => <ForgotPassword variant=\"standard\" wrapperVariant=\"bgColor\" />;\r\n\r\nexport default ForgotPasswordPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouteLogin = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) !== 200 && localStorage.getItem('validation') !== true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/dashboard', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const NotPrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      parseInt(localStorage.getItem('login')) === 200 ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={{ pathname: '/signin', state: { from: props.location } }} />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function ServiceLevelDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getQueue, getServiceLevel } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ServiceLevelDateFilter from './DateFilter';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [params, setParams] = useState({ startDate: formatDate(yesterday), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT '10' as ring,count(q_num) as cnt FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59'\r\n    and ring_time > interval '0 seconds' and ring_time < interval '10 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '20' as ring,count(q_num) FROM callcent_queuecalls_view where \r\n    time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '10 seconds' and ring_time < interval '20 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union\r\n    SELECT '30' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and\r\n    ring_time > interval '20 seconds' and ring_time < interval '30 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '40' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00'\r\n    and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '30 seconds' and ring_time < interval '40 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '50' as ring,count(q_num) FROM \r\n    callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '40 seconds' and ring_time < interval '50 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` union SELECT '60' as ring,count(q_num) FROM callcent_queuecalls_view where time_start >= '${params.startDate} 00:00:00' and time_start <= '${params.endDate} 23:59:59' and ring_time > interval '50 seconds'\r\n    and ring_time < interval '60 seconds'`;\r\n  if (queue !== '') {\r\n    string += ` and q_num = '${queue}'`;\r\n  }\r\n  string += ` order by ring asc`;\r\n  useEffect(() => {\r\n    getServiceLevel(string).then(response => setResponse(JSON.parse(response.data.data)));\r\n  }, [string, setResponse]);\r\n  useEffect(() => {\r\n    getQueue().then(response => setQueueList(JSON.parse(response.data.data)));\r\n  }, []);\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  };\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <ServiceLevelDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(startDate)}\r\n                        onChange={setStartDate}\r\n                        label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <DatePicker\r\n                        style={{ width: '100%' }}\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(endDate)}\r\n                        onChange={setEndDate}\r\n                        label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                      />\r\n                    </Grid> */}\r\n                    <Grid item md={3} xs={3}>\r\n                      {/* <Field disabled={false} name=\"queueCheck\" as=\"select\" component={Select}>\r\n                        <MenuItem value=\"All\">\r\n                          <IntlMessages id={'all'} />\r\n                        </MenuItem>\r\n                        {queuelist.map((queue, index) => (\r\n                          <MenuItem key={index} value={queue.dn}>\r\n                            {queue.dn} {queue.display_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Field> */}\r\n                      <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                        <InputLabel id=\"queue-select-label\">\r\n                          <IntlMessages id={'queue.answer.report.queues'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}>\r\n                          <MenuItem value={''}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {queuelist.map((queue, index) => (\r\n                            <MenuItem key={index} value={queue.dn}>\r\n                              {queue.dn} {queue.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\nfunction createData(level, cnt) {\r\n  return { level, cnt };\r\n}\r\n\r\nfunction DataTable({ response }) {\r\n  const classes = useStyles();\r\n\r\n  let total = 0;\r\n  for (var i = 0; i < response.length; i++) {\r\n    total = total + parseInt(response[i].cnt);\r\n  }\r\n  function percent(cnt) {\r\n    var result = 0;\r\n    result = parseInt(cnt) / total;\r\n    return (parseFloat(result) * 100).toFixed(2);\r\n  }\r\n  const rows = response.map(data => createData(data.ring, percent(data.cnt)));\r\n\r\n  const csvData = rows.map(row => ({\r\n    level: row.level,\r\n    cnt: `%${row.cnt === 'NaN' ? '00.00' : row.cnt}`,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-EN'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Servis Seviyesi'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Service Level'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Service Level'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Seconds'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Saniye'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Seconden'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Sekunden'\r\n                  : ''\r\n              }\r\n              value=\"level\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Servis Seviyesi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Service Level'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Service Level'\r\n                  : ''\r\n              }\r\n              value=\"cnt\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'seconds'} />\r\n              </TableCell>\r\n              <TableCell style={{ width: '100px' }} align=\"center\">\r\n                <IntlMessages id={'service.level'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.level}>\r\n                <TableCell align=\"center\">{row.level}</TableCell>\r\n                <TableCell align=\"center\">%{row.cnt === 'NaN' ? '00.00' : row.cnt}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nfunction ServiceLevel() {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'service.level'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'service.level'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setResponse={setResponse} />\r\n        </Grid>\r\n        <Grid item xs={12} xl={12}>\r\n          <Table response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Alert style={{ marginTop: '20px' }} severity=\"info\">\r\n        <IntlMessages id={'servicelevel.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default ServiceLevel;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedQueuesDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CircularProgress, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport {\r\n  getAbandonedQueueCalls,\r\n  getAbandonedQueueCallsDetails,\r\n  getQueue,\r\n  getAbandonedQueueCallsDetailsTotal,\r\n  getAgentNumber\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AbondenedQueuesDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setResponse,\r\n  limit,\r\n  offset,\r\n  setQueueList,\r\n  queuelist,\r\n  setDetails,\r\n  setPage,\r\n  setOffset,\r\n  setDetailsTotal,\r\n  setResponseCount,\r\n}) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n  const [params, setParams] = useState({ startDate: formatDate(today), endDate: formatDate(today) });\r\n  const [queue, setQueue] = useState('');\r\n  let string = `SELECT callcent_ag_dropped_calls.q_num, callcent_ag_dropped_calls.ag_num, to_char(callcent_ag_dropped_calls.time_start at time zone 'utc${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_start, to_char(callcent_ag_dropped_calls.time_end at time zone 'utc${timeOffset}','dd-mm-yyyy HH24:MI:SS') as time_end,callcent_ag_dropped_calls.q_call_history_id,callcent_queuecalls.from_userpart, callcent_queuecalls.from_displayname, callcent_ag_dropped_calls.reason_noanswerdesc,callcent_ag_dropped_calls.time_end - callcent_ag_dropped_calls.time_start as waiting FROM callcent_ag_dropped_calls inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id where  callcent_ag_dropped_calls.time_start >= '\r\n\t${params.startDate}' \r\n\t and callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day' \r\n\tand callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled' ${\r\n    queue === '' ? '' : \"and callcent_ag_dropped_calls.q_num = '\" + queue + \"'\"\r\n  } limit ${limit} offset ${offset}`;\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  let stringCount = `SELECT \r\n  count(*)\r\n  FROM callcent_ag_dropped_calls \r\n  inner join callcent_queuecalls on callcent_ag_dropped_calls.q_call_history_id = callcent_queuecalls.call_history_id\r\n  where  callcent_ag_dropped_calls.time_start >= '${params.startDate}' \r\n  and\r\n  callcent_ag_dropped_calls.time_start <= timestamp '${params.endDate}' + interval '1 day' \r\n  and \r\n  callcent_ag_dropped_calls.reason_noanswerdesc = 'Cancelled'\r\n  and callcent_ag_dropped_calls.q_num like '%${queue}'\r\n  `;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAbandonedQueueCalls(string).then(response => {\r\n      getAgentNumber().then(resp => {\r\n        var list = JSON.parse(response.data.data);\r\n        for (let i = 0; i < list.length; i++) {\r\n          JSON.parse(resp.data.data).map(res => {\r\n            if (list[i].ag_num === res.dn) {\r\n              list[i].ag_num = res.dn + '-' + res.display_name;\r\n            }\r\n            return null;\r\n          });\r\n        }\r\n        setResponse(list);\r\n        setLoading(false);\r\n      });\r\n    });\r\n\r\n    getAbandonedQueueCalls(stringCount).then(response => {\r\n      setResponseCount(JSON.parse(response.data.data)[0].count);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [string]);\r\n  useEffect(() => {\r\n    getQueue().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    getAbandonedQueueCallsDetails(params, queue).then(response => {\r\n      setDetails(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n\r\n  useEffect(() => {\r\n    getAbandonedQueueCallsDetailsTotal(params, queue).then(response => {\r\n      setDetailsTotal(JSON.parse(response.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    event.target.value === '' ? setQueue('') : setQueue(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <AbondenedQueuesDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <Formik\r\n          initialValues={{\r\n            queueCheck: '',\r\n          }}\r\n          onSubmit={values => {\r\n            setQueue(values.queueCheck);\r\n          }}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <DatePicker\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(startDate)}\r\n                        onChange={setStartDate}\r\n                        label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <DatePicker\r\n                        ampm={false}\r\n                        disableFuture\r\n                        inputVariant=\"outlined\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        value={formatDate(endDate)}\r\n                        onChange={setEndDate}\r\n                        label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                      />\r\n                    </Grid> */}\r\n                    <Grid item md={3} xs={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={queue}\r\n                          onChange={handleChangeQueue}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={''}>All</MenuItem>\r\n                          {queuelist.map((que, index) => (\r\n                            <MenuItem key={index} value={que.dn}>\r\n                              {que.dn} - {que.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\"\r\n                    variant=\"contained\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nfunction DataTable({ datalist, setResponse, setPage, setLimit, setOffset, limit, offset, page, queues, responseCount }) {\r\n  // const columns = [\r\n  //   { id: 'call_time', label: <IntlMessages id={'filter.menu.startdate'} />, minWidth: 60, align: 'center' },\r\n  //   {\r\n  //     id: 'callerid',\r\n  //     label: <IntlMessages id={'caller.id'} />,\r\n  //     minWidth: 70,\r\n  //     align: 'center',\r\n  //   },\r\n  //   { id: 'queue', label: <IntlMessages id={'queue'} />, minWidth: 60, align: 'center' },\r\n  //   {\r\n  //     id: 'waiting_time',\r\n  //     label: <IntlMessages id={'waiting.time'} />,\r\n  //     minWidth: 60,\r\n  //     align: 'center',\r\n  //   },\r\n  //   {\r\n  //     id: 'agent',\r\n  //     label: <IntlMessages id={'agent.number'} />,\r\n  //     minWidth: 60,\r\n  //     align: 'center',\r\n  //   },\r\n  // ];\r\n  const columns = [\r\n    {\r\n      field: 'call_time',\r\n      headerName: <IntlMessages id={'filter.menu.startdate'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#30475E' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'callerid',\r\n      headerName: <IntlMessages id={'caller.id'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'queue',\r\n      headerName: <IntlMessages id={'queue'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'agent',\r\n      headerName: <IntlMessages id={'agent.number'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#AE431E' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'waiting.time'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  function createData(id, queue, call_time, waiting_time, callerid, agent) {\r\n    return { id, queue, call_time, waiting_time, callerid, agent };\r\n  }\r\n\r\n  for (var i = 0; i < datalist.length; i++) {\r\n    for (var z = 0; z < queues.length; z++) {\r\n      if (datalist[i].q_num === queues[z].dn) {\r\n        datalist[i].q_num = queues[z].dn + '  ' + queues[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  const rows = datalist.map((data, index) =>\r\n    createData(\r\n      index,\r\n      data.q_num,\r\n      data.time_start,\r\n      data.waiting\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.from_displayname,\r\n      data.ag_num,\r\n    ),\r\n  );\r\n\r\n  console.log(rows);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(responseCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setResponse([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Abondened_queues'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_terk_raporu'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Verlassene Warteschlangen'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Verlaten wachtrijen'\r\n                      : ' '\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Start Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Başlangıç Saati'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Starttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Startzeit'\r\n                          : ''\r\n                      }\r\n                      value=\"start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Caller Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan Numara'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Bellernummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Anrufernummer'\r\n                          : ''\r\n                      }\r\n                      value=\"caller_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Queue'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Sıra'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrij'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlange'\r\n                          : ''\r\n                      }\r\n                      value=\"queue\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Agent Number'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Agent Numarası'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Agent nummer'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Agentennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"agent_number\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        curentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n        {/* {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Abondened_queues' : 'Kuyruk_terk_raporu'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Start Time' : 'Başlangıç Zamanı'} value=\"call_time\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Caller Number' : 'Arayan Numara'} value=\"callerid\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Queue' : 'Kuyruk'} value=\"queue\" />\r\n              <ExcelColumn label={curentLanguage.locale == 'en-US' ? 'Agent Number' : 'Agent Numarası'} value=\"agent\" />\r\n              <ExcelColumn\r\n                label={curentLanguage.locale == 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                value=\"waiting_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )} */}\r\n      </div>\r\n      <Paper>\r\n        {/* <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(responseCount)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(responseCount)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={datalist.length < limit || datalist.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nfunction Details({ details, detailsTotal }) {\r\n  const columns = [\r\n    { id: 'date_day', label: <IntlMessages id={'filter.menu.date'} />, minWidth: 100, align: 'center' },\r\n    { id: 'cnt', label: <IntlMessages id={'wallboard.total.call'} />, minWidth: 170, align: 'center' },\r\n\r\n    {\r\n      id: 'total_waiting_time',\r\n      label: <IntlMessages id={'waiting.time'} />,\r\n      minWidth: 170,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'act',\r\n      label: <IntlMessages id={'average'} />,\r\n      minWidth: 170,\r\n      align: 'center',\r\n    },\r\n  ];\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  // const returnTime = time => {\r\n  //   if (typeof time === 'undefined') {\r\n  //     time = '00';\r\n  //   } else {\r\n  //     if (time < 10) {\r\n  //       time = '0' + time;\r\n  //     } else {\r\n  //       time = time;\r\n  //     }\r\n  //   }\r\n  //   return time;\r\n  // };\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(cnt, date_day, total_waiting_time, act) {\r\n    return { cnt, date_day, total_waiting_time, act };\r\n  }\r\n\r\n  const rows = details.map(data =>\r\n    createData(\r\n      data.cnt,\r\n      data.day_abandoned,\r\n      data.total_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n      data.act.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper} className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>\r\n          <IntlMessages id={'summery'} />\r\n        </caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell align=\"center\">{getNewDate(row.date_day)}</TableCell>\r\n              <TableCell align=\"center\">{row.cnt}</TableCell>\r\n              <TableCell align=\"center\">{row.total_waiting_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n              <TableCell align=\"center\">{row.act}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {detailsTotal.map((row, index) => (\r\n            <TableRow key={index} style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'total'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.totalcount}</TableCell>\r\n              <TableCell align=\"center\">{row.totalwaiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n              <TableCell align=\"center\">{row.act.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>{' '}\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n/**  */\r\n","import React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport Details from './Details';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nexport const AbandonedQueues = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [details, setDetails] = useState([]);\r\n  const [detailsTotal, setDetailsTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abandoned.queues'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abandoned.queues'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setDetails={setDetails}\r\n            setResponse={setResponse}\r\n            setOffset={setOffset}\r\n            setPage={setPage}\r\n            setQueueList={setQueueList}\r\n            queuelist={queuelist}\r\n            limit={limit}\r\n            offset={offset}\r\n            setDetailsTotal={setDetailsTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table\r\n            datalist={response}\r\n            setResponse={setResponse}\r\n            offset={offset}\r\n            setOffset={setOffset}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            page={page}\r\n            queues={queuelist}\r\n            setPage={setPage}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Details details={details} detailsTotal={detailsTotal} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function RepadativeCallsDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-EN' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  getQueueNumber,\r\n  getRepetetiveAll,\r\n  getRepetetiveAnswered,\r\n  getDidNumbers,\r\n  getRepetetiveAllCount,\r\n  getRepetetiveAnsweredCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress, FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { getRepetetiveCallerDetails } from 'api/api';\r\nimport RepadativeCallsDateFilter from './DateFilter';\r\n\r\nfunction Filter({\r\n  setallcalls,\r\n  setPage,\r\n  setAllCallOffset,\r\n  limit,\r\n  allCallOffset,\r\n  setAnsweredCallOffset,\r\n  setPageAnswered,\r\n  setAnsweredLimit,\r\n  answeredLimit,\r\n  answeredCallsOffset,\r\n  setAnsweredCalls,\r\n  setLimit,\r\n  callerNumber,\r\n  setResponseCaller,\r\n  setAllCallCount,\r\n  setAnsweredCallCount,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(yesterday));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({\r\n    paramStart: formatDate(yesterday),\r\n    paramFinish: formatDate(today),\r\n  });\r\n\r\n  const [queue, setQueue] = useState('');\r\n  let [loading, setLoading] = useState(true);\r\n  const [queuelist, setQueueList] = useState([]);\r\n  const [didList, setDidList] = useState([]);\r\n  const [didNumber, setDidNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getRepetetiveAll(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setallcalls(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n    getRepetetiveAllCount(params, limit, allCallOffset, queue, didNumber).then(response => {\r\n      setAllCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, limit, allCallOffset, queue, setallcalls, setAllCallCount, didNumber]);\r\n  useEffect(() => {\r\n    getRepetetiveAnswered(params, answeredLimit, answeredCallsOffset, queue).then(response =>\r\n      setAnsweredCalls(JSON.parse(response.data.data)),\r\n    );\r\n\r\n    getRepetetiveAnsweredCount(params).then(response => {\r\n      setAnsweredCallCount(parseInt(JSON.parse(response.data.data)[0].cnt));\r\n    });\r\n  }, [params, answeredLimit, answeredCallsOffset, setAnsweredCalls, setAnsweredCallCount, queue]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueueList(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getDidNumbers().then(resp => {\r\n      setDidList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRepetetiveCallerDetails(params, callerNumber).then(resp => {\r\n      setResponseCaller(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params, callerNumber, setQueueList, setDidList, setResponseCaller]);\r\n\r\n  const handleClick = () => {\r\n    setAllCallOffset(0);\r\n    setAnsweredCallOffset(0);\r\n    setLimit(10);\r\n    setAnsweredLimit(10);\r\n    setPage(0);\r\n    setPageAnswered(0);\r\n    setParams({\r\n      paramStart: formatDate(startDate),\r\n      paramFinish: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  const handleChangeQueueNumber = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeDidNumber = event => {\r\n    setDidNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RepadativeCallsDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <GridContainer>\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'queue'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={queue}\r\n                    onChange={handleChangeQueueNumber}\r\n                    label={<IntlMessages id={'queue'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {queuelist.map((queue, index) => (\r\n                      <MenuItem key={index} value={queue.dn}>\r\n                        {queue.dn} - {queue.display_name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={3}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel id=\"agent-select-label\">\r\n                    <IntlMessages id={'mountlydetails.didnumber'} />\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"agent-select-label\"\r\n                    id=\"agent-select\"\r\n                    value={didNumber}\r\n                    onChange={handleChangeDidNumber}\r\n                    label={<IntlMessages id={'mountlydetails.didnumber'} />}>\r\n                    <MenuItem value=\"\">\r\n                      <IntlMessages id={'all'} />\r\n                    </MenuItem>\r\n                    {didList.map((did, index) => (\r\n                      <MenuItem key={index} value={did.conditiondata}>\r\n                        {did.conditiondata}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </GridContainer>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              onClick={() => {\r\n                handleClick();\r\n              }}\r\n              size=\"small\"\r\n              variant=\"contained\">\r\n              <IntlMessages id={'filter.menu.search'} />\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AllCalls = ({\r\n  allcalls,\r\n  setallcalls,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  setCallerNumber,\r\n  setOpen,\r\n  allCallCount,\r\n}) => {\r\n  const columns = [\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(cnt, src_display_name) {\r\n    return { cnt, src_display_name };\r\n  }\r\n\r\n  const rows = allcalls.map(data => createData(data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClick = number => {\r\n    setCallerNumber(number);\r\n    setOpen(true);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [exportAllOpen, setExpotAllOpen] = useState(false);\r\n  const handleExportAllOpen = () => setExpotAllOpen(true);\r\n  const handleExportAllClose = () => setExpotAllOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setLimit(allCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setallcalls([]);\r\n    handleExportAllOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={exportAllOpen}\r\n        onClose={handleExportAllClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      {/* {rows.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls' : 'Mükerrer_arama'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )} */}\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'allcalls'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell>\r\n                  <IntlMessages id={'details'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell style={{ cursor: 'pointer' }} onClick={() => handleClick(row.src_display_name)}>\r\n                      <VisibilityIcon style={{ color: '#F05454' }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, allCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={allCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={allcalls.length < limit || allcalls.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCalls;\r\n/** */\r\n/***/\r\n","import React from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ responseCaller }) => {\r\n  const columns = [\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n    { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n    { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n    { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {responseCaller.map((row, index) => {\r\n            return (\r\n              <TableRow style={{ cursor: 'pointer' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                {columns.map(column => {\r\n                  const value = row[column.id];\r\n                  return <TableCell>{value}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, Toolbar, Typography } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nconst AnsweredCalls = ({\r\n  answeredcalls,\r\n  setAnsweredCalls,\r\n  setAnsweredLimit,\r\n  setPage,\r\n  page,\r\n  limit,\r\n  setOffset,\r\n  answeredCallCount,\r\n}) => {\r\n  const columns = [\r\n    { id: 'cnt', label: <IntlMessages id={'call.time'} />, minWidth: 60, align: 'center' },\r\n    { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  ];\r\n\r\n  function createData(cnt, src_display_name) {\r\n    return { cnt, src_display_name };\r\n  }\r\n\r\n  const rows = answeredcalls.map(data => createData(data.cnt, data.src_display_name));\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setAnsweredLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleDowlandButtonClick = () => {\r\n    setAnsweredLimit(answeredCallCount);\r\n    setPage(0);\r\n    setOffset(0);\r\n    setAnsweredCalls([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {rows.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {rows.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {rows.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {rows.length > 0 && (\r\n              <ExcelFile\r\n                filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={rows} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      {/* {rows.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={curentLanguage.locale === 'en-US' ? 'Repetetive_answered_calls' : 'Cevaplanmis_mükerrer_arama'}\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"data\">\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"cnt\" />\r\n              <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )} */}\r\n\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n          <Typography>\r\n            <IntlMessages id={'wallboard.answered'} />\r\n          </Typography>\r\n        </Toolbar>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, answeredCallCount].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={answeredCallCount}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={\r\n            answeredcalls.length < limit || answeredcalls.length === 0 ? { disabled: true } : { disabled: false }\r\n          }\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnsweredCalls;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport CallTable from './AllCalls';\r\nimport Model from './Model';\r\nimport AnsweredCalls from './AnsweredCalls';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Modal from '@mui/material/Modal';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box, Button } from '@mui/material';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst RepetetiveCalls = () => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [answeredLimit, setAnsweredLimit] = useState(10);\r\n  const [allCallOffset, setAllCallOffset] = useState(0);\r\n  const [answeredCallsOffset, setAnsweredCallOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [pageAnswered, setPageAnswered] = useState(0);\r\n  const [allcalls, setallcalls] = useState([]);\r\n  const [answeredCalls, setAnsweredCalls] = useState([]);\r\n  const [callerNumber, setCallerNumber] = useState('');\r\n  const [responseCaller, setResponseCaller] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [allCallCount, setAllCallCount] = useState(10);\r\n  const [answeredCallCount, setAnsweredCallCount] = useState(10);\r\n  let curentLanguage = useIntl();\r\n\r\n  const handleClose = event => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'repetetive.calls'} />, isActive: true },\r\n  ];\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'repetetive.calls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <Filter\r\n            setResponseCaller={setResponseCaller}\r\n            setAnsweredCallCount={setAnsweredCallCount}\r\n            setallcalls={setallcalls}\r\n            callerNumber={callerNumber}\r\n            setPage={setPage}\r\n            setAllCallOffset={setAllCallOffset}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            answeredLimit={answeredLimit}\r\n            limit={limit}\r\n            setPageAnswered={setPageAnswered}\r\n            setLimit={setLimit}\r\n            allCallOffset={allCallOffset}\r\n            setAnsweredCallOffset={setAnsweredCallOffset}\r\n            answeredCallsOffset={answeredCallsOffset}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            setAllCallCount={setAllCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<AddIcCallIcon />}\r\n                    number={allCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'allcalls'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n                  <CounterCard\r\n                    icon={<PhoneInTalkIcon />}\r\n                    number={answeredCallCount}\r\n                    numberProps={{\r\n                      fontSize: 25,\r\n                    }}\r\n                    label={<IntlMessages id={'wallboard.answered'} />}\r\n                    labelProps={{\r\n                      fontSize: 13,\r\n                    }}\r\n                    backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n                    gradientDirection=\"180deg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <CallTable\r\n            setOpen={setOpen}\r\n            responseCaller={responseCaller}\r\n            offset={allCallOffset}\r\n            setOffset={setAllCallOffset}\r\n            allcalls={allcalls}\r\n            setallcalls={setallcalls}\r\n            setLimit={setLimit}\r\n            limit={limit}\r\n            setCallerNumber={setCallerNumber}\r\n            setPage={setPage}\r\n            page={page}\r\n            allCallCount={allCallCount}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} xl={12} xs={12}>\r\n          <AnsweredCalls\r\n            answeredcalls={answeredCalls}\r\n            setAnsweredCalls={setAnsweredCalls}\r\n            answeredCallCount={answeredCallCount}\r\n            setAnsweredLimit={setAnsweredLimit}\r\n            setPage={setPageAnswered}\r\n            page={pageAnswered}\r\n            limit={answeredLimit}\r\n            setOffset={setAnsweredCallOffset}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model responseCaller={responseCaller} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <ExcelFile\r\n              filename={curentLanguage.locale === 'en-US' ? 'Repetetive_calls_Detail' : 'Mükerrer_arama_Detay'}\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={responseCaller} name=\"responseCaller\">\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'DID Number' : 'DID Numarası'} value=\"src_did\" />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Called' : 'Hedef DN'} value=\"dst_display_name\" />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Talk Time' : 'Konuşma Süresi'}\r\n                  value=\"talkingtime\"\r\n                />\r\n                <ExcelColumn\r\n                  label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                  value=\"waitingtime\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginLeft: '10px' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default RepetetiveCalls;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst QueueList = ({ setQueueAmaunt }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getQueueList().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n      setQueueAmauntFunction();\r\n    }\r\n    var queueListTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(queueListTimeout);\r\n    }\r\n  };\r\n\r\n  const setQueueAmauntFunction = () => {\r\n    let queAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].waitingNumber !== '-') {\r\n        queAmaunt++;\r\n      }\r\n    }\r\n    // response.map(queue => {\r\n    //   if (queue.waitingNumber !== '-') {\r\n    //     queAmaunt++;\r\n    //   }\r\n    // });\r\n\r\n    setQueueAmaunt(queAmaunt);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.waiting'} />\r\n            </TableCell>\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue'} />\r\n            </TableCell>\r\n            {/* <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queue.number'} />\r\n            </TableCell> */}\r\n            <TableCell\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#EA4C4C',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.length >= 1\r\n            ? response.map((row, index) => {\r\n                return row.waitingNumber !== '-' ? (\r\n                  <TableRow style={{ backgroundColor: '#FFFD95' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.waitingNumber}</b>\r\n                    </TableCell>\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                      <b>\r\n                        {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                          ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                              .toString()\r\n                              .replace(':', 'h ')\r\n                              .replace(':', 'm ') + 's'\r\n                          : null}\r\n                      </b>\r\n                    </TableCell>\r\n                    {/* <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> {row.queueNumber}\r\n                    </TableCell> */}\r\n                    <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                      <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : null;\r\n              })\r\n            : null}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.waitingNumber === '-' ? (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                  <b>\r\n                    <IntlMessages id={'no.waiting'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n                  <b>\r\n                    {(row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.waitingTime !== '-' ? row.waitingTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n                {/* <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> {row.queueNumber}\r\n                </TableCell> */}\r\n                <TableCell style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.queuName}</b> <b>{'(' + row.queueNumber + ')'}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default QueueList;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport Chip from '@mui/material/Chip';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentConnection = ({ setCallAmaunt, setAgentAmaunt, setAgentNum, setAgentName }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [queues, setQueues] = useState([]);\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    api.getQueueNumber().then(resp => setQueues(JSON.parse(resp.data.data)));\r\n  }, []);\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentConnection().then(resp => {\r\n        setResponse(resp.data.data);\r\n      });\r\n      setValuesFunction();\r\n    }\r\n\r\n    var agentConnectionTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentConnectionTimeout);\r\n    }\r\n  };\r\n\r\n  const setValuesFunction = () => {\r\n    let callAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].connectionNumber !== '-') {\r\n        callAmaunt++;\r\n      }\r\n    }\r\n\r\n    setCallAmaunt(callAmaunt);\r\n    setAgentAmaunt(response.length);\r\n  };\r\n\r\n  const setAgentNumFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const column = [\r\n    { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'agent'} />, width: '30px' },\r\n    { id: 'direction', headerName: <IntlMessages id={'direction'} />, width: '100px' },\r\n    { id: 'queue', headerName: <IntlMessages id={'queue'} />, width: '100px' },\r\n    { id: 'connection_number', headerName: <IntlMessages id={'connection.number'} />, width: '60px' },\r\n    { id: 'connection_time', headerName: <IntlMessages id={'connection.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '32vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'internals.summary.agent'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'direction'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'queue'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.number'} />\r\n            </TableCell>\r\n            <TableCell\r\n              key={column.id}\r\n              style={{\r\n                paddingTop: '8px',\r\n                paddingBottom: '8px',\r\n                fontFamily: 'Roboto',\r\n                backgroundColor: '#2978B5',\r\n                color: 'white',\r\n              }}>\r\n              <IntlMessages id={'connection.time'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber !== '-' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}\r\n                hover\r\n                role=\"checkbox\"\r\n                tabIndex={-1}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  {row.direction.includes('outbound') ? (\r\n                    <Chip color=\"error\" label={<IntlMessages id={'outgoingcall'} />} />\r\n                  ) : (\r\n                    <Chip color=\"success\" label={<IntlMessages id={'incomingcall'} />} />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  {row?.queue !== null ? (\r\n                    row?.queue !== undefined ? (\r\n                      queues.find(e => e.dn === row?.queue?.split(\".\")[0])?.display_name || <b>-</b>\r\n                    ) : (\r\n                      <b>-</b>\r\n                    )\r\n                  ) : (\r\n                    <b>-</b>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n          {response.map((row, index) => {\r\n            return row.connectionNumber === '-' ? (\r\n              <TableRow key={index} hover role=\"checkbox\" tabIndex={-1} style={{ cursor: 'pointer' }}>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{row.agentName}</b>{' '}\r\n                  <b>{'(' + row.agentNumber + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>-</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <b>{row.connectionNumber}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => setAgentNumFunction(row.agentNumber, row.agentName)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00') !== undefined\r\n                      ? (row.connectionTime !== '-' ? row.connectionTime.substring(0, 8) : '00:00:00')\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentConnection;\r\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst AgentStatus = ({ setBreakeAgentAmount, setLoginAgentAmount, setAgentNum, setAgentName }) => {\r\n  var now = new Date();\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  const [response, setResponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    reloadValues();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  // const addZero = param => {\r\n  //   if (param < 10) {\r\n  //     return '0' + param;\r\n  //   } else {\r\n  //     return param;\r\n  //   }\r\n  // };\r\n  const convertToLocalTime = date_ => {\r\n    var date = new Date(date_);\r\n    var year = date.getFullYear();\r\n    var month = date.getMonth() + 1;\r\n    var dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  const reloadValues = () => {\r\n    if (window.location.pathname === '/wallboard') {\r\n      api.getAgentStatus(convertToLocalTime(now)).then(resp => {\r\n        setResponse(JSON.parse(resp.data.data));\r\n      });\r\n      setValuesFunction();\r\n    }\r\n    var agentStatusTimeout = setTimeout(reloadValues, 5000);\r\n    if (window.location.pathname !== '/wallboard') {\r\n      clearTimeout(agentStatusTimeout);\r\n    }\r\n  };\r\n\r\n  //response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout'\r\n\r\n  const setValuesFunction = () => {\r\n    let breakeAgenAmaunt = 0;\r\n    let loginAgentAmaunt = 0;\r\n    for (let i = 0; i < response.length; i++) {\r\n      if (response[i].states !== 'Login' && response[i].states !== 'State' && response[i].states !== 'Logout') {\r\n        breakeAgenAmaunt++;\r\n      } else if (response[i].states === 'Login') {\r\n        loginAgentAmaunt++;\r\n      }\r\n    }\r\n    // response.map(agent => {\r\n    //   if (agent.states !== 'Login' && agent.states !== 'State' && agent.states !== 'Logout') {\r\n    //     breakeAgenAmaunt++;\r\n    //   } else if (agent.states === 'Login') {\r\n    //     loginAgentAmaunt++;\r\n    //   }\r\n    // });\r\n    setBreakeAgentAmount(breakeAgenAmaunt);\r\n    setLoginAgentAmount(loginAgentAmaunt);\r\n  };\r\n\r\n  const onClickUptateValuesFunction = (agentNum, agentName) => {\r\n    setAgentNum(agentNum);\r\n    setAgentName(agentName);\r\n  };\r\n\r\n  const column = [\r\n    // { id: 'agent_num', headerName: <IntlMessages id={'agent.number'} />, width: '30px' },\r\n    { id: 'agent_name', headerName: <IntlMessages id={'internals.summary.agent'} />, width: '30px' },\r\n    { id: 'states', headerName: <IntlMessages id={'state'} />, width: '60px' },\r\n    { id: 'statustime', headerName: <IntlMessages id={'state.time'} />, width: '100px' },\r\n  ];\r\n\r\n  return (\r\n    <TableContainer\r\n      style={{ maxHeight: '33vh', boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}\r\n      component={Paper}\r\n      className={classes.root}>\r\n      <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {column.map(column => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={{\r\n                  paddingTop: '8px',\r\n                  paddingBottom: '8px',\r\n                  fontFamily: 'Roboto',\r\n                  color: 'white',\r\n                  backgroundColor: '#FA744F',\r\n                }}>\r\n                {column.headerName}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Login' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#80ED99', cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states !== 'Login' && res.states !== 'State' && res.states !== 'Logout' ? (\r\n              <TableRow\r\n                key={index}\r\n                style={{\r\n                  backgroundColor:\r\n                    res.states === 'YEMEK' && parseInt(res.statustime.split(':')[0]) >= 1\r\n                      ? '#DD4A48'\r\n                      : res.states === 'WC' && parseInt(res.statustime.split(':')[1]) >= 5\r\n                      ? '#DD4A48'\r\n                      : '#F3950D',\r\n                  cursor: 'pointer',\r\n                }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'Logout' ? (\r\n              <TableRow key={index} style={{ backgroundColor: '#DE834D', cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} /> <b>{res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n\r\n        <TableBody>\r\n          {response.map((res, index) =>\r\n            res.states === 'State' ? (\r\n              <TableRow key={index} style={{ cursor: 'pointer' }}>\r\n                {/* <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> {res.dn}\r\n                </TableCell> */}\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} /> <b>{res.display_name}</b>{' '}\r\n                  <b>{'(' + res.dn + ')'}</b>\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />{' '}\r\n                  <b>{res.states === 'State' ? <IntlMessages id={'passive'} /> : res.states}</b>\r\n                </TableCell>\r\n\r\n                <TableCell\r\n                  onClick={() => onClickUptateValuesFunction(res.dn, res.display_name)}\r\n                  style={{ paddingTop: '1px', paddingBottom: '1px', fontFamily: 'Roboto' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b>\r\n                    {(res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime) !== undefined\r\n                      ? (res.statustime === '416.16:00:00' ? '00:00:00' : res.statustime)\r\n                          .toString()\r\n                          .replace(':', 'h ')\r\n                          .replace(':', 'm ') + 's'\r\n                      : null}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : null,\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default AgentStatus;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as api from '../../../../api/api';\r\nimport { Grid, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport CounterCard from '@jumbo/components/Common/CounterCard';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PhonePausedIcon from '@mui/icons-material/PhonePaused';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport PhoneMissedIcon from '@mui/icons-material/PhoneMissed';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport dateFormat from 'dateformat';\r\nimport { DateRange } from '@material-ui/icons';\r\n\r\nexport default function CallDetail({ queueAmaunt, callAmaunt, agentAmaunt, breakeAgentAmaunt, loginAgentAmaunt }) {\r\n  let history = useHistory();\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd'));\r\n  const [dateFilter, setDateFilter] = useState('daily');\r\n  const [direction, setDirection] = useState('all');\r\n\r\n  const handleChangeFilter = e => {\r\n    setDateFilter(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'weekly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 7)), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'daily':\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n      case 'monthly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 30)), 'yyyy-mm-dd'));\r\n        break;\r\n      default:\r\n        setStartTimeApi(dateFormat(new Date(), 'yyyy-mm-dd'));\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getDailyCallDetails(startTimeApi)\r\n      .then(resp => setResponse(JSON.parse(resp.data.data)[0]))\r\n      .catch(err => {\r\n        if (err.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [startTimeApi, history]);\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      api\r\n        .getDailyCallDetails(startTimeApi)\r\n        .then(resp => setResponse(JSON.parse(resp.data.data)[0]))\r\n        .catch(err => {\r\n          if (err.response.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [startTimeApi, history]);\r\n\r\n  const convertTime = timeString => {\r\n    if (timeString !== undefined) {\r\n      if (timeString.includes('.')) {\r\n        let tempHour = parseInt(timeString.split('.')[0]) * 24;\r\n        return (\r\n          tempHour +\r\n          parseInt(timeString.split('.')[1].split(':')[0]) +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[1] +\r\n          ':' +\r\n          timeString.split('.')[1].split(':')[2]\r\n        );\r\n      } else {\r\n        return timeString;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ marginBottom: '1px', fontFamily: 'Roboto' }}>\r\n      <GridContainer>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select value={dateFilter} onChange={handleChangeFilter}>\r\n              <MenuItem value=\"daily\">\r\n                <DateRange />\r\n                <IntlMessages id=\"daily\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"weekly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.weekly\" />\r\n              </MenuItem>\r\n              <MenuItem value=\"monthly\">\r\n                <DateRange />\r\n                <IntlMessages id=\"select.menu.monthly\" />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={4}>\r\n          <FormControl fullWidth variant=\"standard\">\r\n            <Select\r\n              value={direction}\r\n              onChange={e => setDirection(e.target.value)}\r\n              label={<IntlMessages id={'direction'} />}>\r\n              <MenuItem value=\"all\">\r\n              <AddIcCallIcon />\r\n                <IntlMessages id={'all'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"inbound\">\r\n              <PhoneCallbackIcon />\r\n                <IntlMessages id={'dashboard.inbound'} />\r\n              </MenuItem>\r\n              <MenuItem value=\"outbound\">\r\n              <PhoneForwardedIcon />\r\n                <IntlMessages id={'dashboard.outbound'} />\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <Grid item md={2} style={{display:direction !== \"all\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00') !== undefined\r\n                  ? (response.totaltime !== '' ? convertTime(response.totaltime) : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.call.time'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#6166B3 -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{display:direction !== \"all\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AddIcCallIcon />}\r\n              number={response.total_call}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.total.call'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{display:direction === \"outbound\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneCallbackIcon />}\r\n              number={(\r\n                parseInt(response.total_call) -\r\n                parseInt(response.agent_to_agent_calls) -\r\n                parseInt(response.outbound_calls)\r\n              ).toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.inbound'} />}\r\n              labelProps={{\r\n                fontSize: 11,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{display:direction === \"inbound\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneForwardedIcon />}\r\n              number={response.outbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'dashboard.outbound'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2} style={{display:direction === \"outbound\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={response.answered_inbound_calls}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.answered'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#EA4C4C  -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}  style={{display:direction === \"outbound\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneMissedIcon />}\r\n              number={String(\r\n                response.total_call -\r\n                  response.agent_to_agent_calls -\r\n                  response.answered_inbound_calls -\r\n                  response.outbound_calls <\r\n                  0\r\n                  ? '0'\r\n                  : response.total_call -\r\n                      response.agent_to_agent_calls -\r\n                      response.answered_inbound_calls -\r\n                      response.outbound_calls,\r\n              )}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.unanswered'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhonePausedIcon />}\r\n              number={queueAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.waiting.queue'} />}\r\n              labelProps={{\r\n                fontSize: 11,\r\n              }}\r\n              backgroundColor={['#EA4C4C -18.96%', '#C14545  108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PhoneInTalkIcon />}\r\n              number={callAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.call'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#FFF9B0  -18.96%', '#F48B29 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<PersonIcon />}\r\n              number={agentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#8AB6D6  -18.96%', '#2978B5 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<TimerIcon />}\r\n              number={breakeAgentAmaunt.toString()}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.inbreak'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#ADCE74 -18.96%', '#4E8D7C 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<GroupIcon />}\r\n              number={String(loginAgentAmaunt - callAmaunt < 0 ? 0 : loginAgentAmaunt - callAmaunt)}\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.staff.available'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#6166B3  -18.96%', '#544179 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item md={2} style={{display:direction !== \"all\" ? \"none\" : \"unset\"}}>\r\n          <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n            <CounterCard\r\n              icon={<AccessTimeIcon />}\r\n              number={\r\n                (response.average !== '' ? response.average : '00:00:00') !== undefined\r\n                  ? (response.average !== '' ? response.average : '00:00:00')\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'\r\n                  : null\r\n              }\r\n              numberProps={{\r\n                fontSize: 25,\r\n              }}\r\n              label={<IntlMessages id={'wallboard.average.time'} />}\r\n              labelProps={{\r\n                fontSize: 13,\r\n              }}\r\n              backgroundColor={['#F79071 -18.96%', '#FA744F 108.17%']}\r\n              gradientDirection=\"180deg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Paper, Tab, Tabs, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport dateFormat from 'dateformat';\r\nimport { DateRange } from '@material-ui/icons';\r\n\r\nexport default function AgentDetail({ agentNum, agentName }) {\r\n  const [agentDetail, setAgentDetail] = useState({\r\n    dst_display_name: '-',\r\n    totalcall: '0',\r\n    answered_call: '0',\r\n    inbound_call_to_agent: '0',\r\n    outbound_call_to_agent: '0',\r\n    totaltime: '00:00:00',\r\n    average: '00:00:00',\r\n    inboundtotaltime: '00:00:00',\r\n    outboundtotaltime: '00:00:00',\r\n    inboundaverage: '00:00:00',\r\n    outboundaverage: '00:00:00',\r\n  });\r\n  let [voiceMail, setVoiceMail] = useState('0');\r\n  let [longTime, setLongTime] = useState('00:00:00');\r\n  let [waitingTime, setWaitingTime] = useState('00:00:00');\r\n\r\n  //zaman dilimi seçimi\r\n  const [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date(),'yyyy-mm-dd'));\r\n  const [dateFilter, setDateFilter] = useState(\"daily\");\r\n\r\n  const handleChangeFilter = e => {\r\n    setDateFilter(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'weekly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 7)),'yyyy-mm-dd'));\r\n        break;\r\n      case 'daily':\r\n        setStartTimeApi(dateFormat(new Date(),'yyyy-mm-dd'));\r\n        break;\r\n      case 'monthly':\r\n        setStartTimeApi(dateFormat(new Date(new Date().setDate(new Date().getDate() - 30)),'yyyy-mm-dd'));\r\n        break;\r\n      default:\r\n        setStartTimeApi(dateFormat(new Date(),'yyyy-mm-dd'));\r\n        break;\r\n    }\r\n  };\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getInternalsSummaryLongestCalled(startTimeApi, dateFormat(new Date(),'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      api.getInternalsSummaryLongestCaller(startTimeApi, dateFormat(new Date(),'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      api.getInternalsSummaryLongestCalledAmount(startTimeApi, dateFormat(new Date(),'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestAmount(JSON.parse(result.data.data));\r\n      });\r\n      api.getInternalsSummaryLongestCallerAmount(startTimeApi, dateFormat(new Date(),'yyyy-mm-dd'), agentNum).then(result => {\r\n        setLongestCallerAmount(JSON.parse(result.data.data));\r\n      });\r\n    }\r\n  }, [agentNum, startTimeApi]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getAgentDetails(agentNum,startTimeApi).then(res => {\r\n        if (JSON.parse(res.data.data).length === 0) {\r\n          setAgentDetail({\r\n            dst_display_name: agentName,\r\n            totalcall: '0',\r\n            answered_call: '0',\r\n            inbound_call_to_agent: '0',\r\n            outbound_call_to_agent: '0',\r\n            totaltime: '00:00:00',\r\n            average: '00:00:00',\r\n            inboundtotaltime: '00:00:00',\r\n            outboundtotaltime: '00:00:00',\r\n            inboundaverage: '00:00:00',\r\n            outboundaverage: '00:00:00',\r\n          });\r\n        } else {\r\n          setAgentDetail(JSON.parse(res.data.data)[0]);\r\n        }\r\n      });\r\n    }\r\n  }, [agentNum, agentName, startTimeApi]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardVoiceMail(agentNum).then(response => {\r\n        setVoiceMail(JSON.parse(response.data.data)[0].count);\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardLongTime(agentNum).then(response => {\r\n        setLongTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  useEffect(() => {\r\n    if (agentNum !== '0') {\r\n      api.getWallBoardWaitingTime(agentNum).then(response => {\r\n        setWaitingTime(\r\n          JSON.parse(response.data.data)[0] !== undefined ? JSON.parse(response.data.data)[0].duration : '00:00:00',\r\n        );\r\n      });\r\n    }\r\n  }, [agentNum]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div style={{ boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px' }}>\r\n      <Paper>\r\n        <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n        <FormControl fullWidth variant=\"standard\">\r\n              <Select\r\n                id=\"direction-select\"\r\n                value={dateFilter}\r\n                onChange={handleChangeFilter}>\r\n                <MenuItem value=\"daily\">\r\n                <DateRange />\r\n                  <IntlMessages id=\"daily\" />\r\n                </MenuItem>\r\n                <MenuItem value=\"weekly\">\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.weekly\" />\r\n                  </MenuItem>\r\n                <MenuItem value=\"monthly\">\r\n                  <DateRange />\r\n                  <IntlMessages id=\"select.menu.monthly\" />\r\n                  </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n        </Box>\r\n        <div style={{ minHeight: '33vh', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Box style={{ width: '100%' }}>\r\n            <Box style={{ borderBottom: 1, borderColor: 'divider', backgroundColor: '#ADCE74', color: 'white' }}>\r\n              <Tabs value={value} onChange={handleChange}>\r\n                <Tab style={{ borderRight: '3px solid #a1bf6e' }} label={<IntlMessages id={'Total'} />} {...a11yProps(0)} />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Inbound'} />}\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  style={{ borderRight: '3px solid #a1bf6e' }}\r\n                  label={<IntlMessages id={'Outbound'} />}\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.total.call'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totalcall}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'total.time'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.totaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'average'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.average\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.longesttime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {longTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.answered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.unanswered'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent - agentDetail?.answered_call}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.voicemail'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {voiceMail}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                <p style={{ opacity: '.5' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display:'flex',\r\n                      justifyContent:'space-between'\r\n                    }}>\r\n                      <span>{longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}</span>\r\n                      <b>{longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}</b>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                <p style={{ opacity: '.5' }}>\r\n                <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display:'flex',\r\n                      justifyContent:'space-between'\r\n                    }}>\r\n                      <span> {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}</span>\r\n                      <b>{longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}</b>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeInboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.inboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {waitingTime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n              <Grid item md={8}>\r\n                <p style={{ opacity: '.5',display:'flex',justifyContent:'space-between' }}>\r\n                <span><IntlMessages id={'internalssummary.longestcalledtime'} /></span>\r\n                <span><IntlMessages id={'internalssummary.callednumber'} /></span>\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display:'flex',\r\n                      justifyContent:'space-between'\r\n                    }}>\r\n                    <b>{longestCalleds[0] !== undefined\r\n                        ? longestCalleds[0].en_uzun_aranan_süre\r\n                            .toString()\r\n                            .replace(':', 'h ')\r\n                            .replace(':', 'm ') + 's'\r\n                        : '-'}\r\n                      </b>\r\n                      <span>{longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}</span>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.number'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentNum}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'agent.name'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.dst_display_name}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutbound'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outbound_call_to_agent}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'TotalOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundtotaltime\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n                <Grid item md={4}>\r\n                  <p style={{ opacity: '.5' }}>\r\n                    <IntlMessages id={'AvaregeOutboundTime'} />\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                    }}>\r\n                    {agentDetail?.outboundaverage\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n              <GridContainer>\r\n              <Grid item md={8}>\r\n                <p style={{ opacity: '.5',display:'flex',justifyContent:'space-between' }}>\r\n                <span><IntlMessages id={'internalssummary.longestcallertime'} /></span>\r\n                <span><IntlMessages id={'internalssummary.callernumber'} /></span>\r\n                  </p>\r\n                  <div\r\n                    style={{\r\n                      borderColor: 'black',\r\n                      borderStyle: 'solid',\r\n                      borderWidth: '1px',\r\n                      borderRadius: '3px',\r\n                      padding: '10px',\r\n                      display:'flex',\r\n                      justifyContent:'space-between'\r\n                    }}>\r\n                    <b>{longestCallers[0] !== undefined\r\n                            ? longestCallers[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                    </b>\r\n                       <span>{longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}</span>\r\n                  </div>\r\n                </Grid>\r\n              </GridContainer>\r\n            </TabPanel>\r\n          </Box>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport QueueList from './QueueList';\r\nimport { Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport AgentConnection from './AgentConnection';\r\nimport AgentStatus from './AgentStatus/AgentStatus';\r\nimport CallDetail from './CallDetail';\r\nimport AgentDetail from './AgentDetail';\r\n\r\nconst WallBoard = () => {\r\n  let [queueAmaunt, setQueueAmaunt] = useState(0);\r\n  let [callAmaunt, setCallAmaunt] = useState(0);\r\n  let [agentAmaunt, setAgentAmaunt] = useState(0);\r\n  let [breakeAgentAmaunt, setBreakeAgentAmount] = useState(0);\r\n  let [loginAgentAmaunt, setLoginAgentAmount] = useState(0);\r\n  let [agentNum, setAgentNum] = useState('0');\r\n  let [agentName, setAgentName] = useState('-');\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'sidebar.main'} />, link: '/' },\r\n    { label: <IntlMessages id={'wallboard'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id=\"wallboard\" />} breadcrumbs={breadcrumbs}>\r\n      <div>\r\n        <CallDetail\r\n          queueAmaunt={queueAmaunt}\r\n          callAmaunt={callAmaunt}\r\n          agentAmaunt={agentAmaunt}\r\n          breakeAgentAmaunt={breakeAgentAmaunt}\r\n          loginAgentAmaunt={loginAgentAmaunt}\r\n        />\r\n      </div>\r\n      <GridContainer>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#EA4C4C   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.queuelist'} />\r\n            </div>\r\n            <QueueList queueAmaunt={queueAmaunt} setQueueAmaunt={setQueueAmaunt} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '22px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#2978B5   ',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.connection'} />\r\n            </div>\r\n            <AgentConnection\r\n              setCallAmaunt={setCallAmaunt}\r\n              setAgentAmaunt={setAgentAmaunt}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginRight: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#FA744F',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agent.status'} />\r\n            </div>\r\n            <AgentStatus\r\n              setBreakeAgentAmount={setBreakeAgentAmount}\r\n              setLoginAgentAmount={setLoginAgentAmount}\r\n              setAgentNum={setAgentNum}\r\n              setAgentName={setAgentName}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item md={6} style={{ paddingTop: '0px' }}>\r\n          <div style={{ marginLeft: '5px', textAlign: 'center' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: '16px',\r\n                backgroundColor: '#ADCE74',\r\n                width: '35%',\r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n                borderTopLeftRadius: '25px',\r\n                borderTopRightRadius: '25px',\r\n                color: 'white',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'wallboard.agent.detail'} />\r\n            </div>\r\n            <AgentDetail agentNum={agentNum} agentName={agentName} />\r\n          </div>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default WallBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDailyLog, getDailyLogTable } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, setResponseTable }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyLog(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  useEffect(() => {\r\n    getDailyLogTable(params.date).then(resp => {\r\n      setResponseTable(JSON.parse(resp.data.data));\r\n    });\r\n  }, [params.date, setResponseTable]);\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst DataTable = ({ response, responseTable }) => {\r\n  let date;\r\n  let totalCall = 0;\r\n  let total = 0;\r\n  let act = 0;\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n  // const returnTime = time => {\r\n  //   if (typeof time === 'undefined') {\r\n  //     time = 0;\r\n  //   } else {\r\n  //     time = time;\r\n  //   }\r\n  //   return time;\r\n  // };\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  for (let i = 0; i < responseTable.length; i++) {\r\n    date = responseTable[i].hour_log !== 'undefined' ? responseTable[i].hour_log.split(' ')[0] : '-';\r\n    totalCall += parseInt(responseTable[i].count);\r\n    total = responseTable[i].total;\r\n\r\n    act = responseTable[i].act;\r\n  }\r\n  // responseTable.map(data => {\r\n  //   date = data.hour_log !== 'undefined' ? data.hour_log.split(' ')[0] : '-';\r\n  //   totalCall += parseInt(data.count);\r\n  //   total = data.total;\r\n\r\n  //   act = data.act;\r\n  // });\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  function createData(date, totalCall, totalMin, act) {\r\n    return { date, totalCall, totalMin, act };\r\n  }\r\n  const classes = useStyles();\r\n\r\n  const rows = [createData(date, totalCall, total, act)];\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"totalCall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalMin\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalam Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Duration'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ fontFamily: 'Roboto', color: 'white' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b>{row.date !== undefined ? row.date : '-'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.totalCall}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.totalMin.length > 0\r\n                      ? row.totalMin.split(':')[0].length > 2\r\n                        ? parseInt(row.totalMin?.split(':')[0].split('.')[0]) * 24 +\r\n                          parseInt(row.totalMin?.split(':')[0].split('.')[1]).toString() +\r\n                          ':' +\r\n                          row.totalMin.split(':')[1] +\r\n                          ':' +\r\n                          row.totalMin.split(':')[2]\r\n                        : row.totalMin\r\n                      : row.totalMin\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {row.act\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis, Label } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst Chart = ({ response }) => {\r\n  // const returnhour = time => {\r\n  //   const date = new Date(time);\r\n  //   return date.getHours();\r\n  // };\r\n  // let count = [];\r\n  let datalist = [];\r\n  datalist = response.map(data => ({\r\n    count: data.count,\r\n    hour: parseInt(data.hour_log.split(' ')[1].split(':')[0]),\r\n  }));\r\n\r\n  for (let i = 0; i < 24; i++) {\r\n    const found = datalist.some(data => parseInt(data.hour) === i);\r\n    if (!found) {\r\n      datalist.push({ count: 0, hour: i });\r\n    }\r\n  }\r\n  datalist.sort(function(a, b) {\r\n    return parseInt(a.hour) - parseInt(b.hour);\r\n  });\r\n  var maximum = Math.max.apply(\r\n    Math,\r\n    datalist.map(function(o) {\r\n      return o.count;\r\n    }),\r\n  );\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\">\r\n                <Label\r\n                  value={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunden'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : 'Hour'\r\n                  }\r\n                  position=\"insideBottomRight\"\r\n                  offset={0}\r\n                />\r\n              </XAxis>\r\n              <YAxis\r\n                domain={[0, maximum]}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={data => {\r\n                  return data.payload[0] ? (\r\n                    <div style={{ backgroundColor: 'white' }}>\r\n                      <p>\r\n                        <IntlMessages id={'hour'} />: {data.payload[0].payload.hour}\r\n                      </p>\r\n                      <p>\r\n                        <IntlMessages id={'call.time'} />: {data.payload[0].payload.count}\r\n                      </p>\r\n                    </div>\r\n                  ) : null;\r\n                }}\r\n              />\r\n              <Legend />\r\n              <defs>\r\n                <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#6200EE\" stopOpacity={1} />\r\n                  <stop offset=\"95%\" stopColor=\"#B819D2\" stopOpacity={1} />\r\n                </linearGradient>\r\n              </defs>\r\n\r\n              <Bar dataKey=\"count\" fill=\"url(#color1)\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DailyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTable, setResponseTable] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailylog'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'dailylog'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse} setResponseTable={setResponseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <DataTable response={response} responseTable={responseTable} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} sm={12} lg={6}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyLog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getDailyActiveCalls } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [params, setParams] = useState({ date: formatDate(today) });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDailyActiveCalls(params.date).then(response => {\r\n      setResponse(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [params.date, setResponse]);\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      date: formatDate(endDate),\r\n    });\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={5}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>\r\n                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { createRef } from 'react';\r\n// import { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis, Label } from 'recharts';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\r\nimport { Button, Card, CardContent } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport dateFormat from 'dateformat';\r\nconst Chart = ({ response }) => {\r\n  let datalist = [{ hour: '', count: 0 }];\r\n  datalist = response.map(item => ({\r\n    hour: dateFormat(item.timezone, 'HH:MM'),\r\n    count: parseInt(item.acc),\r\n  }));\r\n  //ss kısmı\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload />\r\n        </Button>\r\n      </div>\r\n      <Card>\r\n        <CardContent ref={ref}>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={datalist} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n              <XAxis dataKey=\"hour\" label={{\r\n                  value:\r\n                  curentLanguage.locale === 'en-EN'\r\n                  ? 'Hour'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Stunden'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Saat'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Uur'\r\n                  : 'Hour',\r\n                  position: 'insideBottom',\r\n                  offset:0\r\n                }}>\r\n              </XAxis>\r\n              <YAxis\r\n                // domain={[0, maximum]}\r\n                dataKey=\"count\"\r\n                label={{\r\n                  value:\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Count'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Zählen'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Adet'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Count'\r\n                      : 'Count',\r\n                  angle: -90,\r\n                  position: 'insideLeft',\r\n                }}\r\n              />\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <Tooltip\r\n                labelStyle={{ color: 'black' }}\r\n                itemStyle={{ color: 'black' }}\r\n                cursor={false}\r\n                content={<CustomTooltip/>}\r\n              />\r\n              <Legend verticalAlign=\"top\" />\r\n              <Line dataKey=\"count\" dot={false} stroke=\"#3b65ff\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nconst CustomTooltip = ({ active, payload }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div style={{ backgroundColor: 'white' }}>\r\n        <p>\r\n          <IntlMessages id={'hour'} />: {payload[0]?.payload.hour}\r\n        </p>\r\n        <p>\r\n          <IntlMessages id={'call.time'} />: {payload[0]?.payload.count}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nexport default Chart;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Chart from './Chart';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DailyAcc = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailyacc'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'dailyacc'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Filter setResponse={setResponse}/>\r\n        </Grid>\r\n        <Grid item xs={12} md={12} sm={12} lg={12}>\r\n          <Chart response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyAcc;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  function createData(date, count, total, act) {\r\n    return { date, count, total, act };\r\n  }\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n  const rows = response.map(data => createData(data.day_log, data.count, data.total, data.act));\r\n\r\n  let data = rows.map(unit => ({\r\n    date: unit.date.split('T')[0],\r\n    count: unit.count,\r\n    total:\r\n      unit.total.hours === undefined\r\n        ? unit.total.minutes === undefined\r\n          ? unit.total.seconds === undefined\r\n            ? '00:00:00'\r\n            : '00:00:' + addZero(unit.total.seconds)\r\n          : unit.total.seconds === undefined\r\n          ? '00:' + addZero(unit.total.minutes) + ':00'\r\n          : '00:' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds)\r\n        : unit.total.minutes === undefined\r\n        ? unit.total.seconds === undefined\r\n          ? addZero(unit.total.hours) + ':00:00'\r\n          : addZero(unit.total.hours) + ':00:' + addZero(unit.total.seconds)\r\n        : unit.total.seconds === undefined\r\n        ? addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':00'\r\n        : addZero(unit.total.hours) + ':' + addZero(unit.total.minutes) + ':' + addZero(unit.total.seconds),\r\n    act:\r\n      unit.act !== undefined\r\n        ? unit.act.hours === undefined\r\n          ? unit.act.minutes === undefined\r\n            ? unit.act.seconds === undefined\r\n              ? '00:00:00'\r\n              : '00:00:' + addZero(unit.act.seconds)\r\n            : unit.act.seconds === undefined\r\n            ? '00:' + addZero(unit.act.minutes) + ':00'\r\n            : '00:' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n          : unit.act.minutes === undefined\r\n          ? unit.act.seconds === undefined\r\n            ? addZero(unit.act.hours) + ':00:00'\r\n            : addZero(unit.act.hours) + ':00:' + addZero(unit.act.seconds)\r\n          : unit.act?.seconds === undefined\r\n          ? addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':00'\r\n          : addZero(unit.act.hours) + ':' + addZero(unit.act.minutes) + ':' + addZero(unit.act.seconds)\r\n        : '00:00:00',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let total = {\r\n    day: 0,\r\n    count: 0,\r\n    totalTime: 0,\r\n    averageTime: 0,\r\n  };\r\n\r\n  function timeToSecond(param) {\r\n    let second = parseInt(param.hours) * 3600 + parseInt(param.minutes) * 60 + parseInt(param.seconds);\r\n    return second;\r\n  }\r\n  for (let i = 0; i < rows.length; i++) {\r\n    total.count += parseInt(rows[i].count);\r\n    total.day = rows.length;\r\n    total.totalTime += timeToSecond(rows[i].total);\r\n    total.averageTime += timeToSecond(rows[i].act);\r\n  }\r\n\r\n  // rows.map(row => {\r\n  //   total.count += parseInt(row.count);\r\n  //   total.day = rows.length;\r\n  //   total.totalTime += timeToSecond(row.total);\r\n  //   total.averageTime += timeToSecond(row.act);\r\n  // });\r\n\r\n  function secondToTime(param, day) {\r\n    param = param / parseInt(day);\r\n    let string =\r\n      addZero(Math.floor(param / 3600)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) / 60)) +\r\n      ':' +\r\n      addZero(Math.floor((param % 3600) % 60));\r\n    return string;\r\n  }\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Daily log report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk yuk raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Täglicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gesprekstelling'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufzähler'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"act\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5' }}>\r\n              <TableCell>\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'Act'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.date.split('T')[0]}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{row.count}</b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b>\r\n                    {(row.total.hours === undefined\r\n                      ? row.total.minutes === undefined\r\n                        ? row.total.seconds === undefined\r\n                          ? '00:00:00'\r\n                          : '00:00:' + addZero(row.total.seconds)\r\n                        : row.total.seconds === undefined\r\n                        ? '00:' + addZero(row.total.minutes) + ':00'\r\n                        : '00:' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                      : row.total.minutes === undefined\r\n                      ? row.total.seconds === undefined\r\n                        ? addZero(row.total.hours) + ':00:00'\r\n                        : addZero(row.total.hours) + ':00:' + addZero(row.total.seconds)\r\n                      : row.total.seconds === undefined\r\n                      ? addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':00'\r\n                      : addZero(row.total.hours) + ':' + addZero(row.total.minutes) + ':' + addZero(row.total.seconds)\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"right\" style={{ color: '#FF87CA' }}>\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                  <b style={{ color: '#FF87CA' }}>\r\n                    {(row.act !== undefined\r\n                      ? row.act.hours === undefined\r\n                        ? row.act.minutes === undefined\r\n                          ? row.act.seconds === undefined\r\n                            ? '00:00:00'\r\n                            : '00:00:' + addZero(row.act.seconds)\r\n                          : row.act.seconds === undefined\r\n                          ? '00:' + addZero(row.act.minutes) + ':00'\r\n                          : '00:' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                        : row.act.minutes === undefined\r\n                        ? row.act.seconds === undefined\r\n                          ? addZero(row.act.hours) + ':00:00'\r\n                          : addZero(row.act.hours) + ':00:' + addZero(row.act.seconds)\r\n                        : row.act?.seconds === undefined\r\n                        ? addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':00'\r\n                        : addZero(row.act.hours) + ':' + addZero(row.act.minutes) + ':' + addZero(row.act.seconds)\r\n                      : '00:00:00'\r\n                    )\r\n                      .toString()\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow style={{ backgroundColor: '#80ED99' }}>\r\n              <TableCell>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <b>\r\n                  {total.day + ' '} <IntlMessages id={'day'} />{' '}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.totalTime, 1)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"right\" style={{ color: 'black' }}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px' }} />{' '}\r\n                <b>\r\n                  {secondToTime(total.averageTime, total.day)\r\n                    .toString()\r\n                    .replace(':', 'h ')\r\n                    .replace(':', 'm ') + 's'}\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { createRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TableContainer } from '@material-ui/core';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = props => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const data = {\r\n    labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\r\n    datasets: [\r\n      {\r\n        label: typeof props.array[0] === 'undefined' ? [] : props.array[0].date,\r\n        data: typeof props.array[0] === 'undefined' ? [] : props.array[0].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 206, 86, 0.8)',\r\n        borderColor: 'rgba(255, 206, 86, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[1] === 'undefined' ? [] : props.array[1].date,\r\n        data: typeof props.array[1] === 'undefined' ? [] : props.array[1].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[2] === 'undefined' ? [] : props.array[2].date,\r\n        data: typeof props.array[2] === 'undefined' ? [] : props.array[2].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.8)',\r\n        borderColor: 'rgba(54, 162, 235, 0.8)',\r\n      },\r\n      {\r\n        label: typeof props.array[3] === 'undefined' ? [] : props.array[3].date,\r\n        data: typeof props.array[3] === 'undefined' ? [] : props.array[3].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n      {\r\n        label: typeof props.array[4] === 'undefined' ? [] : props.array[4].date,\r\n        data: typeof props.array[4] === 'undefined' ? [] : props.array[4].count,\r\n        fill: false,\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        borderColor: 'rgba(153, 102, 255, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n\r\n      <TableContainer className={classes.root} component={Paper} ref={ref}>\r\n        <Line data={data} options={options} />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CardActions,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getCallComparison, getCallComparisonDaily } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nfunction Filter({ setResponse, response, setGraphData, setResponseDaily }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const showTime = date => {\r\n    const date_ = new Date(date);\r\n    return date_.getHours();\r\n  };\r\n  const today = new Date();\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n  const [select, setSelect] = useState(1);\r\n  const [, setParams] = useState({ date: formatDate(today), choice: '' });\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let array = [];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallComparisonDaily(formatDate(endDate), select).then(resp => {\r\n      let tempResponse = JSON.parse(resp.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          'T00:00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours:\r\n            tempResponse[i].total.split(':')[0].length > 2\r\n              ? parseInt(tempResponse[i].total.split(':')[0].split('.')[0]) * 24 +\r\n                parseInt(tempResponse[i].total.split(':')[0].split('.')[1]).toString()\r\n              : tempResponse[i].total.split(':')[0].startsWith('0')\r\n              ? tempResponse[i].total.split(':')[0].substring(1)\r\n              : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponseDaily(tempResponse);\r\n      setGraphData(array);\r\n      setLoading(false);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  useEffect(() => {\r\n    getCallComparison(formatDate(endDate), select).then(response => {\r\n      let tempResponse = JSON.parse(response.data.data);\r\n      for (let i = 0; i < tempResponse.length; i++) {\r\n        tempResponse[i].day_log =\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[0] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[1] +\r\n          '-' +\r\n          tempResponse[i].day_log.split(' ')[0].split('-')[2] +\r\n          'T' +\r\n          tempResponse[i].day_log.split(' ')[1].split(':')[0] +\r\n          ':00:00.000Z';\r\n        tempResponse[i].act = {\r\n          hours: tempResponse[i].act.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[0].substring(1)\r\n            : tempResponse[i].act.split(':')[0],\r\n          minutes: tempResponse[i].act.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[1].substring(1)\r\n            : tempResponse[i].act.split(':')[1],\r\n          seconds: tempResponse[i].act.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].act.split(':')[2].substring(1)\r\n            : tempResponse[i].act.split(':')[2],\r\n        };\r\n        tempResponse[i].total = {\r\n          hours: tempResponse[i].total.split(':')[0].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[0].substring(1)\r\n            : tempResponse[i].total.split(':')[0],\r\n          minutes: tempResponse[i].total.split(':')[1].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[1].substring(1)\r\n            : tempResponse[i].total.split(':')[1],\r\n          seconds: tempResponse[i].total.split(':')[2].startsWith('0')\r\n            ? tempResponse[i].total.split(':')[2].substring(1)\r\n            : tempResponse[i].total.split(':')[2],\r\n        };\r\n      }\r\n      setResponse(tempResponse);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [endDate, select]);\r\n\r\n  const respdata = response.map(data => ({\r\n    DayLog: formatDate(data.day_log),\r\n    Count: data.count,\r\n    TotalHour: data.total.hours === undefined || data.total.hour === 0 ? 0 : data.total.hour,\r\n    TotalMinutes: data.total.minutes === undefined || data.total.minutes === 0 ? 0 : data.total.minutes,\r\n    TotalSeconds: data.total.seconds === undefined || data.total.seconds === 0 ? 0 : data.total.seconds,\r\n    Hour: showTime(data.day_log),\r\n    Act: data.act.seconds === undefined || data.act.seconds === 0 ? 0 : data.act.seconds,\r\n  }));\r\n\r\n  let labelArray = [];\r\n\r\n  for (let i = select; i >= 0; i--) {\r\n    var date = new Date(formatDate(endDate));\r\n    date.setDate(date.getDate() - i);\r\n    labelArray.push(formatDate(date));\r\n  }\r\n  labelArray.reverse();\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    if (!respdata.some(daylog => daylog.DayLog === labelArray[i])) {\r\n      respdata.push({\r\n        DayLog: labelArray[i],\r\n        Count: 0,\r\n        TotalHour: 0,\r\n        TotalMinutes: 0,\r\n        TotalSeconds: 0,\r\n        Hour: 0,\r\n        Act: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < labelArray.length; i++) {\r\n    let group = [];\r\n    let totalDataArray = [];\r\n    let totalMins = [];\r\n    let totalSeconds = [];\r\n    let act = [];\r\n    group = respdata.filter(function(el) {\r\n      return !(el.DayLog !== labelArray[i]);\r\n    });\r\n\r\n    let tempgroup = group.map(data => {\r\n      for (let j = 0; j < 24; j++) {\r\n        if (j === data.Hour) {\r\n          totalDataArray[j] = data.Count;\r\n          act[j] = data.Act;\r\n          totalSeconds[j] = data.TotalSeconds;\r\n          totalMins[j] = data.TotalMinutes;\r\n        } else {\r\n          if (typeof totalDataArray[j] === 'undefined') {\r\n            totalDataArray[j] = 0;\r\n            act[j] = 0;\r\n            totalSeconds[j] = 0;\r\n            totalMins[j] = 0;\r\n          }\r\n        }\r\n      }\r\n      array[i] = {\r\n        date: labelArray[i],\r\n        count: totalDataArray,\r\n        totalSeconds: totalSeconds,\r\n        totalMins: totalMins,\r\n        act: act,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tempgroup);\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleClick = () => {\r\n    setParams({ date: formatDate(endDate), choice: select });\r\n    setGraphData(array);\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <LocalizationProvider\r\n                dateAdapter={AdapterDateFns}\r\n                locale={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? enLocale\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? nlLocale\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? trLocale\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? deLocale\r\n                    : enLocale\r\n                }>                <DatePicker\r\n                  value={endDate}\r\n                  onChange={newValue => setEndDate(newValue)}\r\n                  renderInput={params => <TextField {...params} />}\r\n                  inputVariant=\"outlined\"\r\n                  format=\"DD-MM-YYYY\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                />\r\n              </LocalizationProvider>\r\n              {/* <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={endDate}\r\n                onChange={setEndDate}\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              /> */}\r\n            </Grid>\r\n\r\n            <Grid item md={3}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'days.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label=\"* days ago\"\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'days.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport DataTable from './Table';\r\nimport { Grid } from '@material-ui/core';\r\nimport Graph from './Graph';\r\nimport Filter from './Filter';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst CallComparison = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [responseDaily, setResponseDaily] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'call.comparison'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'call.comparison'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12} sm={12} md={12} lg={12}>\r\n          <Filter\r\n            setGraphData={setGraphData}\r\n            response={response}\r\n            setResponse={setResponse}\r\n            setResponseDaily={setResponseDaily}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <DataTable response={responseDaily} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Graph array={graphData} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CallComparison;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getMontlyLog } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nfunction Filter({ setResponse }) {\r\n  const today = new Date();\r\n  const [selectedMonth, setSelectedMonth] = useState(1);\r\n  const [select, setSelect] = useState(1);\r\n  const [sum, setSum] = useState(0);\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let selectboxdata = [];\r\n\r\n  for (var i = 6; i >= 0; i -= 1) {\r\n    var date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n\r\n    selectboxdata.push({\r\n      data: months[date.getMonth()] + ' ' + date.getFullYear(),\r\n      year: date.getFullYear(),\r\n      month: <IntlMessages id={`${months[date.getMonth()]}`} />,\r\n    });\r\n  }\r\n  selectboxdata.reverse();\r\n\r\n  const handleChange = event => {\r\n    setSum(event.target.value - 1);\r\n    setSelect(event.target.value);\r\n  };\r\n  const handleMonthChange = event => {\r\n    setSelectedMonth(event.target.value);\r\n    setSum(select - 1);\r\n  };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n      setLoading(true);\r\n      getMontlyLog(selectedMonth, sum).then(response => {\r\n        let resultArray = JSON.parse(response.data.data);\r\n        for (let i = 0; i < resultArray.length; i++) {\r\n          let tempArray = resultArray[i].date_trunc.split(' ')[0].split('.');\r\n          resultArray[i].date_trunc = tempArray[2] + '-' + tempArray[1] + '-0' + tempArray[0];\r\n        }\r\n        setResponse(resultArray);\r\n        // setResponse(response);\r\n        setLoading(false);\r\n      });\r\n  }, [sum, selectedMonth, setResponse]);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'filter.menu.date'} />}\r\n                  value={selectedMonth}\r\n                  onChange={handleMonthChange}>\r\n                  <MenuItem value={' '}>\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {selectboxdata.map((data, index) => (\r\n                    <MenuItem key={index} value={selectboxdata.indexOf(data) + 1}>\r\n                      {data.month} {data.year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  * <IntlMessages id={'months.ago'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={'* ' + <IntlMessages id={'months.ago'} />}\r\n                  value={select}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value={1}>\r\n                    1 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    2 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    3 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    4 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={5}>\r\n                    5 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={6}>\r\n                    6 <IntlMessages id={'months.ago'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { Cell, Pie, PieChart, Tooltip } from 'recharts';\r\nimport React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  customTooltip: {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: 5,\r\n  },\r\n}));\r\nconst formatDate = date => {\r\n  let d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  let year = d.getFullYear();\r\n  let hour = d.getHours();\r\n  let min = d.getMinutes();\r\n\r\n  if (month < 10) month = '0' + month;\r\n  if (day < 10) day = '0' + day;\r\n  if (hour < 10) hour = '0' + hour;\r\n  if (min < 10) min = '0' + min;\r\n\r\n  return year + '-' + month;\r\n};\r\nconst ApplicationsGraph = ({ pieData }) => {\r\n  const classes = useStyles();\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active) {\r\n      return (\r\n        <Box className={classes.customTooltip}>\r\n          <label>{`${payload[0].name} : ${payload[0].value}`}</label>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  const data = pieData.map(data => ({\r\n    name: formatDate(data.date_trunc),\r\n    value: parseInt(data.toplam),\r\n  }));\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n  return (\r\n    <PieChart width={194} height={194}>\r\n      <Pie\r\n        data={data}\r\n        color=\"#000000\"\r\n        dataKey=\"value\"\r\n        nameKey=\"name\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        isAnimationActive={true}\r\n        outerRadius={95}\r\n        fill=\"#8884d8\">\r\n        {data.map((entry, index) => (\r\n          <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip content={<CustomTooltip />} />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default ApplicationsGraph;\r\n","import React, { createRef } from 'react';\r\nimport CmtCard from '@coremat/CmtCard';\r\nimport CmtCardHeader from '@coremat/CmtCard/CmtCardHeader';\r\nimport CmtCardContent from '@coremat/CmtCard/CmtCardContent';\r\nimport Chart from './graph';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nconst Graph = ({ response }) => {\r\n  const useStyles = makeStyles({\r\n    cardRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative',\r\n      '& .Cmt-card-content': {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = 'img', extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white', marginBottom: '10px' }} onClick={downloadScreenshot}>\r\n          <IntlMessages id={'dowlandimage'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n        </Button>\r\n      </div>\r\n      <div ref={ref}>\r\n        <CmtCard className={classes.cardRoot}>\r\n          <CmtCardHeader className=\"pt-5\" title={<IntlMessages id={'monthly.log'} />}></CmtCardHeader>\r\n          <CmtCardContent>\r\n            <Chart pieData={response} />\r\n          </CmtCardContent>\r\n        </CmtCard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { toInteger } from 'lodash';\r\n\r\nconst DataTable = ({ response }) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  let aylar = [\r\n    'Ocak',\r\n    'Şubat',\r\n    'Mart',\r\n    'Nisan',\r\n    'Mayıs',\r\n    'Haziran',\r\n    'Temmuz',\r\n    'Ağustos',\r\n    'Eylül',\r\n    'Ekim',\r\n    'Kasım',\r\n    'Aralık',\r\n  ];\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 200,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + d.getMonth();\r\n\r\n    return { month: <IntlMessages id={`${months[parseInt(month)]}`} />, year: d.getFullYear() };\r\n  };\r\n  function createData(date, total) {\r\n    return { date, total };\r\n  }\r\n  const rows = response.map(data => createData(formatDate(data.date_trunc), data.toplam));\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const colors = ['#916BBF', '#C6D57E', '#FFC069', '#F6A9A9', '#5C7AEA', '#FFF7AE'];\r\n\r\n  function formatDateExcel(param) {\r\n    let d = new Date(param);\r\n    let month = parseInt(d.getMonth());\r\n\r\n    let returnedMonth = currentLanguage.locale === 'en-US' ? months[month] : aylar[month];\r\n\r\n    return returnedMonth + '-' + d.getFullYear();\r\n  }\r\n\r\n  let data = response.map(unit => ({\r\n    date: formatDateExcel(unit.date_trunc),\r\n    total: unit.toplam,\r\n  }));\r\n\r\n  let totalCall = 0;\r\n  for (let i = 0; i < rows.length; i++) {\r\n    totalCall += toInteger(rows[i].total);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {data.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Monthly_log_report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Aylık_yuk_raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Maandelijks logboekrapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Monatlicher Protokollbericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={data} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"date\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"total\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ backgroundColor: '#2978B5', color: 'white' }}>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'filter.menu.date'} />\r\n                </b>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <b style={{ color: 'white', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'wallboard.total.call'} />\r\n                </b>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow style={{ backgroundColor: colors[index] }} key={index}>\r\n                <TableCell align=\"center\">\r\n                  <DateRangeIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>\r\n                    {row.date.month}-{row.date.year}\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: 'white' }} />{' '}\r\n                  <b style={{ fontFamily: 'Roboto' }}>{row.total}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {rows.length > 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\">\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px' }} /> <b>{totalCall}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport Graph from './Graph';\r\nimport DataTable from './Table';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst MonthlyLog = () => {\r\n  const [response, setResponse] = useState([]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthly.log'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthly.log'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} xs={12} lg={12}>\r\n          <Filter setResponse={setResponse}/>\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <DataTable response={response} />\r\n        </Grid>\r\n        <Grid item md={6} xs={12} lg={6}>\r\n          <Graph response={response} />\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default MonthlyLog;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nconst DataTable = ({ response, page, setPage, setLimit, setOffset, offset, limit, setResponse }) => {\r\n  const columns = [\r\n    {\r\n      id: 'dst_start_time',\r\n      label: <IntlMessages id={'filter.menu.startdate'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'dst_end_time',\r\n      label: <IntlMessages id={'filter.menu.enddate'} />,\r\n      minWidth: 70,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'q_num',\r\n      label: <IntlMessages id={'queue'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'src_dn',\r\n      label: <IntlMessages id={'internals.summary.agent'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      id: 'dst_dn',\r\n      label: <IntlMessages id={'Called.Numbers'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      id: 'duration',\r\n      label: <IntlMessages id={'Duration'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  function createData(src_dn, src_display_name, dst_start_time, dst_end_time, dst_dn, q_num, duration) {\r\n    return {\r\n      src_dn,\r\n      src_display_name,\r\n      dst_start_time,\r\n      dst_end_time,\r\n      dst_dn,\r\n      q_num,\r\n      duration,\r\n    };\r\n  }\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.src_dn,\r\n      data.src_display_name,\r\n      data.dst_start_time,\r\n      data.dst_end_time,\r\n      data.dst_dn,\r\n      data.q_num,\r\n      data.duration,\r\n    ),\r\n  );\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setOffset(0);\r\n    setPage(0);\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Returned_drop_call'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Geri_donulmus_kacan_cagrilar'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Teruggestuurde drop-call'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Zurückgegebener Drop-Call'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={rows} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Start Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Başlangıç Saati'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Starttijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Startzeit'\r\n                    : ''\r\n                }\r\n                value=\"dst_start_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'End Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Bitiş Zamanı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Eindtijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Endzeit'\r\n                    : ''\r\n                }\r\n                value=\"dst_end_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Queue Number'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk Numarası'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachtrijnummer'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Warteschlangennummer'\r\n                    : ''\r\n                }\r\n                value=\"q_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent Nummer'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"src_dn\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Caller Number'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Arayan Numara'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Bellernummer'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufernummer'\r\n                    : ''\r\n                }\r\n                value=\"dst_dn\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"duration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        )}\r\n      </div>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={(page + 1) * limit}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={response.length < limit || response.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(rows.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n/** */\r\n/** */\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueue } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Filter({ agent, queue, setAgent, setQueue }) {\r\n  const [queues, setQueues] = useState([]);\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n\r\n    getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const handleChangeAgent = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Typography>\r\n        <IntlMessages id={'filters'} />\r\n      </Typography>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"agent-select-label\">\r\n                <IntlMessages id={'internals.summary.agent'} />\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"agent-select-label\"\r\n                id=\"agent-select\"\r\n                value={agent}\r\n                onChange={handleChangeAgent}\r\n                label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                <MenuItem value={''}>\r\n                  <IntlMessages id={'all'} />\r\n                </MenuItem>\r\n                {agents.map((agent, index) => (\r\n                  <MenuItem key={index} value={agent.dn}>\r\n                    {agent.dn + '-' + agent.display_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"agent-select-label\">\r\n                <IntlMessages id={'queue'} />\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"agent-select-label\"\r\n                id=\"agent-select\"\r\n                value={queue}\r\n                onChange={handleChangeQueue}\r\n                label={<IntlMessages id={'queue'} />}>\r\n                <MenuItem value={''}>\r\n                  <IntlMessages id={'all'} />\r\n                </MenuItem>\r\n                {queues.map((queue, index) => (\r\n                  <MenuItem key={index} value={queue.dn}>\r\n                    {queue.dn + '-' + queue.display_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions></CardActions>\r\n    </Card>\r\n  );\r\n}\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getReturnedDropCall,getQueue,getAgentNumber } from 'api/api';\r\nimport DataTable from './Table';\r\nimport Filter from './Filter'\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Alert from '@mui/material/Alert';\r\nconst ReturnedDropCall = () => {\r\n  const [response, setResponse] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [queue,setQueue] = useState('')\r\n  const [agent,setAgent] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getReturnedDropCall(limit, offset,agent,queue).then((response) =>{\r\n       var respList = JSON.parse(response.data.data)\r\n       getQueue().then(resp=>{\r\n        var list = JSON.parse(resp.data.data);\r\n        list.forEach(que => {\r\n        for(var i =0;i<respList.length;i++) {      \r\n          if(respList[i].q_num === que.dn) {\r\n            respList[i].q_num = que.dn + \" - \" + que.display_name\r\n          }\r\n        }\r\n        });\r\n        getAgentNumber().then(resp=>{\r\n          var list = JSON.parse(resp.data.data);\r\n          list.forEach(age => {\r\n          for(var i =0;i<respList.length;i++) {      \r\n            if(respList[i].src_dn === age.dn) {\r\n              respList[i].src_dn = age.dn + \" - \" + age.display_name\r\n            }\r\n          }\r\n          });\r\n          setResponse(respList) \r\n        })        \r\n      })     \r\n      });\r\n  }, [limit, offset,agent,queue]);\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'returneddropcall'} />, isActive: true },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'returneddropcall'} />} breadcrumbs={breadcrumbs} >\r\n      <GridContainer>\r\n       <Grid item xs={12}>\r\n       <Filter\r\n          queue={queue}\r\n          setQueue={setQueue}\r\n          agent={agent}\r\n          setAgent={setAgent}\r\n        />\r\n       </Grid>\r\n        <Grid item md={12} lg={12} sm={12}>\r\n          <DataTable\r\n            page={page}\r\n            setPage={setPage}\r\n            response={response}\r\n            limit={limit}\r\n            setLimit={setLimit}\r\n            setOffset={setOffset}\r\n            offset={offset}\r\n            setResponse={setResponse}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n\r\n      <Alert style={{ marginTop: '15px' }} severity=\"info\">\r\n        <IntlMessages id={'returneddropcall.info'} />\r\n      </Alert>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ReturnedDropCall;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function AgentSessionReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(dateFormat(new Date(),'yyyy-mm-dd'));\r\n  let [endDate, setEndDate] = useState(dateFormat(new Date(),'yyyy-mm-dd'));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate,'yyyy-mm-dd'));\r\n    setEndTimeApi(dateFormat(endDate,'yyyy-mm-dd'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  MenuItem,\r\n  Grid,\r\n  CardActions,\r\n  CardContent,\r\n  Card,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getQueueNumber, getAgentSession, getBreakName, getAgentSessionClicked } from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Formik, Form } from 'formik';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport AgentSessionReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\n\r\nfunction Filter({\r\n  setAgentSession,\r\n  qnum,\r\n  agent,\r\n  setQnum,\r\n  setAgent,\r\n  setClickedResponse,\r\n  clickedAgent,\r\n  responseBreak,\r\n  setResponseBreak,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const dateDifference = param => {\r\n    var today = new Date();\r\n    var paramDate = new Date(param);\r\n    var diff = today.getTime() - paramDate.getTime();\r\n    diff = Math.round(diff / (1000 * 3600 * 24));\r\n    return diff - 1;\r\n  };\r\n  \r\n  const [params, setParams] = useState({\r\n    agent: '',\r\n    queue: '',\r\n    break: '',\r\n  });\r\n\r\n  const handleClick = () => {\r\n    setParams({\r\n      agent: agentSelect === 'all' ? '' : agentSelect,\r\n      queue: queueSelect === 'all' ? '' : queueSelect,\r\n      break: breakSelect === 'all' ? '' : breakSelect,\r\n      paramFinish: dateDifference(startTime),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => setQnum(JSON.parse(response.data.data)));\r\n    getAgentNumber().then(response => setAgent(JSON.parse(response.data.data)));\r\n    getBreakName().then(response => {\r\n      setResponseBreak(JSON.parse(response.data.data));\r\n    });\r\n  }, [setQnum, setAgent, setResponseBreak]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n  let [startTime, setStartTime] = useState(dateFormat(new Date(),'yyyy-mm-dd '));\r\n  let [endTime, setEndTime] = useState(dateFormat(new Date(),'yyyy-mm-dd '));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAgentSession(params.agent, params.queue, params.break, startTime, endTime).then(response => {\r\n      setAgentSession(JSON.parse(response.data.data));\r\n      setLoading(false);\r\n    });\r\n\r\n    getAgentSessionClicked(clickedAgent, startTime, endTime).then(resp => {\r\n      setClickedResponse(JSON.parse(resp.data.data));\r\n    });\r\n  }, [clickedAgent, params, endTime, startTime, setAgentSession, setClickedResponse]);\r\n\r\n  let [queueSelect, setQueueSelect] = useState('');\r\n  let [agentSelect, setAgentSelect] = useState('');\r\n  const [breakSelect, setBreakSelect] = useState('');\r\n\r\n  const handleChangeQueueSelect = event => {\r\n    setQueueSelect(event.target.value);\r\n  };\r\n  const handleChangeAgentSelect = event => {\r\n    setAgentSelect(event.target.value);\r\n  };\r\n  const handleBreakChange = event => {\r\n    setBreakSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '15px' }}>\r\n        <AgentSessionReportDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card className={classes.root}>\r\n        <Formik initialValues={{ queue: '', agent: '' }} onSubmit={values => {}}>\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardContent>\r\n                  <GridContainer>\r\n                    {/* <Grid item md={3}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={curentLanguage.locale === 'en-US' ? enLocale : trLocale}>\r\n                        <DatePicker\r\n                          inputVariant=\"outlined\"\r\n                          format=\"DD-MM-YYYY\"\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                          renderInput={params => <TextField {...params} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid> */}\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"queue-select-label\">{<IntlMessages id={'queue.answer.report.queues'} />}</InputLabel>\r\n                        <Select\r\n                          labelId=\"queue-select-label\"\r\n                          id=\"queue-select\"\r\n                          value={queueSelect}\r\n                          onChange={handleChangeQueueSelect}\r\n                          label={<IntlMessages id={'queue.answer.report.queues'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {qnum.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"agent-select-label\">\r\n                          <IntlMessages id={'internals.summary.agent'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"agent-select-label\"\r\n                          id=\"agent-select\"\r\n                          value={agentSelect}\r\n                          onChange={handleChangeAgentSelect}\r\n                          label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {agent.map((data, index) => (\r\n                            <MenuItem key={index} value={data.dn}>\r\n                              {data.dn} - {data.display_name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n\r\n                      {/* <Field disabled={false} name=\"agent\" as=\"select\" component={Select}>\r\n                        <MenuItem value=\"\">\r\n                          <IntlMessages id={'all'} />\r\n                        </MenuItem>\r\n                        {agent.map((data, index) => (\r\n                          <MenuItem key={index} value={data.dn}>\r\n                            {data.display_name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Field> */}\r\n                    </Grid>\r\n                    <Grid item md={3}>\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id=\"break-select-label\">\r\n                          <IntlMessages id={'breaks'} />\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"break-select-label\"\r\n                          id=\"break-select\"\r\n                          value={breakSelect}\r\n                          onChange={handleBreakChange}\r\n                          label={<IntlMessages id={'breaks'} />}>\r\n                          <MenuItem value={'all'}>\r\n                            <IntlMessages id={'all'} />\r\n                          </MenuItem>\r\n                          {responseBreak.map((data, index) => (\r\n                            <MenuItem key={index} value={data.value}>\r\n                              {data.name}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      handleClick();\r\n                    }}\r\n                    size=\"small\"\r\n                    variant=\"contained\">\r\n                    <IntlMessages id={'filter.menu.search'} />\r\n                  </Button>\r\n                </CardActions>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nexport default function DataTable({ qnum, agent, agentSession, setClickedAgent, setOpen }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < agent.length; z++) {\r\n      if (agentSession[i].ag_num === agent[z].dn) {\r\n        agentSession[i].ag_num = agentSession[i].ag_num + '-' + agent[z].display_name;\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < agentSession.length; i++) {\r\n    for (let z = 0; z < qnum.length; z++) {\r\n      if (agentSession[i].q_num === qnum[z].dn) {\r\n        agentSession[i].q_num = qnum[z].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  let csvData = agentSession.map(row => ({\r\n    ag_num: row.ag_num,\r\n    q_num: row.q_num,\r\n    status: row.status,\r\n    state_time:\r\n      row.escapetime\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n  const handleClick = ag_num => {\r\n    setClickedAgent(ag_num.split('-')[0]);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {agentSession.length > 0 && (\r\n        <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              currentLanguage.locale === 'en-EN'\r\n                ? 'Agent_Session_Report'\r\n                : currentLanguage.locale === 'tr-TR'\r\n                ? 'Agent_Oturum_Raporu'\r\n                : currentLanguage.locale === 'nl-NL'\r\n                ? 'Agentsessierapport'\r\n                : currentLanguage.locale === 'de-DE'\r\n                ? 'Agentensitzungsbericht'\r\n                : ' '\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"ag_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Queue Name'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk Adı'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachtrijnaam'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Warteschlangenname'\r\n                    : ''\r\n                }\r\n                value=\"q_num\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Staat'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Bundesland'\r\n                    : ''\r\n                }\r\n                value=\"status\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'State Time'\r\n                    : currentLanguage.locale === 'tr-TR'\r\n                    ? 'Durum Süresi'\r\n                    : currentLanguage.locale === 'nl-NL'\r\n                    ? 'Status Tijd'\r\n                    : currentLanguage.locale === 'de-DE'\r\n                    ? 'Staatszeit'\r\n                    : ''\r\n                }\r\n                value=\"state_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'detail'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {' '}\r\n                <IntlMessages id={'wallboard.queue.name'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state'} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <IntlMessages id={'state.time'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {agentSession.map((row, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ textAlign: 'center', cursor: 'pointer' }} onClick={() => handleClick(row.ag_num)}>\r\n                  <VisibilityIcon style={{ verticalAlign: '-5px', color: '#FF5959' }} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <PersonIcon style={{ verticalAlign: '-5px', color: '#35589A' }} />\r\n                  <b>{row.ag_num.split('-')[1] + ' (' + row.ag_num.split('-')[0] + ')'}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <b>{row.q_num}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TimerIcon style={{ verticalAlign: '-5px', color: '#F05454' }} />{' '}\r\n                  <b style={{ color: '#F05454' }}>{row.status}</b>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#F2789F' }} />{' '}\r\n                  <b style={{ color: '#F2789F' }}>\r\n                    {' '}\r\n                    {row.escapetime\r\n                      .replace('.', 'd ')\r\n                      .replace(':', 'h ')\r\n                      .replace(':', 'm ') + 's'}\r\n                  </b>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Model = ({ clickedResponse, responseBreak }) => {\r\n  // const columns = [\r\n  //   { id: 'src_display_name', label: <IntlMessages id={'caller'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'src_did', label: <IntlMessages id={'did.number'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'dst_display_name', label: <IntlMessages id={'DestinationDN'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'talkingtime', label: <IntlMessages id={'queueanswerreport.talkingtime'} />, minWidth: 60, align: 'center' },\r\n  //   { id: 'waitingtime', label: <IntlMessages id={'waiting.time'} />, minWidth: 60, align: 'center' },\r\n  // ];\r\n  let keys = [];\r\n\r\n  if (clickedResponse.length > 0) {\r\n    keys = Object.keys(clickedResponse[0]);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      for (let j = 0; j < responseBreak.length; j++) {\r\n        if (keys[i].substring(1) === responseBreak[j].value) {\r\n          keys[i] = responseBreak[j].name;\r\n        }\r\n      }\r\n      // responseBreak.map(breaks => {\r\n      //   if (keys[i].substring(1) === breaks.value) {\r\n      //     keys[i] = breaks.name;\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  // style={{ minWidth: column.minWidth }}\r\n\r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Agent</TableCell>\r\n            <TableCell>Logout</TableCell>\r\n            <TableCell>{keys[2]}</TableCell>\r\n            <TableCell>{keys[3]}</TableCell>\r\n            <TableCell>{keys[4]}</TableCell>\r\n            <TableCell>{keys[5]}</TableCell>\r\n            <TableCell>{keys[6]}</TableCell>\r\n            <TableCell>{keys[7]}</TableCell>\r\n            <TableCell>{keys[8]}</TableCell>\r\n            <TableCell>{keys[9]}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clickedResponse.map((row, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.agent}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.logout}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8072}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8073}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8074}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8075}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8076}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8077}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8078}</TableCell>\r\n                <TableCell style={{ minWidth: '150px' }}>{row.m8079}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default Model;\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Model from './Model';\r\nimport { Modal } from '@mui/material';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport { Box } from '@mui/material';\r\n\r\nconst AgentCDR = () => {\r\n  const [agentSession, setAgentSession] = useState([]);\r\n  const [qnum, setQnum] = useState([]);\r\n  const [agent, setAgent] = useState([]);\r\n  const [clickedAgent, setClickedAgent] = useState('');\r\n  const [clickedResponse, setClickedResponse] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  // let token = localStorage.getItem('role');\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'agent.session.report'} />, isActive: true },\r\n  ];\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const [responseBreak, setResponseBreak] = useState([]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'agent.session.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <Filter\r\n            responseBreak={responseBreak}\r\n            setResponseBreak={setResponseBreak}\r\n            setAgentSession={setAgentSession}\r\n            qnum={qnum}\r\n            agent={agent}\r\n            setQnum={setQnum}\r\n            setAgent={setAgent}\r\n            setClickedResponse={setClickedResponse}\r\n            clickedAgent={clickedAgent}\r\n          />\r\n        </Grid>\r\n        <Grid item md={12} sm={12} lg={12}>\r\n          <DataTable\r\n            qnum={qnum}\r\n            agent={agent}\r\n            agentSession={agentSession}\r\n            setClickedAgent={setClickedAgent}\r\n            setOpen={setOpen}\r\n          />\r\n        </Grid>\r\n      </GridContainer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}>\r\n        <Box sx={style}>\r\n          <Model clickedResponse={clickedResponse} responseBreak={responseBreak} />\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleClose()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default AgentCDR;\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { getAgentNumberV16 } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Filter({ selectedStartTime, selectedEndTime, setSelectedEndTime, setSelectedStartTime, setParams }) {\r\n  const [agent, setAgent] = React.useState('All');\r\n  const [menuItems, setMenuItems] = React.useState([]);\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':00';\r\n  };\r\n  useEffect(() => {\r\n    getAgentNumberV16().then(response => setMenuItems(response));\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    setParams({\r\n      startdate: formatDate(selectedStartTime),\r\n      enddate: formatDate(selectedEndTime),\r\n      agent: agent,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          <IntlMessages id={'filter'} />\r\n        </Typography>\r\n        <GridContainer>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedStartTime}\r\n              onChange={setSelectedStartTime}\r\n              label={<IntlMessages id={'filter.menu.startdate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <DateTimePicker\r\n              ampm={false}\r\n              disableFuture\r\n              inputVariant=\"outlined\"\r\n              format=\"DD-MM-YYYY HH:mm\"\r\n              value={selectedEndTime}\r\n              onChange={setSelectedEndTime}\r\n              label={<IntlMessages id={'filter.menu.enddate'} />}\r\n            />\r\n          </Grid>\r\n          <Grid item md={4}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Agent</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={agent}\r\n                  label=\"Agent\"\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"All\">\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {menuItems.map((data, index) => (\r\n                    <MenuItem value={data.dn} key={index}>\r\n                      {data.dn} {data.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            handleClick();\r\n          }}\r\n          size=\"small\">\r\n          <IntlMessages id={'filter.menu.search'} />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Table, TableHead, TableBody, TableContainer, TableCell, Paper, TableRow } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nconst DataTable = ({ response }) => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n    let seconds = d.getSeconds();\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + seconds;\r\n  };\r\n  function createData(agent, called, date, key) {\r\n    return { agent, called, date, key };\r\n  }\r\n  const rows = response.map(data => createData(data.agent, data.called, formatDate(data.issuetime), data.key));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'agent.number'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'called'} />\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              <IntlMessages id={'filter.menu.date'} />\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, index) => (\r\n            <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n              <TableCell align=\"center\">{row.agent}</TableCell>\r\n              <TableCell align=\"center\">{row.called}</TableCell>\r\n              <TableCell align=\"center\">{row.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { getIYSReport } from 'api/api';\r\n\r\nconst IYS = () => {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n  const today = new Date();\r\n  const [selectedStartTime, setSelectedStartTime] = useState(formatDate(today) + ' 00:00:00');\r\n  const [selectedEndTime, setSelectedEndTime] = useState(formatDate(today) + ' 23:59:00');\r\n  const [response, setResponse] = useState([]);\r\n  const [params, setParams] = useState({\r\n    agent: 'All',\r\n    startdate: formatDate(today) + ' 00:00:00',\r\n    enddate: formatDate(today) + ' 23:59:00',\r\n  });\r\n  useEffect(() => {\r\n    getIYSReport(params).then(response => setResponse(response.data));\r\n  }, [params]);\r\n\r\n  return (\r\n    <GridContainer>\r\n      <Grid item sm={12} md={12} lg={12}>\r\n        <Filter\r\n          selectedStartTime={selectedStartTime}\r\n          selectedEndTime={selectedEndTime}\r\n          setSelectedEndTime={setSelectedEndTime}\r\n          setSelectedStartTime={setSelectedStartTime}\r\n          setParams={setParams}\r\n        />\r\n      </Grid>\r\n      <Grid item sm={12} md={12} lg={12}>\r\n        <DataTable response={response} />\r\n      </Grid>\r\n    </GridContainer>\r\n  );\r\n};\r\n\r\nexport default IYS;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTeamsUsers,\r\n  getCsOnlineVoiceRoutingPolicy,\r\n  getCsTenantDialplan,\r\n  getCsTeamsCallingPolicy,\r\n  changeCsTeamsCallingPolicy,\r\n  changeCsVoiceRoutingPolicy,\r\n  getUserDetailsByUserId,\r\n  changeCsTenantDiaplan,\r\n} from 'api/api';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Button,\r\n  AccordionActions,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Users() {\r\n  let [users, setUsers] = useState([]);\r\n  let [selecetedUser, setSelectedUser] = useState('');\r\n  let [selectedUserDetails, setSelectedUserDetails] = useState({\r\n    onlineVoiceRoutingPolicy: '-',\r\n    tenantDialPlan: '-',\r\n    teamsCallingPolicy: '-',\r\n    userPrincibleName: '-',\r\n  });\r\n\r\n  let [voiceRoutingPolicys, setVoiceRoutingPolicys] = useState([]);\r\n  let [selectedvoiceRoutingPolicy, setSelectedvoiceRoutingPolicy] = useState('');\r\n\r\n  let [tenantDiaplans, setTenantDiaplan] = useState([]);\r\n  let [selectedTenantDiaplans, setSelectedTenantDiaplans] = useState('');\r\n\r\n  let [teamsCallingPolicys, setTeamsCallingPolicy] = useState([]);\r\n  let [selectedTeamsCallingPolicy, setSelectedTeamsCallingPolicy] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getTeamsUsers({ token: localStorage.getItem('token') })\r\n      .then(result => {\r\n        setUsers(result.data.data);\r\n        getCsOnlineVoiceRoutingPolicy({\r\n          token: localStorage.getItem('token'),\r\n        }).then(res => {\r\n          setVoiceRoutingPolicys(res.data.data);\r\n          getCsTenantDialplan({\r\n            token: localStorage.getItem('token'),\r\n          }).then(res2 => {\r\n            setTenantDiaplan(res2.data.data);\r\n            getCsTeamsCallingPolicy({\r\n              token: localStorage.getItem('token'),\r\n            }).then(res3 => {\r\n              setTeamsCallingPolicy(res3.data.data);\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch(resp => {\r\n        if (resp.response.status === 401) {\r\n          Logout();\r\n          history.push('/signin');\r\n        }\r\n      });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (selecetedUser !== '') {\r\n      getUserDetailsByUserId({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n      }).then(result => {\r\n        setSelectedUserDetails(result.data.data);\r\n      });\r\n    }\r\n  }, [selecetedUser]);\r\n\r\n  const handleChangeUserEmail = event => {\r\n    setSelectedUser(event.target.value);\r\n  };\r\n  const handleChangeVoiceRoutingPolicy = event => {\r\n    setSelectedvoiceRoutingPolicy(event.target.value);\r\n  };\r\n  const handleChangeTenantDiaplans = event => {\r\n    setSelectedTenantDiaplans(event.target.value);\r\n  };\r\n  const handleChangeTeamsCallingPolicy = event => {\r\n    setSelectedTeamsCallingPolicy(event.target.value);\r\n  };\r\n\r\n  const handleSubmitChangeTeamsCallingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTeamsCallingPolicy === '') {\r\n      NotificationManager.error('Teams Calling Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTeamsCallingPolicy !== '') {\r\n      changeCsTeamsCallingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        policyName: selectedTeamsCallingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeVoiceRoutingPolicy = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedvoiceRoutingPolicy === '') {\r\n      NotificationManager.error('Voice Routing Policy must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedvoiceRoutingPolicy !== '') {\r\n      changeCsVoiceRoutingPolicy({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        voiceRoutingPolicy: selectedvoiceRoutingPolicy,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n  const handleSubmitChangeTenantDiaplan = () => {\r\n    if (selecetedUser === '') {\r\n      NotificationManager.error('User must be selected', '', 3000);\r\n    } else if (selectedTenantDiaplans === '') {\r\n      NotificationManager.error('Tenant Diaplan must be selected', '', 3000);\r\n    } else if (selecetedUser !== '' && selectedTenantDiaplans !== '') {\r\n      changeCsTenantDiaplan({\r\n        token: localStorage.getItem('token'),\r\n        userId: selecetedUser,\r\n        tenantDiaplan: selectedTenantDiaplans,\r\n      })\r\n        .then(result => {\r\n          NotificationManager.success('Successfuly changed', '', 3000);\r\n        })\r\n        .catch(result => {});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <NotificationContainer />\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Teams Calling Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"teamsCallingPolicy-label\">Teams Calling Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"teamsCallingPolicy-label\"\r\n                  id=\"teamsCallingPolicy\"\r\n                  value={selectedTeamsCallingPolicy}\r\n                  onChange={handleChangeTeamsCallingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>Teams Calling Policy</em>\r\n                  </MenuItem>\r\n                  {teamsCallingPolicys.map((teamsCallingPolicy, index) => (\r\n                    <MenuItem key={index} value={teamsCallingPolicy.callingPolicy}>\r\n                      {teamsCallingPolicy.callingPolicy}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTeamsCallingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Voice Routing Policy</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"voiceRoutingPolicy-label\">Voice Routing Policy</InputLabel>\r\n                <Select\r\n                  labelId=\"voiceRoutingPolicy-label\"\r\n                  id=\"voiceRoutingPolicy\"\r\n                  value={selectedvoiceRoutingPolicy}\r\n                  onChange={handleChangeVoiceRoutingPolicy}>\r\n                  <MenuItem value=\"\">\r\n                    <em>VoiceRoutingPolicy</em>\r\n                  </MenuItem>\r\n                  {voiceRoutingPolicys.map((voiceRoutingPolicy, index) => (\r\n                    <MenuItem key={index} value={voiceRoutingPolicy.policyName}>\r\n                      {voiceRoutingPolicy.policyName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeVoiceRoutingPolicy}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMore />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Typography>Change Tenant Diaplan</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">User Email</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  value={selecetedUser}\r\n                  onChange={handleChangeUserEmail}>\r\n                  <MenuItem value=\"\">\r\n                    <em>User Email</em>\r\n                  </MenuItem>\r\n                  {users.map(user => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.userName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <FormControl style={{ width: '100%' }}>\r\n                <InputLabel id=\"tenantDiaplan-label\">Tenant Diaplan</InputLabel>\r\n                <Select\r\n                  labelId=\"tenantDiaplan-label\"\r\n                  id=\"tenantDiaplan\"\r\n                  value={selectedTenantDiaplans}\r\n                  onChange={handleChangeTenantDiaplans}>\r\n                  <MenuItem value=\"\">\r\n                    <em>TenantDiaplan</em>\r\n                  </MenuItem>\r\n                  {tenantDiaplans.map((tenantDiaplan, index) => (\r\n                    <MenuItem key={index} value={tenantDiaplan.teanantDiaPlan}>\r\n                      {tenantDiaplan.teanantDiaPlan}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <AccordionActions>\r\n          <Button variant=\"contained\" onClick={handleSubmitChangeTenantDiaplan}>\r\n            Change\r\n          </Button>\r\n        </AccordionActions>\r\n      </Accordion>\r\n      <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n        Değişim işlemlerinin sonuca yansıması biraz zaman alabilir.\r\n      </div>\r\n      <Card style={{ marginTop: '20px' }}>\r\n        <p style={{ textAlign: 'center', fontSize: '20px', padding: '10px' }}>Selected User Details</p>\r\n        <div style={{ padding: '10px' }}>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>User Email</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.userPrincibleName}\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Teams Calling Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.teamsCallingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <Grid item md={6}>\r\n              <p>Voice Routing Policy</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.onlineVoiceRoutingPolicy}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <p>Tenant Diaplan</p>\r\n              <div\r\n                style={{\r\n                  borderColor: 'black',\r\n                  borderStyle: 'solid',\r\n                  borderWidth: '1px',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                }}>\r\n                {selectedUserDetails.tenantDialPlan}\r\n                <b> </b>\r\n              </div>\r\n            </Grid>\r\n          </GridContainer>\r\n        </div>\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getAgentTotalCall } from 'api/api';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function Filter({\r\n  selectedEndTime,\r\n  setSelectedEndTime,\r\n  setTotalAgent,\r\n  setTotalDid,\r\n  selectedDate,\r\n}) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  // const formatDate2 = date => {\r\n  //   let dateArray = date.split('-');\r\n  //   return dateArray[2] + '-' + dateArray[1] + '-' + dateArray[0];\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte3').then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setTotalAgent(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  useEffect(() => {\r\n    getAgentTotalCall(selectedDate, 'cte2').then(resp => {\r\n      console.log(JSON.parse(resp.data.data));\r\n      setTotalDid(JSON.parse(resp.data.data));\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <GridContainer>\r\n          <Grid item md={3}>\r\n            <LocalizationProvider\r\n              dateAdapter={AdapterDateFns}\r\n              locale={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? enLocale\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? nlLocale\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? trLocale\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? deLocale\r\n                  : enLocale\r\n              }>\r\n              {' '}\r\n              <DatePicker\r\n                value={selectedEndTime}\r\n                views={['year', 'month']}\r\n                onChange={newValue => setSelectedEndTime(dateFormat(newValue,'yyyy-mm-dd'))}\r\n                renderInput={params => <TextField {...params} />}\r\n                inputVariant=\"outlined\"\r\n                format=\"MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.date'} />}\r\n              />\r\n            </LocalizationProvider>\r\n          </Grid>\r\n        </GridContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\n\r\nexport default function DataTable({ response, limit, setOffset, setPage, setCsvData, setSelectedDate }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  //   setOffset(limit * newPage);\r\n  // };\r\n\r\n  function addZero(param) {\r\n    if (param < 10) {\r\n      param = '0' + param;\r\n    }\r\n    return param;\r\n  }\r\n\r\n  function returnedTime(param1, param2) {\r\n    let Param1Array = param1.split(':');\r\n    let Param2Array = param2.split(':');\r\n    if (param1.includes('.')) {\r\n      Param1Array[0] = parseInt(Param1Array[0]) + parseInt(param1.split('.')[0]) * 24;\r\n    }\r\n    if (param2.includes('.')) {\r\n      Param2Array[0] = parseInt(Param2Array[0]) + parseInt(param2.split('.')[0]) * 24;\r\n    }\r\n\r\n    let hour = parseInt(Param1Array[0]) + parseInt(Param2Array[0]);\r\n    let minute = parseInt(Param1Array[1]) + parseInt(Param2Array[1]);\r\n    let second = parseInt(Param1Array[2]) + parseInt(Param2Array[2]);\r\n    return (\r\n      addZero(hour + Math.floor(minute / 60)) +\r\n      ':' +\r\n      addZero((minute % 60) + Math.floor(second / 60)) +\r\n      ':' +\r\n      addZero(second % 60)\r\n    );\r\n  }\r\n\r\n  function calculateAverage(totalCall, totalTime) {\r\n    let timeArray;\r\n    if (totalTime.includes('.')) {\r\n      let tempHour = parseInt(totalTime.split('.')[0]) * 24 + parseInt(totalTime.split('.')[1].split(':')[0]);\r\n      let tempTime = tempHour + ':' + totalTime.split('.')[1].split(':')[1] + ':' + totalTime.split('.')[1].split(':')[2];\r\n      timeArray = tempTime.split(':');\r\n    } else {\r\n      timeArray = totalTime.split(':');\r\n    }\r\n    // let timeArray = totalTime.split(':');\r\n    let time = parseInt(timeArray[0]) * 60 * 60 + parseInt(timeArray[1]) * 60 + parseInt(timeArray[2]);\r\n    let averageSecond = time / (parseInt(totalCall) !== 0 ? parseInt(totalCall) : 1);\r\n\r\n    return totalCall !== 0\r\n      ? addZero(Math.floor(averageSecond / 3600)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) / 60)) +\r\n          ':' +\r\n          addZero(Math.floor((averageSecond % 3600) % 60))\r\n      : '00:00:00';\r\n  }\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n\r\n  const column = [\r\n    {\r\n      id: 'd',\r\n      headerName: <IntlMessages id={'filter.menu.date'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalcall',\r\n      headerName: <IntlMessages id={'wallboard.total.call'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'totalinbound',\r\n      headerName: <IntlMessages id={'dashboard.inbound'} />,\r\n      width: '100px',\r\n    },\r\n    {\r\n      id: 'answeredinb',\r\n      headerName: <IntlMessages id={'wallboard.answered'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationcalls',\r\n      headerName: <IntlMessages id={'total.time'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationinbound',\r\n      headerName: <IntlMessages id={'durationinbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'totaloutbound',\r\n      headerName: <IntlMessages id={'dashboard.outbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'durationoutbound',\r\n      headerName: <IntlMessages id={'durationoutbound'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageTotal',\r\n      headerName: <IntlMessages id={'Act'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageInbound',\r\n      headerName: <IntlMessages id={'avIn'} />,\r\n      width: '30px',\r\n    },\r\n    {\r\n      id: 'averageOutbound',\r\n      headerName: <IntlMessages id={'avOut'} />,\r\n      width: '30px',\r\n    },\r\n  ];\r\n  const createData = (\r\n    d,\r\n    totalcall,\r\n    totalinbound,\r\n    answeredinb,\r\n    durationcalls,\r\n    durationinbound,\r\n    totaloutbound,\r\n    durationoutbound,\r\n    averageTotal,\r\n    averageInbound,\r\n    averageOutbound,\r\n  ) => {\r\n    return {\r\n      d,\r\n      totalcall,\r\n      totalinbound,\r\n      answeredinb,\r\n      durationcalls,\r\n      durationinbound,\r\n      totaloutbound,\r\n      durationoutbound,\r\n      averageTotal,\r\n      averageInbound,\r\n      averageOutbound,\r\n    };\r\n  };\r\n\r\n  const rows = response.map(data =>\r\n    createData(\r\n      data.d !== 'Total Call' ? getNewDate(data.d.split(' ')[0]) : data.d,\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      data.totalinbound,\r\n      data.answeredinb,\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      data.totaloutbound,\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(\r\n        parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n        returnedTime(data.durationinbound, data.durationoutbound),\r\n      )\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    ),\r\n  );\r\n\r\n  const csvData = response.map(data => ({\r\n    date: data.d !== 'Total Call' ? data.d.split(' ')[0] : data.d,\r\n    totalcall: parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n    totalinbound: data.totalinbound,\r\n    answeredinb: data.answeredinb,\r\n    durationcalls:\r\n      returnedTime(data.durationinbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n\r\n    durationinbound:\r\n      data.durationinbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    totaloutbound: data.totaloutbound,\r\n    durationoutbound:\r\n      data.durationoutbound\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageTotal: calculateAverage(\r\n      parseInt(data.totaloutbound) + parseInt(data.totalinbound),\r\n      returnedTime(data.durationinbound, data.durationoutbound),\r\n    ),\r\n    averageinbound:\r\n      calculateAverage(data.totalinbound, data.durationinbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    averageoutbound:\r\n      calculateAverage(data.totaloutbound, data.durationoutbound)\r\n        .replace('.', 'd ')\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n        <ExcelFile\r\n          filename={\r\n            currentLanguage.locale === 'en-US'\r\n              ? 'Monthly_Details'\r\n              : currentLanguage.locale === 'tr-TR'\r\n              ? 'Aylik_Detaylar'\r\n              : currentLanguage.locale === 'nl-NL'\r\n              ? 'Maandelijkse details'\r\n              : currentLanguage.locale === 'de-DE'\r\n              ? 'Monatliche Details'\r\n              : ''\r\n          }\r\n          element={\r\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n              <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n            </Button>\r\n          }>\r\n          <ExcelSheet data={csvData} name=\"Data\">\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Date'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Tarih'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Datum'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Datum'\r\n                  : ''\r\n              }\r\n              value=\"date\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Arama Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal aantal gesprekken'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamtzahl der Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"totalcall\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Aramalar'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal inkomend'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamteingang'\r\n                  : ''\r\n              }\r\n              value=\"totalinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Answered Call Count'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Cevaplanmış Çağrı Adedi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Aantal beantwoorde oproepen'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Zählung angenommener Anrufe'\r\n                  : ''\r\n              }\r\n              value=\"answeredinb\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Duration'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Süre'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Looptijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Dauer'\r\n                  : ''\r\n              }\r\n              value=\"durationcalls\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Inbound Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Gelen Çağrı Süresi Toplamı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Inkomende tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Eingangszeit'\r\n                  : ''\r\n              }\r\n              value=\"durationinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Total Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Toplam Giden Çağrı'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Totaal uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Gesamt ausgehend'\r\n                  : ''\r\n              }\r\n              value=\"totaloutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Outbound Total Time'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Giden Çağrı toplam süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Uitgaande totale tijd'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Ausgehend Gesamtzeit'\r\n                  : ''\r\n              }\r\n              value=\"durationoutbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Total'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Toplam Arama'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld totaal'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittliche Summe'\r\n                  : ''\r\n              }\r\n              value=\"averageTotal\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Inbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddelde inkomende'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher Eingang'\r\n                  : ''\r\n              }\r\n              value=\"averageinbound\"\r\n            />\r\n            <ExcelColumn\r\n              label={\r\n                currentLanguage.locale === 'en-EN'\r\n                  ? 'Average Outbound'\r\n                  : currentLanguage.locale === 'tr-TR'\r\n                  ? 'Ortalama Gelen Arama Süresi'\r\n                  : currentLanguage.locale === 'nl-NL'\r\n                  ? 'Gemiddeld uitgaand'\r\n                  : currentLanguage.locale === 'de-DE'\r\n                  ? 'Durchschnittlicher ausgehender'\r\n                  : ''\r\n              }\r\n              value=\"averageoutbound\"\r\n            />\r\n          </ExcelSheet>\r\n        </ExcelFile>\r\n      </div>\r\n      <TableContainer component={Paper} className={classes.root} style={{ maxHeight: '550px' }}>\r\n        <Table stickyHeader className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column,index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  style={{\r\n                    width: column.width,\r\n                    opacity: '.9',\r\n                    backgroundColor: '#4E9F3D',\r\n                    color: 'white',\r\n                  }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return row.d !== 'Total Call' ? (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column,inds) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell\r\n                        onClick={() => setSelectedDate(row.d)}\r\n                        key={inds}\r\n                        style={{ padding: '0px', textAlign: 'center', cursor: 'pointer' }}>\r\n                        {value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              ) : (\r\n                null\r\n              );\r\n            })}\r\n\r\n            {rows.map((row, index) => {\r\n              return row.d === 'Total Call' ? (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={index}\r\n                  style={{ backgroundColor: '#4E9F3D', opacity: '.9' }}>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    <IntlMessages id={'Total'} />\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.totalcall}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.totalinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.answeredinb}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationcalls}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationinbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.totaloutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.durationoutbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageTotal}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageInbound}\r\n                  </TableCell>\r\n                  <TableCell style={{ color: 'white', padding: '1px', textAlign: 'center' }}>\r\n                    {row.averageOutbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (null\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function Detail({ totalAgent, totalDid }) {\r\n  let currentLanguage = useIntl();\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: '20px' }}>\r\n        <GridContainer>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalDid.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'DID_top_5' : 'DID_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalDid} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'DID number' : 'DID Numarası'}\r\n                      value=\"src_did\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"calldid\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.didnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.src_did !== undefined ? totalDid[0]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[0]?.calldid !== undefined ? totalDid[0]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.src_did !== undefined ? totalDid[1]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[1]?.calldid !== undefined ? totalDid[1]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.src_did !== undefined ? totalDid[2]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[2]?.calldid !== undefined ? totalDid[2]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.src_did !== undefined ? totalDid[3]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[3]?.calldid !== undefined ? totalDid[3]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.src_did !== undefined ? totalDid[4]?.src_did : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalDid[4]?.calldid !== undefined ? totalDid[4]?.calldid : '-'}{' '}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n              {totalAgent.length > 0 && (\r\n                <ExcelFile\r\n                  filename={currentLanguage.locale === 'en-US' ? 'Agent_top_5' : 'Agent_top_5'}\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={totalAgent} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Agent Number' : 'Agent Numarası'}\r\n                      value=\"dst_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={currentLanguage.locale === 'en-US' ? 'Total Call Count' : 'Toplam Arama Adedi'}\r\n                      value=\"agentcall\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n            <Card>\r\n              <TableContainer style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.agentnumber'} />\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        <IntlMessages id={'mountlydetails.totalcall'} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.dst_display_name !== undefined ? totalAgent[0]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[0]?.agentcall !== undefined ? totalAgent[0]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.dst_display_name !== undefined ? totalAgent[1]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[1]?.agentcall !== undefined ? totalAgent[1]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.dst_display_name !== undefined ? totalAgent[2]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[2]?.agentcall !== undefined ? totalAgent[2]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.dst_display_name !== undefined ? totalAgent[3]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[3]?.agentcall !== undefined ? totalAgent[3]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.dst_display_name !== undefined ? totalAgent[4]?.dst_display_name : '-'}\r\n                      </TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>\r\n                        {totalAgent[4]?.agentcall !== undefined ? totalAgent[4]?.agentcall : '-'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Card>\r\n          </Grid>\r\n        </GridContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport * as api from '../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Detail from './Detail';\r\nimport { Logout } from 'services/auth/logout';\r\nimport { useHistory } from 'react-router';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst MonthlyDetails = () => {\r\n  const [, setCsvData] = useState([]);\r\n  const [response, setResponse] = useState([]);\r\n  const [responseTotal] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate(),\r\n  );\r\n\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'monthlydetails'} />, isActive: true },\r\n  ];\r\n\r\n  let today = new Date();\r\n  let yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [selectedTime, setSelectedTime] = useState(dateFormat(new Date(),'yyyy-mm-dd'));\r\n  const [totalAgent, setTotalAgent] = useState([]);\r\n  const [totalDid, setTotalDid] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  let query = `select * from cl_get_daily_statics_proc('${selectedTime}')`;\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  function lastDay(date) {\r\n    return dateFormat(date, 'yyyy-mm-dd');\r\n  }\r\n\r\n  let queryTotal = `with recursive cte1 as (\r\n    select * from cl_get_daily_statics_proc('${selectedTime}')\r\n      )\r\n  select \r\n  'Total Call' as d,\r\n  (sum(totalinbound)) as totalinbound,\r\n  (sum(answeredinb)) as answeredinb,\r\n  (sum(durationinbound)) as durationinbound ,\r\n  (sum(totaloutbound)) as totaloutbound,\r\n  (sum(durationoutbound)) as durationoutbound\r\n  from cte1`;\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n      setLoading(true);\r\n      setSelectedTime(lastDay(selectedTime));\r\n      api\r\n        .getMonthlyDetails({ token: localStorage.getItem('token'), query: query })\r\n        .then(resp => {\r\n          setResponse(JSON.parse(resp.data.data));\r\n          api.getMonthlyTotal({ token: localStorage.getItem('token'), query: queryTotal }).then(resps => {\r\n            setResponse([...JSON.parse(resp.data.data), ...JSON.parse(resps.data.data)]);\r\n            setLoading(false);\r\n          });\r\n        })\r\n        .catch(resp => {\r\n          if (resp.response?.status === 401) {\r\n            Logout();\r\n            history.push('/signin');\r\n          }\r\n        });\r\n    \r\n  }, [query, selectedTime, history, queryTotal]);\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'monthlydetails'} />} breadcrumbs={breadcrumbs}>\r\n      <Filter\r\n        selectedEndTime={selectedTime}\r\n        setSelectedEndTime={setSelectedTime}\r\n        setOffset={setOffset}\r\n        setPage={setPage}\r\n        setLimit={setLimit}\r\n        setTotalAgent={setTotalAgent}\r\n        setTotalDid={setTotalDid}\r\n        selectedDate={selectedDate}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n        <Table\r\n          page={page}\r\n          setPage={setPage}\r\n          setLimit={setLimit}\r\n          setResponse={setResponse}\r\n          setCsvData={setCsvData}\r\n          limit={limit}\r\n          setOffset={setOffset}\r\n          responseTotal={responseTotal}\r\n          offset={offset}\r\n          response={response}\r\n          setSelectedDate={setSelectedDate}\r\n        />\r\n      <Detail totalAgent={totalAgent} totalDid={totalDid} />\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default MonthlyDetails;\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QueueAnswerReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  FormControl,\r\n  TextField,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  getQueueAnswerReport,\r\n  getQueueAnswerReportSummary,\r\n  getQueueNumber,\r\n  getQueueAnswerReportSummaryTotal,\r\n  getQueueAnswerReportCount,\r\n} from 'api/api';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport QueueAnswerReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setData, rowsPerPage, page, setSummary, setSummaryTotal, setResponseCount }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startDate, setStartDate] = useState(formatDate(new Date()));\r\n  let [endDate, setEndDate] = useState(formatDate(new Date()));\r\n  let [queueNum, setQueueNum] = useState('');\r\n  let [src, setSrc] = useState('');\r\n  let [order, setOrder] = useState('ASC');\r\n  let [queues, setQueues] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n        setLoading(true);\r\n        getQueueAnswerReport(startDate, endDate, queueNum, src, order, rowsPerPage, rowsPerPage * page).then(resp => {\r\n          setData(JSON.parse(resp.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        getQueueAnswerReportCount(startDate, endDate, queueNum, src).then(resp => {\r\n          setResponseCount(JSON.parse(resp.data.data)[0].summed);\r\n        });\r\n\r\n        getQueueAnswerReportSummary(startDate, endDate, queueNum).then(resp => {\r\n          setSummary(JSON.parse(resp.data.data));\r\n        });\r\n\r\n        getQueueAnswerReportSummaryTotal(startDate, endDate, queueNum).then(resp => {\r\n          setSummaryTotal(JSON.parse(resp.data.data));\r\n        });\r\n  }, [\r\n    startDate,\r\n    endDate,\r\n    queueNum,\r\n    src,\r\n    order,\r\n    rowsPerPage,\r\n    page,\r\n    setData,\r\n    setResponseCount,\r\n    setSummary,\r\n    setSummaryTotal,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(response => {\r\n      setQueues(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  // const handleChangeStartTime = event => {\r\n  //   setStartDate(formatDate(event._d));\r\n  // };\r\n  // const handleChangeEndTime = event => {\r\n  //   setEndDate(formatDate(event._d));\r\n  // };\r\n  const handleChangeQueueNum = event => {\r\n    setQueueNum(event.target.value);\r\n  };\r\n  const handleChangeOrder = event => {\r\n    setOrder(event.target.value);\r\n  };\r\n  const handleChangeCaller = event => {\r\n    setSrc(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <QueueAnswerReportDateFilter setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            {/* <Grid item md={2}>\r\n              <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                value={startDate}\r\n                onChange={handleChangeStartTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n              />\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <DatePicker\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                minDate={startDate}\r\n                value={endDate}\r\n                onChange={handleChangeEndTime}\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n              />\r\n            </Grid> */}\r\n            <Grid item md={4}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">\r\n                  <IntlMessages id={'queue.answer.report.queues'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  label={<IntlMessages id={'queue.answer.report.queues'} />}\r\n                  value={queueNum}\r\n                  onChange={handleChangeQueueNum}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {queues.map(que => (\r\n                    <MenuItem key={que.id} value={que.dn}>\r\n                      {que.dn} - {que.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <FormControl variant=\"outlined\" style={{ width: '100%' }}>\r\n                <InputLabel id=\"distinct-label\">\r\n                  <IntlMessages id={'queue.answer.report.orderby'} />\r\n                </InputLabel>\r\n                <Select\r\n                  label={<IntlMessages id={'queue.answer.report.orderby'} />}\r\n                  labelId=\"distinct-label\"\r\n                  id=\"distinct\"\r\n                  value={order}\r\n                  onChange={handleChangeOrder}>\r\n                  <MenuItem value=\"ASC\">\r\n                    <IntlMessages id={'oldtonew'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"DESC\">\r\n                    <IntlMessages id={'newtoold'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"standard-basic\"\r\n                label={<IntlMessages id={'caller'} />}\r\n                onChange={handleChangeCaller}\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { getQueueNumber } from 'api/api';\r\nimport { Button } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DataTable({\r\n  data,\r\n  setData,\r\n  rowsPerPage,\r\n  setRowsPerPage,\r\n  page,\r\n  setPage,\r\n  summaryTotal,\r\n  responseCount,\r\n}) {\r\n  const [queueList, setQueueList] = useState([]);\r\n  // const column = [\r\n  //   { id: 'dst_start_time', headerName: <IntlMessages id={'queueanswerreport.date'} />, width: '60px' },\r\n  //   { id: 'waiting_time', headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />, width: '100px' },\r\n  //   { id: 'talking', headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />, width: '30px' },\r\n  //   { id: 'src_display_name', headerName: <IntlMessages id={'queueanswerreport.caller'} />, width: '30px' },\r\n  //   { id: 'dst_dn', headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />, width: '30px' },\r\n  // ];\r\n\r\n  useEffect(() => {\r\n    getQueueNumber().then(resp => {\r\n      setQueueList(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  // const formatDate = date => {\r\n  //   let d = new Date(date);\r\n  //   let month = '' + (d.getMonth() + 1);\r\n  //   let day = '' + d.getDate();\r\n  //   let year = d.getFullYear();\r\n  //   let hour = d.getHours();\r\n  //   let min = d.getMinutes();\r\n\r\n  //   if (month < 10) month = '0' + month;\r\n  //   if (day < 10) day = '0' + day;\r\n  //   if (hour < 10) hour = '0' + hour;\r\n  //   if (min < 10) min = '0' + min;\r\n\r\n  //   return year + '-' + month + '-' + day;\r\n  // };\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  //get queue name\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < queueList.length; j++) {\r\n      if (queueList[j].dn === data[i].dst_dn) {\r\n        data[i].dst_dn = queueList[j].display_name;\r\n      }\r\n    }\r\n  }\r\n\r\n  // data.map(dataUnit => {\r\n  //   queueList.map(queue => {\r\n  //     if (queue.dn === dataUnit.dst_dn) {\r\n  //       dataUnit.dst_dn = queue.display_name;\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  const rows = data.map((dataUnit, index) => ({\r\n    id: index,\r\n    dst_start_time: getNewDate(dataUnit.dst_start_time),\r\n    waiting_time: dataUnit.waiting_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    talking:\r\n      dataUnit.talking\r\n        .toString()\r\n        .replace(':', 'h ')\r\n        .replace(':', 'm ') + 's',\r\n    src_display_name: dataUnit.src_display_name,\r\n    dst_dn: dataUnit.dst_dn,\r\n  }));\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleDowlandButtonClick = () => {\r\n    setRowsPerPage(responseCount);\r\n    setPage(0);\r\n    setData([]);\r\n    handleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  const columns = [\r\n    {\r\n      field: 'dst_start_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.date'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <DateRangeIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waiting_time',\r\n      headerName: <IntlMessages id={'queueanswerreport.waitingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'talking',\r\n      headerName: <IntlMessages id={'queueanswerreport.talkingtime'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#DB6B97' }} />{' '}\r\n          <b style={{ color: '#DB6B97' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'src_display_name',\r\n      headerName: <IntlMessages id={'queueanswerreport.caller'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <PersonIcon style={{ verticalAlign: '-5px', color: '#F05454' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'dst_dn',\r\n      headerName: <IntlMessages id={'queueanswerreport.queuenumber'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <ContactPhoneIcon style={{ verticalAlign: '-5px', color: '#519259' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: '10px', textAlign: 'right' }}>\r\n        {rows.length > 0 && (\r\n          <Button onClick={() => handleDowlandButtonClick()} style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n            <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          </Button>\r\n        )}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\">\r\n          <Box sx={style}>\r\n            {rows.length < 1 && (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <CircularProgress />\r\n                <p>Veriler hazirlanıyor...</p>\r\n              </div>\r\n            )}\r\n            <div style={{ textAlign: 'center' }}>\r\n              {rows.length < 1 && (\r\n                <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              )}\r\n              {rows.length > 0 && (\r\n                <ExcelFile\r\n                  filename={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Queue_answer_report'\r\n                      : currentLanguage.locale === 'tr-TR'\r\n                      ? 'Kuyruk_cevap_raporu'\r\n                      : currentLanguage.locale === 'nl-NL'\r\n                      ? 'Rapport voor antwoord in wachtrij'\r\n                      : currentLanguage.locale === 'de-DE'\r\n                      ? 'Warteschlangen-Antwortbericht'\r\n                      : ''\r\n                  }\r\n                  element={\r\n                    <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                      <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                    </Button>\r\n                  }>\r\n                  <ExcelSheet data={rows} name=\"Data\">\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Date'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Tarih'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Datum'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Datum'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_start_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Waiting Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Bekleme Süresi Toplamı'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachttijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Wartezeit'\r\n                          : ''\r\n                      }\r\n                      value=\"waiting_time\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Talking Time'\r\n                          : curentLanguage.locale === 'tr-TR'\r\n                          ? 'Konuşma Süresi'\r\n                          : curentLanguage.locale === 'nl-NL'\r\n                          ? 'Gesprekstijd'\r\n                          : curentLanguage.locale === 'de-DE'\r\n                          ? 'Gesprächszeit'\r\n                          : ''\r\n                      }\r\n                      value=\"talking\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Caller'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Arayan'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Beller'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Anruferin'\r\n                          : ''\r\n                      }\r\n                      value=\"src_display_name\"\r\n                    />\r\n                    <ExcelColumn\r\n                      label={\r\n                        currentLanguage.locale === 'en-EN'\r\n                          ? 'Queue Number'\r\n                          : currentLanguage.locale === 'tr-TR'\r\n                          ? 'Kuyruk Numarası'\r\n                          : currentLanguage.locale === 'nl-NL'\r\n                          ? 'Wachtrijnummer'\r\n                          : currentLanguage.locale === 'de-DE'\r\n                          ? 'Warteschlangennummer'\r\n                          : ''\r\n                      }\r\n                      value=\"dst_dn\"\r\n                    />\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              )}\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n\r\n        {/* // <ExcelFile\r\n          //   filename={curentLanguage.locale === 'en-US' ? 'Queue_answer_report' : 'Kuyruk_cevap_raporu'}\r\n          //   element={\r\n          //     <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n          //       <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n          //     </Button>\r\n          //   }>\r\n          //   <ExcelSheet data={rows} name=\"Data\">\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Date' : 'Tarih'} value=\"dst_start_time\" />\r\n          //     <ExcelColumn\r\n          //       label={currentLanguage.locale == 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n          //       value=\"waiting_time\"\r\n          //     />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Talking Time' : 'Konuşma Süresi'} value=\"talking\" />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Caller' : 'Arayan'} value=\"src_display_name\" />\r\n          //     <ExcelColumn label={currentLanguage.locale == 'en-US' ? 'Queue Number' : 'Kuyruk Numarası'} value=\"dst_dn\" />\r\n          //   </ExcelSheet>\r\n          // </ExcelFile> */}\r\n      </div>\r\n      <Paper>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50, 100, parseInt(responseCount)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(responseCount)}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {column.map((column, index) => (\r\n                <TableCell key={index} style={{ width: column.width, textAlign: 'center' }}>\r\n                  {column.headerName}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row, index) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                  {column.map((column, index) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell key={index} style={{ textAlign: 'center' }}>\r\n                        {value}{' '}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 20, 50, 100]}\r\n          component=\"div\"\r\n          count={responseCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={rows.length < rowsPerPage || rows.length === 0 ? { disabled: true } : { disabled: false }}\r\n          backIconButtonText={String(rows.length)}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={'Rows Per Page'}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n          */}\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport Filter from './Filter';\r\nimport DataTable from './Table';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport { useIntl } from 'react-intl';\r\nimport { CloudDownload } from '@material-ui/icons';\r\n\r\nexport default function QueueAnswerReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'queue.answer.report'} />, isActive: true },\r\n  ];\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  }));\r\n\r\n  let [data, setData] = useState([]);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [summary, setSummary] = useState([]);\r\n  const [summaryTotal, setSummaryTotal] = useState([]);\r\n  const [responseCount, setResponseCount] = useState(10);\r\n\r\n  let classes = useStyles();\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'queue.answer.report'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            setSummary={setSummary}\r\n            setSummaryTotal={setSummaryTotal}\r\n            setResponseCount={setResponseCount}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DataTable\r\n            data={data}\r\n            setData={setData}\r\n            rowsPerPage={rowsPerPage}\r\n            setRowsPerPage={setRowsPerPage}\r\n            page={page}\r\n            setPage={setPage}\r\n            summaryTotal={summaryTotal}\r\n            responseCount={responseCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {summaryTotal.length > 0 && (\r\n            <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n              <ExcelFile\r\n                filename={`Queue Answer Report Summary`}\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={summary} name=\"data\">\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Date' : 'Tarih'} value=\"date\" />\r\n                  <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Call Count' : 'Arama Sayısı'} value=\"count\" />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Waiting Time' : 'Bekleme Süresi'}\r\n                    value=\"waiting_time\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Talking Time' : 'Konuşma Süresi'}\r\n                    value=\"talking\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={curentLanguage.locale === 'en-US' ? 'Average Call Time' : 'Ortalama Görüşme Süresi'}\r\n                    value=\"act\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            </div>\r\n          )}\r\n          <TableContainer component={Paper} className={classes.root}>\r\n            {summary.length > 0 && (\r\n              <Table className={classes.table} style={{ position: 'sticky' }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.date'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.total.call'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'waiting.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'queueanswerreport.talkingtime'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'wallboard.average.time'} />\r\n                    </TableCell>\r\n                    <TableCell style={{ textAlign: 'center' }}>\r\n                      <IntlMessages id={'average.waiting'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {summary.map((sum,index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.date}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.count}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_time}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.talking}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.act}</TableCell>\r\n                      <TableCell style={{ textAlign: 'center' }}>{sum.waiting_act}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  {summaryTotal.map((row, index) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                        <TableCell style={{ textAlign: 'center' }}>\r\n                          <IntlMessages id={'total'} />\r\n                        </TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.count1}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_time}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.talking}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.act}</TableCell>\r\n                        <TableCell style={{ textAlign: 'center' }}>{row.waiting_act}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            )}\r\n          </TableContainer>\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button, FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function AbondenedCallsDateFilter({ setStartTimeApi, setEndTimeApi, handleClick }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      startDate,\r\n      /*       new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n    setEndTimeApi(\r\n      endDate,\r\n      /*       new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2] */\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        //start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n        <div style={{ marginLeft: '10px', marginBottom: '10px' }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick();\r\n            }}\r\n            size=\"small\"\r\n            variant=\"contained\">\r\n            <IntlMessages id={'filter.menu.search'} />\r\n          </Button>\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport AbondenedCallsDateFilter from './DateFilter';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { getQueue } from 'api/api';\r\n\r\nfunction Filter({ setParams, setColor, color, queue, setQueue }) {\r\n  let [loading] = useState(false);\r\n\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const [startDate, setStartDate] = useState(formatDate(today));\r\n  const [endDate, setEndDate] = useState(formatDate(today));\r\n\r\n  const handleClick = () => {\r\n    setParams({ startDate: formatDate(startDate), endDate: formatDate(endDate) });\r\n  };\r\n\r\n  const colors = [\r\n    {\r\n      name: 'Green',\r\n      value: <IntlMessages id={'returned'} />,\r\n    },\r\n    {\r\n      name: 'Red',\r\n      value: <IntlMessages id={'notreturned'} />,\r\n    },\r\n  ];\r\n\r\n  const handleChangeColor = event => {\r\n    setColor(event.target.value);\r\n  };\r\n\r\n  const handleChangeQueue = event => {\r\n    setQueue(event.target.value);\r\n  };\r\n\r\n  const [queues, setQueues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQueue().then(resp => {\r\n      setQueues(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <div>\r\n        <AbondenedCallsDateFilter handleClick={handleClick} setStartTimeApi={setStartDate} setEndTimeApi={setEndDate} />\r\n        {loading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'returnfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={color}\r\n                  onChange={handleChangeColor}\r\n                  label={<IntlMessages id={'returnfilter'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {colors.map((color, index) => (\r\n                    <MenuItem key={index} value={color.name}>\r\n                      {color.value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'queue'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={queue}\r\n                  onChange={handleChangeQueue}\r\n                  label={<IntlMessages id={'queue'} />}>\r\n                  <MenuItem value={''}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {queues.map((queue, index) => (\r\n                    <MenuItem key={index} value={queue.display_name}>\r\n                      {queue.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as api from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { Box, Button, CircularProgress, Collapse, Typography } from '@material-ui/core';\r\nimport { useIntl } from 'react-intl';\r\nimport { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nexport default function DataTable({ params, color, queue }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    container: {\r\n      maxHeight: 580,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  // function addZero(param) {\r\n  //   if (param < 10) {\r\n  //     param = '0' + param;\r\n  //   }\r\n  //   return param;\r\n  // }\r\n\r\n  const columns = [\r\n    { id: 'timeofevent', label: <IntlMessages id={'abondenedcalls.timeofevent'} />, minWidth: 60, align: 'center' },\r\n    { id: 'from_userpart', label: <IntlMessages id={'abondenedcalls.fromuserpart'} />, minWidth: 60, align: 'center' },\r\n    {\r\n      id: 'display_name',\r\n      label: <IntlMessages id={'abondenedcalls.displayname'} />,\r\n      minWidth: 70,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'count',\r\n      label: <IntlMessages id={'abondenedcalls.count'} />,\r\n      minWidth: 60,\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [detail, setDetail] = useState([]);\r\n  let [tempArray, setTempArray] = useState([]);\r\n\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //  if (checkBetween(params.params.startDate, params.params.endDate)) {\r\n      setLoading(true);\r\n      api.getAbondenedCalls(params, queue).then(call => {\r\n        console.log(JSON.parse(call.data.data))\r\n        setTempArray([]);\r\n        for (let i = 0; i < JSON.parse(call.data.data).length; i++) {\r\n          api\r\n            .getAbondenedCallDetails(JSON.parse(call.data.data)[i].timeofevent, JSON.parse(call.data.data)[i].from_userpart)\r\n            .then(resp => {\r\n              let data = JSON.parse(resp.data.data);\r\n              tempArray.push({ i, data });\r\n            });\r\n        }\r\n        setResponse(JSON.parse(call.data.data));\r\n        setTimeout(() => {\r\n          setDetail(tempArray.sort((a, b) => (a.i > b.i ? 1 : b.i > a.i ? -1 : 0)));\r\n          setLoading(false);\r\n        }, 1000);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [params, queue]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let res = [];\r\n  for (let i = 0; i < response.length; i++) {\r\n    res.push({\r\n      from_userpart: response[i].from_userpart,\r\n      timeofevent: getNewDate(response[i].timeofevent.split(' ')[0]) + ' ' + response[i].timeofevent.split(' ')[1],\r\n      count: response[i].count,\r\n      display_name: response[i].display_name,\r\n    });\r\n  }\r\n  // response.map(resp => {\r\n  //   res.push({\r\n  //     from_userpart: resp.from_userpart,\r\n  //     timeofevent: getNewDate(resp.timeofevent.split(' ')[0]) + ' ' + resp.timeofevent.split(' ')[1],\r\n  //     count: resp.count,\r\n  //     display_name: resp.display_name,\r\n  //   });\r\n  // });\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {res.length > 0 && (\r\n        <div style={{ textAlign: 'right', marginBottom: '15px', marginRight: '25px' }}>\r\n          <Button\r\n            style={{ backgroundColor: '#3f51b5', color: 'white', marginRight: '10px' }}\r\n            onClick={() => {\r\n              setOpen(!open);\r\n            }}>\r\n            {open ? <IntlMessages id={'abondenedcalls.hidedetails'} /> : <IntlMessages id={'abondenedcalls.showdetails'} />}\r\n          </Button>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Abondened_calls'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cevaplanmayan_cagrilar'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Verlaten oproepen'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Abgebrochene Anrufe'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={res} name=\"res\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Time of Event'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Etkinlik Zamanı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Tijd van evenement'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zeitpunkt des Ereignisses'\r\n                    : ''\r\n                }\r\n                value=\"timeofevent\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'From'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kimden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Van'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Von'\r\n                    : ''\r\n                }\r\n                value=\"from_userpart\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Display Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ekran adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Weergavenaam'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzeigename'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Adet'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Graaf'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column,index) => (\r\n                  <TableCell key={index} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {res.map((row, index) => {\r\n                return detail[index] !== undefined ? (\r\n                  detail[index].data !== undefined &&\r\n                  detail[index].data.length > 0 &&\r\n                  (color === 'Green' || color === '') ? (\r\n                    <>\r\n                      <TableRow style={{ backgroundColor: '#4E9F3D' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n\r\n                      {open && (\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            <Collapse in={true}>\r\n                              <Box sx={{ margin: 1 }}>\r\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                  <IntlMessages id={'abondenedcalls.detail'} />\r\n                                </Typography>\r\n                                <Table size=\"medium\">\r\n                                  <TableHead>\r\n                                    <TableRow>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.diraction'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.srcdn'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.dststarttime'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.dstendtime'} />\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <IntlMessages id={'abondenedcalls.time'} />\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  </TableHead>\r\n                                  <TableBody>\r\n                                    {detail[index].data.map(deta => (\r\n                                      <TableRow>\r\n                                        <TableCell>\r\n                                          {deta.direction === '-->' ? (\r\n                                            <span\r\n                                              style={{\r\n                                                padding: '5px',\r\n                                                backgroundColor: '#4E9F3D',\r\n                                                color: '#125C13',\r\n                                                borderRadius: '10px',\r\n                                                fontWeight: '600',\r\n                                              }}>\r\n                                              <IntlMessages id={'incomingcall'} />\r\n                                            </span>\r\n                                          ) : (\r\n                                            <span\r\n                                              style={{\r\n                                                padding: '5px',\r\n                                                backgroundColor: '#FF7777',\r\n                                                color: '#852747',\r\n                                                borderRadius: '10px',\r\n                                                fontWeight: '600',\r\n                                              }}>\r\n                                              <IntlMessages id={'outgoingcall'} />\r\n                                            </span>\r\n                                          )}\r\n                                        </TableCell>\r\n                                        <TableCell>{deta.src_dn}</TableCell>\r\n                                        <TableCell>{deta.dst_start_time}</TableCell>\r\n                                        <TableCell>{deta.dst_end_time}</TableCell>\r\n                                        <TableCell>{deta.calltime}</TableCell>\r\n                                      </TableRow>\r\n                                    ))}\r\n                                  </TableBody>\r\n                                </Table>\r\n                              </Box>\r\n                            </Collapse>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    (color === 'Red' || color === '') && (\r\n                      <TableRow style={{ backgroundColor: '#FF5C58' }} hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    )\r\n                  )\r\n                ) : null;\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Alert, Stack } from '@mui/material';\r\n\r\nexport default function AbondenedCalls() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'abondenedcalls'} />, isActive: true },\r\n  ];\r\n  const today = new Date();\r\n  const yesterday = new Date();\r\n  yesterday.setDate(today.getDate() - 1);\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [queue,setQueue] = useState('')\r\n\r\n  let [params, setParams] = useState({\r\n    startDate: formatDate(today),\r\n    endDate: formatDate(today),\r\n  });\r\n\r\n  const [color, setColor] = useState('');\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'abondenedcalls'} />} breadcrumbs={breadcrumbs}>\r\n      <GridContainer>\r\n        <Grid item xs={12}>\r\n          <Filter setParams={setParams} setColor={setColor} color={color} queue={queue} setQueue={setQueue} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table params={params} color={color} queue={queue}/>\r\n        </Grid>\r\n      </GridContainer>\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Stack sx={{ width: '100%' }} spacing={2}>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.red'} />\r\n          </Alert>\r\n          <Alert severity=\"info\">\r\n            <IntlMessages id={'abondenedcalls.info.green'} />\r\n          </Alert>\r\n        </Stack>\r\n      </div>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Button, Card, CardActions, CardContent, Grid } from '@material-ui/core';\r\nimport { DateTimePicker } from '@material-ui/pickers';\r\nimport React from 'react';\r\n\r\nexport default function AgentCdrRportFilter() {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"Start Time\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DateTimePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY HH:mm\"\r\n                label=\"End Time\"\r\n              />\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <Button>Search</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AgentCdrReportTable() {\r\n  return <div />;\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React from 'react';\r\nimport AgentCdrRportFilter from './Filter';\r\nimport AgentCdrReportTable from './Table';\r\n\r\nexport default function AgentCdrReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'Agent CDR Report'} />, isActive: true },\r\n  ];\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'Agent CDR Report'} />} breadcrumbs={breadcrumbs}>\r\n        <AgentCdrRportFilter />\r\n        <AgentCdrReportTable />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function DailySummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { getDailySummary, getDailySummaryTotal } from 'api/api';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport DailySummaryDateFilter from './DateFilter';\r\n\r\nexport default function DailySummaryReportFilter({ setData, setDataTotal }) {\r\n  // function checkBetween(startDate, endDate) {\r\n  //   if (Math.round((new Date(endDate).getTime() - new Date(startDate).getTime()) / 1000 / 60 / 60 / 24) <= 30) {\r\n  //     return true;\r\n  //   } else return false;\r\n  // }\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n\r\n  // const handleStartTimeChange = event => {\r\n  //   setStartTime(formatDate(event._d));\r\n  // };\r\n  // const handleEndTimeChange = event => {\r\n  //   setEndTime(formatDate(event._d));\r\n  // };\r\n\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n        setLoading(true);\r\n        getDailySummary(startTime, endTime).then(response => {\r\n          setData(JSON.parse(response.data.data));\r\n          setLoading(false);\r\n        });\r\n\r\n        getDailySummaryTotal(startTime, endTime).then(response => {\r\n          setDataTotal(JSON.parse(response.data.data));\r\n          setLoading(false);\r\n        });\r\n  }, [startTime, endTime, setData, setDataTotal]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <DailySummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      {/* <GridContainer>\r\n            <Grid item md={3}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                format=\"DD-MM-YYYY\"\r\n                maxDate={endTime}\r\n                label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                value={startTime}\r\n                onChange={handleStartTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <DatePicker\r\n                style={{ width: '100%' }}\r\n                ampm={false}\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                minDate={startTime}\r\n                format=\"DD-MM-YYYY\"\r\n                label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                value={endTime}\r\n                onChange={handleEndTimeChange}\r\n              />\r\n            </Grid>\r\n          </GridContainer> */}\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDailySummaryModalTotalCall } from 'api/api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TotalCallModal({ date, handleTotalCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTotalCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTotalCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAnsweredCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AnsweredCallModal({ date, handleAnsweredCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAnsweredCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAnsweredCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalAbondenedCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AbondenedCallModal({ date, handleAbondenedCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalAbondenedCall(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleAbondenedCallClose()}>\r\n          CLOSE\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalTransferCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TransferCallModal({ date, handleTransferCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalTransferCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transferer'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.transfered'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.answertime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.caller}</TableCell>\r\n                <TableCell>{item.transferer}</TableCell>\r\n                <TableCell>{item.trasfered}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.answer_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleTransferCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutOfTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function OutOfTimeModal({ date, handleOutOfTimeClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutOfTime(date).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutOfTimeClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalRonaCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function RonaCallModla({ date, handleRonaCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalRonaCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleRonaCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getDailySummaryModalOutCall } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function OutCallModal({ date, handleOutCallClose }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getDailySummaryModalOutCall(date).then(response => {\r\n      setData(JSON.parse(response.data.data));\r\n      console.log(JSON.parse(response.data.data));\r\n    });\r\n  }, [date]);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{ height: '600px' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.caller'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.called'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.starttime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.endtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.ringtime'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'dailysummary.modal.talktime'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(item => (\r\n              <TableRow>\r\n                <TableCell>{item.src_display_name}</TableCell>\r\n                <TableCell>{item.dst_display_name}</TableCell>\r\n                <TableCell>{item.start_time}</TableCell>\r\n                <TableCell>{item.end_time}</TableCell>\r\n                <TableCell>{item.ring_time}</TableCell>\r\n                <TableCell>{item.talk_time}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => handleOutCallClose()}>\r\n          Kapat\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport TransferWithinAStationIcon from '@mui/icons-material/TransferWithinAStation';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport TotalCallModal from '../Modals/TotalCallModal';\r\nimport { Box, Modal } from '@mui/material';\r\nimport AnsweredCallModal from '../Modals/AnsweredCallModal';\r\nimport AbondenedCallModal from '../Modals/AbondenedCallModal';\r\nimport TransferCallModal from '../Modals/TransferCallModal';\r\nimport OutOfTimeModal from '../Modals/OutOfTimeModal';\r\nimport RonaCallModla from '../Modals/RonaCallModla';\r\nimport OutCallModal from '../Modals/OutCallModal';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n\r\nexport default function DailySummaryReportTable({ data, dataTotal }) {\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    datetime: formatDate(dataUnit.datetime),\r\n    totalcall: dataUnit.totalcall,\r\n    answered: dataUnit.answered,\r\n    inboundtime: dataUnit.inboundtime,\r\n    waitingtime: dataUnit.waitingtime,\r\n    averageconnection: dataUnit.averageconnection,\r\n    abondened: dataUnit.abondened,\r\n    transfer: dataUnit.transfer,\r\n    long_time: dataUnit.long_time,\r\n    zdisi: dataUnit.zdisi,\r\n    average_abondened_waiting: dataUnit.average_abondened_waiting,\r\n    rona: dataUnit.rona,\r\n    outbound: dataUnit.outbound,\r\n    outbound_time: dataUnit.outbound_time,\r\n    average_outbound_time: dataUnit.average_outbound_time,\r\n  }));\r\n\r\n  let currentLanguage = useIntl();\r\n\r\n  let dataGridRows = data.map((row, index) => ({\r\n    id: index,\r\n    date: getNewDate(row.datetime.split(' ')[0]),\r\n    totalCall: parseInt(row.totalcall),\r\n    answered: parseInt(row.answered),\r\n    inboundTime: row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    waitingTime: row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    averageTime: row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    abondened: parseInt(row.abondened),\r\n    transfer: parseInt(row.transfer),\r\n    longestTime: row.long_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outOfTime: parseInt(row.zdisi),\r\n    averageAbondenedWaiting: row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    rona: parseInt(row.rona),\r\n    outbound: parseInt(row.outbound),\r\n    outboundTotalTime: row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n    outboundAverageTime: row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's',\r\n  }));\r\n\r\n  const [totalCallModalOpen, setTotalCallOpen] = useState(false);\r\n  const [totalCallDate, setTotalCallDate] = useState('');\r\n  const handleTotalCallOpen = () => setTotalCallOpen(true);\r\n  const handleTotalCallClose = () => setTotalCallOpen(false);\r\n  const handleTotalCallClick = date => {\r\n    setTotalCallDate(date);\r\n    handleTotalCallOpen();\r\n  };\r\n  const [answeredCallModalOpen, setAnsweredCallOpen] = useState(false);\r\n  const [answeredCallDate, setAnsweredCallDate] = useState('');\r\n  const handleAnsweredCallOpen = () => setAnsweredCallOpen(true);\r\n  const handleAnsweredCallClose = () => setAnsweredCallOpen(false);\r\n  const handleAnsweredCallClick = date => {\r\n    setAnsweredCallDate(date);\r\n    handleAnsweredCallOpen();\r\n  };\r\n  const [abondenedCallModalOpen, setAbondenedCallOpen] = useState(false);\r\n  const [abondenedCallDate, setAbondenedCallDate] = useState('');\r\n  const handleAbondenedCallOpen = () => setAbondenedCallOpen(true);\r\n  const handleAbondenedCallClose = () => setAbondenedCallOpen(false);\r\n  const handleAbondenedCallClick = date => {\r\n    setAbondenedCallDate(date);\r\n    handleAbondenedCallOpen();\r\n  };\r\n  const [transferCallModalOpen, setTransferCallOpen] = useState(false);\r\n  const [transferCallDate, setTransferCallDate] = useState('');\r\n  const handleTransferCallOpen = () => setTransferCallOpen(true);\r\n  const handleTransferCallClose = () => setTransferCallOpen(false);\r\n  const handleTransferCallClick = date => {\r\n    setTransferCallDate(date);\r\n    handleTransferCallOpen();\r\n  };\r\n\r\n  const [outOfTimeModalOpen, setOutOfTimeModalOpen] = useState(false);\r\n  const [outOfTimeDate, setOutOfTimeDate] = useState('');\r\n  const handleOutOfTimeOpen = () => setOutOfTimeModalOpen(true);\r\n  const handleOutOfTimeClose = () => setOutOfTimeModalOpen(false);\r\n  const handleOutOfTimeClick = date => {\r\n    setOutOfTimeDate(date);\r\n    handleOutOfTimeOpen();\r\n  };\r\n  const [ronaCallModalOpen, setRonaCallOpen] = useState(false);\r\n  const [ronaCallDate, setRonaCallDate] = useState('');\r\n  const handleRonaCallOpen = () => setRonaCallOpen(true);\r\n  const handleRonaCallClose = () => setRonaCallOpen(false);\r\n  const handleRonaCallClick = date => {\r\n    setRonaCallDate(date);\r\n    handleRonaCallOpen();\r\n  };\r\n  const [outCallModalOpen, setOutCallOpen] = useState(false);\r\n  const [outCallDate, setOutCallDate] = useState('');\r\n  const handleOutCallOpen = () => setOutCallOpen(true);\r\n  const handleOutCallClose = () => setOutCallOpen(false);\r\n  const handleOutCallClick = date => {\r\n    setOutCallDate(date);\r\n    handleOutCallOpen();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'dailysummary.date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span>\r\n          <CalendarTodayIcon style={{ verticalAlign: '-5px', color: '#6998AB' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'totalCall',\r\n      headerName: <IntlMessages id={'dailysummary.totalcall'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTotalCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n          <b style={{ color: '#406882' }}>{params.row.totalCall}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered',\r\n      headerName: <IntlMessages id={'dailysummary.answered'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAnsweredCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer' }}>\r\n          <PermPhoneMsgIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n          <b style={{ color: '#519259' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'inboundTime',\r\n      headerName: <IntlMessages id={'dailysummary.inboundtime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'waitingTime',\r\n      headerName: <IntlMessages id={'dailysummary.waitingtime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageTime',\r\n      headerName: <IntlMessages id={'dailysummary.avaragetime'} />,\r\n      width: 190,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'abondened',\r\n      headerName: <IntlMessages id={'dailysummary.abondened'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleAbondenedCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#DD4A48' }}>\r\n          <PersonOffIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'transfer',\r\n      headerName: <IntlMessages id={'dailysummary.transfer'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleTransferCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ cursor: 'pointer', color: '#396EB0' }}>\r\n          <TransferWithinAStationIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'longestTime',\r\n      headerName: <IntlMessages id={'dailysummary.longesttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outOfTime',\r\n      headerName: <IntlMessages id={'dailysummary.outoftime'} />,\r\n      width: 230,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutOfTimeClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'averageAbondenedWaiting',\r\n      headerName: <IntlMessages id={'dailysummary.averageabondenedwaiting'} />,\r\n      width: 260,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rona',\r\n      headerName: <IntlMessages id={'dailysummary.rona'} />,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleRonaCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#C85C5C', cursor: 'pointer' }}>\r\n          <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outbound',\r\n      headerName: <IntlMessages id={'dailysummary.outboundcount'} />,\r\n      width: 170,\r\n      renderCell: params => (\r\n        <span\r\n          onClick={() =>\r\n            handleOutCallClick(\r\n              params.row.date.split('-')[2] + '-' + params.row.date.split('-')[1] + '-' + params.row.date.split('-')[0],\r\n            )\r\n          }\r\n          style={{ color: '#519259', cursor: 'pointer' }}>\r\n          <CallIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundTotalTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundtotaltime'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'outboundAverageTime',\r\n      headerName: <IntlMessages id={'dailysummary.outboundaveragetime'} />,\r\n      width: 220,\r\n      renderCell: params => (\r\n        <span style={{ color: '#DB6B97' }}>\r\n          <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      {csvData.length > 0 && (\r\n        <div style={{ marginBottom: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Daily_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Gunluk_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Dagelijkse samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Tägliche Zusammenfassung'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"datetime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Çağrı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal gesprek'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anruf insgesamt'\r\n                    : ''\r\n                }\r\n                value=\"totalcall\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Inbound Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Gelen Çağrı Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomende tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingangszeit'\r\n                    : ''\r\n                }\r\n                value=\"inboundtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Waiting Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Bekleme Süresi Toplamı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Wachttijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Wartezeit'\r\n                    : ''\r\n                }\r\n                value=\"waitingtime\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Zeit'\r\n                    : ''\r\n                }\r\n                value=\"averageconnection\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Abandoned'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Terkeden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Verlaten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Verlassen'\r\n                    : ''\r\n                }\r\n                value=\"abondened\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Transfer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Transfer'\r\n                    : ''\r\n                }\r\n                value=\"transfer\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Longest Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'En uzun süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Langste tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Längste Zeit'\r\n                    : ''\r\n                }\r\n                value=\"long_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Out Of Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Kuyruk dışı taşanlar'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Geen tijd meer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Außerhalb der Zeit'\r\n                    : ''\r\n                }\r\n                value=\"zdisi\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Average Abadoned Waiting'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Terkeden Bekleme'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddeld verlaten wachten'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliches verlassenes Warten'\r\n                    : ''\r\n                }\r\n                value=\"average_abondened_waiting\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Rona'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Rona'\r\n                    : ''\r\n                }\r\n                value=\"rona\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı Sayısı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande telling'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehender Zähler'\r\n                    : ''\r\n                }\r\n                value=\"outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Total Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden Çağrı toplam süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande totale tijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend Gesamtzeit'\r\n                    : ''\r\n                }\r\n                value=\"outbound_time\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  currentLanguage.locale === 'en-EN'\r\n                    ? 'Outbound Average Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Giden çağrı ortalama süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde tijd uitgaan'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche ausgehende Zeit'\r\n                    : ''\r\n                }\r\n                value=\"average_outbound_time\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginBottom: '15px' }}>\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={dataGridRows}\r\n            columns={columns}\r\n            hideFooter\r\n            localeText={localeText}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <Card>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.totalcall'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.answered'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.inboundtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.waitingtime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 190 }}>\r\n                  <IntlMessages id={'dailysummary.avaragetime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.abondened'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.transfer'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 150 }}>\r\n                  <IntlMessages id={'dailysummary.longesttime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 230 }}>\r\n                  <IntlMessages id={'dailysummary.outoftime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 260 }}>\r\n                  <IntlMessages id={'dailysummary.averageabondenedwaiting'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto' }}>\r\n                  <IntlMessages id={'dailysummary.rona'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 170 }}>\r\n                  <IntlMessages id={'dailysummary.outboundcount'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 200 }}>\r\n                  <IntlMessages id={'dailysummary.outboundtotaltime'} />\r\n                </TableCell>\r\n                <TableCell style={{ fontWeight: '800', fontFamily: 'Roboto', minWidth: 220 }}>\r\n                  <IntlMessages id={'dailysummary.outboundaveragetime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {data.map(row => (\r\n                <TableRow>\r\n                  <TableCell>{getNewDate(row.datetime.split(' ')[0])}</TableCell>\r\n                  <TableCell>{row.totalcall}</TableCell>\r\n                  <TableCell>{row.answered}</TableCell>\r\n                  <TableCell>{row.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.abondened}</TableCell>\r\n                  <TableCell>{row.transfer}</TableCell>\r\n                  <TableCell>{row.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.zdisi}</TableCell>\r\n                  <TableCell>{row.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.rona}</TableCell>\r\n                  <TableCell>{row.outbound}</TableCell>\r\n                  <TableCell>{row.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{row.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))} */}\r\n              {dataTotal.map((data,index) => (\r\n                <TableRow key={index} style={{ backgroundColor: '#80ED99' }}>\r\n                  <TableCell>\r\n                    {' '}\r\n                    <IntlMessages id={'total'} />{' '}\r\n                  </TableCell>\r\n                  <TableCell>{data.totalcall}</TableCell>\r\n                  <TableCell>{data.answered}</TableCell>\r\n                  <TableCell>{data.inboundtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.waitingtime.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.averageconnection.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.abondened}</TableCell>\r\n                  <TableCell>{data.transfer}</TableCell>\r\n                  <TableCell>{data.long_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.zdisi}</TableCell>\r\n                  <TableCell>{data.average_abondened_waiting.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.rona}</TableCell>\r\n                  <TableCell>{data.outbound}</TableCell>\r\n                  <TableCell>{data.outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                  <TableCell>{data.average_outbound_time.replace(':', 'h ').replace(':', 'm ') + 's'}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n      <Modal\r\n        open={totalCallModalOpen}\r\n        onClose={handleTotalCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TotalCallModal date={totalCallDate} handleTotalCallClose={handleTotalCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={answeredCallModalOpen}\r\n        onClose={handleAnsweredCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AnsweredCallModal date={answeredCallDate} handleAnsweredCallClose={handleAnsweredCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={abondenedCallModalOpen}\r\n        onClose={handleAbondenedCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AbondenedCallModal date={abondenedCallDate} handleAbondenedCallClose={handleAbondenedCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outOfTimeModalOpen}\r\n        onClose={handleOutOfTimeClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutOfTimeModal date={outOfTimeDate} handleOutOfTimeClose={handleOutOfTimeClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={ronaCallModalOpen}\r\n        onClose={handleRonaCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <RonaCallModla date={ronaCallDate} handleRonaCallClose={handleRonaCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={transferCallModalOpen}\r\n        onClose={handleTransferCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <TransferCallModal date={transferCallDate} handleTransferCallClose={handleTransferCallClose} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={outCallModalOpen}\r\n        onClose={handleOutCallClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <OutCallModal date={outCallDate} handleOutCallClose={handleOutCallClose} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DailySummaryReportFilter from './Filter';\r\nimport DailySummaryReportTable from './Table';\r\n\r\nexport default function DailySumaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'dailysummary'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  let [dataTotal, setDataTotal] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'dailysummary'} />} breadcrumbs={breadcrumbs}>\r\n        <DailySummaryReportFilter setData={setData} setDataTotal={setDataTotal} />\r\n        <DailySummaryReportTable data={data} dataTotal={dataTotal} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\n\r\nexport default function InternalSummaryDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { getAgentNumber, getInternalsSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InternalSummaryDateFilter from './DateFilter';\r\n\r\nexport default function InternalsSummaryReportFilter({ setData, startTime, setStartTime, endTime, setEndTime, direction, setDirection }) {\r\n  let [agents, setAgents] = useState([]);\r\n  let [seletAgent, setSelectAgent] = useState(\"\");\r\n  const handleChangeAgentSelect = event => {\r\n    setSelectAgent(event.target.value === 'all' ? '' : event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAgentNumber().then(response => {\r\n      setAgents(JSON.parse(response.data.data));\r\n    });\r\n  }, []);\r\n\r\n  let [loading, setLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n        setLoading(true);\r\n        getInternalsSummary(startTime, endTime, seletAgent).then(result => {\r\n          let filtered = JSON.parse(result.data.data).filter((item)=> (\r\n            direction === \"all\" ? item :\r\n            direction === \"inbound\" ? parseInt(item.total_inbound) > 0 : parseInt(item.total_outbound) > 0\r\n          ));\r\n          setData(filtered);\r\n          setLoading(false);\r\n        });\r\n  }, [startTime, endTime, seletAgent, setData,direction]);\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <div style={{ marginBlock: '10px' }}>\r\n        <InternalSummaryDateFilter setStartTimeApi={setStartTime} setEndTimeApi={setEndTime} />\r\n      </div>\r\n\r\n      <Card>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"agent-select-label\">\r\n                  <IntlMessages id={'internals.summary.agent'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"agent-select-label\"\r\n                  id=\"agent-select\"\r\n                  value={seletAgent}\r\n                  onChange={handleChangeAgentSelect}\r\n                  label={<IntlMessages id={'internals.summary.agent'} />}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'all'} />\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.dn}>\r\n                      {agent.dn} - {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"direction-select-label\">\r\n                  <IntlMessages id={'direction'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"direction-select-label\"\r\n                  id=\"direction-select\"\r\n                  value={direction}\r\n                  onChange={(e)=> setDirection(e.target.value)}\r\n                  label={<IntlMessages id={'direction'} />}>\r\n                  <MenuItem value='all'>\r\n                    <IntlMessages id={'alltimes'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"inbound\">\r\n                    <IntlMessages id={'dashboard.inbound'} />\r\n                    </MenuItem>\r\n                  <MenuItem value=\"outbound\">\r\n                    <IntlMessages id={'dashboard.outbound'} />\r\n                    </MenuItem>\r\n\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n      {loading && (\r\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, Card, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { CloudDownload, ArrowForward, ArrowBack, Person, PhoneMissed, PhoneInTalk, Phone } from '@material-ui/icons';\r\nimport { DataGrid, GridToolbarFilterButton } from '@mui/x-data-grid';\r\nimport { useScreenshot, createFileName } from 'use-react-screenshot';\r\nimport {\r\n  getInternalsSummaryLongestCalled,\r\n  getInternalsSummaryLongestCaller,\r\n  getInternalsSummaryLongestCalledAmount,\r\n  getInternalsSummaryLongestCallerAmount,\r\n  getInternalBreakTime,\r\n} from 'api/api';\r\nimport React, { createRef, useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\n// import CallIcon from '@mui/icons-material/Call';\r\n\r\nexport default function InternalsSummaryReportTable({ data, startTime, endTime, direction }) {\r\n  let [selectedAgent, setSelectedAgent] = useState('');\r\n  const handleAgentClick = agentNum => {\r\n    setSelectedAgent(agentNum);\r\n    handleOpenModal();\r\n  };\r\n\r\n  let [modalOpen, setModalOpen] = useState(false);\r\n  const handleOpenModal = () => setModalOpen(true);\r\n  const handleCloseModal = () => setModalOpen(false);\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '90%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  let [longestCalleds, setLongestCalleds] = useState([]);\r\n  let [longestCallers, setLongestCallers] = useState([]);\r\n  let [longestCalledAmount, setLongestAmount] = useState([]);\r\n  let [longestCallerAmount, setLongestCallerAmount] = useState([]);\r\n  let [longestBreakTime, setLongestBreakTime] = useState([]);\r\n  useEffect(() => {\r\n    if (selectedAgent !== '') {\r\n      getInternalsSummaryLongestCalled(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCalleds(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCaller(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallers(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCalledAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestAmount(JSON.parse(result.data.data));\r\n      });\r\n      getInternalsSummaryLongestCallerAmount(startTime, endTime, selectedAgent).then(result => {\r\n        setLongestCallerAmount(JSON.parse(result.data.data));\r\n      });\r\n\r\n      getInternalBreakTime(selectedAgent, startTime, endTime).then(result => {\r\n        setLongestBreakTime(JSON.parse(result.data.data));\r\n      });\r\n    }\r\n  }, [selectedAgent, startTime, endTime]);\r\n\r\n  let csvData = data.map(dataUnit => ({\r\n    details: dataUnit.id,\r\n    id: dataUnit.id,\r\n    display_name: dataUnit.display_name,\r\n    total_inbound: parseInt(dataUnit.total_inbound),\r\n    answered_inbound: parseInt(dataUnit.answered_inbound),\r\n    unanswered_inbound: dataUnit.total_inbound - dataUnit.answered_inbound,\r\n    total_outbound: parseInt(dataUnit.total_outbound),\r\n    answered_outbound: parseInt(dataUnit.answered_outbound),\r\n    unanswered_outbound: dataUnit.total_outbound - dataUnit.answered_outbound,\r\n  }));\r\n  let curentLanguage = useIntl();\r\n  const columns = [\r\n    {\r\n      field: 'details',\r\n      headerName: <IntlMessages id={'details'} />,\r\n      renderCell: params => (\r\n        <span onClick={() => handleAgentClick(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF5959', verticalAlign: '-5px' }} />{' '}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'id',\r\n      headerName: <IntlMessages id={'agentnumber'} />,\r\n      width: 200,\r\n      renderCell: params => (\r\n        <span>\r\n          <b style={{ color: '#406882' }}>{params.value}</b>\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'display_name',\r\n      headerName: <IntlMessages id={'agentname'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span>\r\n          <span style={{ verticalAlign: '-5px', color: '#5584AC' }}>\r\n            <Person />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_inbound',\r\n      headerName: <IntlMessages id={'totalinbound'} />,\r\n      width: 225,\r\n      hide: direction === \"outbound\",\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_inbound',\r\n      headerName: <IntlMessages id={'answeredinbound'} />,\r\n      width: 220,\r\n      hide: direction === \"outbound\",\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_inbound',\r\n      headerName: <IntlMessages id={'unansweredinbound'} />,\r\n      width: 260,\r\n      hide: direction === \"outbound\",\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowForward />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'total_outbound',\r\n      headerName: <IntlMessages id={'totaloutbound'} />,\r\n      width: 225,\r\n      hide: direction === \"inbound\",\r\n      renderCell: params => (\r\n        <span style={{ color: '#5584AC' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <Phone />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'answered_outbound',\r\n      headerName: <IntlMessages id={'answeredoutbound'} />,\r\n      width: 220,\r\n      hide: direction === \"inbound\",\r\n      renderCell: params => (\r\n        <span style={{ color: '#519259' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneInTalk />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'unanswered_outbound',\r\n      headerName: <IntlMessages id={'unansweredoutbound'} />,\r\n      width: 260,\r\n      hide: direction === \"inbound\",\r\n      renderCell: params => (\r\n        <span style={{ color: '#A3423C' }}>\r\n          <span style={{ verticalAlign: '-5px' }}>\r\n            <ArrowBack />\r\n            <PhoneMissed />\r\n          </span>{' '}\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const ref = createRef(null);\r\n  const [, takeScreenShot] = useScreenshot({\r\n    type: 'image/jpeg',\r\n    quality: 1.0,\r\n  });\r\n\r\n  const download = (image, { name = selectedAgent, extension = 'jpg' } = {}) => {\r\n    const a = document.createElement('a');\r\n    a.href = image;\r\n    a.download = createFileName(extension, name);\r\n    a.click();\r\n  };\r\n\r\n  const downloadScreenshot = () => takeScreenShot(ref.current).then(download);\r\n\r\n  return (\r\n    <>\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '20px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'ınternal_summary_report'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'dahili özet raporu'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'ıintern samenvattend rapport'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'interner zusammenfassender Bericht'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={csvData} name=\"Data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Number'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Numarası'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Agent nummer'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentennummer'\r\n                    : ''\r\n                }\r\n                value=\"id\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Agent Name'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Agent Adı'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Naam agent'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Agentenname'\r\n                    : ''\r\n                }\r\n                value=\"display_name\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamteingang'\r\n                    : ''\r\n                }\r\n                value=\"total_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Inkomend beantwoord'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Eingehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Inbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Gelen'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord Inkomend'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantworteter Eingang'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_inbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamt ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"total_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanan Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Uitgaande beantwoording'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Ausgehend beantwortet'\r\n                    : ''\r\n                }\r\n                value=\"answered_outbound\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Outbound'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevapsız Giden'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Onbeantwoord uitgaand'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Unbeantwortet ausgehend'\r\n                    : ''\r\n                }\r\n                value=\"unanswered_outbound\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n      <Card style={{ marginTop: '20px', height: '700px' }}>\r\n        <DataGrid\r\n          rows={csvData}\r\n          columns={columns}\r\n          pageSize={100}\r\n          rowsPerPageOptions={[100]}\r\n          components={{ Toolbar: GridToolbarFilterButton }}\r\n          localeText={localeText}\r\n        />\r\n        {/* <TableContainer style={{ maxHeight: '40vh' }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.agentnumber'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.agentname'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.totalinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.answeredinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.unansweredinbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.totaloutbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.answeredoutbound'} />\r\n                </TableCell>\r\n                <TableCell style={{ textAlign: 'center' }}>\r\n                  <IntlMessages id={'internalssummary.unansweredoutbound'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((dataunit, index) => (\r\n                <TableRow\r\n                  style={{\r\n                    backgroundColor: dataunit.dn === selectedAgent ? '#D1E8E4' : '',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  key={index}>\r\n                  <TableCell onClick={() => handleAgentClick(dataunit.dn)} style={{ padding: '7px', textAlign: 'center' }}>\r\n                    <Person fontSize=\"small\" style={{ verticalAlign: '-5px' }} style={{ color: '#396EB0' }} /> {dataunit.dn}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleAgentClick(dataunit.dn)} style={{ padding: '7px', textAlign: 'center' }}>\r\n                    <Person fontSize=\"small\" style={{ verticalAlign: '-5px' }} style={{ color: '#396EB0' }} />{' '}\r\n                    {dataunit.display_name}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#009DAE' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <AddCircle fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> {dataunit.total_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#34BE82' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <Call fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    {dataunit.answered_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#FF5151' }}>\r\n                    <ArrowForward fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <CallEnd fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    {dataunit.total_inbound - dataunit.answered_inbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#009DAE' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <AddCircle fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> {dataunit.total_outbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#34BE82' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <Call fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    {dataunit.answered_outbound}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAgentClick(dataunit.dn)}\r\n                    style={{ padding: '7px', textAlign: 'center', color: '#FF5151' }}>\r\n                    <ArrowBack fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                    <CallEnd fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    {dataunit.total_outbound - dataunit.answered_outbound}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer> */}\r\n      </Card>\r\n\r\n      <Modal\r\n        open={modalOpen}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <div style={{ padding: '10px' }} ref={ref}>\r\n            <GridContainer>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcalledtime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined ? longestCalleds[0].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[0] !== undefined\r\n                            ? longestCalleds[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined ? longestCalleds[1].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[1] !== undefined\r\n                            ? longestCalleds[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined ? longestCalleds[2].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[2] !== undefined\r\n                            ? longestCalleds[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined ? longestCalleds[3].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[3] !== undefined\r\n                            ? longestCalleds[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined ? longestCalleds[4].en_uzun_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalleds[4] !== undefined\r\n                            ? longestCalleds[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestcallertime'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined ? longestCallers[0].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[0] !== undefined\r\n                            ? longestCallers[0].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined ? longestCallers[1].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[1] !== undefined\r\n                            ? longestCallers[1].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined ? longestCallers[2].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[2] !== undefined\r\n                            ? longestCallers[2].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined ? longestCallers[3].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[3] !== undefined\r\n                            ? longestCallers[3].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined ? longestCallers[4].en_uzun_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallers[4] !== undefined\r\n                            ? longestCallers[4].en_uzun_aranan_süre\r\n                                .toString()\r\n                                .replace(':', 'h ')\r\n                                .replace(':', 'm ') + 's'\r\n                            : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalledamount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callednumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[0] !== undefined ? longestCalledAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[1] !== undefined ? longestCalledAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[2] !== undefined ? longestCalledAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[3] !== undefined ? longestCalledAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].en_cok_aranan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCalledAmount[4] !== undefined ? longestCalledAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={3} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.mostcalleramount'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.amount'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[0] !== undefined ? longestCallerAmount[0].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[1] !== undefined ? longestCallerAmount[1].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[2] !== undefined ? longestCallerAmount[2].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[3] !== undefined ? longestCallerAmount[3].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].en_cok_arayan_numara : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestCallerAmount[4] !== undefined ? longestCallerAmount[4].count : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <Grid item md={4}></Grid>\r\n              <Grid item md={4} style={{ borderLeft: '1px solid #d1d1d1', borderRight: '1px solid #d1d1d1' }}>\r\n                <p style={{ textAlign: 'center', fontWeight: '600', fontSize: '16px' }}>\r\n                  <IntlMessages id={'internalssummary.longestbreaketimes'} />\r\n                </p>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.callernumber'} />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IntlMessages id={'internalssummary.time'} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[0] !== undefined ? longestBreakTime[0].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[1] !== undefined ? longestBreakTime[1].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[2] !== undefined ? longestBreakTime[2].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[3] !== undefined ? longestBreakTime[3].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].name : '-'}\r\n                        </TableCell>\r\n                        <TableCell style={{ padding: '7px' }}>\r\n                          {longestBreakTime[4] !== undefined ? longestBreakTime[4].to_char : '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item md={4}></Grid>\r\n            </GridContainer>\r\n          </div>\r\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white', marginRight: '10px' }} onClick={downloadScreenshot}>\r\n              <IntlMessages id={'dowlandimage'} />\r\n            </Button>\r\n            <Button style={{ backgroundColor: '#2978B5', color: 'white' }} onClick={() => handleCloseModal()}>\r\n              <IntlMessages id={'close'} />\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport InternalsSummaryReportFilter from './Filter';\r\nimport InternalsSummaryReportTable from './Table';\r\n\r\nexport default function InternalsSummaryReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'internalssummary'} />, isActive: true },\r\n  ];\r\n  const formatDate = date => {\r\n    let d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    let year = d.getFullYear();\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n\r\n    if (month < 10) month = '0' + month;\r\n    if (day < 10) day = '0' + day;\r\n    if (hour < 10) hour = '0' + hour;\r\n    if (min < 10) min = '0' + min;\r\n\r\n    return year + '-' + month + '-' + day;\r\n  };\r\n\r\n  let [data, setData] = useState([]);\r\n  let [startTime, setStartTime] = useState(formatDate(new Date()));\r\n  let [endTime, setEndTime] = useState(formatDate(new Date()));\r\n  const [direction,setDirection] = useState(\"all\");\r\n\r\n  return (\r\n    <PageContainer heading={<IntlMessages id={'internalssummary'} />} breadcrumbs={breadcrumbs}>\r\n      <InternalsSummaryReportFilter\r\n        setData={setData}\r\n        startTime={startTime}\r\n        setStartTime={setStartTime}\r\n        endTime={endTime}\r\n        setEndTime={setEndTime}\r\n        direction={direction}\r\n        setDirection={setDirection}\r\n      />\r\n      <InternalsSummaryReportTable data={data} startTime={startTime} endTime={endTime} direction={direction} />\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallLog2DateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport PhoneForwardedIcon from '@mui/icons-material/PhoneForwarded';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport AccessTime from '@mui/icons-material/AccessTime';\r\nexport default function CallLog2therFilters({\r\n  setSourceApi,\r\n  setDestinationApi,\r\n  setSourceFilterText,\r\n  setDestinationFilterText,\r\n  setAnswerStatus,\r\n  setDuration,\r\n}) {\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n\r\n  let [sourceSelect, setSourceSelect] = useState('');\r\n  const handleChangeSourceSelect = event => {\r\n    setSourceSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setSourceApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setSourceApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setSourceApi('0');\r\n    }\r\n  };\r\n  let [sourceFilterSelect, setSourceFilterSelect] = useState('');\r\n  let [sourceFilterTextValue, setSourceFilterTextValue] = useState('');\r\n  const handleChangeSourceFilterSelect = event => {\r\n    setSourceFilterSelect(event.target.value);\r\n    setSourceFilterText(event.target.value);\r\n    setSourceFilterTextValue('');\r\n  };\r\n  const handleChangeSourceFilterText = event => {\r\n    setSourceFilterText(sourceFilterSelect + '====' + event.target.value);\r\n    setSourceFilterTextValue(event.target.value);\r\n  };\r\n  let [targetSelect, setTargetSelect] = useState('');\r\n  const handleChangeTargetSelect = event => {\r\n    setTargetSelect(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setDestinationApi('');\r\n    } else if (event.target.value === 'out') {\r\n      setDestinationApi('1');\r\n    } else if (event.target.value === 'inb') {\r\n      setDestinationApi('0');\r\n    }\r\n  };\r\n  let [targetFilterSelect, setTargetFilterSelect] = useState('');\r\n  let [targetFilterTextValue, setTargetFilterTextValue] = useState('');\r\n  const handleChangeTargetFilterSelect = event => {\r\n    setTargetFilterSelect(event.target.value);\r\n    setTargetFilterTextValue('');\r\n    setDestinationFilterText(event.target.value);\r\n  };\r\n  const handleChangeDestinationFilterText = event => {\r\n    setDestinationFilterText(targetFilterSelect + '====' + event.target.value);\r\n    setTargetFilterTextValue(event.target.value);\r\n  };\r\n\r\n  let [filter3Select, setFilter3Select] = useState('');\r\n  const handleChangeFilter3Select = event => {\r\n    setFilter3Select(event.target.value);\r\n    if (event.target.value === 'all') {\r\n      setAnswerStatus('');\r\n    } else if (event.target.value === 'answered') {\r\n      setAnswerStatus('-');\r\n    } else if (event.target.value === 'unanswered') {\r\n      setAnswerStatus('~');\r\n    }\r\n  };\r\n  let [durationSelect, setDurationSelect] = useState('');\r\n  const handleDurationSelect = e => {\r\n    setDurationSelect(e.target.value);\r\n    e.target.value === 'all' ? setDuration('') : setDuration(e.target.value);\r\n  };\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneForwardedIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'caller'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.source'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.source'} />}\r\n                  onChange={handleChangeSourceSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.sorcefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={sourceFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.sorcefilter'} />}\r\n                  onChange={handleChangeSourceFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(sourceFilterSelect === 'dnOrDns' || sourceFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      sourceFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : sourceFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeSourceFilterText}\r\n                    value={sourceFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <PhoneCallbackIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destination'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destination'} />}\r\n                  onChange={handleChangeTargetSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'out'}>\r\n                    <IntlMessages id={'calllog2.filter.outnumber'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'inb'}>\r\n                    <IntlMessages id={'calllog2.filter.innumber'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterListIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.destinationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={targetFilterSelect}\r\n                  label={<IntlMessages id={'calllog2.filter.destinationfilter'} />}\r\n                  onChange={handleChangeTargetFilterSelect}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'dnOrDns'}>\r\n                    <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'numberfilter'}>\r\n                    <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {(targetFilterSelect === 'dnOrDns' || targetFilterSelect === 'numberfilter') && (\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <TextField\r\n                    style={{ width: '100%' }}\r\n                    label={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.internalorinternals'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.numberfilter'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    helperText={\r\n                      targetFilterSelect === 'dnOrDns' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.did'} />\r\n                      ) : targetFilterSelect === 'numberfilter' ? (\r\n                        <IntlMessages id={'calllog2.filter.ep.number'} />\r\n                      ) : (\r\n                        '-'\r\n                      )\r\n                    }\r\n                    variant=\"outlined\"\r\n                    onChange={handleChangeDestinationFilterText}\r\n                    value={targetFilterTextValue}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <FilterAltIcon style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"source-l\">\r\n                  <IntlMessages id={'calllog2.filter.filter3'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"source-l\"\r\n                  id=\"demo-simple-select\"\r\n                  value={filter3Select}\r\n                  label={<IntlMessages id={'calllog2.filter.filter3'} />}\r\n                  onChange={handleChangeFilter3Select}>\r\n                  <MenuItem value={'all'}>\r\n                    <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'answered'}>\r\n                    <IntlMessages id={'calllog2.filter.answered'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'unanswered'}>\r\n                    <IntlMessages id={'calllog2.filter.unanswered'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n              <AccessTime style={{ verticalAlign: '-5px' }} fontSize=\"medium\"  />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'durationfilter'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"durationLbl\">\r\n                  <IntlMessages id={'durationfilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"durationLbl\"\r\n                  id=\"duration-simple-select\"\r\n                  value={durationSelect}\r\n                  label={<IntlMessages id={'durationfilter'} />}\r\n                  onChange={handleDurationSelect}>\r\n                  <MenuItem value=\"all\">\r\n                  <IntlMessages id={'calllog2.filter.all'} />\r\n                  </MenuItem>\r\n                  <MenuItem value=\"3\">3 <IntlMessages id={'seconds'} /></MenuItem>\r\n                  <MenuItem value=\"5\">5 <IntlMessages id={'seconds'} /></MenuItem>\r\n                  <MenuItem value=\"10\">10 <IntlMessages id={'seconds'} /></MenuItem>\r\n                  <MenuItem value=\"20\">20 <IntlMessages id={'seconds'} /></MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport { getCallLog2, getCallLog2Total, getCallLog2Count, getCallLog2TotalSummary } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CallLog2DateFilter from './DateFilter';\r\nimport CallLog2therFilters from './Filters';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallLog2Filter({\r\n  setData,\r\n  limit,\r\n  offset,\r\n  setPage,\r\n  setTotalData,\r\n  setCount,\r\n  setResponseTotalSummary,\r\n}) {\r\n  let [startTimeApi, setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [endTimeApi, setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59), 'yyyy-mm-dd HH:MM:ss'));\r\n  let [sourceApi, setSourceApi] = useState('');\r\n  let [destinationApi, setDestinationApi] = useState('');\r\n  let [sourceFilterText, setSourceFilterText] = useState('');\r\n  let [sourceFilterNumber, setSourceNumber] = useState('');\r\n  let [destinationFilterNumber, setDestinationFilterNumber] = useState('');\r\n  let [destinationFilterText, setDestinationFilterText] = useState('');\r\n\r\n  let [sourceDnMin, setSourceDnMin] = useState('0');\r\n  let [sourceDnMax, setSourceDnMax] = useState('99999');\r\n  let [destinationDnMin, setDestinationDnMin] = useState('0');\r\n  let [destinationDnMax, setDestinationDnMax] = useState('99999');\r\n  let [sourceDnLike, setSourceDnLike] = useState('');\r\n  let [destinationDnLike, setDestinationDnLike] = useState('');\r\n  let [answerStatus, setAnswerStatus] = useState('');\r\n  let [duration, setDuration] = useState('');\r\n  let durationSql = `and \r\n  (cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time) < interval '${duration}' second`;\r\n  const timeOffset = localStorage.getItem('timeoffset') || '+3';\r\n\r\n  let string = `WITH RECURSIVE cte1 as \r\n  (     \r\n  select  \r\n  split_part(split_part(recording_url, '_', 2),'-',2) as CalledFrom,     \r\n  split_part(split_part(recording_url, '_', 2),'-',1) as TransferedTo,     \r\n  start_time,     \r\n  end_time,      \r\n  recording_url     \r\n  from recordings as records     \r\n  where     \r\n  (date_trunc('minute', TIMESTAMP'${endTimeApi}' + interval '1 day') >=  start_time)      \r\n  and      \r\n  (date_trunc('minute', TIMESTAMP'${startTimeApi}') <= start_time) \r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',1) like '%${sourceDnLike}%'\r\n  and\r\n  split_part(split_part(recording_url, '_', 2),'-',2) like '%${destinationDnLike}%'\t\r\n  order by start_time desc     \r\n  )  \r\n  SELECT\r\n  call_id, \r\n  case when src_dn_type = 1 then src_display_name else src_dn end as src_dn,\r\n  case when dst_dn_type = 1 then dst_display_name else dst_dn end as dst_dn,\r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',1) as date,  \r\n  split_part(to_char(cl_segments_view_new.dst_start_time at time zone 'utc' at time zone 'Etc/GMT${timeOffset}', 'yyyy-mm-dd ~ HH24:MI:SS'),' ~ ',2) as hour, \r\n  cl_segments_view_new.start_time,\r\n  src_display_name,  \r\n  dst_display_name,  \r\n  to_char(coalesce(cl_segments_view_new.end_time - cl_segments_view_new.dst_answer_time,interval '0 second'),'HH24h MIm SSs') as duration,  \r\n  coalesce(cte1.recording_url,'no recording'),  \r\n  case when cl_segments_view_new.dst_answer_time is not null then 'ok' else 'not ok' end as Salable,  \r\n  case \r\n  when (src_dn_type = 0 and dst_dn_type = 0) then 'dahili' \r\n  when (src_dn_type = 0 and dst_dn_type =1) then 'dışarı' \r\n  when (src_dn_type = 1 and dst_dn_type = 0) then 'içeri' \r\n  when (src_dn_type = 1 and dst_dn_type != 0) then 'kuyruk' \r\n  end as direction\r\n  FROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new  \r\n  left outer join cte1  on \r\n  cte1.recording_url like ('%' || to_char(cl_segments_view_new.start_time, 'yyyymmddHH24MISS') || '%')\r\n  where  \r\n  cast(src_dn_type as text) like '%${sourceApi}'   \r\n  and  \r\n  cast(dst_dn_type as text) like '%${destinationApi}' \r\n  and  \r\n  act != 1 \r\n  and  \r\n  dst_display_name like '%${destinationFilterNumber}%'  \r\n  and  \r\n  src_display_name like '%${sourceFilterNumber}%'  \r\n  and  \r\n  coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'  \r\n  and\r\n  (  \r\n  (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')   \r\n  and   \r\n  dst_answer_time is not null\r\n  and\r\n  cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}    \r\n  and \r\n  cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax}\r\n  )\r\n  ${duration !== '' ? durationSql: ''}\r\n  order by dst_start_time,seg_order asc \r\n  limit ${limit} offset ${offset}`;\r\n\r\n  let totalString = `with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  to_char((date_trunc('day',answered.dst_start_time)),'dd-mm-yyyy'),\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  group by date_trunc('day',answered.dst_start_time) \r\n  order by date_trunc('day',answered.dst_start_time) asc`;\r\n\r\n  let stringCount = `SELECT\r\n\tcast(count(*) as integer) as cnt\r\n\tFROM  cl_segments_daily_statics('${startTimeApi}','${endTimeApi}') as cl_segments_view_new\r\n\twhere\r\n\tcast(src_dn_type as text) like '%${sourceApi}'\r\n\tand\r\n\tcast(dst_dn_type as text) like '%${destinationApi}'\r\n\tand \r\n\t(dst_dn_type =0 \r\n\tor  dst_dn_type = 1)\r\n  \tand\r\n\tact != 1\r\n\tand\r\n\tdst_display_name like '%${destinationFilterNumber}%'\r\n\tand\r\n\tsrc_display_name like '%${sourceFilterNumber}%'\r\n\tand\r\n\tcoalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n  and \r\n  act_dn_type is null\r\n\tand(\r\n\t(dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n \tand\r\n \t(cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n    and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <=${destinationDnMax})\r\n    ${duration !== '' ? durationSql: ''}`;\r\n\r\n  let stringTotalSummary = `\r\n  with recursive answered as (\r\n    SELECT\r\n    *\r\n    from\r\n    cl_segments_daily_statics('${startTimeApi}','${endTimeApi}')\r\n    where \r\n    cast(src_dn_type as text) like '%${sourceApi}'\r\n    and \r\n    cast(dst_dn_type as text) like '%${destinationApi}'\r\n    and \r\n    (dst_dn_type =0 \r\n    or  dst_dn_type = 1)\r\n    and\r\n    dst_display_name like '%${destinationFilterNumber}%'\r\n    and\r\n    act != 1\r\n    and \r\nact_dn_type is null\r\n    and\r\n    src_display_name like '%${sourceFilterNumber}%'\r\n    and\r\n    coalesce(cast(dst_answer_time as text),'~') like '%${answerStatus}%'\r\n    and(\r\n    (dst_dn like '%${destinationDnLike}%' and src_dn like '%${sourceDnLike}%')\r\n     and\r\n     (cast(substring(src_dn from '[0-9]+') as bigint) >= ${sourceDnMin} and cast(substring(src_dn from '[0-9]+') as bigint) <= ${sourceDnMax}) \r\n     and cast(substring(dst_dn from '[0-9]+') as bigint) >= ${destinationDnMin} and cast(substring(dst_dn from '[0-9+]') as bigint) <= ${destinationDnMax})\r\n  )\r\n  select\r\n  count(*),\r\n  sum(case when answered.dst_answer_time is not null then 1 else 0 end) as answered,\r\n  count(*)-sum(case when answered.dst_answer_time is not null then 1 else 0 end) as not_answered,\r\n  to_char(sum(dst_end_time-dst_answer_time),'HH24h MIm SSs') as totalDuration,\r\n  to_char(sum(dst_end_time-dst_answer_time)/count(*),'HH24h MIm SSs') as averageDuration\r\n  from answered\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (sourceFilterText.startsWith('all')) {\r\n      setSourceNumber('');\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('numberfilter====')) {\r\n      setSourceNumber(sourceFilterText.split('====')[1]);\r\n      setSourceDnMin('0');\r\n      setSourceDnMax('99999');\r\n      setSourceDnLike('');\r\n    } else if (sourceFilterText.startsWith('dnOrDns====')) {\r\n      if (sourceFilterText.includes('-')) {\r\n        setSourceDnLike('');\r\n        setSourceNumber('');\r\n        setSourceDnMin(sourceFilterText.split('====')[1].split('-')[0]);\r\n        setSourceDnMax(sourceFilterText.split('====')[1].split('-')[1]);\r\n        // setSourceDnMin(sourceFilterText.split('-')[0]);\r\n        // setSourceDnMax(sourceFilterText.split('-')[1]);\r\n      } else {\r\n        setSourceDnLike(sourceFilterText.split('====')[1]);\r\n        setSourceDnMin('0');\r\n        setSourceDnMax('99999');\r\n        setSourceNumber('');\r\n      }\r\n    }\r\n  }, [sourceFilterText]);\r\n\r\n  useEffect(() => {\r\n    if (destinationFilterText.startsWith('all')) {\r\n      setDestinationFilterNumber('');\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('numberfilter====')) {\r\n      setDestinationFilterNumber(destinationFilterText.split('====')[1]);\r\n      setDestinationDnLike('');\r\n      setDestinationDnMin('0');\r\n      setDestinationDnMax('99999');\r\n    } else if (destinationFilterText.startsWith('dnOrDns====')) {\r\n      if (destinationFilterText.includes('-')) {\r\n        setDestinationDnLike('');\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin(destinationFilterText.split('====')[1].split('-')[0]);\r\n        setDestinationDnMax(destinationFilterText.split('====')[1].split('-')[1]);\r\n        // setDestinationDnMin(destinationFilterText.split('-')[0]);\r\n        // setDestinationDnMax(destinationFilterText.split('-')[1]);\r\n      } else {\r\n        setDestinationDnLike(destinationFilterText.split('====')[1]);\r\n        setDestinationFilterNumber('');\r\n        setDestinationDnMin('0');\r\n        setDestinationDnMax('99999');\r\n      }\r\n    }\r\n  }, [destinationFilterText]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2(string).then(result => {\r\n      setData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [string, setData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Total(totalString).then(result => {\r\n      setTotalData(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [totalString, setTotalData]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2TotalSummary(stringTotalSummary).then(result => {\r\n      setResponseTotalSummary(JSON.parse(result.data.data)[0]);\r\n      setLoading(false);\r\n    });\r\n  }, [stringTotalSummary, setResponseTotalSummary]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCallLog2Count(stringCount).then(result => {\r\n      setCount(JSON.parse(result.data.data));\r\n      setLoading(false);\r\n    });\r\n  }, [stringCount, setCount]);\r\n\r\n  return (\r\n    <div>\r\n      <CallLog2DateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi} />\r\n      <CallLog2therFilters\r\n        setSourceApi={setSourceApi}\r\n        setDestinationApi={setDestinationApi}\r\n        setSourceFilterText={setSourceFilterText}\r\n        setDestinationFilterText={setDestinationFilterText}\r\n        setAnswerStatus={setAnswerStatus}\r\n        setLoading={setLoading}\r\n        setDuration={setDuration}\r\n      />\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Grid, Tab, Tabs, Typography } from '@mui/material';\r\nimport { getCallDetail } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineOppositeContent,\r\n  TimelineSeparator,\r\n} from '@material-ui/lab';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}>\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <>{children}</>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function CallLog2CallDetail({ callId }) {\r\n  let [data, setData] = useState([]);\r\n  const detailContainerStyle={borderBottom:\"1px solid rgba(0, 0, 0, 0.87)\", margin:\"10px 0\", width:\"100%\"};\r\n\r\n  useEffect(() => {\r\n    getCallDetail(callId).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n      setTotalTime(\r\n        new Date(JSON.parse(resp.data.data)[JSON.parse(resp.data.data).length - 1]?.end_time).getTime() -\r\n          new Date(JSON.parse(resp.data.data)[0]?.start_time).getTime(),\r\n      );\r\n    });\r\n  }, [callId]);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  let [totalTime, setTotalTime] = useState(0);\r\n\r\n  const secondToTime = ms => {\r\n    let seconds = ms / 1000;\r\n    const hours = parseInt(seconds / 3600);\r\n    seconds = seconds % 3600;\r\n    const minutes = parseInt(seconds / 60);\r\n    seconds = seconds % 60;\r\n    let hourString = hours.toString().length === 1 ? '0' : '';\r\n    let minutesString = minutes.toString().length === 1 ? '0' : '';\r\n    let secondsString = seconds.toString().length === 1 ? '0' : '';\r\n    let string = hourString + hours + 'h ' + minutesString + minutes + 'm ' + secondsString + seconds + 's ';\r\n    return string;\r\n  };\r\n\r\n  let [totalRingTime, setTotalRingTime] = useState(0);\r\n  let [totalTalkTime, setTotalTalkTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let tempRingTime = 0;\r\n    let tempTalkTime = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].ring_time !== '') {\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempRingTime += parseInt(data[i].ring_time.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n      if (data[i].duration !== '') {\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[0]?.substring(0, 2)) * 60 * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[1]?.substring(0, 2)) * 60 * 1000;\r\n        tempTalkTime += parseInt(data[i].duration.split(' ')[2]?.substring(0, 2)) * 1000;\r\n      }\r\n    }\r\n    setTotalRingTime(tempRingTime);\r\n    setTotalTalkTime(tempTalkTime);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ background: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)' }}>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              background: 'rgb(173,206,116)',\r\n              height: '200px',\r\n              marginRight: '0px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#89a658',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.callers}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ width: '100%', height: '200px' }}>\r\n            <div\r\n              style={{\r\n                width: 0,\r\n                height: 0,\r\n                borderTop: '100px solid transparent',\r\n                borderLeft: '200px solid',\r\n                borderLeftColor: 'rgb(173,206,116)',\r\n                borderBottom: '100px solid transparent',\r\n              }}></div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              backgroundColor: 'linear-gradient(0deg, rgba(138,182,214,1) 0%, rgba(41,120,181,1) 100%)',\r\n              height: '200px',\r\n              textAlign: 'center',\r\n            }}>\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                verticalAlign: '-5px',\r\n                fontSize: 80,\r\n                padding: '10px',\r\n                marginTop: '50px',\r\n                backgroundColor: '#2978B5',\r\n                borderRadius: '50%',\r\n                color: 'white',\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\r\n              <b style={{ fontSize: '16px' }}>{data[0]?.calleds}</b>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <hr style={{ marginTop: '0px', height: '5px', color: 'gray' }} />\r\n      <div>\r\n        <Box sx={{ width: '100%' }}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'calllog2.detail.callinfo'} />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                style={{ borderRight: '2px solid gray' }}\r\n                label={<IntlMessages id={'calllog2.datail.detail'} />}\r\n                {...a11yProps(1)}\r\n              />\r\n            </Tabs>\r\n          </Box>\r\n          <TabPanel value={value} index={0}>\r\n            <Timeline position=\"alternate\">\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#2978B5' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[0]?.start_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"primary\">\r\n                    <DateRangeIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n              {data.map((item, index) => (\r\n                <TimelineItem key={index}>\r\n                  <TimelineOppositeContent\r\n                    align=\"right\"\r\n                    variant=\"body2\"\r\n                    color=\"text.secondary\"\r\n                    style={{ marginTop: '80px' }}>\r\n                    <Typography variant=\"h6\" component=\"span\" style={{ marginTop: '45px' }}>\r\n                      <b>{item.calleds}</b>\r\n                    </Typography>\r\n                    <Typography>{item.states}</Typography>\r\n                  </TimelineOppositeContent>\r\n                  <TimelineSeparator>\r\n                    <TimelineConnector />\r\n                    <TimelineDot color=\"secondary\">\r\n                      <CallIcon />\r\n                    </TimelineDot>\r\n                    <TimelineConnector />\r\n                  </TimelineSeparator>\r\n                  <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                    <Typography style={{ marginTop: '20px' }}>\r\n                        <IntlMessages id={'calllog2.datail.starttime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#A6CF98', borderRadius: '10px', color: '#557C55' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.start_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'calllog2.datail.ringtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#EEC373', borderRadius: '10px', color: '#EA5C2B' }}>\r\n                        <NotificationsActiveIcon style={{ verticalAlign: '-5px' }} /> <b>{item.ring_time}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'calllog2.datail.talktime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#6998AB', borderRadius: '10px', color: '#1A374D' }}>\r\n                        <PhoneInTalkIcon style={{ verticalAlign: '-5px' }} /> <b>{item.duration}</b>\r\n                      </span>\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: '5px' }}>\r\n                        <IntlMessages id={'calllog2.datail.endtime'} />\r\n                    </Typography>\r\n                    <Typography>\r\n                      <span style={{ padding: '6px', backgroundColor: '#FF7272', borderRadius: '10px', color: '#9B0000' }}>\r\n                        <AccessTimeIcon style={{ verticalAlign: '-5px' }} /> <b>{item.end_time.split(' ')[1]}</b>\r\n                      </span>\r\n                    </Typography>\r\n                  </TimelineContent>\r\n                </TimelineItem>\r\n              ))}\r\n              <TimelineItem>\r\n                <TimelineOppositeContent align=\"right\" variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '10px' }}>\r\n                  <Typography variant=\"h6\" component=\"span\" style={{ color: '#EA4C4C' }}>\r\n                    <DateRangeIcon style={{ verticalAlign: '-5px' }} /> <b>{data[data.length - 1]?.end_time}</b>\r\n                  </Typography>\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                  <TimelineConnector />\r\n                  <TimelineDot color=\"secondary\">\r\n                    <CallEndIcon />\r\n                  </TimelineDot>\r\n                  <TimelineConnector />\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}></TimelineContent>\r\n              </TimelineItem>\r\n            </Timeline>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n          <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>Call Id:</b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <p style={{ fontSize: '16px' }}>{callId}</p>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.from'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#086E7D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.callers}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.to'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <PersonIcon style={{ verticalAlign: '-5px', color: '#519259' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.calleds}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.duration'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{secondToTime(totalTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.talktime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#406882' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#406882' }}>{secondToTime(totalTalkTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.ringtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: '#EF2F88' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: '#EF2F88' }}>{secondToTime(totalRingTime)}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.date'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <DateRangeIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} />{' '}\r\n                <span style={{ fontSize: '16px' }}>{data[0]?.start_time.split(' ')[0]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.starttime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[0]?.start_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n            <GridContainer style={detailContainerStyle}>\r\n              <Grid item md={6}>\r\n                <b style={{ fontSize: '16px' }}>\r\n                  <IntlMessages id={'calllog2.datail.endtime'} />:\r\n                </b>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <AccessTimeIcon style={{ verticalAlign: '-5px', color: 'gray' }} />{' '}\r\n                <span style={{ fontSize: '16px', color: 'gray' }}>{data[data.length - 1]?.end_time.split(' ')[1]}</span>\r\n              </Grid>\r\n            </GridContainer>\r\n          </TabPanel>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTagtextByCallId, TagByID } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function Tag({call_id,tagsList}) {\r\n  const [tagValue, setTagValue] = useState('');\r\n\r\n  const handleChangeTag = event => {\r\n    TagByID(event.target.value,call_id).then(() =>{\r\n      setTagValue(event.target.value);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    if(call_id !== \"\"){\r\n      getTagtextByCallId(call_id).then(resp => {\r\n        setTagValue(JSON.parse(resp.data.data)[0]?.tagtext || '');\r\n    });\r\n    }\r\n\r\n  },[call_id]);\r\n\r\n  // const tagStyle = {\r\n  //   \"borderRadius\":\"10px\",\r\n  //   \"color\":\"#fff\",\r\n  //   \"backgroundColor\":\"#99038f\",\r\n  //   \"fontWeight\":\"300\",\r\n  //   \"padding\":\"4px 8px\",\r\n  //   \"margin\":\"0 4px\"\r\n  // }\r\n  return (\r\n    <>\r\n    {\r\n      call_id === \"\"?(<small style={{\"margin\":\"0 4px\"}}><IntlMessages id={'nontaggable'} /></small>):(\r\n        <>\r\n        {\r\n          // tagValue !== '' ? <span style={tagStyle}>{tagValue}</span> : \r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label11\"><IntlMessages id={'tag'} /></InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label11\"\r\n              id=\"demo-simple-select222\"\r\n              value={tagValue}\r\n              label={<IntlMessages id={'tag'} />}\r\n              style={{ width: '100%' }}\r\n              onChange={handleChangeTag}>\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n                {\r\n                  tagsList.map((item,index)=>(<MenuItem key={index} value={item.tagmassage}>{item.tagmassage}</MenuItem>))\r\n                }\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        </>\r\n      )\r\n    }\r\n    </>\r\n  );\r\n}\r\n","import { getNewDate } from '@jumbo/utils/dateHelper';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { AccessTime, Check, Clear, CloudDownload, DateRange, Person, PhoneDisabled, PlayArrow } from '@material-ui/icons';\r\nimport { getPath, getTagTypes, getRecordingBytes, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ExcelFile from 'react-export-excel/dist/ExcelPlugin/components/ExcelFile';\r\nimport ExcelColumn from 'react-export-excel/dist/ExcelPlugin/elements/ExcelColumn';\r\nimport ExcelSheet from 'react-export-excel/dist/ExcelPlugin/elements/ExcelSheet';\r\nimport { useIntl } from 'react-intl';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { CircularProgress } from '@mui/material';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CallLog2CallDetail from '../CallDetails';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport Tag from './Tag';\r\nimport { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport AudioWaveForm from '@jumbo/utils/AudioWaveForm';\r\n\r\nexport default function CallLog2Table({\r\n  data,\r\n  limit,\r\n  setLimit,\r\n  setOffset,\r\n  page,\r\n  setPage,\r\n  totalData,\r\n  count,\r\n  responseTotalSummary,\r\n  setData,\r\n}) {\r\n  let [path, setPath] = useState('');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    setOffset(limit * newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setLimit(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  //const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  // const handleDowlandButtonClick = () => {\r\n  //   setLimit(parseInt(count[0].cnt));\r\n  //   setPage(0);\r\n  //   setData([]);\r\n  //   handleOpen();\r\n  // };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const audioModalStyle = {\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    borderRadius: '8px',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    padding: '12px 8px',\r\n    border: '2px solid #ededed',\r\n    backgroundColor: '#ededed',\r\n    width: '600px',\r\n  };\r\n  //audio player için\r\n  const [record, setRecord] = useState('');\r\n  const [openAudioModal, setOpenAudioModal] = useState(false);\r\n  const listenRecord = dir => {\r\n    getRecordingBytes(path, dir)\r\n      .then(resp => resp.arrayBuffer())\r\n      .then(buffer => {\r\n        if (buffer !== null) {\r\n          setRecord(buffer);\r\n          setOpenAudioModal(true);\r\n        } else {\r\n          NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000);\r\n        }\r\n      })\r\n      .catch(err => NotificationManager.error(<IntlMessages id={'norecording'} />, '', 3000));\r\n  };\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  let tableData = data.map((item, index) => ({\r\n    callId: item.call_id,\r\n    listen: item.coalesce,\r\n    date: getNewDate(item.date),\r\n    startTime: item.hour,\r\n    caller:\r\n      item.src_dn === '-'\r\n        ? item.src_display_name.split(':')[0]\r\n        : item.src_display_name.split(':')[0] + '(' + item.src_dn + ')',\r\n    called: item.dst_dn === '-' ? item.dst_display_name : item.dst_display_name + '(' + item.dst_dn + ')',\r\n    direction: [item.direction,item.dst_dn],\r\n    duration: item.duration,\r\n    salable: item.salable,\r\n    id: index,\r\n    Tag: isTaggable(item.direction, item.salable) ? item.call_id : '',\r\n  }));\r\n  const [rightMenu, setRightMenu] = useState(false);\r\n  const [callIdEye, setCallIdEye] = useState('');\r\n  const handleClickOpenEye = callId => {\r\n    setCallIdEye(callId);\r\n    setRightMenu(true);\r\n  };\r\n\r\n  const [tagsList, setTagsList] = useState([]);\r\n  const [queues, setQueues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPath().then(res => {\r\n      setPath(res.data);\r\n    });\r\n    getTagTypes().then(resp => setTagsList(JSON.parse(resp.data.data)));\r\n    getQueues().then(que => setQueues(JSON.parse(que.data.data)));\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      field: 'callId',\r\n      headerName: <IntlMessages id={'detail'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span onClick={() => handleClickOpenEye(params.value)} style={{ cursor: 'pointer' }}>\r\n          <VisibilityIcon style={{ color: '#FF1700', verticalAlign: '-5px' }} />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'listen',\r\n      headerName: <IntlMessages id={'listen'} />,\r\n      width: 70,\r\n      renderCell: params => (\r\n        <span style={{ cursor: 'pointer' }}>\r\n          {params.value !== 'no recording' && (\r\n            <IconButton\r\n              onClick={() => listenRecord(params.value)}\r\n              style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n              size=\"small\"\r\n              aria-label=\"listen\">\r\n              <PlayArrow />\r\n            </IconButton>\r\n          )}\r\n          {params.value === 'no recording' && (\r\n            <IconButton disabled style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }} size=\"small\" aria-label=\"listen\">\r\n              <Clear />\r\n            </IconButton>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: <IntlMessages id={'date'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#519259' }}>\r\n            <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: <IntlMessages id={'starttime'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'callers'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#98BAE7' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'called',\r\n      headerName: <IntlMessages id={'calledd'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: 'gray' }}>\r\n          <span style={{ color: '#9AE66E' }}>\r\n            <Person style={{ verticalAlign: '-5px' }} />\r\n          </span>\r\n          {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'direction',\r\n      headerName: <IntlMessages id={'direction'} />,\r\n      width: 110,\r\n      renderCell: params => (\r\n        <span>\r\n          {params.value[0] === 'içeri' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#9AE66E',\r\n                color: '#497c4f',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'incomingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dışarı' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF6D6D',\r\n                color: '#AE431E',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'outgoingcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'dahili' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FFBC97',\r\n                color: '#FF7800',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <IntlMessages id={'agentedcall'} />\r\n            </span>\r\n          )}\r\n          {params.value[0] === 'kuyruk' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#a3b8ff',\r\n                color: '#053cf2',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              {queues.find(q => q.dn === params.value[1])?.display_name || <IntlMessages id=\"queue\"/>}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'duration',\r\n      headerName: <IntlMessages id={'duration'} />,\r\n      width: 130,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif', fontWeight: '600', color: '#DB6B97' }}>\r\n          <AccessTime style={{ verticalAlign: '-5px' }} /> {params.value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'salable',\r\n      headerName: <IntlMessages id={'state'} />,\r\n      width: 150,\r\n      renderCell: params => (\r\n        <span style={{ fontFamily: 'sans-serif' }}>\r\n          {params.value === 'ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#B1E693',\r\n                color: '#1C7947',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n            </span>\r\n          )}\r\n\r\n          {params.value === 'not ok' && (\r\n            <span\r\n              style={{\r\n                backgroundColor: '#FF7777',\r\n                color: '#852747',\r\n                padding: '5px',\r\n                borderRadius: '7px',\r\n                fontSize: '10px',\r\n                fontWeight: '800',\r\n              }}>\r\n              <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'notanswered'} />\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      field: 'Tag',\r\n      headerName: <IntlMessages id={'tag'} />,\r\n      width: 250,\r\n      renderCell: params => (\r\n        <div style={{ width: '100%' }}>\r\n          <Tag call_id={params.value} tagsList={params.value !== '' ? tagsList : []} />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n      {data.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          {\r\n            <ExcelFile\r\n              filename={\r\n                curentLanguage.locale === 'en-EN'\r\n                  ? 'Call_Log'\r\n                  : curentLanguage.locale === 'tr-TR'\r\n                  ? 'Cagri_raporu'\r\n                  : curentLanguage.locale === 'nl-NL'\r\n                  ? 'Oproep_Log'\r\n                  : curentLanguage.locale === 'de-DE'\r\n                  ? 'Anrufliste'\r\n                  : ''\r\n              }\r\n              element={\r\n                <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                  <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                </Button>\r\n              }>\r\n              <ExcelSheet data={data} name=\"data\">\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Date'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Tarih'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Datum'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Datum'\r\n                      : ''\r\n                  }\r\n                  value=\"date\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Hour'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Saat'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Uur'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Stunde'\r\n                      : ''\r\n                  }\r\n                  value=\"hour\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'From'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Kimden'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Van'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Von'\r\n                      : ''\r\n                  }\r\n                  value=\"src_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Destination'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Hedef'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Bestemming'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Ziel'\r\n                      : ''\r\n                  }\r\n                  value=\"dst_display_name\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Direction'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Yön'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Richting'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Genaamd'\r\n                      : ''\r\n                  }\r\n                  value=\"direction\"\r\n                />\r\n                <ExcelColumn\r\n                  label={\r\n                    curentLanguage.locale === 'en-EN'\r\n                      ? 'Duration'\r\n                      : curentLanguage.locale === 'tr-TR'\r\n                      ? 'Süre'\r\n                      : curentLanguage.locale === 'nl-NL'\r\n                      ? 'Looptijd'\r\n                      : curentLanguage.locale === 'de-DE'\r\n                      ? 'Dauer'\r\n                      : ''\r\n                  }\r\n                  value=\"duration\"\r\n                />\r\n                <ExcelColumn label={curentLanguage.locale === 'en-US' ? 'Case' : 'Durum'} value=\"salable\" />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          }\r\n        </div>\r\n      )}\r\n      <Drawer anchor={'right'} open={rightMenu} onClose={() => setRightMenu(false)}>\r\n        <div style={{ width: '600px' }}>\r\n          <CallLog2CallDetail callId={callIdEye} />\r\n        </div>\r\n      </Drawer>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          {data.length < 1 && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <CircularProgress />\r\n              <p>Veriler hazirlanıyor...</p>\r\n            </div>\r\n          )}\r\n          <div style={{ textAlign: 'center' }}>\r\n            {data.length < 1 && (\r\n              <Button disabled style={{ backgroundColor: 'gray', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            )}\r\n            {data.length > 0 && (\r\n              <ExcelFile\r\n                filename={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Call_Log'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cagri_raporu'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Oproep_Log'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anrufliste'\r\n                    : ''\r\n                }\r\n                element={\r\n                  <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                    <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n                  </Button>\r\n                }>\r\n                <ExcelSheet data={data} name=\"data\">\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Date'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Tarih'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Datum'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Datum'\r\n                        : ''\r\n                    }\r\n                    value=\"date\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Hour'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Saat'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Uur'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Stunde'\r\n                        : ''\r\n                    }\r\n                    value=\"hour\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Caller'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Arayan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Beller'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Anruferin'\r\n                        : ''\r\n                    }\r\n                    value=\"src_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Called'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Aranan'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Genaamd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Namens'\r\n                        : ''\r\n                    }\r\n                    value=\"dst_display_name\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Direction'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Yön'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Richting'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Genaamd'\r\n                        : ''\r\n                    }\r\n                    value=\"direction\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'Duration'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Süre'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Looptijd'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Dauer'\r\n                        : ''\r\n                    }\r\n                    value=\"duration\"\r\n                  />\r\n                  <ExcelColumn\r\n                    label={\r\n                      curentLanguage.locale === 'en-EN'\r\n                        ? 'State'\r\n                        : curentLanguage.locale === 'tr-TR'\r\n                        ? 'Durum'\r\n                        : curentLanguage.locale === 'nl-NL'\r\n                        ? 'Staat'\r\n                        : curentLanguage.locale === 'de-DE'\r\n                        ? 'Bundesland'\r\n                        : ''\r\n                    }\r\n                    value=\"salable\"\r\n                  />\r\n                </ExcelSheet>\r\n              </ExcelFile>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Paper>\r\n        <div style={{ height: '440px', width: '100%' }}>\r\n          <DataGrid rows={tableData} columns={columns} rowHeight={38} hideFooter localeText={localeText} />\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100, parseInt(count[0].cnt)].sort((a, b) => a - b)}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={tableData.length < limit || tableData.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={String(tableData.length)}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      {/* <Paper style={{ marginTop: '20px' }}>\r\n        <NotificationContainer />\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'listen'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'filter.menu.startdate'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'caller'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'called'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.diraction'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'state'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map(item => (\r\n                <TableRow>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px' }}>\r\n                    {item.coalesce !== 'no recording' && (\r\n                      <IconButton\r\n                        onClick={() => listenRecord(item.coalesce)}\r\n                        style={{ backgroundColor: '#C6D57E', color: '#406343' }}\r\n                        size=\"small\"\r\n                        aria-label=\"listen\">\r\n                        <PlayArrow />\r\n                      </IconButton>\r\n                    )}\r\n                    {item.coalesce === 'no recording' && (\r\n                      <IconButton\r\n                        disabled\r\n                        style={{ backgroundColor: '#FE8F8F', color: '#FF5C58' }}\r\n                        size=\"small\"\r\n                        aria-label=\"listen\">\r\n                        <Clear />\r\n                      </IconButton>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    {getNewDate(item.date)}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: '#009DAE',\r\n                    }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> {item.hour}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#98BAE7' }}>\r\n                      <Person style={{ verticalAlign: '-5px' }} />\r\n                    </span>\r\n                    {item.src_display_name + '(' + item.src_dn + ')'}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: 'gray',\r\n                    }}>\r\n                    <span style={{ color: '#9AE66E' }}>\r\n                      <Person style={{ verticalAlign: '-5px' }} />\r\n                    </span>\r\n                    {item.dst_display_name + '(' + item.dst_dn + ')'}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px' }}>\r\n                    {item.salable1 === 'içeri' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#9AE66E',\r\n                          color: '#34BE82',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'incomingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable1 === 'dışarı' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FF6D6D',\r\n                          color: '#AE431E',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'outgoingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable1 === 'dahili' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FFBC97',\r\n                          color: '#FF7800',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <IntlMessages id={'agentedcall'} />\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      paddingTop: '2px',\r\n                      paddingBottom: '2px',\r\n                      fontFamily: 'sans-serif',\r\n                      fontWeight: '600',\r\n                      color: '#548CA8',\r\n                    }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> {item.duration}\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'sans-serif' }}>\r\n                    {item.salable === 'ok' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#B1E693',\r\n                          color: '#1C7947',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <IntlMessages id={'endingcall'} />\r\n                      </span>\r\n                    )}\r\n                    {item.salable === 'not ok' && (\r\n                      <span\r\n                        style={{\r\n                          backgroundColor: '#FF7777',\r\n                          color: '#852747',\r\n                          padding: '5px',\r\n                          borderRadius: '7px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '800',\r\n                        }}>\r\n                        <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                        <IntlMessages id={'notanswered'} />\r\n                      </span>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={parseInt(count[0].cnt)}\r\n          backIconButtonProps={page < 1 ? { disabled: true } : { disabled: false }}\r\n          nextIconButtonProps={data.length < limit || data.length === 0 ? { disabled: true } : { disabled: false }}\r\n          rowsPerPage={limit}\r\n          backIconButtonText={data.length}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          labelRowsPerPage={<IntlMessages id={'rows.per.page'} />}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper> */}\r\n\r\n      {totalData.length > 0 && (\r\n        <div style={{ marginTop: '10px', textAlign: 'right' }}>\r\n          <ExcelFile\r\n            filename={\r\n              curentLanguage.locale === 'en-EN'\r\n                ? 'Call_Log_Summary'\r\n                : curentLanguage.locale === 'tr-TR'\r\n                ? 'Cagri_raporu_ozet'\r\n                : curentLanguage.locale === 'nl-NL'\r\n                ? 'Oproep_Log Samenvatting'\r\n                : curentLanguage.locale === 'de-DE'\r\n                ? 'Zusammenfassung des Anrufprotokolls'\r\n                : ''\r\n            }\r\n            element={\r\n              <Button style={{ backgroundColor: '#3f51b5', color: 'white' }}>\r\n                <IntlMessages id={'download'} /> <CloudDownload style={{ marginLeft: '5px' }} />\r\n              </Button>\r\n            }>\r\n            <ExcelSheet data={totalData} name=\"data\">\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Date'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Tarih'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Datum'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Datum'\r\n                    : ''\r\n                }\r\n                value=\"to_char\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Total Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Toplam Arama Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Totaal aantal gesprekken'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Gesamtzahl der Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"count\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Answered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal beantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Zählung angenommener Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Unanswered Call Count'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Cevaplanmamış Çağrı Adedi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Aantal onbeantwoorde oproepen'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Anzahl unbeantworteter Anrufe'\r\n                    : ''\r\n                }\r\n                value=\"not_answered\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Duration'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Süre'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Looptijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Dauer'\r\n                    : ''\r\n                }\r\n                value=\"totalduration\"\r\n              />\r\n              <ExcelColumn\r\n                label={\r\n                  curentLanguage.locale === 'en-EN'\r\n                    ? 'Average Call Time'\r\n                    : curentLanguage.locale === 'tr-TR'\r\n                    ? 'Ortalama Çağrı Süresi'\r\n                    : curentLanguage.locale === 'nl-NL'\r\n                    ? 'Gemiddelde beltijd'\r\n                    : curentLanguage.locale === 'de-DE'\r\n                    ? 'Durchschnittliche Anrufzeit'\r\n                    : ''\r\n                }\r\n                value=\"averageduration\"\r\n              />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n        </div>\r\n      )}\r\n\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.answered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.unanswered'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'Duration'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.average.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {totalData.map((total, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span style={{ color: '#519259' }}>\r\n                      <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                    </span>\r\n                    <b>{total.to_char}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.count}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    <span\r\n                      style={{\r\n                        // backgroundColor: '#B1E693',\r\n                        color: '#1C7947',\r\n                        // padding: '5px',\r\n                        // borderRadius: '7px',\r\n                        // fontSize: '12px',\r\n                        // fontWeight: '800',\r\n                      }}>\r\n                      <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                    {' '}\r\n                    <span\r\n                      style={{\r\n                        // backgroundColor: '#FF7777',\r\n                        color: '#852747',\r\n                        // padding: '5px',\r\n                        // borderRadius: '7px',\r\n                        // fontSize: '12px',\r\n                        // fontWeight: '800',\r\n                      }}>\r\n                      <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />\r\n                      <b>{total.not_answered}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    {' '}\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalduration}</b>\r\n                  </TableCell>\r\n                  <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                    <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.averageduration}</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{responseTotalSummary.count}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      // backgroundColor: '#B1E693',\r\n                      color: '#1C7947',\r\n                      // padding: '5px',\r\n                      // borderRadius: '7px',\r\n                      // fontSize: '12px',\r\n                      // fontWeight: '800',\r\n                    }}>\r\n                    <Check fontSize=\"small\" style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span\r\n                    style={{\r\n                      // backgroundColor: '#FF7777',\r\n                      color: '#852747',\r\n                      // padding: '5px',\r\n                      // borderRadius: '7px',\r\n                      // fontSize: '12px',\r\n                      // fontWeight: '800',\r\n                    }}>\r\n                    <PhoneDisabled fontSize=\"small\" style={{ verticalAlign: '-5px' }} />{' '}\r\n                    <b>{responseTotalSummary.not_answered}</b>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.totalduration}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{responseTotalSummary.averageduration}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Modal\r\n          open={openAudioModal}\r\n          onClose={() => setOpenAudioModal(false)}\r\n          aria-labelledby=\"Audio\"\r\n          aria-describedby=\"Audio Player Modal\">\r\n          <Box style={audioModalStyle}>\r\n            <AudioWaveForm buffer={record} />\r\n          </Box>\r\n        </Modal>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nconst nonTaggableCallTypes = ['dahili', ''];\r\nconst isTaggable = (callType, status) => {\r\n  if (status === 'ok') {\r\n    if (!nonTaggableCallTypes.includes(callType)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport CallLog2Filter from './Filter';\r\nimport CallLog2Table from './Table';\r\n\r\nexport default function CallLog2() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calllog'} />, isActive: true },\r\n  ];\r\n\r\n  let [data, setData] = useState([]);\r\n  const [count, setCount] = useState([{ count: 10 }]);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [responseTotalSummary, setResponseTotalSummary] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calllog'} />} breadcrumbs={breadcrumbs}>\r\n        <CallLog2Filter\r\n          setData={setData}\r\n          limit={limit}\r\n          offset={offset}\r\n          setPage={setPage}\r\n          setTotalData={setTotalData}\r\n          setCount={setCount}\r\n          setResponseTotalSummary={setResponseTotalSummary}\r\n        />\r\n        <CallLog2Table\r\n          count={count}\r\n          totalData={totalData}\r\n          responseTotalSummary={responseTotalSummary}\r\n          data={data}\r\n          setData={setData}\r\n          setLimit={setLimit}\r\n          setOffset={setOffset}\r\n          setPage={setPage}\r\n          limit={limit}\r\n          offset={offset}\r\n          page={page}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport dateFormat from 'dateformat';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function QualityReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(dateFormat(startDate, 'yyyy-mm-dd HH:MM:ss'));\r\n    setEndTimeApi(dateFormat(endDate, 'yyyy-mm-dd HH:MM:ss'));\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'datefilter'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, TextField, Typography, Box, Chip } from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { InputLabel, MenuItem, Select, FormControl } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAgentNumber } from 'api/api';\r\nimport QualityReportDateFilter from './DateFilter';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function QualityFilters({data,setFiltered}) {\r\n\r\n  const [agentNo,setAgentNo] = useState(\"\");\r\n  const [agentName,setAgentName] = useState([]);\r\n  const [score,setScore] = useState(\"\");\r\n  const [agents,setAgents] = useState([]);\r\n  //tarihler başlangıç-bitiş\r\n  const [startTimeApi,setStartTimeApi] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd HH:MM:ss'));\r\n  const [endTimeApi,setEndTimeApi] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd HH:MM:ss'));\r\n  useState(()=>{\r\n    getAgentNumber().then(resp => setAgents(JSON.parse(resp.data.data)));\r\n  },[]);\r\n  let [filtersOpen, setFiltersOpen] = useState(true);\r\n  useEffect(()=>{\r\n  var filtered = [...data];\r\n  if(agentNo !== \"\"){\r\n    filtered = filtered.filter((item) => {\r\n      return Object.keys(item).some(() => {\r\n          return item.ani\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(agentNo.toLowerCase());\r\n      })\r\n  });\r\n  }\r\n  if(agentName.length > 0){\r\n    filtered = filtered.filter((item) => {\r\n     return agentName.includes(item.agent);\r\n  });\r\n  }\r\n  if(score !== \"\"){\r\n    filtered = filtered.filter((item) => {\r\n      return Object.keys(item).some(() => {\r\n          return item.score\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(score.toLowerCase());\r\n      })\r\n  });\r\n  }\r\n  filtered = filtered.filter((item)=>{\r\n    return new Date(item.timeofinsertion).getTime() <= new Date(endTimeApi).getTime() &&\r\n     new Date(item.timeofinsertion).getTime() >= new Date(startTimeApi).getTime();\r\n  })\r\n  if(agentName === \"\" && agentNo === \"\" && score === \"\"){\r\n    setFiltered(data)\r\n  }\r\n  else{\r\n    setFiltered(filtered);\r\n  }\r\n  },[agentNo,agentName,score,data,setFiltered,startTimeApi,endTimeApi]);\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0' }}>\r\n      <QualityReportDateFilter setStartTimeApi={setStartTimeApi} setEndTimeApi={setEndTimeApi}/>\r\n      <Accordion expanded={filtersOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setFiltersOpen(!filtersOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'filters'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingRight: '20px', paddingLeft: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.number'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl fullWidth style={{ marginTop: '8px' }}>\r\n                <TextField\r\n                id='agentNo'\r\n                type=\"text\"\r\n                name=\"agentNo\"\r\n                value={agentNo}\r\n                placeholder=\"Agent Number\"\r\n                onChange={(e) =>{setAgentNo(e.target.value)}}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'agent.name'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl variant='standard' fullWidth style={{ marginTop: '8px' }}>\r\n              <InputLabel id=\"agentName\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </InputLabel>\r\n                <Select\r\n                multiple\r\n                  labelId=\"agentName\"\r\n                  label={<IntlMessages id={'agent.name'} />}\r\n                  value={agentName}\r\n                  MenuProps={{ style: { maxHeight:300 } }}\r\n                  renderValue={(selected) => (\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                      {selected.map((value) => (\r\n                        <Chip key={value} label={value} />\r\n                      ))}\r\n                    </Box>\r\n                  )}\r\n                  onChange={(e) => {\r\n                    const {target:{value}} = e;\r\n                    if(value[value.length-1] === \"\"){\r\n                      setAgentName([]);\r\n                    }\r\n                    else{\r\n                      setAgentName(typeof value === 'string' ? value.split(','):value)\r\n                    }\r\n                  }}>\r\n                  <MenuItem value=\"\"><IntlMessages id={'calllog2.filter.all'} /></MenuItem>\r\n                  {agents && agents.map((item,index)=>(\r\n                  <MenuItem key={index} value={item.dn}>\r\n                    {item.dn + '-' + item.display_name}\r\n                  </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4}>\r\n              <div style={{ color: '#064635' }}>\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'score'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl  variant=\"standard\" fullWidth style={{ marginTop: '8px' }}>\r\n                <InputLabel id=\"score\">\r\n                  <IntlMessages id={'score'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"score\"\r\n                  label={<IntlMessages id={'score'} />}\r\n                  value={score}\r\n                  onChange={(e) => setScore(e.target.value)}>\r\n                  <MenuItem value=\"\"><IntlMessages id={'calllog2.filter.all'} /></MenuItem>\r\n                  <MenuItem value=\"5\">5</MenuItem>\r\n                  <MenuItem value=\"4\">4</MenuItem>\r\n                  <MenuItem value=\"3\">3</MenuItem>\r\n                  <MenuItem value=\"2\">2</MenuItem>\r\n                  <MenuItem value=\"1\">1</MenuItem>\r\n                  <MenuItem value=\"0\">0</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport dateFormat from 'dateformat';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nexport default function QualityTable({ filtered }) {\r\n  var nonRepeatingArr = [];\r\n  var copyArr = JSON.parse(JSON.stringify(filtered));\r\n  for (var i = 0; i < filtered.length; i++) {\r\n    var temp = [];\r\n    for (var j = 0; j < copyArr.length; j++) {\r\n      if (filtered[i].agent === copyArr[j].agent && filtered[i].score === copyArr[j].score) {\r\n        temp.push(filtered[i].ani);\r\n        copyArr[j].score = null;\r\n      }\r\n    }\r\n    if (temp.length > 0) {\r\n      nonRepeatingArr.push({\r\n        agent: filtered[i].agent,\r\n        score: filtered[i].score,\r\n        timeofinsertion: filtered[i].timeofinsertion,\r\n        voters: temp,\r\n      });\r\n    }\r\n  }\r\n\r\n  const [averageScores, setAverageScores] = useState([]);\r\n  useEffect(() => {\r\n    const totalScoreByAgent = filtered.reduce((acc, item) => {\r\n      return { ...acc, [item.agent]: (acc[item.agent] || 0) + parseInt(item.score) };\r\n    }, {});\r\n    const totalVotesByAgent = filtered.reduce((acc, item) => {\r\n      return { ...acc, [item.agent]: (acc[item.agent] || 0) + 1 };\r\n    }, {});\r\n    let temp = [];\r\n    for (let i in totalScoreByAgent) {\r\n      temp.push({\r\n        agent: i,\r\n        totalVote:totalVotesByAgent[i],\r\n        averageScore: (totalScoreByAgent[i] / totalVotesByAgent[i]).toFixed(1),\r\n      });\r\n    }\r\n    setAverageScores(temp);\r\n  }, [filtered]);\r\n\r\n  //popover\r\n  const [voters, setVoters] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <TableContainer style={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"Scores\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'date'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'agent.name'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'votescount'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'score'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {nonRepeatingArr.length > 0 &&\r\n              nonRepeatingArr.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{dateFormat(item.timeofinsertion, 'yyyy-mm-dd HH:MM:ss')}</TableCell>\r\n                  <TableCell>{item.agent}</TableCell>\r\n                  <TableCell>\r\n                    <span\r\n                      aria-controls={open ? 'voters-menu' : undefined}\r\n                      aria-haspopup=\"true\"\r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={e => {\r\n                        setVoters(item.voters);\r\n                        setAnchorEl(e.currentTarget);\r\n                      }}>\r\n                      <b>{item.voters.length}</b>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell>{item.score}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {averageScores.length > 0 && (\r\n        <TableContainer style={{maxHeight:\"500px\",marginTop:\"1rem\",width:\"500px\",float:\"right\"}} component={Paper}>\r\n          <Table stickyHeader aria-label=\"Average Scores\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"right\">\r\n                  <IntlMessages id={'agent.name'} />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                <IntlMessages id={'totalvotes'} />\r\n                </TableCell>\r\n                <TableCell  align=\"right\">\r\n                  <IntlMessages id={'average'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { averageScores.map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell align='right'>{item.agent}</TableCell>\r\n                    <TableCell align='right'>{item.totalVote}</TableCell>\r\n                    <TableCell align='right'><b>{item.averageScore}</b></TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n\r\n      <Menu id=\"voters-menu\" anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n        {voters.map((item, index) => (\r\n          <MenuItem key={index}>\r\n            <Chip label={item} variant=\"outlined\" />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState, useEffect } from 'react';\r\nimport QualityFilter from './Filter';\r\nimport QualityTable from './Table';\r\nimport {getQualityReport} from '../../../api/api';\r\nexport default function QualityReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'survey.report'} />, isActive: true },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const [filtered,setFiltered] = useState([]);\r\n  useEffect(()=>{\r\n    getQualityReport().then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    })\r\n  },[]);\r\n  \r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'survey.report'} />} breadcrumbs={breadcrumbs}>\r\n        <QualityFilter\r\n        data={data}\r\n        setFiltered={setFiltered}\r\n        />\r\n        <QualityTable\r\n          filtered={filtered}\r\n        />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, Typography } from '@material-ui/core';\r\nimport { DateRange, ExpandMore } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport trLocale from 'date-fns/locale/tr';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useIntl } from 'react-intl';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport nlLocale from 'date-fns/locale/nl';\r\n\r\nexport default function CallTransferReportDateFilter({ setStartTimeApi, setEndTimeApi }) {\r\n  let [dateFilterOpen, setDateFilterOpen] = useState(true);\r\n  let [timeFilterValue, setTimeFilterValue] = useState('today');\r\n  let [startDate, setStartDate] = useState(new Date().setHours(0, 0, 0));\r\n  let [endDate, setEndDate] = useState(new Date().setHours(23, 59, 59));\r\n\r\n  const handleChangeTimeFilterValue = event => {\r\n    setTimeFilterValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStartTimeApi(\r\n      new Date(startDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(startDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n    setEndTimeApi(\r\n      new Date(endDate).toLocaleDateString('tr-TR').split('.')[1] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[0] +\r\n        '-' +\r\n        new Date(endDate).toLocaleDateString('tr-TR').split('.')[2],\r\n    );\r\n  }, [startDate, endDate, setStartTimeApi, setEndTimeApi]);\r\n\r\n  useEffect(() => {\r\n    let start = new Date();\r\n    let end = new Date();\r\n    switch (timeFilterValue) {\r\n      case 'yesterday':\r\n        start.setDate(start.getDate() - 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setDate(end.getDate() - 1);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastweek':\r\n        start.setDate(start.getDate() - 7);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'lastmount':\r\n        start.setDate(start.getDate() - 30);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last3mount':\r\n        start.setDate(start.getDate() - 90);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'last6mouth':\r\n        start.setDate(start.getDate() - 180);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'today':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisweek':\r\n        start.setDate(start.getDate() - start.getDay() + 1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thismounth':\r\n        start.setDate(1);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'thisyear':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'all':\r\n        start.setDate(1);\r\n        start.setMonth(0);\r\n        start.setFullYear(2000);\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n      case 'special':\r\n        start.setHours(0, 0, 0);\r\n        end.setHours(23, 59, 59);\r\n        setStartDate(start);\r\n        setEndDate(end);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [timeFilterValue]);\r\n\r\n  let curentLanguage = useIntl();\r\n\r\n  return (\r\n    <div>\r\n      <Accordion expanded={dateFilterOpen}>\r\n        <AccordionSummary expandIcon={<ExpandMore />} onClick={() => setDateFilterOpen(!dateFilterOpen)}>\r\n          <Typography style={{ marginLeft: '10px' }}>\r\n            <IntlMessages id={'datefilter'} />\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails style={{ paddingLeft: '20px', paddingRight: '20px' }}>\r\n          <GridContainer>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} />\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px', marginBottom: '8px' }} />\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"tarihhhhh\">\r\n                  <IntlMessages id={'dateoption'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"tarihhhhh\"\r\n                  id=\"demo-simple-select\"\r\n                  value={timeFilterValue}\r\n                  label=\"Tarih Filtresi\"\r\n                  onChange={handleChangeTimeFilterValue}>\r\n                  <MenuItem value={'yesterday'}>\r\n                    <IntlMessages id={'yesterday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastweek'}>\r\n                    <IntlMessages id={'last7days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'lastmount'}>\r\n                    <IntlMessages id={'last30days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last3mount'}>\r\n                    <IntlMessages id={'last90days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'last6mouth'}>\r\n                    <IntlMessages id={'last180days'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'today'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisday'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisweek'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisweek'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thismounth'}>\r\n                    <IntlMessages id={'fronthebeginninfofthismounth'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'thisyear'}>\r\n                    <IntlMessages id={'fronthebeginninfofthisyear'} />\r\n                  </MenuItem>\r\n                  <MenuItem value={'special'}>\r\n                    <IntlMessages id={'custom'} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 1\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    value=\"yesterday\"\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'yesterday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last7days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"lastmount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last30days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last3mount\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last90days'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"last6mouth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'last180days'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 2\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"today\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisday'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisweek\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisweek'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thismounth\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthismounth'} />}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"thisyear\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'fronthebeginninfofthisyear'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={2}>\r\n              <div style={{ color: '#064635' }}>\r\n                <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                  <IntlMessages id={'dateoption'} /> 3\r\n                </b>\r\n              </div>\r\n              <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n              <FormControl>\r\n                <RadioGroup value={timeFilterValue} onChange={handleChangeTimeFilterValue}>\r\n                  <FormControlLabel\r\n                    value=\"special\"\r\n                    style={{ fontSize: '1px', opacity: '.8' }}\r\n                    control={<Radio size=\"small\" style={{ padding: '4px' }} />}\r\n                    label={<IntlMessages id={'custom'} />}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid> */}\r\n            {timeFilterValue === 'special' && (\r\n              <Grid item md={5}>\r\n                <div style={{ color: '#064635' }}>\r\n                  <DateRange style={{ verticalAlign: '-5px' }} fontSize=\"medium\" />\r\n                  <b style={{ fontSize: '18px', fontFamily: 'sans-serif' }}>\r\n                    <IntlMessages id={'customselect'} />\r\n                  </b>\r\n                </div>\r\n                <hr style={{ opacity: '.5', marginTop: '8px' }} />\r\n                <div style={{ marginTop: '10px' }}>\r\n                  <GridContainer>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={startDate}\r\n                          onChange={newValue => setStartDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.startdate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={\r\n                          curentLanguage.locale === 'en-EN'\r\n                            ? enLocale\r\n                            : curentLanguage.locale === 'nl-NL'\r\n                            ? nlLocale\r\n                            : curentLanguage.locale === 'tr-TR'\r\n                            ? trLocale\r\n                            : curentLanguage.locale === 'de-DE'\r\n                            ? deLocale\r\n                            : enLocale\r\n                        }>\r\n                        {' '}\r\n                        <DatePicker\r\n                          value={endDate}\r\n                          onChange={newValue => setEndDate(newValue)}\r\n                          renderInput={params => <TextField {...params} />}\r\n                          format=\"YYYY-MM-DD HH:mm\"\r\n                          inputVariant=\"outlined\"\r\n                          label={<IntlMessages id={'filter.menu.enddate'} />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n                  </GridContainer>\r\n                </div>\r\n              </Grid>\r\n            )}\r\n          </GridContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport GridContainer from '@jumbo/components/GridContainer';\r\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport * as api from '../../../../api/api';\r\nimport DidReportDateFilter from './DateFilter';\r\n\r\nexport default function Filter({ setSelectedStartTime, setSelectedEndTime, agent, setAgent }) {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      margin: '0 auto',\r\n      backgroundColor: lighten(theme.palette.background.paper, 0.1),\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [agents, setAgents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.getAgentNumber().then(resp => {\r\n      setAgents(JSON.parse(resp.data.data));\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setAgent(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <DidReportDateFilter setStartTimeApi={setSelectedStartTime} setEndTimeApi={setSelectedEndTime} />\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <GridContainer>\r\n            <Grid item md={4}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel id=\"select-did-numbers\">\r\n                  <IntlMessages id={'calltransferreport.agnet'} />\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"select-did-numbers\"\r\n                  id=\"demo-simple\"\r\n                  label={<IntlMessages id={'calltransferreport.agnet'} />}\r\n                  value={agent}\r\n                  onChange={handleChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>\r\n                      <IntlMessages id={'all'} />\r\n                    </em>\r\n                  </MenuItem>\r\n                  {agents.map((agent, index) => (\r\n                    <MenuItem key={index} value={agent.display_name}>\r\n                      {agent.display_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </GridContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { localeText } from '@jumbo/utils/DataGridLocales';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Paper } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { getCallTransferReport } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { AccessTime, DateRange } from '@material-ui/icons';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\n\r\nexport default function DataTable({ agent, selectedStartTime, selectedEndTime }) {\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getCallTransferReport(agent, selectedStartTime, selectedEndTime).then(resp => {\r\n      setData(JSON.parse(resp.data.data));\r\n    });\r\n  }, [agent, selectedStartTime, selectedEndTime]);\r\n\r\n  let rows = data.map((item, index) => ({\r\n    id: index,\r\n    transferer: item.transferer,\r\n    trasfered: item.trasfered,\r\n    caller: item.caller,\r\n    start_time: item.start_time,\r\n    answer_time: item.answer_time,\r\n    end_time: item.end_time,\r\n    ring_time: item.ring_time,\r\n    talk_time: item.talk_time,\r\n  }));\r\n\r\n  const columns = [\r\n    {\r\n      field: 'transferer',\r\n      headerName: <IntlMessages id={'calltransferreport.transferfrom'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'trasfered',\r\n      headerName: <IntlMessages id={'calltransferreport.transferto'} />,\r\n      width: 200,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'caller',\r\n      headerName: <IntlMessages id={'calltransferreport.caller'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'start_time',\r\n      headerName: <IntlMessages id={'calltransferreport.starttime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'answer_time',\r\n      headerName: <IntlMessages id={'calltransferreport.answertime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'end_time',\r\n      headerName: <IntlMessages id={'calltransferreport.endtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'ring_time',\r\n      headerName: <IntlMessages id={'calltransferreport.ringingtime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n    {\r\n      field: 'talk_time',\r\n      headerName: <IntlMessages id={'calltransferreport.talktime'} />,\r\n      width: 150,\r\n      renderCell: params => <span>{params.value}</span>,\r\n    },\r\n  ];\r\n\r\n  const [total, setTotal] = useState({totalRingTime:\"00h 00m 00s\",totalTalkTime:\"00h 00m 00s\",totalCount:0});\r\n  useEffect(()=>{\r\n    let totalring = 0;\r\n    let totalTalk = 0;\r\n    data.forEach(async (item)=>{\r\n      totalring+= convertSec(item.ring_time);\r\n      totalTalk+= convertSec(item.talk_time);\r\n    });\r\n    setTotal({\r\n      totalRingTime: convertTime(totalring),\r\n      totalTalkTime: convertTime(totalTalk),\r\n      totalCount:data.length\r\n    })\r\n  },[data])\r\n\r\n  return (\r\n    <div>\r\n      <Paper style={{ height: '600px', width: '100%' }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          localeText={localeText}\r\n          componentsProps={{\r\n            pagination: {\r\n              labelRowsPerPage: <IntlMessages id={'rows.per.page'} />,\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n      <Paper style={{ marginTop: '15px' }}>\r\n        <TableContainer style={{ maxHeight: '440px' }}>\r\n          <Table stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'dailysummary.date'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'abondenedcalls.count'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.agentdetail.timedetails.totalwaitingtime'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'wallboard.call.time'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <span style={{ color: '#519259' }}>\r\n                    <DateRange style={{ verticalAlign: '-5px' }} />{' '}\r\n                  </span>\r\n                  <b>\r\n                    <IntlMessages id={'total'} />\r\n                  </b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto' }}>\r\n                  <AddIcCallIcon style={{ verticalAlign: '-5px', color: '#406882' }} /> <b>{total.totalCount}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalRingTime}</b>\r\n                </TableCell>\r\n                <TableCell style={{ paddingTop: '2px', paddingBottom: '2px', fontFamily: 'Roboto', color: '#DB6B97' }}>\r\n                  <AccessTime style={{ verticalAlign: '-5px' }} /> <b>{total.totalTalkTime}</b>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst convertSec = (str) =>{\r\n  var hour = parseInt(str.slice(0,2));\r\n  var min = parseInt(str.slice(3,6));\r\n  var sec = parseInt(str.slice(8,10));\r\n  return hour*3600+min*60+sec;\r\n}\r\nconst convertTime = (sec) =>{\r\n  var hours   = Math.floor(sec / 3600);\r\n  var minutes = Math.floor((sec - (hours * 3600)) / 60);\r\n  var seconds = sec - (hours * 3600) - (minutes * 60);\r\n  if (hours   < 10) {hours   = \"0\"+hours;}\r\n  if (minutes < 10) {minutes = \"0\"+minutes;}\r\n  if (seconds < 10) {seconds = \"0\"+seconds;}\r\n  return `${hours}h ${minutes}m ${seconds}s`;\r\n}","import GridContainer from '@jumbo/components/GridContainer';\r\nimport PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Filter from './Filter';\r\nimport Table from './Table';\r\nimport dateFormat from 'dateformat';\r\n\r\nexport default function CallTransferReport() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'main.reports'} />, link: '/' },\r\n    { label: <IntlMessages id={'calltransferreport'} />, isActive: true },\r\n  ];\r\n\r\n  const [selectedStartTime, setSelectedStartTime] = useState(dateFormat(new Date().setHours(0, 0, 0),'yyyy-mm-dd'));\r\n  const [selectedEndTime, setSelectedEndTime] = useState(dateFormat(new Date().setHours(23, 59, 59),'yyyy-mm-dd'));\r\n  const [agent, setAgent] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'calltransferreport'} />} breadcrumbs={breadcrumbs}>\r\n        <GridContainer>\r\n          <Grid item xs={12}>\r\n            <Filter\r\n              agent={agent}\r\n              setAgent={setAgent}\r\n              selectedStartTime={selectedStartTime}\r\n              selectedEndTime={selectedEndTime}\r\n              setSelectedEndTime={setSelectedEndTime}\r\n              setSelectedStartTime={setSelectedStartTime}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Table agent={agent} selectedStartTime={selectedStartTime} selectedEndTime={selectedEndTime} />\r\n          </Grid>\r\n        </GridContainer>\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakName } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakNameModal({ id, selectedBreakName, handleBreakNameModalClose }) {\r\n  let [newName, setNewName] = useState(selectedBreakName);\r\n  const handleSubmit = () => {\r\n    setBreakName(newName, id).then(rep => {\r\n      handleBreakNameModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breakname'} />}\r\n        variant=\"outlined\"\r\n        value={newName}\r\n        onChange={event => setNewName(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakNameModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { setBreakTime } from 'api/api';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function BreaksChangeBreakTimeModal({ logouttype, period, handleBreakTimeModalClose }) {\r\n  let [newTime, setNewTime] = useState(period);\r\n  const handleSubmit = () => {\r\n    setBreakTime(newTime, logouttype).then(resp => {\r\n      handleBreakTimeModalClose();\r\n    });\r\n  };\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <TextField\r\n        label={<IntlMessages id={'edit.breaks.breaktime'} />}\r\n        variant=\"outlined\"\r\n        value={newTime}\r\n        onChange={event => setNewTime(event.target.value)}\r\n      />\r\n      <div style={{ marginTop: '10px' }}>\r\n        <Button variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'edit.breaks.change'} />\r\n        </Button>\r\n        <Button variant=\"contained\" style={{ marginLeft: '10px' }} onClick={() => handleBreakTimeModalClose()}>\r\n          <IntlMessages id={'close'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { Box, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getBreakName, getBreakTime } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport BreaksChangeBreakNameModal from './Modals/BreaksChangeBreakNameModal';\r\nimport BreaksChangeBreakTimeModal from './Modals/BreaksChangeBreakTimeModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function EditBreaks() {\r\n  const [breaks, setBreaks] = useState([]);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const [breakNameModalopen, setBreakNameModalOpen] = useState(false);\r\n  const handleBreakNameModalOpen = () => setBreakNameModalOpen(true);\r\n  const handleBreakNameModalClose = () => setBreakNameModalOpen(false);\r\n  let [selectedBreakId, setSelectedBreakId] = useState('');\r\n  let [selectedBreakName, setSelectedBreakName] = useState('');\r\n  const handleClickName = (id, name) => {\r\n    setSelectedBreakId(id);\r\n    setSelectedBreakName(name);\r\n    handleBreakNameModalOpen();\r\n  };\r\n\r\n  const [breakTimeModalopen, setBreakTimeModalOpen] = useState(false);\r\n  const handleBreakTimeModalOpen = () => setBreakTimeModalOpen(true);\r\n  const handleBreakTimeModalClose = () => setBreakTimeModalOpen(false);\r\n  let [selectedLogoutType, setSelectedLogoutType] = useState('');\r\n  let [selectedBreakTime, setSelectedBreakTime] = useState('');\r\n  const handleClickTime = (logoutType, time) => {\r\n    setSelectedLogoutType(logoutType);\r\n    setSelectedBreakTime(time);\r\n    handleBreakTimeModalOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBreakTime().then(resp => {\r\n      var mola = JSON.parse(resp.data.data);\r\n      getBreakName().then(res => {\r\n        var molaAdı = JSON.parse(res.data.data);\r\n        for (var i = 0; i < mola.length; i++) {\r\n          for (var z = 0; z < molaAdı.length; z++) {\r\n            if (mola[i].logouttype === molaAdı[z].value) {\r\n              mola[i].name = molaAdı[z].name;\r\n              mola[i].id = molaAdı[z].iddn;\r\n            }\r\n          }\r\n        }\r\n        setBreaks(mola);\r\n      });\r\n    });\r\n  }, [breakNameModalopen, breakTimeModalopen]);\r\n\r\n  console.log(breaks);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakcode'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breakname'} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IntlMessages id={'edit.breaks.breaktime'} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {breaks.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.logouttype}</TableCell>\r\n                  <TableCell onClick={() => handleClickName(item.id, item.name)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.name}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => handleClickTime(item.logouttype, item.period)} style={{ cursor: 'pointer' }}>\r\n                    <EditIcon style={{ verticalAlign: '-5px', color: '#1A374D' }} /> {item.period}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Modal\r\n        open={breakNameModalopen}\r\n        onClose={handleBreakNameModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakNameModal\r\n            id={selectedBreakId}\r\n            selectedBreakName={selectedBreakName}\r\n            handleBreakNameModalClose={handleBreakNameModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={breakTimeModalopen}\r\n        onClose={handleBreakTimeModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <BreaksChangeBreakTimeModal\r\n            logouttype={selectedLogoutType}\r\n            period={selectedBreakTime}\r\n            handleBreakTimeModalClose={handleBreakTimeModalClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </PageContainer>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { addUserOwndedDeps, deleteUserOwndedDeps, getDepartmants, getSupervisors, getUserOwndedDeps } from 'api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserDepartmans({ reloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  let [deps, setDeps] = useState([]);\r\n  let [userOwnedDeps, setUserOwnedDeps] = useState([]);\r\n  let [selectedUserId, setSelectedUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getSupervisors().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserOwndedDeps(selectedUserId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].department_id);\r\n      }\r\n      setUserOwnedDeps(tempArr);\r\n    });\r\n  }, [selectedUserId]);\r\n\r\n  const handleCheckboxClick = (depId, event) => {\r\n    if (event.target.checked) {\r\n      //ekleme\r\n      addUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      //silme\r\n      deleteUserOwndedDeps(selectedUserId, depId).then(result => {\r\n        getUserOwndedDeps(selectedUserId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].department_id);\r\n          }\r\n          setUserOwnedDeps(tempArr);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'supervisors'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users.map(user => (\r\n                    <TableRow key={user.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedUserId === user.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedUserId(user.id)}>\r\n                        {user.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={userOwnedDeps.includes(dep.id)}\r\n                          onChange={event => handleCheckboxClick(dep.id, event)}\r\n                        />\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addUser } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddUserModal({ setReloadValues, addHandleClose }) {\r\n  let [userName, setUserName] = useState('');\r\n  const handleChangeUserName = event => {\r\n    // setUserName(userName + event.nativeEvent.data);\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState('');\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState('admin');\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      addUser(userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(userName);\r\n        addHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    //   onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'admin'}>Admin</MenuItem>\r\n          <MenuItem value={'supervisor'}>Supervisor</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, FormControl, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateUser } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateUserModal({ setReloadValues, updateHandleClose, selectedUser }) {\r\n  let [userName, setUserName] = useState(selectedUser.name);\r\n  const handleChangeUserName = event => {\r\n    // setUserName(userName + event.nativeEvent.data);\r\n    setUserName(event.target.value);\r\n  };\r\n  let [password, setPassword] = useState(selectedUser.pass);\r\n  const handleChangePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  let [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  let [userType, setUserType] = useState(selectedUser.type);\r\n  const handleChangeUserType = event => {\r\n    setUserType(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userName === undefined || userName === '') {\r\n      NotificationManager.error('Kullanıcı adı doğru formatta değil', '', 3000);\r\n    } else if (password === undefined || password === '') {\r\n      NotificationManager.error('Şifre doğru formatta değil', '', 3000);\r\n    } else if (userType === undefined || password === '') {\r\n      NotificationManager.error('User Type doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateUser(selectedUser.id, userName, password, userType).then(result => {\r\n        NotificationManager.success('Kullanıcı Güncellendi', '', 3000);\r\n        setReloadValues(userName);\r\n        updateHandleClose('');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"username\">\r\n              <IntlMessages id={'username'} />\r\n            </InputLabel>\r\n            <OutlinedInput id=\"username\" type=\"text\" value={userName} onChange={handleChangeUserName} label=\"User Name\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              <IntlMessages id={'password'} />\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    //   onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\">\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </GridContainer>\r\n      <FormControl sx={{ width: '100%', m: 1 }}>\r\n        <InputLabel id=\"usertype\">\r\n          <IntlMessages id={'usertype'} />\r\n        </InputLabel>\r\n        <Select labelId=\"usertype\" label=\"User Type\" id=\"usertype-select\" value={userType} onChange={handleChangeUserType}>\r\n          <MenuItem value={'admin'}>Admin</MenuItem>\r\n          <MenuItem value={'supervisor'}>Supervisor</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { deleteUserByUserId, deleteUserOwndedDepsByUserId, getUsers } from '../../../../api/api';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport UpdateUserModal from './UpdateUserModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UserTable({ reloadValues, setReloadValues }) {\r\n  let [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    getUsers().then(result => {\r\n      setUsers(JSON.parse(result.data.data));\r\n      console.log(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState({ id: '0', name: '', pass: '', type: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = user => {\r\n    setSelectedUser(user);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = userId => {\r\n    deleteUserOwndedDepsByUserId(userId).then(res1 => {\r\n      deleteUserByUserId(userId).then(res2 => {\r\n        setReloadValues(userId.toString());\r\n      });\r\n    });\r\n  };\r\n  const username = localStorage.getItem(\"username\") || \"admin\";\r\n\r\n  return (\r\n    <>\r\n      <div style={{marginBottom: '10px',display:'flex',justifyContent:'space-between' }}>\r\n        <h2 style={{fontWeight:'300'}}><IntlMessages id={'welcome'} />, <b>{username}</b></h2>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adduser'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'username'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'password'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'usertype'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map(user => (\r\n              <TableRow key={user.id}>\r\n                <TableCell>{user.name}</TableCell>\r\n                <TableCell>********</TableCell>\r\n                <TableCell>{user.type}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(user)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(user.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddUserModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateUserModal\r\n            selectedUser={selectedUser}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport UserDepartmans from './UserDepartmans/UserDepartmans';\r\nimport UserTable from './UserTable/UserTable';\r\n\r\nexport default function UserSettings() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'usersettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'usersettings'} />} breadcrumbs={breadcrumbs}>\r\n        <UserTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <UserDepartmans reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\n\r\nexport default function AddTagModal({ setReloadTags, addHandleClose }) {\r\n\r\n  //departmanlar\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  //departmanları getir\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  //form bilgileri\r\n  const [depId, setDepId] = useState(\"\");\r\n  const [depName, setDepName] = useState(\"\");\r\n  const [tagName, setTagName] = useState(\"\");\r\n\r\n  //selecten department seçilirse\r\n  const handleDepChange = (e) => {\r\n    //value ver texti al id ve name olarak geç\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value)\r\n  }\r\n\r\n  //submit edilirse\r\n  const handleSubmit = () => {\r\n\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n        addTagTypes(depName,tagName,depId).then(() => {\r\n          NotificationManager.success('Etiket Eklendi', '', 3000);\r\n          setReloadTags((prev) =>prev+1);\r\n          addHandleClose();\r\n        });\r\n      }else{\r\n        NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\"><IntlMessages id={'tag'} /></InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={(e) => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\" />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n      <InputLabel id=\"depNameAddLbl\"><IntlMessages id={'departmentname'} /></InputLabel>\r\n          <Select\r\n            labelId='depNameAddLbl'\r\n            fullWidth\r\n            value={depId}\r\n            onChange={handleDepChange}\r\n          >\r\n            {departments && \r\n            departments.map((item, index) => (\r\n            <MenuItem key={index} value={item.id}>{item.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n          <Button sx={{ width: '100%',marginTop:'1rem' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n            <IntlMessages id={'add'} />\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, InputLabel, Select, MenuItem, Stack, OutlinedInput, FormControl } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { setTagTypes, getDepartmants } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\n\r\nexport default function UpdateTagModal({ selectedTag,setReloadTags, updateHandleClose }) {\r\n\r\n  //departmanlar\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  //departmanları getir\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDepartments(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n\r\n  //form bilgileri\r\n  const [depId, setDepId] = useState(selectedTag.department_id);\r\n  const [depName, setDepName] = useState(selectedTag.department);\r\n  const [tagName, setTagName] = useState(selectedTag.tagmassage);\r\n\r\n  //selecten department seçilirse\r\n  const handleDepChange = (e) => {\r\n    //value ver texti al id ve name olarak geç\r\n    var departmentName = departments.find(item => item.id === e.target.value).name;\r\n    setDepName(departmentName);\r\n    setDepId(e.target.value)\r\n  }\r\n\r\n  //submit edilirse\r\n  const handleSubmit = () => {\r\n    if ((tagName !== undefined || tagName !== '') && (depId !== undefined || depId !== '')) {\r\n        setTagTypes(depName,tagName,depId,selectedTag.tagtypes_id).then(() => {\r\n          NotificationManager.success('Etiket Güncellendi', '', 3000);\r\n          setReloadTags((prev) =>prev+1);\r\n          updateHandleClose();\r\n        });\r\n      }else{\r\n        NotificationManager.error('Veriler doğru formatta değil', '', 3000);\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor=\"tag\"><IntlMessages id={'tag'} /></InputLabel>\r\n          <OutlinedInput\r\n            id=\"tag\"\r\n            type=\"text\"\r\n            value={tagName}\r\n            onChange={(e) => setTagName(e.target.value)}\r\n            label=\"Etiket Adı\" />\r\n      </FormControl>\r\n      <FormControl fullWidth>\r\n      <InputLabel htmlFor=\"depNameUpdateLbl\"><IntlMessages id={'departmentname'} /></InputLabel>\r\n          <Select\r\n            labelId='depNameUpdateLbl'\r\n            fullWidth\r\n            value={depId}\r\n            onChange={handleDepChange}\r\n          >\r\n            {departments && \r\n            departments.map((item, index) => (\r\n            <MenuItem key={index} value={item.id}>{item.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n\r\n        </FormControl>\r\n      </Stack>\r\n      <div>\r\n          <Button sx={{ width: '100%',marginTop:'1rem' }} color=\"warning\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n            <IntlMessages id={'update'} />\r\n          </Button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { getTagTypes, deleteTag } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddTagModal from './AddTagModal';\r\nimport UpdateTagModal from './UpdateTagModal';\r\n// import UpdateDepartmanModal from './UpdateDepartmanModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function TagTable() {\r\n  let [tags, setTags] = useState([]);\r\n  let [reloadTags,setReloadTags] = useState(0);\r\n  useEffect(() => {\r\n    getTagTypes().then(resp => {\r\n        setTags(JSON.parse(resp.data.data));\r\n    });\r\n  }, [reloadTags]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n   let [selectedTag, setSelectedTag] = useState({ department: '', department_id: '',tagmassage:'' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = tag => {\r\n    setSelectedTag(tag);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = (tag) => {\r\n    deleteTag(tag).then(() => {\r\n      setReloadTags((prev)=> prev+1);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex',alignItems:\"center\",justifyContent:\"space-between\", margin: '10px 0' }}>\r\n        <h3><IntlMessages id={'tag'} /></h3>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'addtag'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer sx={{ maxHeight: '500px' }} component={Paper}>\r\n        <Table stickyHeader aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n              <IntlMessages id={'tag'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tags.map((item,index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{item.department}</TableCell>\r\n                <TableCell>{item.tagmassage}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(item)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(item.tagtypes_id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddTagModal addHandleClose={addHandleClose} setReloadTags={setReloadTags} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateTagModal\r\n            selectedTag={selectedTag}\r\n            setReloadTags={setReloadTags}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import GridContainer from '@jumbo/components/GridContainer';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { addDepOwnedQueues, deleteDepOwnedQueues, getDepartmants, getDepOwnedQueues, getQueues } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport TagTable from '../TagTable/TagTable';\r\n\r\nexport default function DepartmentQueues({ reloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  let [queues, setQueues] = useState([]);\r\n  let [depOwnedQueues, setDepOwnedQueues] = useState([]);\r\n  let [selectedDepId, setSelectedDepId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n  useEffect(() => {\r\n    getQueues().then(result => {\r\n      setQueues(JSON.parse(result.data.data));\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    getDepOwnedQueues(selectedDepId).then(result => {\r\n      let tempArr = [];\r\n      let resArr = JSON.parse(result.data.data);\r\n      for (let i = 0; i < resArr.length; i++) {\r\n        tempArr.push(resArr[i].queue_id);\r\n      }\r\n      setDepOwnedQueues(tempArr);\r\n    });\r\n  }, [selectedDepId]);\r\n\r\n  const handleCheckboxClick = (queueId, event) => {\r\n    if (event.target.checked) {\r\n      //ekleme\r\n      addDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    } else {\r\n      //silme\r\n      deleteDepOwnedQueues(selectedDepId, queueId).then(res => {\r\n        getDepOwnedQueues(selectedDepId).then(result => {\r\n          let tempArr = [];\r\n          let resArr = JSON.parse(result.data.data);\r\n          for (let i = 0; i < resArr.length; i++) {\r\n            tempArr.push(resArr[i].queue_id);\r\n          }\r\n          setDepOwnedQueues(tempArr);\r\n        });\r\n      });\r\n    }\r\n    console.log(event.target.checked);\r\n    console.log(queueId);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      <GridContainer>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'departments'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {deps.map(dep => (\r\n                    <TableRow key={dep.id}>\r\n                      <TableCell\r\n                        style={{ backgroundColor: selectedDepId === dep.id ? '#90E0EF' : 'white' }}\r\n                        onClick={() => setSelectedDepId(dep.id)}>\r\n                        {dep.name}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n\r\n          <TagTable/>\r\n\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <Paper>\r\n            <TableContainer sx={{ maxHeight: '500px' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IntlMessages id={'queue.answer.report.queues'} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {queues.map(queue => (\r\n                    <TableRow key={queue.id}>\r\n                      <TableCell>\r\n                        <Checkbox\r\n                          checked={depOwnedQueues.includes(queue.id)}\r\n                          onChange={event => handleCheckboxClick(queue.id, event)}\r\n                        />\r\n\r\n                        {queue.display_name}\r\n                        <b> ({queue.dn})</b>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Paper>\r\n        </Grid>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { addDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function AddDepartmanModal({ setReloadValues, addHandleClose }) {\r\n  let [name, setName] = useState('');\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      addDepartmant(name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        addHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'add'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, FormControl, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { updateDepartmant } from '../../../../api/api';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function UpdateDepartmanModal({ selectedDep, setReloadValues, updateHandleClose }) {\r\n  let [name, setName] = useState(selectedDep.name);\r\n  const handleChangeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (name === undefined || name === '') {\r\n      NotificationManager.error('Departman adı doğru formatta değil', '', 3000);\r\n    } else {\r\n      updateDepartmant(selectedDep.id, name).then(result => {\r\n        NotificationManager.success('Kullanıcı Eklendi', '', 3000);\r\n        setReloadValues(name);\r\n        updateHandleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer />\r\n      <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n        <InputLabel htmlFor=\"name\">\r\n          <IntlMessages id={'departmentname'} />\r\n        </InputLabel>\r\n        <OutlinedInput id=\"name\" type=\"text\" value={name} onChange={handleChangeName} label=\"Departmant Name\" />\r\n      </FormControl>\r\n      <div>\r\n        <Button sx={{ width: '100%' }} color=\"info\" variant=\"contained\" onClick={() => handleSubmit()}>\r\n          <IntlMessages id={'update'} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Button, Modal, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { deleteDepOwnedAllQueues, deleteDepWithDepId, deleteUserAllDepsWithDepId, getDepartmants } from 'api/api';\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddDepartmanModal from './AddDepartmanModal';\r\nimport UpdateDepartmanModal from './UpdateDepartmanModal';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\n\r\nexport default function DepartmantTable({ reloadValues, setReloadValues }) {\r\n  let [deps, setDeps] = useState([]);\r\n  useEffect(() => {\r\n    getDepartmants().then(result => {\r\n      setDeps(JSON.parse(result.data.data));\r\n    });\r\n  }, [reloadValues]);\r\n\r\n  const [addModal, setAddModal] = useState(false);\r\n  const addHandleOpen = () => setAddModal(true);\r\n  const addHandleClose = () => setAddModal(false);\r\n\r\n  const [updateModal, setUpdateModal] = useState(false);\r\n  let [selectedDep, setSelectedDep] = useState({ id: 0, name: '' });\r\n  const updateHandleOpen = () => setUpdateModal(true);\r\n  const updateHandleClose = () => setUpdateModal(false);\r\n  const handleClickEdit = dep => {\r\n    setSelectedDep(dep);\r\n    updateHandleOpen();\r\n  };\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '50%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const handleDeleteClick = depId => {\r\n    deleteDepOwnedAllQueues(depId).then(res1 => {\r\n      deleteUserAllDepsWithDepId(depId).then(res2 => {\r\n        deleteDepWithDepId(depId).then(res3 => {\r\n          setReloadValues(depId.toString());\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'right', marginBottom: '10px' }}>\r\n        <Button sx={{ backgroundColor: '#3E7C17', color: 'white' }} onClick={() => addHandleOpen()}>\r\n          <AddIcon sx={{ verticalAlign: '-5px' }} /> <IntlMessages id={'adddepartment'} />\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxHeight: '500px' }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <IntlMessages id={'departmentname'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'edit'} />\r\n              </TableCell>\r\n              <TableCell>\r\n                <IntlMessages id={'delete'} />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deps.map(dep => (\r\n              <TableRow key={dep.id}>\r\n                <TableCell>{dep.name}</TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleClickEdit(dep)}>\r\n                  <EditIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n                <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleDeleteClick(dep.id)}>\r\n                  <DeleteIcon sx={{ color: '#B33030' }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Modal\r\n        open={addModal}\r\n        onClose={addHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <AddDepartmanModal addHandleClose={addHandleClose} setReloadValues={setReloadValues} />\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={updateModal}\r\n        onClose={updateHandleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n        <Box sx={style}>\r\n          <UpdateDepartmanModal\r\n            selectedDep={selectedDep}\r\n            setReloadValues={setReloadValues}\r\n            updateHandleClose={updateHandleClose}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import PageContainer from '@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport IntlMessages from '@jumbo/utils/IntlMessages';\r\nimport React, { useState } from 'react';\r\nimport DepartmentQueues from './DepartmentQueues/DepartmentQueues';\r\nimport DepartmantTable from './DeportmentTable/DepartmantTable';\r\n\r\nexport default function DepartmansSettigns() {\r\n  const breadcrumbs = [\r\n    { label: <IntlMessages id={'settings'} />, link: '/' },\r\n    { label: <IntlMessages id={'departmentsettings'} />, isActive: true },\r\n  ];\r\n  let [reloadValues, setReloadValues] = useState('');\r\n  return (\r\n    <div>\r\n      <PageContainer heading={<IntlMessages id={'departmentsettings'} />} breadcrumbs={breadcrumbs}>\r\n        <DepartmantTable reloadValues={reloadValues} setReloadValues={setReloadValues} />\r\n        <DepartmentQueues reloadValues={reloadValues} />\r\n      </PageContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Dashboard from './Pages/Dashboard';\r\nimport Error404 from './Pages/404';\r\nimport Login from './Auth/Login';\r\nimport AgentStatus from './Pages/AgentStatus';\r\nimport Register from './Auth/Register';\r\nimport CallLog from './Pages/CallLog';\r\nimport CallManagement from './Pages/CallManagement';\r\nimport DroppedCall from './Pages/DroppedCall';\r\nimport DidReport from './Pages/DIDReport';\r\nimport ForgotPasswordPage from './Auth/ForgotPassword';\r\nimport { PrivateRouteLogin } from './Private/PrivateRouteLogin';\r\nimport { NotPrivateRoute } from './Private/NotPrivateRoute';\r\nimport ServiceLevel from './Pages/ServiceLevel';\r\nimport { AbandonedQueues } from './Pages/AbandonedQueues';\r\nimport RepetetiveCalls from './Pages/RepetetiveCalls';\r\nimport WallBoard from './Pages/WallBoard';\r\nimport DailyLog from './Pages/DailyLog';\r\nimport DailyAcc from './Pages/DailyAcc';\r\nimport CallComparison from './Pages/CallComparison';\r\nimport MonthlyLog from './Pages/MonthlyLog';\r\nimport ReturnedDropCall from './Pages/ReturnedDropCall';\r\nimport AgentCDR from './Pages/AgentSessionReport';\r\nimport IYS from './Pages/IYS';\r\nimport Users from './Pages/MicrosoftTeams/Users';\r\nimport MonthlyDetails from './Pages/MonthlyDetails';\r\nimport QueueAnswerReport from './Pages/QueueAnswerReport';\r\nimport AbondenedCalls from './Pages/AbondenedCalls';\r\nimport AgentCdrReport from './Pages/AgentCdrReport';\r\nimport DailySumaryReport from './Pages/DailySummaryReport';\r\nimport InternalsSummaryReport from './Pages/InternalsSummaryReport';\r\nimport CallLog2 from './Pages/CallLog2';\r\nimport QualityReport from './Pages/QualityReport';\r\nimport './index.css';\r\nimport CallTransferReport from './Pages/CallTransferReport';\r\nimport EditBreaks from './Pages/EditBreaks';\r\nimport UserSettings from './Pages/UserSettings/UserSettings';\r\nimport DepartmansSettigns from './Pages/DepartmansSettingns/DepartmansSettigns';\r\n\r\n// const RestrictedRoute = ({ component: Component, ...rest }) => {\r\n//   const { authUser } = useSelector(({ auth }) => auth);\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={props =>\r\n//         localStorage.getItem('login') === 200 ? (\r\n//           <Component {...props} />\r\n//         ) : (\r\n//           <Redirect\r\n//             to={{\r\n//               pathname: '/signin',\r\n//               state: { from: props.location },\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst Routes = () => {\r\n  const location = useLocation();\r\n\r\n  if (location.pathname === '' || location.pathname === '/') {\r\n    return <Redirect to={'/dashboard'} />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <NotPrivateRoute path=\"/reports/agentcdr\" component={AgentCDR} />\r\n        <NotPrivateRoute path=\"/reports/returned-dropcall\" component={ReturnedDropCall} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <NotPrivateRoute path=\"/wallboard\" component={WallBoard} />\r\n        <NotPrivateRoute path=\"/reports/callLogold\" component={CallLog} />\r\n        <NotPrivateRoute path=\"/reports/calltransferreport\" component={CallTransferReport} />\r\n        <NotPrivateRoute path=\"/reports/callLog\" component={CallLog2} />\r\n        <NotPrivateRoute path=\"/reports/callmanagement\" component={CallManagement}/>\r\n        <NotPrivateRoute path=\"/reports/servicelevel\" component={ServiceLevel} />\r\n        <NotPrivateRoute path=\"/reports/agentstatus\" component={AgentStatus} />\r\n        <NotPrivateRoute path=\"/reports/callcomparison\" component={CallComparison} />\r\n        <NotPrivateRoute path=\"/signup\" component={Register} />\r\n        <NotPrivateRoute path=\"/reports/repetetive-calls\" component={RepetetiveCalls} />\r\n        <NotPrivateRoute path=\"/forgot-password\" component={ForgotPasswordPage} />\r\n        <NotPrivateRoute path=\"/reports/abandoned-queues\" component={AbandonedQueues} />\r\n        <NotPrivateRoute path=\"/reports/dailylog\" component={DailyLog} />\r\n        <NotPrivateRoute path=\"/reports/dailyacc\" component={DailyAcc} />\r\n        <NotPrivateRoute path=\"/reports/didreport\" component={DidReport} />\r\n        <NotPrivateRoute path=\"/reports/monthlylog\" component={MonthlyLog} />\r\n        <NotPrivateRoute path=\"/reports/droppedcall\" component={DroppedCall} />\r\n        <NotPrivateRoute path=\"/settings/editbreaks\" component={EditBreaks} />\r\n        <NotPrivateRoute path=\"/settings/usersettings\" component={UserSettings} />\r\n        <NotPrivateRoute path=\"/settings/departmentsettings\" component={DepartmansSettigns} />\r\n        <NotPrivateRoute path=\"/iys/called-number\" component={IYS} />\r\n        <NotPrivateRoute path=\"/teams/users\" component={Users} />\r\n        <NotPrivateRoute path=\"/reports/monthlyDetails\" component={MonthlyDetails} />\r\n        <NotPrivateRoute path=\"/reports/quality-report\" component={QualityReport}/>\r\n        <NotPrivateRoute path=\"/reports/queueanswerreport\" component={QueueAnswerReport} />\r\n        <NotPrivateRoute path=\"/reports/abondenedcalls\" component={AbondenedCalls} />\r\n        <NotPrivateRoute path=\"/reports/agentcdrreport\" component={AgentCdrReport} />\r\n        <NotPrivateRoute path=\"/reports/internalssummary\" component={InternalsSummaryReport} />\r\n        <NotPrivateRoute path=\"/reports/dailysummaryreport\" component={DailySumaryReport} />\r\n        <NotPrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRouteLogin path=\"/signin\" component={Login} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport configureStore, { history } from './redux/store';\r\nimport AppWrapper from './@jumbo/components/AppWrapper';\r\nimport AppContextProvider from './@jumbo/components/contextProvider/AppContextProvider';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport Routes from './routes';\r\n\r\nexport const store = configureStore();\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <AppContextProvider>\r\n        <AppWrapper>\r\n          <Switch>\r\n            <Routes />\r\n          </Switch>\r\n        </AppWrapper>\r\n      </AppContextProvider>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}